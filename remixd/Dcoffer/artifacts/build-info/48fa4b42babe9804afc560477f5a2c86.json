{
	"id": "48fa4b42babe9804afc560477f5a2c86",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dcoffer/treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\n\r\n\r\ncontract treasury  {\r\n  using SafeMath for uint;  \r\n\r\n  IERC20 dcoff =  IERC20(0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C);\r\n\r\n  uint256 private K;\r\n\r\n  constructor(uint _k)payable{\r\n    owner = msg.sender;\r\n    K = _k;\r\n  }\r\n\r\n  address owner;\r\n  mapping(address => bool)private RouterAdmin;\r\n\r\n  modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n  }\r\n\r\n\r\n\r\n\r\n  function setRouter(address user, bool power)external onlyOwner{\r\n    RouterAdmin[user] = power;\r\n  }\r\n\r\n\r\n  function subscribe(address subscriber)external payable{\r\n      require(RouterAdmin[msg.sender] == true);\r\n      uint256 dcf_amount = ETH_DCF(msg.value);\r\n      dcoff.transfer(subscriber,dcf_amount);\r\n\r\n  }\r\n\r\n\r\n  function market(address sellers,uint256 dcf_amount)external {\r\n      require(RouterAdmin[msg.sender] == true);\r\n      uint256 eth_amount = DCF_ETH(dcf_amount);\r\n      \r\n\r\n  }\r\n\r\n\r\n  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){\r\n    uint256 _eth_amount = address(this).balance;\r\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));    \r\n    uint256 Variable_dcf = _dcf_amount.add(dcf_amount);\r\n\r\n    if(Variable_dcf > dcoff.totalSupply()){\r\n      Variable_dcf = dcoff.totalSupply();\r\n    }\r\n\r\n    uint256 Variable_eth = K.div(Variable_dcf);\r\n    uint256 _price = _eth_amount.sub(Variable_eth);\r\n    return _price;\r\n  }\r\n\r\n\r\n  function ETH_DCF(uint256 eth_amount)public view returns(uint256){\r\n    uint256 _eth_amount = address(this).balance;\r\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));\r\n    uint256 Variable_eth = _eth_amount.add(eth_amount);\r\n    uint256 Variable_dcf = K.div(Variable_eth);\r\n    uint256 _price = _dcf_amount.sub(Variable_dcf);\r\n    return _price;\r\n  }\r\n\r\n\r\n\r\n \r\n   \r\n  \r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXP PUSH3 0xF3573C 0xCE KECCAK256 CREATE2 0xEE BALANCE SWAP16 PUSH9 0x43457384F89FC6651C 0xD7 PUSH1 0x81 0x4A PUSH11 0xC6104B4C0E64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXP PUSH3 0xF3573C 0xCE KECCAK256 CREATE2 0xEE BALANCE SWAP16 PUSH9 0x43457384F89FC6651C 0xD7 PUSH1 0x81 0x4A PUSH11 0xC6104B4C0E64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/treasury.sol": {
				"treasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_k",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "DCF_ETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "ETH_DCF",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sellers",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "market",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "power",
									"type": "bool"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "subscriber",
									"type": "address"
								}
							],
							"name": "subscribe",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dcoffer/treasury.sol\":181:1958  contract treasury  {... */\n  mstore(0x40, 0x80)\n    /* \"Dcoffer/treasury.sol\":260:302  0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C */\n  0xd14ff067355ce838a6e110bdfb672dbec83ca23c\n    /* \"Dcoffer/treasury.sol\":237:303  IERC20 dcoff =  IERC20(0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":334:405  constructor(uint _k)payable{... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"Dcoffer/treasury.sol\":376:386  msg.sender */\n  caller\n    /* \"Dcoffer/treasury.sol\":368:373  owner */\n  0x02\n  0x00\n    /* \"Dcoffer/treasury.sol\":368:386  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":397:399  _k */\n  dup1\n    /* \"Dcoffer/treasury.sol\":393:394  K */\n  0x01\n    /* \"Dcoffer/treasury.sol\":393:399  K = _k */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":334:405  constructor(uint _k)payable{... */\n  pop\n    /* \"Dcoffer/treasury.sol\":181:1958  contract treasury  {... */\n  jump(tag_5)\n    /* \"#utility.yul\":88:205   */\ntag_7:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_9:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_10:\n    /* \"#utility.yul\":490:514   */\n  tag_18\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_9\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_19:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_11:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_21\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_2:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_24\n  tag_7\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":781:900   */\ntag_23:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_25\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Dcoffer/treasury.sol\":181:1958  contract treasury  {... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dcoffer/treasury.sol\":181:1958  contract treasury  {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3a23bf49\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x41a7726a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x94756aa7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x97dedb1d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc3c64674\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/treasury.sol\":1108:1569  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":713:918  function subscribe(address subscriber)external payable{... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"Dcoffer/treasury.sol\":926:1100  function market(address sellers,uint256 dcf_amount)external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Dcoffer/treasury.sol\":1577:1935  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":605:705  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Dcoffer/treasury.sol\":1108:1569  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n    tag_11:\n        /* \"Dcoffer/treasury.sol\":1164:1171  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1179:1198  uint256 _eth_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1201:1222  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":1179:1222  uint256 _eth_amount = address(this).balance */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1229:1248  uint256 _dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1251:1256  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1251:1266  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":1275:1279  this */\n      address\n        /* \"Dcoffer/treasury.sol\":1251:1281  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"Dcoffer/treasury.sol\":1229:1281  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1292:1312  uint256 Variable_dcf */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1315:1342  _dcf_amount.add(dcf_amount) */\n      tag_40\n        /* \"Dcoffer/treasury.sol\":1331:1341  dcf_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1315:1326  _dcf_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1315:1330  _dcf_amount.add */\n      tag_41\n      swap1\n        /* \"Dcoffer/treasury.sol\":1315:1342  _dcf_amount.add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_40:\n        /* \"Dcoffer/treasury.sol\":1292:1342  uint256 Variable_dcf = _dcf_amount.add(dcf_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1369:1374  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1369:1386  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"Dcoffer/treasury.sol\":1369:1388  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_44:\n        /* \"Dcoffer/treasury.sol\":1354:1366  Variable_dcf */\n      dup2\n        /* \"Dcoffer/treasury.sol\":1354:1388  Variable_dcf > dcoff.totalSupply() */\n      gt\n        /* \"Dcoffer/treasury.sol\":1351:1440  if(Variable_dcf > dcoff.totalSupply()){... */\n      iszero\n      tag_45\n      jumpi\n        /* \"Dcoffer/treasury.sol\":1413:1418  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1413:1430  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"Dcoffer/treasury.sol\":1413:1432  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_48:\n        /* \"Dcoffer/treasury.sol\":1398:1432  Variable_dcf = dcoff.totalSupply() */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1351:1440  if(Variable_dcf > dcoff.totalSupply()){... */\n    tag_45:\n        /* \"Dcoffer/treasury.sol\":1448:1468  uint256 Variable_eth */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1471:1490  K.div(Variable_dcf) */\n      tag_49\n        /* \"Dcoffer/treasury.sol\":1477:1489  Variable_dcf */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1471:1472  K */\n      sload(0x01)\n        /* \"Dcoffer/treasury.sol\":1471:1476  K.div */\n      tag_50\n      swap1\n        /* \"Dcoffer/treasury.sol\":1471:1490  K.div(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_49:\n        /* \"Dcoffer/treasury.sol\":1448:1490  uint256 Variable_eth = K.div(Variable_dcf) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1497:1511  uint256 _price */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1514:1543  _eth_amount.sub(Variable_eth) */\n      tag_51\n        /* \"Dcoffer/treasury.sol\":1530:1542  Variable_eth */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1514:1525  _eth_amount */\n      dup7\n        /* \"Dcoffer/treasury.sol\":1514:1529  _eth_amount.sub */\n      tag_52\n      swap1\n        /* \"Dcoffer/treasury.sol\":1514:1543  _eth_amount.sub(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_51:\n        /* \"Dcoffer/treasury.sol\":1497:1543  uint256 _price = _eth_amount.sub(Variable_eth) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1557:1563  _price */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1550:1563  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":1108:1569  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":713:918  function subscribe(address subscriber)external payable{... */\n    tag_17:\n        /* \"Dcoffer/treasury.sol\":811:815  true */\n      0x01\n        /* \"Dcoffer/treasury.sol\":784:815  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"Dcoffer/treasury.sol\":784:795  RouterAdmin */\n      0x03\n        /* \"Dcoffer/treasury.sol\":784:807  RouterAdmin[msg.sender] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":796:806  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":784:807  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dcoffer/treasury.sol\":784:815  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"Dcoffer/treasury.sol\":776:816  require(RouterAdmin[msg.sender] == true) */\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n        /* \"Dcoffer/treasury.sol\":825:843  uint256 dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":846:864  ETH_DCF(msg.value) */\n      tag_55\n        /* \"Dcoffer/treasury.sol\":854:863  msg.value */\n      callvalue\n        /* \"Dcoffer/treasury.sol\":846:853  ETH_DCF */\n      tag_26\n        /* \"Dcoffer/treasury.sol\":846:864  ETH_DCF(msg.value) */\n      jump\t// in\n    tag_55:\n        /* \"Dcoffer/treasury.sol\":825:864  uint256 dcf_amount = ETH_DCF(msg.value) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":873:878  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":873:887  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Dcoffer/treasury.sol\":888:898  subscriber */\n      dup4\n        /* \"Dcoffer/treasury.sol\":899:909  dcf_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":873:910  dcoff.transfer(subscriber,dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      pop\n        /* \"Dcoffer/treasury.sol\":767:918  {... */\n      pop\n        /* \"Dcoffer/treasury.sol\":713:918  function subscribe(address subscriber)external payable{... */\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":926:1100  function market(address sellers,uint256 dcf_amount)external {... */\n    tag_22:\n        /* \"Dcoffer/treasury.sol\":1030:1034  true */\n      0x01\n        /* \"Dcoffer/treasury.sol\":1003:1034  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"Dcoffer/treasury.sol\":1003:1014  RouterAdmin */\n      0x03\n        /* \"Dcoffer/treasury.sol\":1003:1026  RouterAdmin[msg.sender] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1015:1025  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":1003:1026  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dcoffer/treasury.sol\":1003:1034  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"Dcoffer/treasury.sol\":995:1035  require(RouterAdmin[msg.sender] == true) */\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n        /* \"Dcoffer/treasury.sol\":1044:1062  uint256 eth_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1065:1084  DCF_ETH(dcf_amount) */\n      tag_64\n        /* \"Dcoffer/treasury.sol\":1073:1083  dcf_amount */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1065:1072  DCF_ETH */\n      tag_11\n        /* \"Dcoffer/treasury.sol\":1065:1084  DCF_ETH(dcf_amount) */\n      jump\t// in\n    tag_64:\n        /* \"Dcoffer/treasury.sol\":1044:1084  uint256 eth_amount = DCF_ETH(dcf_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":986:1100  {... */\n      pop\n        /* \"Dcoffer/treasury.sol\":926:1100  function market(address sellers,uint256 dcf_amount)external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":1577:1935  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n    tag_26:\n        /* \"Dcoffer/treasury.sol\":1633:1640  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1648:1667  uint256 _eth_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1670:1691  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":1648:1691  uint256 _eth_amount = address(this).balance */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1698:1717  uint256 _dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1720:1725  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1720:1735  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":1744:1748  this */\n      address\n        /* \"Dcoffer/treasury.sol\":1720:1750  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_66:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_69:\n        /* \"Dcoffer/treasury.sol\":1698:1750  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1757:1777  uint256 Variable_eth */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1780:1807  _eth_amount.add(eth_amount) */\n      tag_70\n        /* \"Dcoffer/treasury.sol\":1796:1806  eth_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1780:1791  _eth_amount */\n      dup5\n        /* \"Dcoffer/treasury.sol\":1780:1795  _eth_amount.add */\n      tag_41\n      swap1\n        /* \"Dcoffer/treasury.sol\":1780:1807  _eth_amount.add(eth_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"Dcoffer/treasury.sol\":1757:1807  uint256 Variable_eth = _eth_amount.add(eth_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1814:1834  uint256 Variable_dcf */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1837:1856  K.div(Variable_eth) */\n      tag_71\n        /* \"Dcoffer/treasury.sol\":1843:1855  Variable_eth */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1837:1838  K */\n      sload(0x01)\n        /* \"Dcoffer/treasury.sol\":1837:1842  K.div */\n      tag_50\n      swap1\n        /* \"Dcoffer/treasury.sol\":1837:1856  K.div(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"Dcoffer/treasury.sol\":1814:1856  uint256 Variable_dcf = K.div(Variable_eth) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1863:1877  uint256 _price */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1880:1909  _dcf_amount.sub(Variable_dcf) */\n      tag_72\n        /* \"Dcoffer/treasury.sol\":1896:1908  Variable_dcf */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1880:1891  _dcf_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1880:1895  _dcf_amount.sub */\n      tag_52\n      swap1\n        /* \"Dcoffer/treasury.sol\":1880:1909  _dcf_amount.sub(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"Dcoffer/treasury.sol\":1863:1909  uint256 _price = _dcf_amount.sub(Variable_dcf) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1923:1929  _price */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1916:1929  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":1577:1935  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":605:705  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_32:\n        /* \"Dcoffer/treasury.sol\":528:538  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":519:538  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":519:524  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":519:538  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":511:575  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"Dcoffer/treasury.sol\":694:699  power */\n      dup1\n        /* \"Dcoffer/treasury.sol\":674:685  RouterAdmin */\n      0x03\n        /* \"Dcoffer/treasury.sol\":674:691  RouterAdmin[user] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":686:690  user */\n      dup5\n        /* \"Dcoffer/treasury.sol\":674:691  RouterAdmin[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Dcoffer/treasury.sol\":674:699  RouterAdmin[user] = power */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":605:705  function setRouter(address user, bool power)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_88:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_90:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_91:\n        /* \"#utility.yul\":490:514   */\n      tag_115\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_90\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_116\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_116:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_92:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_118\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_91\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_10:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_121\n      tag_88\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":766:885   */\n    tag_120:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_122\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_92\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_93:\n        /* \"#utility.yul\":1112:1136   */\n      tag_124\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_90\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_13:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_126\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_93\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_94:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_95:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_129\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_94\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_96:\n        /* \"#utility.yul\":1684:1708   */\n      tag_131\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_95\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_132\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_132:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_97:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_134\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_96\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_16:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_137\n      tag_88\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1960:2079   */\n    tag_136:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_138\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_97\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2693   */\n    tag_21:\n        /* \"#utility.yul\":2287:2293   */\n      0x00\n        /* \"#utility.yul\":2295:2301   */\n      dup1\n        /* \"#utility.yul\":2344:2346   */\n      0x40\n        /* \"#utility.yul\":2332:2341   */\n      dup4\n        /* \"#utility.yul\":2323:2330   */\n      dup6\n        /* \"#utility.yul\":2319:2342   */\n      sub\n        /* \"#utility.yul\":2315:2347   */\n      slt\n        /* \"#utility.yul\":2312:2431   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":2350:2429   */\n      tag_141\n      tag_88\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2312:2431   */\n    tag_140:\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2495:2548   */\n      tag_142\n        /* \"#utility.yul\":2540:2547   */\n      dup6\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2520:2529   */\n      dup7\n        /* \"#utility.yul\":2516:2538   */\n      add\n        /* \"#utility.yul\":2495:2548   */\n      tag_97\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2485:2548   */\n      swap3\n      pop\n        /* \"#utility.yul\":2441:2558   */\n      pop\n        /* \"#utility.yul\":2597:2599   */\n      0x20\n        /* \"#utility.yul\":2623:2676   */\n      tag_143\n        /* \"#utility.yul\":2668:2675   */\n      dup6\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup7\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_92\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2568:2686   */\n      pop\n        /* \"#utility.yul\":2219:2693   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2789   */\n    tag_98:\n        /* \"#utility.yul\":2733:2740   */\n      0x00\n        /* \"#utility.yul\":2776:2781   */\n      dup2\n        /* \"#utility.yul\":2769:2782   */\n      iszero\n        /* \"#utility.yul\":2762:2783   */\n      iszero\n        /* \"#utility.yul\":2751:2783   */\n      swap1\n      pop\n        /* \"#utility.yul\":2699:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2911   */\n    tag_99:\n        /* \"#utility.yul\":2865:2886   */\n      tag_146\n        /* \"#utility.yul\":2880:2885   */\n      dup2\n        /* \"#utility.yul\":2865:2886   */\n      tag_98\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2858:2863   */\n      dup2\n        /* \"#utility.yul\":2855:2887   */\n      eq\n        /* \"#utility.yul\":2845:2905   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2898:2899   */\n      dup1\n        /* \"#utility.yul\":2891:2903   */\n      revert\n        /* \"#utility.yul\":2845:2905   */\n    tag_147:\n        /* \"#utility.yul\":2795:2911   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2917:3050   */\n    tag_100:\n        /* \"#utility.yul\":2960:2965   */\n      0x00\n        /* \"#utility.yul\":2998:3004   */\n      dup2\n        /* \"#utility.yul\":2985:3005   */\n      calldataload\n        /* \"#utility.yul\":2976:3005   */\n      swap1\n      pop\n        /* \"#utility.yul\":3014:3044   */\n      tag_149\n        /* \"#utility.yul\":3038:3043   */\n      dup2\n        /* \"#utility.yul\":3014:3044   */\n      tag_99\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2917:3050   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3056:3524   */\n    tag_31:\n        /* \"#utility.yul\":3121:3127   */\n      0x00\n        /* \"#utility.yul\":3129:3135   */\n      dup1\n        /* \"#utility.yul\":3178:3180   */\n      0x40\n        /* \"#utility.yul\":3166:3175   */\n      dup4\n        /* \"#utility.yul\":3157:3164   */\n      dup6\n        /* \"#utility.yul\":3153:3176   */\n      sub\n        /* \"#utility.yul\":3149:3181   */\n      slt\n        /* \"#utility.yul\":3146:3265   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":3184:3263   */\n      tag_152\n      tag_88\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3146:3265   */\n    tag_151:\n        /* \"#utility.yul\":3304:3305   */\n      0x00\n        /* \"#utility.yul\":3329:3382   */\n      tag_153\n        /* \"#utility.yul\":3374:3381   */\n      dup6\n        /* \"#utility.yul\":3365:3371   */\n      dup3\n        /* \"#utility.yul\":3354:3363   */\n      dup7\n        /* \"#utility.yul\":3350:3372   */\n      add\n        /* \"#utility.yul\":3329:3382   */\n      tag_97\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":3319:3382   */\n      swap3\n      pop\n        /* \"#utility.yul\":3275:3392   */\n      pop\n        /* \"#utility.yul\":3431:3433   */\n      0x20\n        /* \"#utility.yul\":3457:3507   */\n      tag_154\n        /* \"#utility.yul\":3499:3506   */\n      dup6\n        /* \"#utility.yul\":3490:3496   */\n      dup3\n        /* \"#utility.yul\":3479:3488   */\n      dup7\n        /* \"#utility.yul\":3475:3497   */\n      add\n        /* \"#utility.yul\":3457:3507   */\n      tag_100\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3447:3507   */\n      swap2\n      pop\n        /* \"#utility.yul\":3402:3517   */\n      pop\n        /* \"#utility.yul\":3056:3524   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3530:3648   */\n    tag_101:\n        /* \"#utility.yul\":3617:3641   */\n      tag_156\n        /* \"#utility.yul\":3635:3640   */\n      dup2\n        /* \"#utility.yul\":3617:3641   */\n      tag_95\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3612:3615   */\n      dup3\n        /* \"#utility.yul\":3605:3642   */\n      mstore\n        /* \"#utility.yul\":3530:3648   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3654:3876   */\n    tag_35:\n        /* \"#utility.yul\":3747:3751   */\n      0x00\n        /* \"#utility.yul\":3785:3787   */\n      0x20\n        /* \"#utility.yul\":3774:3783   */\n      dup3\n        /* \"#utility.yul\":3770:3788   */\n      add\n        /* \"#utility.yul\":3762:3788   */\n      swap1\n      pop\n        /* \"#utility.yul\":3798:3869   */\n      tag_158\n        /* \"#utility.yul\":3866:3867   */\n      0x00\n        /* \"#utility.yul\":3855:3864   */\n      dup4\n        /* \"#utility.yul\":3851:3868   */\n      add\n        /* \"#utility.yul\":3842:3848   */\n      dup5\n        /* \"#utility.yul\":3798:3869   */\n      tag_101\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":3654:3876   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3882:4025   */\n    tag_102:\n        /* \"#utility.yul\":3939:3944   */\n      0x00\n        /* \"#utility.yul\":3970:3976   */\n      dup2\n        /* \"#utility.yul\":3964:3977   */\n      mload\n        /* \"#utility.yul\":3955:3977   */\n      swap1\n      pop\n        /* \"#utility.yul\":3986:4019   */\n      tag_160\n        /* \"#utility.yul\":4013:4018   */\n      dup2\n        /* \"#utility.yul\":3986:4019   */\n      tag_91\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3882:4025   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4031:4382   */\n    tag_39:\n        /* \"#utility.yul\":4101:4107   */\n      0x00\n        /* \"#utility.yul\":4150:4152   */\n      0x20\n        /* \"#utility.yul\":4138:4147   */\n      dup3\n        /* \"#utility.yul\":4129:4136   */\n      dup5\n        /* \"#utility.yul\":4125:4148   */\n      sub\n        /* \"#utility.yul\":4121:4153   */\n      slt\n        /* \"#utility.yul\":4118:4237   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":4156:4235   */\n      tag_163\n      tag_88\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":4118:4237   */\n    tag_162:\n        /* \"#utility.yul\":4276:4277   */\n      0x00\n        /* \"#utility.yul\":4301:4365   */\n      tag_164\n        /* \"#utility.yul\":4357:4364   */\n      dup5\n        /* \"#utility.yul\":4348:4354   */\n      dup3\n        /* \"#utility.yul\":4337:4346   */\n      dup6\n        /* \"#utility.yul\":4333:4355   */\n      add\n        /* \"#utility.yul\":4301:4365   */\n      tag_102\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4291:4365   */\n      swap2\n      pop\n        /* \"#utility.yul\":4247:4375   */\n      pop\n        /* \"#utility.yul\":4031:4382   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4388:4720   */\n    tag_57:\n        /* \"#utility.yul\":4509:4513   */\n      0x00\n        /* \"#utility.yul\":4547:4549   */\n      0x40\n        /* \"#utility.yul\":4536:4545   */\n      dup3\n        /* \"#utility.yul\":4532:4550   */\n      add\n        /* \"#utility.yul\":4524:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4560:4631   */\n      tag_166\n        /* \"#utility.yul\":4628:4629   */\n      0x00\n        /* \"#utility.yul\":4617:4626   */\n      dup4\n        /* \"#utility.yul\":4613:4630   */\n      add\n        /* \"#utility.yul\":4604:4610   */\n      dup6\n        /* \"#utility.yul\":4560:4631   */\n      tag_101\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4641:4713   */\n      tag_167\n        /* \"#utility.yul\":4709:4711   */\n      0x20\n        /* \"#utility.yul\":4698:4707   */\n      dup4\n        /* \"#utility.yul\":4694:4712   */\n      add\n        /* \"#utility.yul\":4685:4691   */\n      dup5\n        /* \"#utility.yul\":4641:4713   */\n      tag_93\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":4388:4720   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4726:4863   */\n    tag_103:\n        /* \"#utility.yul\":4780:4785   */\n      0x00\n        /* \"#utility.yul\":4811:4817   */\n      dup2\n        /* \"#utility.yul\":4805:4818   */\n      mload\n        /* \"#utility.yul\":4796:4818   */\n      swap1\n      pop\n        /* \"#utility.yul\":4827:4857   */\n      tag_169\n        /* \"#utility.yul\":4851:4856   */\n      dup2\n        /* \"#utility.yul\":4827:4857   */\n      tag_99\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4726:4863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4869:5214   */\n    tag_61:\n        /* \"#utility.yul\":4936:4942   */\n      0x00\n        /* \"#utility.yul\":4985:4987   */\n      0x20\n        /* \"#utility.yul\":4973:4982   */\n      dup3\n        /* \"#utility.yul\":4964:4971   */\n      dup5\n        /* \"#utility.yul\":4960:4983   */\n      sub\n        /* \"#utility.yul\":4956:4988   */\n      slt\n        /* \"#utility.yul\":4953:5072   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":4991:5070   */\n      tag_172\n      tag_88\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4953:5072   */\n    tag_171:\n        /* \"#utility.yul\":5111:5112   */\n      0x00\n        /* \"#utility.yul\":5136:5197   */\n      tag_173\n        /* \"#utility.yul\":5189:5196   */\n      dup5\n        /* \"#utility.yul\":5180:5186   */\n      dup3\n        /* \"#utility.yul\":5169:5178   */\n      dup6\n        /* \"#utility.yul\":5165:5187   */\n      add\n        /* \"#utility.yul\":5136:5197   */\n      tag_103\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5126:5197   */\n      swap2\n      pop\n        /* \"#utility.yul\":5082:5207   */\n      pop\n        /* \"#utility.yul\":4869:5214   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5220:5389   */\n    tag_104:\n        /* \"#utility.yul\":5304:5315   */\n      0x00\n        /* \"#utility.yul\":5338:5344   */\n      dup3\n        /* \"#utility.yul\":5333:5336   */\n      dup3\n        /* \"#utility.yul\":5326:5345   */\n      mstore\n        /* \"#utility.yul\":5378:5382   */\n      0x20\n        /* \"#utility.yul\":5373:5376   */\n      dup3\n        /* \"#utility.yul\":5369:5383   */\n      add\n        /* \"#utility.yul\":5354:5383   */\n      swap1\n      pop\n        /* \"#utility.yul\":5220:5389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5395:5577   */\n    tag_105:\n        /* \"#utility.yul\":5535:5569   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5531:5532   */\n      0x00\n        /* \"#utility.yul\":5523:5529   */\n      dup3\n        /* \"#utility.yul\":5519:5533   */\n      add\n        /* \"#utility.yul\":5512:5570   */\n      mstore\n        /* \"#utility.yul\":5395:5577   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5583:5949   */\n    tag_106:\n        /* \"#utility.yul\":5725:5728   */\n      0x00\n        /* \"#utility.yul\":5746:5813   */\n      tag_177\n        /* \"#utility.yul\":5810:5812   */\n      0x20\n        /* \"#utility.yul\":5805:5808   */\n      dup4\n        /* \"#utility.yul\":5746:5813   */\n      tag_104\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5739:5813   */\n      swap2\n      pop\n        /* \"#utility.yul\":5822:5915   */\n      tag_178\n        /* \"#utility.yul\":5911:5914   */\n      dup3\n        /* \"#utility.yul\":5822:5915   */\n      tag_105\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5940:5942   */\n      0x20\n        /* \"#utility.yul\":5935:5938   */\n      dup3\n        /* \"#utility.yul\":5931:5943   */\n      add\n        /* \"#utility.yul\":5924:5943   */\n      swap1\n      pop\n        /* \"#utility.yul\":5583:5949   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5955:6374   */\n    tag_76:\n        /* \"#utility.yul\":6121:6125   */\n      0x00\n        /* \"#utility.yul\":6159:6161   */\n      0x20\n        /* \"#utility.yul\":6148:6157   */\n      dup3\n        /* \"#utility.yul\":6144:6162   */\n      add\n        /* \"#utility.yul\":6136:6162   */\n      swap1\n      pop\n        /* \"#utility.yul\":6208:6217   */\n      dup2\n        /* \"#utility.yul\":6202:6206   */\n      dup2\n        /* \"#utility.yul\":6198:6218   */\n      sub\n        /* \"#utility.yul\":6194:6195   */\n      0x00\n        /* \"#utility.yul\":6183:6192   */\n      dup4\n        /* \"#utility.yul\":6179:6196   */\n      add\n        /* \"#utility.yul\":6172:6219   */\n      mstore\n        /* \"#utility.yul\":6236:6367   */\n      tag_180\n        /* \"#utility.yul\":6362:6366   */\n      dup2\n        /* \"#utility.yul\":6236:6367   */\n      tag_106\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":6228:6367   */\n      swap1\n      pop\n        /* \"#utility.yul\":5955:6374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6380:6560   */\n    tag_107:\n        /* \"#utility.yul\":6428:6505   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6425:6426   */\n      0x00\n        /* \"#utility.yul\":6418:6506   */\n      mstore\n        /* \"#utility.yul\":6525:6529   */\n      0x11\n        /* \"#utility.yul\":6522:6523   */\n      0x04\n        /* \"#utility.yul\":6515:6530   */\n      mstore\n        /* \"#utility.yul\":6549:6553   */\n      0x24\n        /* \"#utility.yul\":6546:6547   */\n      0x00\n        /* \"#utility.yul\":6539:6554   */\n      revert\n        /* \"#utility.yul\":6566:6871   */\n    tag_80:\n        /* \"#utility.yul\":6606:6609   */\n      0x00\n        /* \"#utility.yul\":6625:6645   */\n      tag_183\n        /* \"#utility.yul\":6643:6644   */\n      dup3\n        /* \"#utility.yul\":6625:6645   */\n      tag_90\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":6620:6645   */\n      swap2\n      pop\n        /* \"#utility.yul\":6659:6679   */\n      tag_184\n        /* \"#utility.yul\":6677:6678   */\n      dup4\n        /* \"#utility.yul\":6659:6679   */\n      tag_90\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":6654:6679   */\n      swap3\n      pop\n        /* \"#utility.yul\":6813:6814   */\n      dup3\n        /* \"#utility.yul\":6745:6811   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6741:6815   */\n      sub\n        /* \"#utility.yul\":6738:6739   */\n      dup3\n        /* \"#utility.yul\":6735:6816   */\n      gt\n        /* \"#utility.yul\":6732:6839   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":6819:6837   */\n      tag_186\n      tag_107\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":6732:6839   */\n    tag_185:\n        /* \"#utility.yul\":6863:6864   */\n      dup3\n        /* \"#utility.yul\":6860:6861   */\n      dup3\n        /* \"#utility.yul\":6856:6865   */\n      add\n        /* \"#utility.yul\":6849:6865   */\n      swap1\n      pop\n        /* \"#utility.yul\":6566:6871   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6877:7057   */\n    tag_108:\n        /* \"#utility.yul\":6925:7002   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6922:6923   */\n      0x00\n        /* \"#utility.yul\":6915:7003   */\n      mstore\n        /* \"#utility.yul\":7022:7026   */\n      0x12\n        /* \"#utility.yul\":7019:7020   */\n      0x04\n        /* \"#utility.yul\":7012:7027   */\n      mstore\n        /* \"#utility.yul\":7046:7050   */\n      0x24\n        /* \"#utility.yul\":7043:7044   */\n      0x00\n        /* \"#utility.yul\":7036:7051   */\n      revert\n        /* \"#utility.yul\":7063:7248   */\n    tag_83:\n        /* \"#utility.yul\":7103:7104   */\n      0x00\n        /* \"#utility.yul\":7120:7140   */\n      tag_189\n        /* \"#utility.yul\":7138:7139   */\n      dup3\n        /* \"#utility.yul\":7120:7140   */\n      tag_90\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":7115:7140   */\n      swap2\n      pop\n        /* \"#utility.yul\":7154:7174   */\n      tag_190\n        /* \"#utility.yul\":7172:7173   */\n      dup4\n        /* \"#utility.yul\":7154:7174   */\n      tag_90\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":7149:7174   */\n      swap3\n      pop\n        /* \"#utility.yul\":7193:7194   */\n      dup3\n        /* \"#utility.yul\":7183:7218   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":7198:7216   */\n      tag_192\n      tag_108\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":7183:7218   */\n    tag_191:\n        /* \"#utility.yul\":7240:7241   */\n      dup3\n        /* \"#utility.yul\":7237:7238   */\n      dup3\n        /* \"#utility.yul\":7233:7242   */\n      div\n        /* \"#utility.yul\":7228:7242   */\n      swap1\n      pop\n        /* \"#utility.yul\":7063:7248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7254:7445   */\n    tag_86:\n        /* \"#utility.yul\":7294:7298   */\n      0x00\n        /* \"#utility.yul\":7314:7334   */\n      tag_194\n        /* \"#utility.yul\":7332:7333   */\n      dup3\n        /* \"#utility.yul\":7314:7334   */\n      tag_90\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7309:7334   */\n      swap2\n      pop\n        /* \"#utility.yul\":7348:7368   */\n      tag_195\n        /* \"#utility.yul\":7366:7367   */\n      dup4\n        /* \"#utility.yul\":7348:7368   */\n      tag_90\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":7343:7368   */\n      swap3\n      pop\n        /* \"#utility.yul\":7387:7388   */\n      dup3\n        /* \"#utility.yul\":7384:7385   */\n      dup3\n        /* \"#utility.yul\":7381:7389   */\n      lt\n        /* \"#utility.yul\":7378:7412   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":7392:7410   */\n      tag_197\n      tag_107\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":7378:7412   */\n    tag_196:\n        /* \"#utility.yul\":7437:7438   */\n      dup3\n        /* \"#utility.yul\":7434:7435   */\n      dup3\n        /* \"#utility.yul\":7430:7439   */\n      sub\n        /* \"#utility.yul\":7422:7439   */\n      swap1\n      pop\n        /* \"#utility.yul\":7254:7445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208d49a8476d4ea5ec04e4e7ed51e190889fff5d45ae2db244919146226b5d0f1f64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_419": {
									"entryPoint": null,
									"id": 419,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1048:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:3",
														"type": ""
													}
												],
												"src": "545:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "817:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:32:3"
															},
															"nodeType": "YulIf",
															"src": "781:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "910:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "929:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "954:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "741:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "752:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "764:6:3",
														"type": ""
													}
												],
												"src": "694:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405273d14ff067355ce838a6e110bdfb672dbec83ca23c6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051610cb0380380610cb083398181016040528101906100799190610102565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001819055505061012f565b600080fd5b6000819050919050565b6100df816100cc565b81146100ea57600080fd5b50565b6000815190506100fc816100d6565b92915050565b600060208284031215610118576101176100c7565b5b6000610126848285016100ed565b91505092915050565b610b728061013e6000396000f3fe60806040526004361061004a5760003560e01c80633a23bf491461004f57806341a7726a1461008c57806394756aa7146100a857806397dedb1d146100d1578063c3c646741461010e575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610735565b610137565b6040516100839190610771565b60405180910390f35b6100a660048036038101906100a191906107ea565b610358565b005b3480156100b457600080fd5b506100cf60048036038101906100ca9190610817565b610465565b005b3480156100dd57600080fd5b506100f860048036038101906100f39190610735565b6104d4565b6040516101059190610771565b60405180910390f35b34801561011a57600080fd5b506101356004803603810190610130919061088f565b6105cd565b005b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161019991906108de565b602060405180830381865afa1580156101b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101da919061090e565b905060006101f185836106b890919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610282919061090e565b81111561031b5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610318919061090e565b90505b6000610332826001546106ce90919063ffffffff16565b9050600061034982866106e490919063ffffffff16565b90508095505050505050919050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103b557600080fd5b60006103c0346104d4565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161041d92919061093b565b6020604051808303816000875af115801561043c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104609190610979565b505050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146104c257600080fd5b60006104cd82610137565b9050505050565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161053691906108de565b602060405180830381865afa158015610553573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610577919061090e565b9050600061058e85846106b890919063ffffffff16565b905060006105a7826001546106ce90919063ffffffff16565b905060006105be82856106e490919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461065d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065490610a03565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600081836106c69190610a52565b905092915050565b600081836106dc9190610ad7565b905092915050565b600081836106f29190610b08565b905092915050565b600080fd5b6000819050919050565b610712816106ff565b811461071d57600080fd5b50565b60008135905061072f81610709565b92915050565b60006020828403121561074b5761074a6106fa565b5b600061075984828501610720565b91505092915050565b61076b816106ff565b82525050565b60006020820190506107866000830184610762565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b78261078c565b9050919050565b6107c7816107ac565b81146107d257600080fd5b50565b6000813590506107e4816107be565b92915050565b600060208284031215610800576107ff6106fa565b5b600061080e848285016107d5565b91505092915050565b6000806040838503121561082e5761082d6106fa565b5b600061083c858286016107d5565b925050602061084d85828601610720565b9150509250929050565b60008115159050919050565b61086c81610857565b811461087757600080fd5b50565b60008135905061088981610863565b92915050565b600080604083850312156108a6576108a56106fa565b5b60006108b4858286016107d5565b92505060206108c58582860161087a565b9150509250929050565b6108d8816107ac565b82525050565b60006020820190506108f360008301846108cf565b92915050565b60008151905061090881610709565b92915050565b600060208284031215610924576109236106fa565b5b6000610932848285016108f9565b91505092915050565b600060408201905061095060008301856108cf565b61095d6020830184610762565b9392505050565b60008151905061097381610863565b92915050565b60006020828403121561098f5761098e6106fa565b5b600061099d84828501610964565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006109ed6020836109a6565b91506109f8826109b7565b602082019050919050565b60006020820190508181036000830152610a1c816109e0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a5d826106ff565b9150610a68836106ff565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a9d57610a9c610a23565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ae2826106ff565b9150610aed836106ff565b925082610afd57610afc610aa8565b5b828204905092915050565b6000610b13826106ff565b9150610b1e836106ff565b925082821015610b3157610b30610a23565b5b82820390509291505056fea26469706673582212208d49a8476d4ea5ec04e4e7ed51e190889fff5d45ae2db244919146226b5d0f1f64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xD14FF067355CE838A6E110BDFB672DBEC83CA23C PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0xCB0 CODESIZE SUB DUP1 PUSH2 0xCB0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x102 JUMP JUMPDEST CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP PUSH2 0x12F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF DUP2 PUSH2 0xCC JUMP JUMPDEST DUP2 EQ PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFC DUP2 PUSH2 0xD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x118 JUMPI PUSH2 0x117 PUSH2 0xC7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x126 DUP5 DUP3 DUP6 ADD PUSH2 0xED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB72 DUP1 PUSH2 0x13E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3A23BF49 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x41A7726A EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x94756AA7 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x10E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x817 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F1 DUP6 DUP4 PUSH2 0x6B8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x332 DUP3 PUSH1 0x1 SLOAD PUSH2 0x6CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x349 DUP3 DUP7 PUSH2 0x6E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C0 CALLVALUE PUSH2 0x4D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP3 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x979 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4CD DUP3 PUSH2 0x137 JUMP JUMPDEST SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x553 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x58E DUP6 DUP5 PUSH2 0x6B8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5A7 DUP3 PUSH1 0x1 SLOAD PUSH2 0x6CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5BE DUP3 DUP6 PUSH2 0x6E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x654 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x6C6 SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0xB08 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x712 DUP2 PUSH2 0x6FF JUMP JUMPDEST DUP2 EQ PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x72F DUP2 PUSH2 0x709 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74B JUMPI PUSH2 0x74A PUSH2 0x6FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x759 DUP5 DUP3 DUP6 ADD PUSH2 0x720 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x76B DUP2 PUSH2 0x6FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x786 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x762 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B7 DUP3 PUSH2 0x78C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C7 DUP2 PUSH2 0x7AC JUMP JUMPDEST DUP2 EQ PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7E4 DUP2 PUSH2 0x7BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x800 JUMPI PUSH2 0x7FF PUSH2 0x6FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x80E DUP5 DUP3 DUP6 ADD PUSH2 0x7D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x82E JUMPI PUSH2 0x82D PUSH2 0x6FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x83C DUP6 DUP3 DUP7 ADD PUSH2 0x7D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x84D DUP6 DUP3 DUP7 ADD PUSH2 0x720 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86C DUP2 PUSH2 0x857 JUMP JUMPDEST DUP2 EQ PUSH2 0x877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x889 DUP2 PUSH2 0x863 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x8A5 PUSH2 0x6FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8B4 DUP6 DUP3 DUP7 ADD PUSH2 0x7D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8C5 DUP6 DUP3 DUP7 ADD PUSH2 0x87A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D8 DUP2 PUSH2 0x7AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x908 DUP2 PUSH2 0x709 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x924 JUMPI PUSH2 0x923 PUSH2 0x6FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x932 DUP5 DUP3 DUP6 ADD PUSH2 0x8F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x950 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x95D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x762 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x973 DUP2 PUSH2 0x863 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x98F JUMPI PUSH2 0x98E PUSH2 0x6FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x99D DUP5 DUP3 DUP6 ADD PUSH2 0x964 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9ED PUSH1 0x20 DUP4 PUSH2 0x9A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x9F8 DUP3 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA1C DUP2 PUSH2 0x9E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA5D DUP3 PUSH2 0x6FF JUMP JUMPDEST SWAP2 POP PUSH2 0xA68 DUP4 PUSH2 0x6FF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xA9D JUMPI PUSH2 0xA9C PUSH2 0xA23 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAE2 DUP3 PUSH2 0x6FF JUMP JUMPDEST SWAP2 POP PUSH2 0xAED DUP4 PUSH2 0x6FF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xAFD JUMPI PUSH2 0xAFC PUSH2 0xAA8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB13 DUP3 PUSH2 0x6FF JUMP JUMPDEST SWAP2 POP PUSH2 0xB1E DUP4 PUSH2 0x6FF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xB31 JUMPI PUSH2 0xB30 PUSH2 0xA23 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0x49 0xA8 SELFBALANCE PUSH14 0x4EA5EC04E4E7ED51E190889FFF5D GASLIMIT 0xAE 0x2D 0xB2 DIFFICULTY SWAP2 SWAP2 CHAINID 0x22 PUSH12 0x5D0F1F64736F6C634300080E STOP CALLER ",
							"sourceMap": "181:1777:2:-:0;;;260:42;237:66;;;;;;;;;;;;;;;;;;;;334:71;;;;;;;;;;;;;;;;;;;;;:::i;:::-;376:10;368:5;;:18;;;;;;;;;;;;;;;;;;397:2;393:1;:6;;;;334:71;181:1777;;88:117:3;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;181:1777:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DCF_ETH_567": {
									"entryPoint": 311,
									"id": 567,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ETH_DCF_616": {
									"entryPoint": 1236,
									"id": 616,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@add_253": {
									"entryPoint": 1720,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_298": {
									"entryPoint": 1742,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@market_505": {
									"entryPoint": 1125,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setRouter_453": {
									"entryPoint": 1485,
									"id": 453,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_268": {
									"entryPoint": 1764,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@subscribe_482": {
									"entryPoint": 856,
									"id": 482,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 2170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2595,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7448:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:3",
														"type": ""
													}
												],
												"src": "1025:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:3",
														"type": ""
													}
												],
												"src": "1149:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:3",
														"type": ""
													}
												],
												"src": "1377:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:3",
														"type": ""
													}
												],
												"src": "1509:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:3"
															},
															"nodeType": "YulIf",
															"src": "1664:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:3",
														"type": ""
													}
												],
												"src": "1611:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:3",
														"type": ""
													}
												],
												"src": "1739:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:3"
															},
															"nodeType": "YulIf",
															"src": "1960:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2089:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:3",
														"type": ""
													}
												],
												"src": "1884:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2302:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2348:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2350:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2350:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2350:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2323:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2319:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2319:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:32:3"
															},
															"nodeType": "YulIf",
															"src": "2312:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2441:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2456:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2460:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2485:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2520:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2531:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2516:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2516:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2540:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2495:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2495:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2485:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2568:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2583:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2597:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2587:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2613:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2264:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2275:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2287:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2295:6:3",
														"type": ""
													}
												],
												"src": "2219:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2741:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2751:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2776:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2769:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2751:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2723:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2733:7:3",
														"type": ""
													}
												],
												"src": "2699:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2835:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2889:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2898:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2901:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2891:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2891:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2891:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2858:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2880:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2865:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2865:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2855:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2855:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2848:40:3"
															},
															"nodeType": "YulIf",
															"src": "2845:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2828:5:3",
														"type": ""
													}
												],
												"src": "2795:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2966:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2976:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2998:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2985:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2985:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2976:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3038:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3014:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3014:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2944:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2952:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2960:5:3",
														"type": ""
													}
												],
												"src": "2917:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3136:388:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3182:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3184:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3184:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3184:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3157:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3166:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3153:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3153:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3178:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3149:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:32:3"
															},
															"nodeType": "YulIf",
															"src": "3146:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3275:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3290:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3304:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3294:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3319:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3354:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3365:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3350:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3350:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3374:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3329:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3329:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3319:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3402:115:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3417:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3431:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3421:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3447:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3479:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3490:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3475:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3475:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3499:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3457:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3457:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3447:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3098:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3109:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3121:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3129:6:3",
														"type": ""
													}
												],
												"src": "3056:468:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3612:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3635:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3617:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3617:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3605:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3605:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3583:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3590:3:3",
														"type": ""
													}
												],
												"src": "3530:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3752:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3762:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3774:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3785:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3770:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3762:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3842:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3855:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3866:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3851:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3851:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3798:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3798:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3798:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3724:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3736:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3747:4:3",
														"type": ""
													}
												],
												"src": "3654:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3945:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3955:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3970:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3964:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3955:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4013:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3986:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3986:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3986:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3923:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3931:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3939:5:3",
														"type": ""
													}
												],
												"src": "3882:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4108:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4154:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4156:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4156:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4156:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4129:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4138:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4125:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4125:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4150:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4121:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4121:32:3"
															},
															"nodeType": "YulIf",
															"src": "4118:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4247:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4262:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4276:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4266:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4291:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4337:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4348:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4333:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4333:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4357:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4301:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4301:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4291:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4078:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4089:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4101:6:3",
														"type": ""
													}
												],
												"src": "4031:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4514:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4524:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4536:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4547:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4532:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4524:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4604:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4617:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4628:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4613:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4613:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4560:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4560:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4560:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4685:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4698:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4709:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4694:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4694:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4641:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4641:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4641:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4478:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4490:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4498:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4509:4:3",
														"type": ""
													}
												],
												"src": "4388:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4786:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4796:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4811:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4805:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4805:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4796:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4851:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4827:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4827:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4827:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4764:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4772:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4780:5:3",
														"type": ""
													}
												],
												"src": "4726:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4943:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4989:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4991:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4991:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4991:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4964:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4973:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4960:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4960:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4985:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4956:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4956:32:3"
															},
															"nodeType": "YulIf",
															"src": "4953:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5082:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5097:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5111:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5101:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5126:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5169:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5180:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5165:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5165:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5189:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5136:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5136:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5126:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4913:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4924:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4936:6:3",
														"type": ""
													}
												],
												"src": "4869:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5316:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5333:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5338:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5326:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5326:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5326:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5354:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5373:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5378:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5369:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5354:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5288:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5293:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5304:11:3",
														"type": ""
													}
												],
												"src": "5220:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5501:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5523:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5531:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5519:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5519:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5535:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5512:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5512:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5512:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5493:6:3",
														"type": ""
													}
												],
												"src": "5395:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5729:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5739:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5805:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5746:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5746:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5739:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5911:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5822:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5822:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5822:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5924:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5935:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5940:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5931:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5931:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5924:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5717:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5725:3:3",
														"type": ""
													}
												],
												"src": "5583:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6126:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6136:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6148:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6159:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6144:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6144:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6136:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6183:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6194:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6179:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6179:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6202:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6208:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6198:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6198:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6172:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6172:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6172:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6228:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6362:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6236:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6236:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6228:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6106:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6121:4:3",
														"type": ""
													}
												],
												"src": "5955:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6408:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6425:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6428:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6418:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6418:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6418:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6522:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6525:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6515:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6515:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6515:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6546:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6549:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6539:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6539:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6539:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6380:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6610:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6620:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6643:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6625:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6620:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6654:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6677:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6659:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6659:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6654:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6817:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6819:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6819:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6819:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6738:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6745:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6813:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6741:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6741:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6735:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6735:81:3"
															},
															"nodeType": "YulIf",
															"src": "6732:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6849:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6860:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6863:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6856:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6856:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6849:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6597:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6600:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6606:3:3",
														"type": ""
													}
												],
												"src": "6566:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6905:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6922:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6925:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6915:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6915:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6915:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7019:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7022:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7012:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7012:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7012:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6877:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7105:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7115:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7138:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7120:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7120:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7115:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7149:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7172:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7154:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7154:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7149:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7196:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7198:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7198:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7198:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7193:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7186:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7186:9:3"
															},
															"nodeType": "YulIf",
															"src": "7183:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7228:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7237:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7240:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7233:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7233:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7228:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7094:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7097:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7103:1:3",
														"type": ""
													}
												],
												"src": "7063:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7299:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7309:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7332:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7314:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7314:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7309:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7343:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7366:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7348:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7343:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7390:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7392:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7392:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7392:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7384:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7387:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7381:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7381:8:3"
															},
															"nodeType": "YulIf",
															"src": "7378:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7422:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7434:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7437:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7430:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7430:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7422:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7285:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7288:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7294:4:3",
														"type": ""
													}
												],
												"src": "7254:191:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80633a23bf491461004f57806341a7726a1461008c57806394756aa7146100a857806397dedb1d146100d1578063c3c646741461010e575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610735565b610137565b6040516100839190610771565b60405180910390f35b6100a660048036038101906100a191906107ea565b610358565b005b3480156100b457600080fd5b506100cf60048036038101906100ca9190610817565b610465565b005b3480156100dd57600080fd5b506100f860048036038101906100f39190610735565b6104d4565b6040516101059190610771565b60405180910390f35b34801561011a57600080fd5b506101356004803603810190610130919061088f565b6105cd565b005b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161019991906108de565b602060405180830381865afa1580156101b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101da919061090e565b905060006101f185836106b890919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610282919061090e565b81111561031b5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610318919061090e565b90505b6000610332826001546106ce90919063ffffffff16565b9050600061034982866106e490919063ffffffff16565b90508095505050505050919050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103b557600080fd5b60006103c0346104d4565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161041d92919061093b565b6020604051808303816000875af115801561043c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104609190610979565b505050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146104c257600080fd5b60006104cd82610137565b9050505050565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161053691906108de565b602060405180830381865afa158015610553573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610577919061090e565b9050600061058e85846106b890919063ffffffff16565b905060006105a7826001546106ce90919063ffffffff16565b905060006105be82856106e490919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461065d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065490610a03565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600081836106c69190610a52565b905092915050565b600081836106dc9190610ad7565b905092915050565b600081836106f29190610b08565b905092915050565b600080fd5b6000819050919050565b610712816106ff565b811461071d57600080fd5b50565b60008135905061072f81610709565b92915050565b60006020828403121561074b5761074a6106fa565b5b600061075984828501610720565b91505092915050565b61076b816106ff565b82525050565b60006020820190506107866000830184610762565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b78261078c565b9050919050565b6107c7816107ac565b81146107d257600080fd5b50565b6000813590506107e4816107be565b92915050565b600060208284031215610800576107ff6106fa565b5b600061080e848285016107d5565b91505092915050565b6000806040838503121561082e5761082d6106fa565b5b600061083c858286016107d5565b925050602061084d85828601610720565b9150509250929050565b60008115159050919050565b61086c81610857565b811461087757600080fd5b50565b60008135905061088981610863565b92915050565b600080604083850312156108a6576108a56106fa565b5b60006108b4858286016107d5565b92505060206108c58582860161087a565b9150509250929050565b6108d8816107ac565b82525050565b60006020820190506108f360008301846108cf565b92915050565b60008151905061090881610709565b92915050565b600060208284031215610924576109236106fa565b5b6000610932848285016108f9565b91505092915050565b600060408201905061095060008301856108cf565b61095d6020830184610762565b9392505050565b60008151905061097381610863565b92915050565b60006020828403121561098f5761098e6106fa565b5b600061099d84828501610964565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006109ed6020836109a6565b91506109f8826109b7565b602082019050919050565b60006020820190508181036000830152610a1c816109e0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a5d826106ff565b9150610a68836106ff565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a9d57610a9c610a23565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ae2826106ff565b9150610aed836106ff565b925082610afd57610afc610aa8565b5b828204905092915050565b6000610b13826106ff565b9150610b1e836106ff565b925082821015610b3157610b30610a23565b5b82820390509291505056fea26469706673582212208d49a8476d4ea5ec04e4e7ed51e190889fff5d45ae2db244919146226b5d0f1f64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3A23BF49 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x41A7726A EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x94756AA7 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x10E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x817 JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x88F JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F1 DUP6 DUP4 PUSH2 0x6B8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x332 DUP3 PUSH1 0x1 SLOAD PUSH2 0x6CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x349 DUP3 DUP7 PUSH2 0x6E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C0 CALLVALUE PUSH2 0x4D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP3 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x979 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4CD DUP3 PUSH2 0x137 JUMP JUMPDEST SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x553 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x90E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x58E DUP6 DUP5 PUSH2 0x6B8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5A7 DUP3 PUSH1 0x1 SLOAD PUSH2 0x6CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5BE DUP3 DUP6 PUSH2 0x6E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x654 SWAP1 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x6C6 SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0xB08 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x712 DUP2 PUSH2 0x6FF JUMP JUMPDEST DUP2 EQ PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x72F DUP2 PUSH2 0x709 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74B JUMPI PUSH2 0x74A PUSH2 0x6FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x759 DUP5 DUP3 DUP6 ADD PUSH2 0x720 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x76B DUP2 PUSH2 0x6FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x786 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x762 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B7 DUP3 PUSH2 0x78C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C7 DUP2 PUSH2 0x7AC JUMP JUMPDEST DUP2 EQ PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7E4 DUP2 PUSH2 0x7BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x800 JUMPI PUSH2 0x7FF PUSH2 0x6FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x80E DUP5 DUP3 DUP6 ADD PUSH2 0x7D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x82E JUMPI PUSH2 0x82D PUSH2 0x6FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x83C DUP6 DUP3 DUP7 ADD PUSH2 0x7D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x84D DUP6 DUP3 DUP7 ADD PUSH2 0x720 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86C DUP2 PUSH2 0x857 JUMP JUMPDEST DUP2 EQ PUSH2 0x877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x889 DUP2 PUSH2 0x863 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x8A5 PUSH2 0x6FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8B4 DUP6 DUP3 DUP7 ADD PUSH2 0x7D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8C5 DUP6 DUP3 DUP7 ADD PUSH2 0x87A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D8 DUP2 PUSH2 0x7AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x908 DUP2 PUSH2 0x709 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x924 JUMPI PUSH2 0x923 PUSH2 0x6FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x932 DUP5 DUP3 DUP6 ADD PUSH2 0x8F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x950 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x95D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x762 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x973 DUP2 PUSH2 0x863 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x98F JUMPI PUSH2 0x98E PUSH2 0x6FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x99D DUP5 DUP3 DUP6 ADD PUSH2 0x964 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9ED PUSH1 0x20 DUP4 PUSH2 0x9A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x9F8 DUP3 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA1C DUP2 PUSH2 0x9E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA5D DUP3 PUSH2 0x6FF JUMP JUMPDEST SWAP2 POP PUSH2 0xA68 DUP4 PUSH2 0x6FF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xA9D JUMPI PUSH2 0xA9C PUSH2 0xA23 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAE2 DUP3 PUSH2 0x6FF JUMP JUMPDEST SWAP2 POP PUSH2 0xAED DUP4 PUSH2 0x6FF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xAFD JUMPI PUSH2 0xAFC PUSH2 0xAA8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB13 DUP3 PUSH2 0x6FF JUMP JUMPDEST SWAP2 POP PUSH2 0xB1E DUP4 PUSH2 0x6FF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xB31 JUMPI PUSH2 0xB30 PUSH2 0xA23 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0x49 0xA8 SELFBALANCE PUSH14 0x4EA5EC04E4E7ED51E190889FFF5D GASLIMIT 0xAE 0x2D 0xB2 DIFFICULTY SWAP2 SWAP2 CHAINID 0x22 PUSH12 0x5D0F1F64736F6C634300080E STOP CALLER ",
							"sourceMap": "181:1777:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1108:461;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;713:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;926:174;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1577:358;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;605:100;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1108:461;1164:7;1179:19;1201:21;1179:43;;1229:19;1251:5;;;;;;;;;;;:15;;;1275:4;1251:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1229:52;;1292:20;1315:27;1331:10;1315:11;:15;;:27;;;;:::i;:::-;1292:50;;1369:5;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1354:12;:34;1351:89;;;1413:5;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1398:34;;1351:89;1448:20;1471:19;1477:12;1471:1;;:5;;:19;;;;:::i;:::-;1448:42;;1497:14;1514:29;1530:12;1514:11;:15;;:29;;;;:::i;:::-;1497:46;;1557:6;1550:13;;;;;;;1108:461;;;:::o;713:205::-;811:4;784:31;;:11;:23;796:10;784:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;776:40;;;;;;825:18;846;854:9;846:7;:18::i;:::-;825:39;;873:5;;;;;;;;;;:14;;;888:10;899;873:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;767:151;713:205;:::o;926:174::-;1030:4;1003:31;;:11;:23;1015:10;1003:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;995:40;;;;;;1044:18;1065:19;1073:10;1065:7;:19::i;:::-;1044:40;;986:114;926:174;;:::o;1577:358::-;1633:7;1648:19;1670:21;1648:43;;1698:19;1720:5;;;;;;;;;;;:15;;;1744:4;1720:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1698:52;;1757:20;1780:27;1796:10;1780:11;:15;;:27;;;;:::i;:::-;1757:50;;1814:20;1837:19;1843:12;1837:1;;:5;;:19;;;;:::i;:::-;1814:42;;1863:14;1880:29;1896:12;1880:11;:15;;:29;;;;:::i;:::-;1863:46;;1923:6;1916:13;;;;;;;1577:358;;;:::o;605:100::-;528:10;519:19;;:5;;;;;;;;;;;:19;;;511:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;694:5:::1;674:11;:17;686:4;674:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;605:100:::0;;:::o;2755:96:1:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:474::-;2287:6;2295;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2597:2;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2568:118;2219:474;;;;;:::o;2699:90::-;2733:7;2776:5;2769:13;2762:21;2751:32;;2699:90;;;:::o;2795:116::-;2865:21;2880:5;2865:21;:::i;:::-;2858:5;2855:32;2845:60;;2901:1;2898;2891:12;2845:60;2795:116;:::o;2917:133::-;2960:5;2998:6;2985:20;2976:29;;3014:30;3038:5;3014:30;:::i;:::-;2917:133;;;;:::o;3056:468::-;3121:6;3129;3178:2;3166:9;3157:7;3153:23;3149:32;3146:119;;;3184:79;;:::i;:::-;3146:119;3304:1;3329:53;3374:7;3365:6;3354:9;3350:22;3329:53;:::i;:::-;3319:63;;3275:117;3431:2;3457:50;3499:7;3490:6;3479:9;3475:22;3457:50;:::i;:::-;3447:60;;3402:115;3056:468;;;;;:::o;3530:118::-;3617:24;3635:5;3617:24;:::i;:::-;3612:3;3605:37;3530:118;;:::o;3654:222::-;3747:4;3785:2;3774:9;3770:18;3762:26;;3798:71;3866:1;3855:9;3851:17;3842:6;3798:71;:::i;:::-;3654:222;;;;:::o;3882:143::-;3939:5;3970:6;3964:13;3955:22;;3986:33;4013:5;3986:33;:::i;:::-;3882:143;;;;:::o;4031:351::-;4101:6;4150:2;4138:9;4129:7;4125:23;4121:32;4118:119;;;4156:79;;:::i;:::-;4118:119;4276:1;4301:64;4357:7;4348:6;4337:9;4333:22;4301:64;:::i;:::-;4291:74;;4247:128;4031:351;;;;:::o;4388:332::-;4509:4;4547:2;4536:9;4532:18;4524:26;;4560:71;4628:1;4617:9;4613:17;4604:6;4560:71;:::i;:::-;4641:72;4709:2;4698:9;4694:18;4685:6;4641:72;:::i;:::-;4388:332;;;;;:::o;4726:137::-;4780:5;4811:6;4805:13;4796:22;;4827:30;4851:5;4827:30;:::i;:::-;4726:137;;;;:::o;4869:345::-;4936:6;4985:2;4973:9;4964:7;4960:23;4956:32;4953:119;;;4991:79;;:::i;:::-;4953:119;5111:1;5136:61;5189:7;5180:6;5169:9;5165:22;5136:61;:::i;:::-;5126:71;;5082:125;4869:345;;;;:::o;5220:169::-;5304:11;5338:6;5333:3;5326:19;5378:4;5373:3;5369:14;5354:29;;5220:169;;;;:::o;5395:182::-;5535:34;5531:1;5523:6;5519:14;5512:58;5395:182;:::o;5583:366::-;5725:3;5746:67;5810:2;5805:3;5746:67;:::i;:::-;5739:74;;5822:93;5911:3;5822:93;:::i;:::-;5940:2;5935:3;5931:12;5924:19;;5583:366;;;:::o;5955:419::-;6121:4;6159:2;6148:9;6144:18;6136:26;;6208:9;6202:4;6198:20;6194:1;6183:9;6179:17;6172:47;6236:131;6362:4;6236:131;:::i;:::-;6228:139;;5955:419;;;:::o;6380:180::-;6428:77;6425:1;6418:88;6525:4;6522:1;6515:15;6549:4;6546:1;6539:15;6566:305;6606:3;6625:20;6643:1;6625:20;:::i;:::-;6620:25;;6659:20;6677:1;6659:20;:::i;:::-;6654:25;;6813:1;6745:66;6741:74;6738:1;6735:81;6732:107;;;6819:18;;:::i;:::-;6732:107;6863:1;6860;6856:9;6849:16;;6566:305;;;;:::o;6877:180::-;6925:77;6922:1;6915:88;7022:4;7019:1;7012:15;7046:4;7043:1;7036:15;7063:185;7103:1;7120:20;7138:1;7120:20;:::i;:::-;7115:25;;7154:20;7172:1;7154:20;:::i;:::-;7149:25;;7193:1;7183:35;;7198:18;;:::i;:::-;7183:35;7240:1;7237;7233:9;7228:14;;7063:185;;;;:::o;7254:191::-;7294:4;7314:20;7332:1;7314:20;:::i;:::-;7309:25;;7348:20;7366:1;7348:20;:::i;:::-;7343:25;;7387:1;7384;7381:8;7378:34;;;7392:18;;:::i;:::-;7378:34;7437:1;7434;7430:9;7422:17;;7254:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "586000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DCF_ETH(uint256)": "infinite",
								"ETH_DCF(uint256)": "infinite",
								"market(address,uint256)": "infinite",
								"setRouter(address,bool)": "27227",
								"subscribe(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 1958,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 181,
									"end": 1958,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 181,
									"end": 1958,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 260,
									"end": 302,
									"name": "PUSH",
									"source": 2,
									"value": "D14FF067355CE838A6E110BDFB672DBEC83CA23C"
								},
								{
									"begin": 237,
									"end": 303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 237,
									"end": 303,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 237,
									"end": 303,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 237,
									"end": 303,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 237,
									"end": 303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 334,
									"end": 405,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 334,
									"end": 405,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 405,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 334,
									"end": 405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 405,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 376,
									"end": 386,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 368,
									"end": 373,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 368,
									"end": 373,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 386,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 368,
									"end": 386,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 368,
									"end": 386,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 368,
									"end": 386,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 397,
									"end": 399,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 393,
									"end": 394,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 393,
									"end": 399,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 393,
									"end": 399,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 393,
									"end": 399,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 393,
									"end": 399,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1958,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 181,
									"end": 1958,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 181,
									"end": 1958,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 181,
									"end": 1958,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1958,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1958,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1958,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1958,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1958,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1958,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1958,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208d49a8476d4ea5ec04e4e7ed51e190889fff5d45ae2db244919146226b5d0f1f64736f6c634300080e0033",
									".code": [
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH",
											"source": 2,
											"value": "3A23BF49"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH",
											"source": 2,
											"value": "41A7726A"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH",
											"source": 2,
											"value": "94756AA7"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH",
											"source": 2,
											"value": "97DEDB1D"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH",
											"source": 2,
											"value": "C3C64674"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1958,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1108,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1108,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1108,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 713,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 713,
											"end": 918,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 713,
											"end": 918,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 713,
											"end": 918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 713,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 713,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 713,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 713,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 926,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 926,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1577,
											"end": 1935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1577,
											"end": 1935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1577,
											"end": 1935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 605,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 605,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1248,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1256,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1266,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1275,
											"end": 1279,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1251,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1251,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1251,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1341,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1326,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1315,
											"end": 1330,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1342,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1342,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1315,
											"end": 1342,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1342,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1386,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1369,
											"end": 1386,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1386,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1369,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1388,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1440,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1351,
											"end": 1440,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1430,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1413,
											"end": 1430,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1430,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1413,
											"end": 1432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1432,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1440,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1351,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1468,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1477,
											"end": 1489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1471,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1471,
											"end": 1476,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1471,
											"end": 1490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1525,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1543,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1514,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1557,
											"end": 1563,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 713,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 815,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 784,
											"end": 815,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 784,
											"end": 815,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 784,
											"end": 795,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 806,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 784,
											"end": 815,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 784,
											"end": 815,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 784,
											"end": 815,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 776,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 776,
											"end": 816,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 776,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 776,
											"end": 816,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 776,
											"end": 816,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 776,
											"end": 816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 854,
											"end": 863,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 846,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 864,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 846,
											"end": 864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 878,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 878,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 878,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 878,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 873,
											"end": 878,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 878,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 873,
											"end": 878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 873,
											"end": 878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 873,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 873,
											"end": 887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 873,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 888,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 899,
											"end": 909,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 873,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 873,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 767,
											"end": 918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1034,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1003,
											"end": 1034,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1034,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1015,
											"end": 1025,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1003,
											"end": 1026,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1034,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1034,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1034,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 995,
											"end": 1035,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1035,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1035,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1035,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1035,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 995,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1073,
											"end": 1083,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1065,
											"end": 1084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1065,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1100,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 926,
											"end": 1100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1670,
											"end": 1691,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1735,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1744,
											"end": 1748,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1720,
											"end": 1750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1720,
											"end": 1750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1720,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1777,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1796,
											"end": 1806,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1791,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1780,
											"end": 1795,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1807,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1780,
											"end": 1807,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1807,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1780,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1807,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1843,
											"end": 1855,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1838,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1856,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 1856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1856,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1837,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1896,
											"end": 1908,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1891,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 528,
											"end": 538,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 519,
											"end": 538,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 538,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 519,
											"end": 538,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 538,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 519,
											"end": 538,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 511,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 694,
											"end": 699,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 674,
											"end": 685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 690,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2319,
											"end": 2342,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2350,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2495,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2599,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2623,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2699,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2782,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2762,
											"end": 2783,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2911,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2795,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2880,
											"end": 2885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2865,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2886,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2865,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2887,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2845,
											"end": 2905,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2903,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2905,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2845,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2911,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2917,
											"end": 3050,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2917,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2960,
											"end": 2965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3004,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3005,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2976,
											"end": 3005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2976,
											"end": 3005,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3014,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3038,
											"end": 3043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3014,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3014,
											"end": 3044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3014,
											"end": 3044,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3014,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2917,
											"end": 3050,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2917,
											"end": 3050,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2917,
											"end": 3050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2917,
											"end": 3050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2917,
											"end": 3050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3524,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3056,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3129,
											"end": 3135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3178,
											"end": 3180,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3157,
											"end": 3164,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3176,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3149,
											"end": 3181,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3265,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3146,
											"end": 3265,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3184,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3184,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3263,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3184,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3265,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3146,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3304,
											"end": 3305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3374,
											"end": 3381,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3354,
											"end": 3363,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3350,
											"end": 3372,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3329,
											"end": 3382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3382,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3329,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3382,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3275,
											"end": 3392,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3457,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3496,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3479,
											"end": 3488,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3497,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3457,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3457,
											"end": 3507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3457,
											"end": 3507,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3457,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3507,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3524,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3524,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3524,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3648,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3530,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3635,
											"end": 3640,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3617,
											"end": 3641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3641,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3617,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3615,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3605,
											"end": 3642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3654,
											"end": 3876,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3654,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 3751,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3787,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3774,
											"end": 3783,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3866,
											"end": 3867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3848,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3798,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3869,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3798,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3654,
											"end": 3876,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3654,
											"end": 3876,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3654,
											"end": 3876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3654,
											"end": 3876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3654,
											"end": 3876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3882,
											"end": 4025,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3882,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3970,
											"end": 3976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3964,
											"end": 3977,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3955,
											"end": 3977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3955,
											"end": 3977,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3986,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4013,
											"end": 4018,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3986,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3986,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3986,
											"end": 4019,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3986,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3882,
											"end": 4025,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3882,
											"end": 4025,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3882,
											"end": 4025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3882,
											"end": 4025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3882,
											"end": 4025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4382,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4031,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4152,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4138,
											"end": 4147,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4129,
											"end": 4136,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4148,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4118,
											"end": 4237,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4118,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4118,
											"end": 4237,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4156,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4156,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4156,
											"end": 4235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4156,
											"end": 4235,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4156,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4118,
											"end": 4237,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4118,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4301,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4357,
											"end": 4364,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4354,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4346,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4333,
											"end": 4355,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4301,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4301,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4301,
											"end": 4365,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4301,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4291,
											"end": 4365,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4291,
											"end": 4365,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4382,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4382,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4720,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4388,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4509,
											"end": 4513,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4536,
											"end": 4545,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4524,
											"end": 4550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4524,
											"end": 4550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4560,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4628,
											"end": 4629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 4626,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4630,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4604,
											"end": 4610,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4560,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4560,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4560,
											"end": 4631,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4560,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4709,
											"end": 4711,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4694,
											"end": 4712,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4685,
											"end": 4691,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4641,
											"end": 4713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4713,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4641,
											"end": 4713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4720,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4720,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4863,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4726,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4780,
											"end": 4785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4805,
											"end": 4818,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4796,
											"end": 4818,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4796,
											"end": 4818,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4827,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4851,
											"end": 4856,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4827,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4827,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4827,
											"end": 4857,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4827,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4863,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4863,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 5214,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4869,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4936,
											"end": 4942,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 4987,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4973,
											"end": 4982,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4964,
											"end": 4971,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4960,
											"end": 4983,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4956,
											"end": 4988,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 5072,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4953,
											"end": 5072,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4991,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4991,
											"end": 5070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5070,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4991,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 5072,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4953,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5111,
											"end": 5112,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 5189,
											"end": 5196,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5186,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5169,
											"end": 5178,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5187,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5136,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5136,
											"end": 5197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5136,
											"end": 5197,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 5136,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5197,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5197,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5082,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 5214,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 5214,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 5214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 5214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4869,
											"end": 5214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5389,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5220,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5304,
											"end": 5315,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5338,
											"end": 5344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5333,
											"end": 5336,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5326,
											"end": 5345,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5382,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5373,
											"end": 5376,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5369,
											"end": 5383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5389,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5389,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5389,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5395,
											"end": 5577,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5395,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5535,
											"end": 5569,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5531,
											"end": 5532,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5529,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5519,
											"end": 5533,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5512,
											"end": 5570,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5395,
											"end": 5577,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5395,
											"end": 5577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5949,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5583,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5725,
											"end": 5728,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 5810,
											"end": 5812,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5805,
											"end": 5808,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5746,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5746,
											"end": 5813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5746,
											"end": 5813,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 5746,
											"end": 5813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5813,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5822,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5911,
											"end": 5914,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5822,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5822,
											"end": 5915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5822,
											"end": 5915,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5822,
											"end": 5915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5940,
											"end": 5942,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5935,
											"end": 5938,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 5943,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5924,
											"end": 5943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5949,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5583,
											"end": 5949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5955,
											"end": 6374,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5955,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6121,
											"end": 6125,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6159,
											"end": 6161,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6148,
											"end": 6157,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6144,
											"end": 6162,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6136,
											"end": 6162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6136,
											"end": 6162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6208,
											"end": 6217,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6202,
											"end": 6206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6218,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6183,
											"end": 6192,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6179,
											"end": 6196,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6236,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 6362,
											"end": 6366,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6236,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 6236,
											"end": 6367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6236,
											"end": 6367,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 6236,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6228,
											"end": 6367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6228,
											"end": 6367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5955,
											"end": 6374,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5955,
											"end": 6374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5955,
											"end": 6374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5955,
											"end": 6374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6380,
											"end": 6560,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 6380,
											"end": 6560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6428,
											"end": 6505,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6425,
											"end": 6426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6418,
											"end": 6506,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6525,
											"end": 6529,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6522,
											"end": 6523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6515,
											"end": 6530,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 6553,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6546,
											"end": 6547,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6554,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6871,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6566,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6606,
											"end": 6609,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 6643,
											"end": 6644,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6625,
											"end": 6645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6645,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 6625,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6620,
											"end": 6645,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6620,
											"end": 6645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6659,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 6677,
											"end": 6678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6659,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6659,
											"end": 6679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6659,
											"end": 6679,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 6659,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6654,
											"end": 6679,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6654,
											"end": 6679,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6814,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6745,
											"end": 6811,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6741,
											"end": 6815,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6739,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6735,
											"end": 6816,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6732,
											"end": 6839,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6732,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 6732,
											"end": 6839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 6819,
											"end": 6837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6732,
											"end": 6839,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 6732,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6863,
											"end": 6864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6860,
											"end": 6861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6856,
											"end": 6865,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6849,
											"end": 6865,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6849,
											"end": 6865,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6871,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6871,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6877,
											"end": 7057,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 6877,
											"end": 7057,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6925,
											"end": 7002,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6922,
											"end": 6923,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6915,
											"end": 7003,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7022,
											"end": 7026,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 7019,
											"end": 7020,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7012,
											"end": 7027,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7050,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7051,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7248,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 7063,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7120,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 7138,
											"end": 7139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7120,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 7120,
											"end": 7140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7120,
											"end": 7140,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 7120,
											"end": 7140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7115,
											"end": 7140,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7115,
											"end": 7140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7154,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 7172,
											"end": 7173,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7154,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 7154,
											"end": 7174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7154,
											"end": 7174,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 7154,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7149,
											"end": 7174,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7149,
											"end": 7174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7193,
											"end": 7194,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 7183,
											"end": 7218,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7198,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 7198,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 7198,
											"end": 7216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7198,
											"end": 7216,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 7198,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7183,
											"end": 7218,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 7183,
											"end": 7218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7240,
											"end": 7241,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7233,
											"end": 7242,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7228,
											"end": 7242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7248,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7248,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7063,
											"end": 7248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7254,
											"end": 7445,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 7254,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7314,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 7332,
											"end": 7333,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7314,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 7314,
											"end": 7334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7314,
											"end": 7334,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 7314,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 7366,
											"end": 7367,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 7348,
											"end": 7368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7348,
											"end": 7368,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 7348,
											"end": 7368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7343,
											"end": 7368,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7343,
											"end": 7368,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7387,
											"end": 7388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7384,
											"end": 7385,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7381,
											"end": 7389,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7378,
											"end": 7412,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7378,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 7378,
											"end": 7412,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7392,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 7392,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 7392,
											"end": 7410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7392,
											"end": 7410,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 7392,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7378,
											"end": 7412,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 7378,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7437,
											"end": 7438,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7434,
											"end": 7435,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7430,
											"end": 7439,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7422,
											"end": 7439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7422,
											"end": 7439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7254,
											"end": 7445,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7254,
											"end": 7445,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7254,
											"end": 7445,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7254,
											"end": 7445,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7254,
											"end": 7445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DCF_ETH(uint256)": "3a23bf49",
							"ETH_DCF(uint256)": "97dedb1d",
							"market(address,uint256)": "94756aa7",
							"setRouter(address,bool)": "c3c64674",
							"subscribe(address)": "41a7726a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_k\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"DCF_ETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"ETH_DCF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellers\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"market\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"power\",\"type\":\"bool\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"subscribe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/treasury.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/treasury.sol\":{\"keccak256\":\"0xa8e481f78097a1f176035e103fa4b68234779984f8f747095c595e2f79c9b70a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88d49397fcdd97b6f33a454e0b8675769cf2e8a5e236d7ae69a75354337464a1\",\"dweb:/ipfs/QmbXbeoF9bEMEjg1jWT3bBhHAaWJ3w5sBs2WexBEd5KEx2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 402,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "dcoff",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 404,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "K",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 421,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 425,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "RouterAdmin",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> Dcoffer/treasury.sol:44:19:\n   |\n44 |   function market(address sellers,uint256 dcf_amount)external {\n   |                   ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 957,
					"file": "Dcoffer/treasury.sol",
					"start": 942
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> Dcoffer/treasury.sol:46:7:\n   |\n46 |       uint256 eth_amount = DCF_ETH(dcf_amount);\n   |       ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1062,
					"file": "Dcoffer/treasury.sol",
					"start": 1044
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> Dcoffer/treasury.sol:44:3:\n   |\n44 |   function market(address sellers,uint256 dcf_amount)external {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 1100,
					"file": "Dcoffer/treasury.sol",
					"start": 926
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"Dcoffer/treasury.sol": {
				"ast": {
					"absolutePath": "Dcoffer/treasury.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						],
						"treasury": [
							617
						]
					},
					"id": 618,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 618,
							"sourceUnit": 78,
							"src": "60:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 618,
							"sourceUnit": 390,
							"src": "118:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 617,
							"linearizedBaseContracts": [
								617
							],
							"name": "treasury",
							"nameLocation": "190:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 396,
									"libraryName": {
										"id": 394,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "211:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "205:24:2",
									"typeName": {
										"id": 395,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "224:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 402,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "244:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 617,
									"src": "237:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 398,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 397,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "237:6:2"
										},
										"referencedDeclaration": 77,
										"src": "237:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307864313466663036373335354365383338413665313130624446623637324462456338336341323343",
												"id": 400,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "260:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 399,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "253:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 401,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "253:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 404,
									"mutability": "mutable",
									"name": "K",
									"nameLocation": "326:1:2",
									"nodeType": "VariableDeclaration",
									"scope": 617,
									"src": "310:17:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 403,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "310:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "361:44:2",
										"statements": [
											{
												"expression": {
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 409,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "368:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 410,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "376:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "376:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "368:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "368:18:2"
											},
											{
												"expression": {
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 414,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "393:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 415,
														"name": "_k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "397:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "393:6:2"
											}
										]
									},
									"id": 419,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "_k",
												"nameLocation": "351:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "346:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:9:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:0:2"
									},
									"scope": 617,
									"src": "334:71:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 421,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "419:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 617,
									"src": "411:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 420,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "411:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "RouterAdmin",
									"nameLocation": "461:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 617,
									"src": "429:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 424,
										"keyType": {
											"id": 422,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "437:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "429:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 423,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "448:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "500:93:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 428,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "519:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 429,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "528:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "528:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "519:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "540:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "511:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "511:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "511:64:2"
											},
											{
												"id": 435,
												"nodeType": "PlaceholderStatement",
												"src": "586:1:2"
											}
										]
									},
									"id": 437,
									"name": "onlyOwner",
									"nameLocation": "488:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "497:2:2"
									},
									"src": "479:114:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "667:38:2",
										"statements": [
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 446,
															"name": "RouterAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "674:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 448,
														"indexExpression": {
															"id": 447,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "686:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "674:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 449,
														"name": "power",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "694:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "674:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "674:25:2"
											}
										]
									},
									"functionSelector": "c3c64674",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 444,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 443,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "658:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "658:9:2"
										}
									],
									"name": "setRouter",
									"nameLocation": "614:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "632:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "624:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "power",
												"nameLocation": "643:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "638:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "638:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:26:2"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "667:0:2"
									},
									"scope": 617,
									"src": "605:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "767:151:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 459,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "784:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 462,
																"indexExpression": {
																	"expression": {
																		"id": 460,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "796:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "796:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "784:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "811:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "784:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "776:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "776:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "776:40:2"
											},
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "833:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "825:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 467,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "825:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 470,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "854:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "854:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 469,
														"name": "ETH_DCF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "846:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "846:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "825:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "subscriber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "888:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "899:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 474,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "873:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "873:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "873:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "873:37:2"
											}
										]
									},
									"functionSelector": "41a7726a",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "subscribe",
									"nameLocation": "722:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "subscriber",
												"nameLocation": "740:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "732:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "731:20:2"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "767:0:2"
									},
									"scope": 617,
									"src": "713:205:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "986:114:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 490,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "1003:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 493,
																"indexExpression": {
																	"expression": {
																		"id": 491,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1015:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1015:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1003:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1030:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1003:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "995:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "995:40:2"
											},
											{
												"assignments": [
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "eth_amount",
														"nameLocation": "1052:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 504,
														"src": "1044:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 498,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1044:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"arguments": [
														{
															"id": 501,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "1073:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 500,
														"name": "DCF_ETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "1065:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1044:40:2"
											}
										]
									},
									"functionSelector": "94756aa7",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "935:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "sellers",
												"nameLocation": "950:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "942:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "966:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "958:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:36:2"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 617,
									"src": "926:174:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1172:397:2",
										"statements": [
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "1187:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "1179:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 512,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1179:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 519,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 516,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1209:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_treasury_$617",
																	"typeString": "contract treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_treasury_$617",
																	"typeString": "contract treasury"
																}
															],
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1201:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 514,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1201:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1201:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1201:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1179:43:2"
											},
											{
												"assignments": [
													521
												],
												"declarations": [
													{
														"constant": false,
														"id": 521,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "1237:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "1229:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 520,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1229:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 529,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 526,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1275:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$617",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$617",
																		"typeString": "contract treasury"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1267:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 524,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1267:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1267:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 522,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1251:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1251:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1251:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1229:52:2"
											},
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "1300:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "1292:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1292:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 536,
												"initialValue": {
													"arguments": [
														{
															"id": 534,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "1331:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 532,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "1315:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "1315:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1315:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1292:50:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 537,
														"name": "Variable_dcf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "1354:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 538,
																"name": "dcoff",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "1369:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "1369:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1369:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1354:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "1351:89:2",
												"trueBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "1389:51:2",
													"statements": [
														{
															"expression": {
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 542,
																	"name": "Variable_dcf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "1398:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 543,
																			"name": "dcoff",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "1413:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 26,
																		"src": "1413:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1413:19:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1398:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 547,
															"nodeType": "ExpressionStatement",
															"src": "1398:34:2"
														}
													]
												}
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "1456:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "1448:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1448:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [
														{
															"id": 554,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "1477:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 552,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "1471:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1471:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1471:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1448:42:2"
											},
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "1505:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "1497:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1497:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 563,
												"initialValue": {
													"arguments": [
														{
															"id": 561,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "1530:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 559,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "1514:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1514:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1514:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1497:46:2"
											},
											{
												"expression": {
													"id": 564,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 558,
													"src": "1557:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 511,
												"id": 565,
												"nodeType": "Return",
												"src": "1550:13:2"
											}
										]
									},
									"functionSelector": "3a23bf49",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DCF_ETH",
									"nameLocation": "1117:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "1133:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1125:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:20:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1164:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1164:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1163:9:2"
									},
									"scope": 617,
									"src": "1108:461:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "1641:294:2",
										"statements": [
											{
												"assignments": [
													575
												],
												"declarations": [
													{
														"constant": false,
														"id": 575,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "1656:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "1648:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 574,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1648:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 578,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1678:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_treasury_$617",
																	"typeString": "contract treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_treasury_$617",
																	"typeString": "contract treasury"
																}
															],
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1670:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 576,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1670:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1670:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1670:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1648:43:2"
											},
											{
												"assignments": [
													583
												],
												"declarations": [
													{
														"constant": false,
														"id": 583,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "1706:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "1698:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 582,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1698:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 591,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 588,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1744:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$617",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$617",
																		"typeString": "contract treasury"
																	}
																],
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1736:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 586,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1736:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1736:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 584,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1720:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1720:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1720:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1698:52:2"
											},
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "1765:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "1757:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 592,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1757:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 598,
												"initialValue": {
													"arguments": [
														{
															"id": 596,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "1796:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 594,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "1780:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "1780:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1780:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1757:50:2"
											},
											{
												"assignments": [
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "1822:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "1814:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1814:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"initialValue": {
													"arguments": [
														{
															"id": 603,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "1843:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 601,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "1837:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1837:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1814:42:2"
											},
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "1871:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "1863:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1863:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 612,
												"initialValue": {
													"arguments": [
														{
															"id": 610,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "1896:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 608,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "1880:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1880:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1880:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1863:46:2"
											},
											{
												"expression": {
													"id": 613,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 607,
													"src": "1923:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 573,
												"id": 614,
												"nodeType": "Return",
												"src": "1916:13:2"
											}
										]
									},
									"functionSelector": "97dedb1d",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ETH_DCF",
									"nameLocation": "1586:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "1602:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1594:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:20:2"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1633:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1633:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1632:9:2"
									},
									"scope": 617,
									"src": "1577:358:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 618,
							"src": "181:1777:2",
							"usedErrors": []
						}
					],
					"src": "33:1925:2"
				},
				"id": 2
			}
		}
	}
}