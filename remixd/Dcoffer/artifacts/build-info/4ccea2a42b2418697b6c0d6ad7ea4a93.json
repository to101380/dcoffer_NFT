{
	"id": "4ccea2a42b2418697b6c0d6ad7ea4a93",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dcoffer/treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\n\r\n\r\ncontract treasury {\r\n  using SafeMath for uint;  \r\n\r\n  IERC20 dcoff =  IERC20(0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C);\r\n\r\n  uint256 private K;\r\n\r\n  constructor(uint _k)payable{\r\n    owner = msg.sender;\r\n    K = _k;\r\n  }\r\n\r\n  address owner;\r\n  mapping(address => bool)private RouterAdmin;\r\n\r\n  modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n  }\r\n\r\n\r\n\r\n\r\n  function setRouter(address user, bool power)external onlyOwner{\r\n    RouterAdmin[user] = power;\r\n  }\r\n\r\n\r\n  function subscribe(address subscriber)external payable{\r\n      require(RouterAdmin[msg.sender] == true);\r\n      uint256 dcf_amount = ETH_DCF(msg.value);\r\n      dcoff.transfer(subscriber,dcf_amount);\r\n\r\n  }\r\n\r\n\r\n  function market(address payable seller, uint256 dcf_amount)external {\r\n      require(RouterAdmin[msg.sender] == true);\r\n      uint256 eth_amount = DCF_ETH(dcf_amount);\r\n      seller.transfer(eth_amount);\r\n      \r\n  }\r\n\r\n\r\n  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){\r\n    uint256 _eth_amount = address(this).balance;\r\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));    \r\n    uint256 Variable_dcf = _dcf_amount.add(dcf_amount);\r\n\r\n    if(Variable_dcf > dcoff.totalSupply()){\r\n      Variable_dcf = dcoff.totalSupply();\r\n    }\r\n\r\n    uint256 Variable_eth = K.div(Variable_dcf);\r\n    uint256 _price = _eth_amount.sub(Variable_eth);\r\n    return _price;\r\n  }\r\n\r\n\r\n  function ETH_DCF(uint256 eth_amount)public view returns(uint256){\r\n    uint256 _eth_amount = address(this).balance;\r\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));\r\n    uint256 Variable_eth = _eth_amount.add(eth_amount);\r\n    uint256 Variable_dcf = K.div(Variable_eth);\r\n    uint256 _price = _dcf_amount.sub(Variable_dcf);\r\n    return _price;\r\n  }\r\n\r\n\r\n\r\n \r\n   \r\n  \r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXP PUSH3 0xF3573C 0xCE KECCAK256 CREATE2 0xEE BALANCE SWAP16 PUSH9 0x43457384F89FC6651C 0xD7 PUSH1 0x81 0x4A PUSH11 0xC6104B4C0E64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXP PUSH3 0xF3573C 0xCE KECCAK256 CREATE2 0xEE BALANCE SWAP16 PUSH9 0x43457384F89FC6651C 0xD7 PUSH1 0x81 0x4A PUSH11 0xC6104B4C0E64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/treasury.sol": {
				"treasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_k",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "DCF_ETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "ETH_DCF",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "market",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "power",
									"type": "bool"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "subscriber",
									"type": "address"
								}
							],
							"name": "subscribe",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dcoffer/treasury.sol\":181:1999  contract treasury {... */\n  mstore(0x40, 0x80)\n    /* \"Dcoffer/treasury.sol\":259:301  0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C */\n  0xd14ff067355ce838a6e110bdfb672dbec83ca23c\n    /* \"Dcoffer/treasury.sol\":236:302  IERC20 dcoff =  IERC20(0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":333:404  constructor(uint _k)payable{... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"Dcoffer/treasury.sol\":375:385  msg.sender */\n  caller\n    /* \"Dcoffer/treasury.sol\":367:372  owner */\n  0x02\n  0x00\n    /* \"Dcoffer/treasury.sol\":367:385  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":396:398  _k */\n  dup1\n    /* \"Dcoffer/treasury.sol\":392:393  K */\n  0x01\n    /* \"Dcoffer/treasury.sol\":392:398  K = _k */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":333:404  constructor(uint _k)payable{... */\n  pop\n    /* \"Dcoffer/treasury.sol\":181:1999  contract treasury {... */\n  jump(tag_5)\n    /* \"#utility.yul\":88:205   */\ntag_7:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_9:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_10:\n    /* \"#utility.yul\":490:514   */\n  tag_18\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_9\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_19:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_11:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_21\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_2:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_24\n  tag_7\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":781:900   */\ntag_23:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_25\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Dcoffer/treasury.sol\":181:1999  contract treasury {... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dcoffer/treasury.sol\":181:1999  contract treasury {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3a23bf49\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x41a7726a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x94756aa7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x97dedb1d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc3c64674\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/treasury.sol\":1149:1610  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":712:917  function subscribe(address subscriber)external payable{... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"Dcoffer/treasury.sol\":925:1141  function market(address payable seller, uint256 dcf_amount)external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Dcoffer/treasury.sol\":1618:1976  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":604:704  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Dcoffer/treasury.sol\":1149:1610  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n    tag_11:\n        /* \"Dcoffer/treasury.sol\":1205:1212  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1220:1239  uint256 _eth_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1242:1263  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":1220:1263  uint256 _eth_amount = address(this).balance */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1270:1289  uint256 _dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1292:1297  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1292:1307  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":1316:1320  this */\n      address\n        /* \"Dcoffer/treasury.sol\":1292:1322  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"Dcoffer/treasury.sol\":1270:1322  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1333:1353  uint256 Variable_dcf */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1356:1383  _dcf_amount.add(dcf_amount) */\n      tag_40\n        /* \"Dcoffer/treasury.sol\":1372:1382  dcf_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1356:1367  _dcf_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1356:1371  _dcf_amount.add */\n      tag_41\n      swap1\n        /* \"Dcoffer/treasury.sol\":1356:1383  _dcf_amount.add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_40:\n        /* \"Dcoffer/treasury.sol\":1333:1383  uint256 Variable_dcf = _dcf_amount.add(dcf_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1410:1415  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1410:1427  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"Dcoffer/treasury.sol\":1410:1429  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_44:\n        /* \"Dcoffer/treasury.sol\":1395:1407  Variable_dcf */\n      dup2\n        /* \"Dcoffer/treasury.sol\":1395:1429  Variable_dcf > dcoff.totalSupply() */\n      gt\n        /* \"Dcoffer/treasury.sol\":1392:1481  if(Variable_dcf > dcoff.totalSupply()){... */\n      iszero\n      tag_45\n      jumpi\n        /* \"Dcoffer/treasury.sol\":1454:1459  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1454:1471  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"Dcoffer/treasury.sol\":1454:1473  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_48:\n        /* \"Dcoffer/treasury.sol\":1439:1473  Variable_dcf = dcoff.totalSupply() */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1392:1481  if(Variable_dcf > dcoff.totalSupply()){... */\n    tag_45:\n        /* \"Dcoffer/treasury.sol\":1489:1509  uint256 Variable_eth */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1512:1531  K.div(Variable_dcf) */\n      tag_49\n        /* \"Dcoffer/treasury.sol\":1518:1530  Variable_dcf */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1512:1513  K */\n      sload(0x01)\n        /* \"Dcoffer/treasury.sol\":1512:1517  K.div */\n      tag_50\n      swap1\n        /* \"Dcoffer/treasury.sol\":1512:1531  K.div(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_49:\n        /* \"Dcoffer/treasury.sol\":1489:1531  uint256 Variable_eth = K.div(Variable_dcf) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1538:1552  uint256 _price */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1555:1584  _eth_amount.sub(Variable_eth) */\n      tag_51\n        /* \"Dcoffer/treasury.sol\":1571:1583  Variable_eth */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1555:1566  _eth_amount */\n      dup7\n        /* \"Dcoffer/treasury.sol\":1555:1570  _eth_amount.sub */\n      tag_52\n      swap1\n        /* \"Dcoffer/treasury.sol\":1555:1584  _eth_amount.sub(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_51:\n        /* \"Dcoffer/treasury.sol\":1538:1584  uint256 _price = _eth_amount.sub(Variable_eth) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1598:1604  _price */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1591:1604  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":1149:1610  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":712:917  function subscribe(address subscriber)external payable{... */\n    tag_17:\n        /* \"Dcoffer/treasury.sol\":810:814  true */\n      0x01\n        /* \"Dcoffer/treasury.sol\":783:814  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"Dcoffer/treasury.sol\":783:794  RouterAdmin */\n      0x03\n        /* \"Dcoffer/treasury.sol\":783:806  RouterAdmin[msg.sender] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":795:805  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":783:806  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dcoffer/treasury.sol\":783:814  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"Dcoffer/treasury.sol\":775:815  require(RouterAdmin[msg.sender] == true) */\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n        /* \"Dcoffer/treasury.sol\":824:842  uint256 dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":845:863  ETH_DCF(msg.value) */\n      tag_55\n        /* \"Dcoffer/treasury.sol\":853:862  msg.value */\n      callvalue\n        /* \"Dcoffer/treasury.sol\":845:852  ETH_DCF */\n      tag_26\n        /* \"Dcoffer/treasury.sol\":845:863  ETH_DCF(msg.value) */\n      jump\t// in\n    tag_55:\n        /* \"Dcoffer/treasury.sol\":824:863  uint256 dcf_amount = ETH_DCF(msg.value) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":872:877  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":872:886  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Dcoffer/treasury.sol\":887:897  subscriber */\n      dup4\n        /* \"Dcoffer/treasury.sol\":898:908  dcf_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":872:909  dcoff.transfer(subscriber,dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      pop\n        /* \"Dcoffer/treasury.sol\":766:917  {... */\n      pop\n        /* \"Dcoffer/treasury.sol\":712:917  function subscribe(address subscriber)external payable{... */\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":925:1141  function market(address payable seller, uint256 dcf_amount)external {... */\n    tag_22:\n        /* \"Dcoffer/treasury.sol\":1037:1041  true */\n      0x01\n        /* \"Dcoffer/treasury.sol\":1010:1041  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"Dcoffer/treasury.sol\":1010:1021  RouterAdmin */\n      0x03\n        /* \"Dcoffer/treasury.sol\":1010:1033  RouterAdmin[msg.sender] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1022:1032  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":1010:1033  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dcoffer/treasury.sol\":1010:1041  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"Dcoffer/treasury.sol\":1002:1042  require(RouterAdmin[msg.sender] == true) */\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n        /* \"Dcoffer/treasury.sol\":1051:1069  uint256 eth_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1072:1091  DCF_ETH(dcf_amount) */\n      tag_64\n        /* \"Dcoffer/treasury.sol\":1080:1090  dcf_amount */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1072:1079  DCF_ETH */\n      tag_11\n        /* \"Dcoffer/treasury.sol\":1072:1091  DCF_ETH(dcf_amount) */\n      jump\t// in\n    tag_64:\n        /* \"Dcoffer/treasury.sol\":1051:1091  uint256 eth_amount = DCF_ETH(dcf_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1100:1106  seller */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1100:1115  seller.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1100:1127  seller.transfer(eth_amount) */\n      0x08fc\n        /* \"Dcoffer/treasury.sol\":1116:1126  eth_amount */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1100:1127  seller.transfer(eth_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n        /* \"Dcoffer/treasury.sol\":993:1141  {... */\n      pop\n        /* \"Dcoffer/treasury.sol\":925:1141  function market(address payable seller, uint256 dcf_amount)external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":1618:1976  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n    tag_26:\n        /* \"Dcoffer/treasury.sol\":1674:1681  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1689:1708  uint256 _eth_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1711:1732  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":1689:1732  uint256 _eth_amount = address(this).balance */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1739:1758  uint256 _dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1761:1766  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1761:1776  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":1785:1789  this */\n      address\n        /* \"Dcoffer/treasury.sol\":1761:1791  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_68:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_71:\n        /* \"Dcoffer/treasury.sol\":1739:1791  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1798:1818  uint256 Variable_eth */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1821:1848  _eth_amount.add(eth_amount) */\n      tag_72\n        /* \"Dcoffer/treasury.sol\":1837:1847  eth_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1821:1832  _eth_amount */\n      dup5\n        /* \"Dcoffer/treasury.sol\":1821:1836  _eth_amount.add */\n      tag_41\n      swap1\n        /* \"Dcoffer/treasury.sol\":1821:1848  _eth_amount.add(eth_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"Dcoffer/treasury.sol\":1798:1848  uint256 Variable_eth = _eth_amount.add(eth_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1855:1875  uint256 Variable_dcf */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1878:1897  K.div(Variable_eth) */\n      tag_73\n        /* \"Dcoffer/treasury.sol\":1884:1896  Variable_eth */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1878:1879  K */\n      sload(0x01)\n        /* \"Dcoffer/treasury.sol\":1878:1883  K.div */\n      tag_50\n      swap1\n        /* \"Dcoffer/treasury.sol\":1878:1897  K.div(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_73:\n        /* \"Dcoffer/treasury.sol\":1855:1897  uint256 Variable_dcf = K.div(Variable_eth) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1904:1918  uint256 _price */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1921:1950  _dcf_amount.sub(Variable_dcf) */\n      tag_74\n        /* \"Dcoffer/treasury.sol\":1937:1949  Variable_dcf */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1921:1932  _dcf_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1921:1936  _dcf_amount.sub */\n      tag_52\n      swap1\n        /* \"Dcoffer/treasury.sol\":1921:1950  _dcf_amount.sub(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"Dcoffer/treasury.sol\":1904:1950  uint256 _price = _dcf_amount.sub(Variable_dcf) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1964:1970  _price */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1957:1970  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":1618:1976  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":604:704  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_32:\n        /* \"Dcoffer/treasury.sol\":527:537  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":518:537  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":518:523  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":518:537  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":510:574  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"Dcoffer/treasury.sol\":693:698  power */\n      dup1\n        /* \"Dcoffer/treasury.sol\":673:684  RouterAdmin */\n      0x03\n        /* \"Dcoffer/treasury.sol\":673:690  RouterAdmin[user] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":685:689  user */\n      dup5\n        /* \"Dcoffer/treasury.sol\":673:690  RouterAdmin[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Dcoffer/treasury.sol\":673:698  RouterAdmin[user] = power */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":604:704  function setRouter(address user, bool power)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_90:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_92:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_93:\n        /* \"#utility.yul\":490:514   */\n      tag_120\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_92\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_121\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_121:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_94:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_123\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_93\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_10:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_126\n      tag_90\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":766:885   */\n    tag_125:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_127\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_94\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_95:\n        /* \"#utility.yul\":1112:1136   */\n      tag_129\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_92\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_13:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_131\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_95\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_96:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_97:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_134\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_96\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_98:\n        /* \"#utility.yul\":1684:1708   */\n      tag_136\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_97\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_137:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_99:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_139\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_98\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_16:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_142\n      tag_90\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1960:2079   */\n    tag_141:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_143\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_99\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2323   */\n    tag_100:\n        /* \"#utility.yul\":2264:2271   */\n      0x00\n        /* \"#utility.yul\":2293:2317   */\n      tag_145\n        /* \"#utility.yul\":2311:2316   */\n      dup3\n        /* \"#utility.yul\":2293:2317   */\n      tag_96\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2282:2317   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2329:2467   */\n    tag_101:\n        /* \"#utility.yul\":2410:2442   */\n      tag_147\n        /* \"#utility.yul\":2436:2441   */\n      dup2\n        /* \"#utility.yul\":2410:2442   */\n      tag_100\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2403:2408   */\n      dup2\n        /* \"#utility.yul\":2400:2443   */\n      eq\n        /* \"#utility.yul\":2390:2461   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":2457:2458   */\n      0x00\n        /* \"#utility.yul\":2454:2455   */\n      dup1\n        /* \"#utility.yul\":2447:2459   */\n      revert\n        /* \"#utility.yul\":2390:2461   */\n    tag_148:\n        /* \"#utility.yul\":2329:2467   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2473:2628   */\n    tag_102:\n        /* \"#utility.yul\":2527:2532   */\n      0x00\n        /* \"#utility.yul\":2565:2571   */\n      dup2\n        /* \"#utility.yul\":2552:2572   */\n      calldataload\n        /* \"#utility.yul\":2543:2572   */\n      swap1\n      pop\n        /* \"#utility.yul\":2581:2622   */\n      tag_150\n        /* \"#utility.yul\":2616:2621   */\n      dup2\n        /* \"#utility.yul\":2581:2622   */\n      tag_101\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2473:2628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2634:3124   */\n    tag_21:\n        /* \"#utility.yul\":2710:2716   */\n      0x00\n        /* \"#utility.yul\":2718:2724   */\n      dup1\n        /* \"#utility.yul\":2767:2769   */\n      0x40\n        /* \"#utility.yul\":2755:2764   */\n      dup4\n        /* \"#utility.yul\":2746:2753   */\n      dup6\n        /* \"#utility.yul\":2742:2765   */\n      sub\n        /* \"#utility.yul\":2738:2770   */\n      slt\n        /* \"#utility.yul\":2735:2854   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":2773:2852   */\n      tag_153\n      tag_90\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2735:2854   */\n    tag_152:\n        /* \"#utility.yul\":2893:2894   */\n      0x00\n        /* \"#utility.yul\":2918:2979   */\n      tag_154\n        /* \"#utility.yul\":2971:2978   */\n      dup6\n        /* \"#utility.yul\":2962:2968   */\n      dup3\n        /* \"#utility.yul\":2951:2960   */\n      dup7\n        /* \"#utility.yul\":2947:2969   */\n      add\n        /* \"#utility.yul\":2918:2979   */\n      tag_102\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2908:2979   */\n      swap3\n      pop\n        /* \"#utility.yul\":2864:2989   */\n      pop\n        /* \"#utility.yul\":3028:3030   */\n      0x20\n        /* \"#utility.yul\":3054:3107   */\n      tag_155\n        /* \"#utility.yul\":3099:3106   */\n      dup6\n        /* \"#utility.yul\":3090:3096   */\n      dup3\n        /* \"#utility.yul\":3079:3088   */\n      dup7\n        /* \"#utility.yul\":3075:3097   */\n      add\n        /* \"#utility.yul\":3054:3107   */\n      tag_94\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":3044:3107   */\n      swap2\n      pop\n        /* \"#utility.yul\":2999:3117   */\n      pop\n        /* \"#utility.yul\":2634:3124   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3130:3220   */\n    tag_103:\n        /* \"#utility.yul\":3164:3171   */\n      0x00\n        /* \"#utility.yul\":3207:3212   */\n      dup2\n        /* \"#utility.yul\":3200:3213   */\n      iszero\n        /* \"#utility.yul\":3193:3214   */\n      iszero\n        /* \"#utility.yul\":3182:3214   */\n      swap1\n      pop\n        /* \"#utility.yul\":3130:3220   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3226:3342   */\n    tag_104:\n        /* \"#utility.yul\":3296:3317   */\n      tag_158\n        /* \"#utility.yul\":3311:3316   */\n      dup2\n        /* \"#utility.yul\":3296:3317   */\n      tag_103\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":3289:3294   */\n      dup2\n        /* \"#utility.yul\":3286:3318   */\n      eq\n        /* \"#utility.yul\":3276:3336   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":3332:3333   */\n      0x00\n        /* \"#utility.yul\":3329:3330   */\n      dup1\n        /* \"#utility.yul\":3322:3334   */\n      revert\n        /* \"#utility.yul\":3276:3336   */\n    tag_159:\n        /* \"#utility.yul\":3226:3342   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3348:3481   */\n    tag_105:\n        /* \"#utility.yul\":3391:3396   */\n      0x00\n        /* \"#utility.yul\":3429:3435   */\n      dup2\n        /* \"#utility.yul\":3416:3436   */\n      calldataload\n        /* \"#utility.yul\":3407:3436   */\n      swap1\n      pop\n        /* \"#utility.yul\":3445:3475   */\n      tag_161\n        /* \"#utility.yul\":3469:3474   */\n      dup2\n        /* \"#utility.yul\":3445:3475   */\n      tag_104\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3348:3481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3487:3955   */\n    tag_31:\n        /* \"#utility.yul\":3552:3558   */\n      0x00\n        /* \"#utility.yul\":3560:3566   */\n      dup1\n        /* \"#utility.yul\":3609:3611   */\n      0x40\n        /* \"#utility.yul\":3597:3606   */\n      dup4\n        /* \"#utility.yul\":3588:3595   */\n      dup6\n        /* \"#utility.yul\":3584:3607   */\n      sub\n        /* \"#utility.yul\":3580:3612   */\n      slt\n        /* \"#utility.yul\":3577:3696   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":3615:3694   */\n      tag_164\n      tag_90\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":3577:3696   */\n    tag_163:\n        /* \"#utility.yul\":3735:3736   */\n      0x00\n        /* \"#utility.yul\":3760:3813   */\n      tag_165\n        /* \"#utility.yul\":3805:3812   */\n      dup6\n        /* \"#utility.yul\":3796:3802   */\n      dup3\n        /* \"#utility.yul\":3785:3794   */\n      dup7\n        /* \"#utility.yul\":3781:3803   */\n      add\n        /* \"#utility.yul\":3760:3813   */\n      tag_99\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3750:3813   */\n      swap3\n      pop\n        /* \"#utility.yul\":3706:3823   */\n      pop\n        /* \"#utility.yul\":3862:3864   */\n      0x20\n        /* \"#utility.yul\":3888:3938   */\n      tag_166\n        /* \"#utility.yul\":3930:3937   */\n      dup6\n        /* \"#utility.yul\":3921:3927   */\n      dup3\n        /* \"#utility.yul\":3910:3919   */\n      dup7\n        /* \"#utility.yul\":3906:3928   */\n      add\n        /* \"#utility.yul\":3888:3938   */\n      tag_105\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":3878:3938   */\n      swap2\n      pop\n        /* \"#utility.yul\":3833:3948   */\n      pop\n        /* \"#utility.yul\":3487:3955   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3961:4079   */\n    tag_106:\n        /* \"#utility.yul\":4048:4072   */\n      tag_168\n        /* \"#utility.yul\":4066:4071   */\n      dup2\n        /* \"#utility.yul\":4048:4072   */\n      tag_97\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":4043:4046   */\n      dup3\n        /* \"#utility.yul\":4036:4073   */\n      mstore\n        /* \"#utility.yul\":3961:4079   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4085:4307   */\n    tag_35:\n        /* \"#utility.yul\":4178:4182   */\n      0x00\n        /* \"#utility.yul\":4216:4218   */\n      0x20\n        /* \"#utility.yul\":4205:4214   */\n      dup3\n        /* \"#utility.yul\":4201:4219   */\n      add\n        /* \"#utility.yul\":4193:4219   */\n      swap1\n      pop\n        /* \"#utility.yul\":4229:4300   */\n      tag_170\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4286:4295   */\n      dup4\n        /* \"#utility.yul\":4282:4299   */\n      add\n        /* \"#utility.yul\":4273:4279   */\n      dup5\n        /* \"#utility.yul\":4229:4300   */\n      tag_106\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4085:4307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4313:4456   */\n    tag_107:\n        /* \"#utility.yul\":4370:4375   */\n      0x00\n        /* \"#utility.yul\":4401:4407   */\n      dup2\n        /* \"#utility.yul\":4395:4408   */\n      mload\n        /* \"#utility.yul\":4386:4408   */\n      swap1\n      pop\n        /* \"#utility.yul\":4417:4450   */\n      tag_172\n        /* \"#utility.yul\":4444:4449   */\n      dup2\n        /* \"#utility.yul\":4417:4450   */\n      tag_93\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4313:4456   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4462:4813   */\n    tag_39:\n        /* \"#utility.yul\":4532:4538   */\n      0x00\n        /* \"#utility.yul\":4581:4583   */\n      0x20\n        /* \"#utility.yul\":4569:4578   */\n      dup3\n        /* \"#utility.yul\":4560:4567   */\n      dup5\n        /* \"#utility.yul\":4556:4579   */\n      sub\n        /* \"#utility.yul\":4552:4584   */\n      slt\n        /* \"#utility.yul\":4549:4668   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":4587:4666   */\n      tag_175\n      tag_90\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4549:4668   */\n    tag_174:\n        /* \"#utility.yul\":4707:4708   */\n      0x00\n        /* \"#utility.yul\":4732:4796   */\n      tag_176\n        /* \"#utility.yul\":4788:4795   */\n      dup5\n        /* \"#utility.yul\":4779:4785   */\n      dup3\n        /* \"#utility.yul\":4768:4777   */\n      dup6\n        /* \"#utility.yul\":4764:4786   */\n      add\n        /* \"#utility.yul\":4732:4796   */\n      tag_107\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":4722:4796   */\n      swap2\n      pop\n        /* \"#utility.yul\":4678:4806   */\n      pop\n        /* \"#utility.yul\":4462:4813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4819:5151   */\n    tag_57:\n        /* \"#utility.yul\":4940:4944   */\n      0x00\n        /* \"#utility.yul\":4978:4980   */\n      0x40\n        /* \"#utility.yul\":4967:4976   */\n      dup3\n        /* \"#utility.yul\":4963:4981   */\n      add\n        /* \"#utility.yul\":4955:4981   */\n      swap1\n      pop\n        /* \"#utility.yul\":4991:5062   */\n      tag_178\n        /* \"#utility.yul\":5059:5060   */\n      0x00\n        /* \"#utility.yul\":5048:5057   */\n      dup4\n        /* \"#utility.yul\":5044:5061   */\n      add\n        /* \"#utility.yul\":5035:5041   */\n      dup6\n        /* \"#utility.yul\":4991:5062   */\n      tag_106\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":5072:5144   */\n      tag_179\n        /* \"#utility.yul\":5140:5142   */\n      0x20\n        /* \"#utility.yul\":5129:5138   */\n      dup4\n        /* \"#utility.yul\":5125:5143   */\n      add\n        /* \"#utility.yul\":5116:5122   */\n      dup5\n        /* \"#utility.yul\":5072:5144   */\n      tag_95\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4819:5151   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5157:5294   */\n    tag_108:\n        /* \"#utility.yul\":5211:5216   */\n      0x00\n        /* \"#utility.yul\":5242:5248   */\n      dup2\n        /* \"#utility.yul\":5236:5249   */\n      mload\n        /* \"#utility.yul\":5227:5249   */\n      swap1\n      pop\n        /* \"#utility.yul\":5258:5288   */\n      tag_181\n        /* \"#utility.yul\":5282:5287   */\n      dup2\n        /* \"#utility.yul\":5258:5288   */\n      tag_104\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5157:5294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5300:5645   */\n    tag_61:\n        /* \"#utility.yul\":5367:5373   */\n      0x00\n        /* \"#utility.yul\":5416:5418   */\n      0x20\n        /* \"#utility.yul\":5404:5413   */\n      dup3\n        /* \"#utility.yul\":5395:5402   */\n      dup5\n        /* \"#utility.yul\":5391:5414   */\n      sub\n        /* \"#utility.yul\":5387:5419   */\n      slt\n        /* \"#utility.yul\":5384:5503   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":5422:5501   */\n      tag_184\n      tag_90\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5384:5503   */\n    tag_183:\n        /* \"#utility.yul\":5542:5543   */\n      0x00\n        /* \"#utility.yul\":5567:5628   */\n      tag_185\n        /* \"#utility.yul\":5620:5627   */\n      dup5\n        /* \"#utility.yul\":5611:5617   */\n      dup3\n        /* \"#utility.yul\":5600:5609   */\n      dup6\n        /* \"#utility.yul\":5596:5618   */\n      add\n        /* \"#utility.yul\":5567:5628   */\n      tag_108\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":5557:5628   */\n      swap2\n      pop\n        /* \"#utility.yul\":5513:5638   */\n      pop\n        /* \"#utility.yul\":5300:5645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5651:5820   */\n    tag_109:\n        /* \"#utility.yul\":5735:5746   */\n      0x00\n        /* \"#utility.yul\":5769:5775   */\n      dup3\n        /* \"#utility.yul\":5764:5767   */\n      dup3\n        /* \"#utility.yul\":5757:5776   */\n      mstore\n        /* \"#utility.yul\":5809:5813   */\n      0x20\n        /* \"#utility.yul\":5804:5807   */\n      dup3\n        /* \"#utility.yul\":5800:5814   */\n      add\n        /* \"#utility.yul\":5785:5814   */\n      swap1\n      pop\n        /* \"#utility.yul\":5651:5820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5826:6008   */\n    tag_110:\n        /* \"#utility.yul\":5966:6000   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5962:5963   */\n      0x00\n        /* \"#utility.yul\":5954:5960   */\n      dup3\n        /* \"#utility.yul\":5950:5964   */\n      add\n        /* \"#utility.yul\":5943:6001   */\n      mstore\n        /* \"#utility.yul\":5826:6008   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6014:6380   */\n    tag_111:\n        /* \"#utility.yul\":6156:6159   */\n      0x00\n        /* \"#utility.yul\":6177:6244   */\n      tag_189\n        /* \"#utility.yul\":6241:6243   */\n      0x20\n        /* \"#utility.yul\":6236:6239   */\n      dup4\n        /* \"#utility.yul\":6177:6244   */\n      tag_109\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6170:6244   */\n      swap2\n      pop\n        /* \"#utility.yul\":6253:6346   */\n      tag_190\n        /* \"#utility.yul\":6342:6345   */\n      dup3\n        /* \"#utility.yul\":6253:6346   */\n      tag_110\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":6371:6373   */\n      0x20\n        /* \"#utility.yul\":6366:6369   */\n      dup3\n        /* \"#utility.yul\":6362:6374   */\n      add\n        /* \"#utility.yul\":6355:6374   */\n      swap1\n      pop\n        /* \"#utility.yul\":6014:6380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6386:6805   */\n    tag_78:\n        /* \"#utility.yul\":6552:6556   */\n      0x00\n        /* \"#utility.yul\":6590:6592   */\n      0x20\n        /* \"#utility.yul\":6579:6588   */\n      dup3\n        /* \"#utility.yul\":6575:6593   */\n      add\n        /* \"#utility.yul\":6567:6593   */\n      swap1\n      pop\n        /* \"#utility.yul\":6639:6648   */\n      dup2\n        /* \"#utility.yul\":6633:6637   */\n      dup2\n        /* \"#utility.yul\":6629:6649   */\n      sub\n        /* \"#utility.yul\":6625:6626   */\n      0x00\n        /* \"#utility.yul\":6614:6623   */\n      dup4\n        /* \"#utility.yul\":6610:6627   */\n      add\n        /* \"#utility.yul\":6603:6650   */\n      mstore\n        /* \"#utility.yul\":6667:6798   */\n      tag_192\n        /* \"#utility.yul\":6793:6797   */\n      dup2\n        /* \"#utility.yul\":6667:6798   */\n      tag_111\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6659:6798   */\n      swap1\n      pop\n        /* \"#utility.yul\":6386:6805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6811:6991   */\n    tag_112:\n        /* \"#utility.yul\":6859:6936   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6856:6857   */\n      0x00\n        /* \"#utility.yul\":6849:6937   */\n      mstore\n        /* \"#utility.yul\":6956:6960   */\n      0x11\n        /* \"#utility.yul\":6953:6954   */\n      0x04\n        /* \"#utility.yul\":6946:6961   */\n      mstore\n        /* \"#utility.yul\":6980:6984   */\n      0x24\n        /* \"#utility.yul\":6977:6978   */\n      0x00\n        /* \"#utility.yul\":6970:6985   */\n      revert\n        /* \"#utility.yul\":6997:7302   */\n    tag_82:\n        /* \"#utility.yul\":7037:7040   */\n      0x00\n        /* \"#utility.yul\":7056:7076   */\n      tag_195\n        /* \"#utility.yul\":7074:7075   */\n      dup3\n        /* \"#utility.yul\":7056:7076   */\n      tag_92\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":7051:7076   */\n      swap2\n      pop\n        /* \"#utility.yul\":7090:7110   */\n      tag_196\n        /* \"#utility.yul\":7108:7109   */\n      dup4\n        /* \"#utility.yul\":7090:7110   */\n      tag_92\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":7085:7110   */\n      swap3\n      pop\n        /* \"#utility.yul\":7244:7245   */\n      dup3\n        /* \"#utility.yul\":7176:7242   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7172:7246   */\n      sub\n        /* \"#utility.yul\":7169:7170   */\n      dup3\n        /* \"#utility.yul\":7166:7247   */\n      gt\n        /* \"#utility.yul\":7163:7270   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":7250:7268   */\n      tag_198\n      tag_112\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":7163:7270   */\n    tag_197:\n        /* \"#utility.yul\":7294:7295   */\n      dup3\n        /* \"#utility.yul\":7291:7292   */\n      dup3\n        /* \"#utility.yul\":7287:7296   */\n      add\n        /* \"#utility.yul\":7280:7296   */\n      swap1\n      pop\n        /* \"#utility.yul\":6997:7302   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7308:7488   */\n    tag_113:\n        /* \"#utility.yul\":7356:7433   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7353:7354   */\n      0x00\n        /* \"#utility.yul\":7346:7434   */\n      mstore\n        /* \"#utility.yul\":7453:7457   */\n      0x12\n        /* \"#utility.yul\":7450:7451   */\n      0x04\n        /* \"#utility.yul\":7443:7458   */\n      mstore\n        /* \"#utility.yul\":7477:7481   */\n      0x24\n        /* \"#utility.yul\":7474:7475   */\n      0x00\n        /* \"#utility.yul\":7467:7482   */\n      revert\n        /* \"#utility.yul\":7494:7679   */\n    tag_85:\n        /* \"#utility.yul\":7534:7535   */\n      0x00\n        /* \"#utility.yul\":7551:7571   */\n      tag_201\n        /* \"#utility.yul\":7569:7570   */\n      dup3\n        /* \"#utility.yul\":7551:7571   */\n      tag_92\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":7546:7571   */\n      swap2\n      pop\n        /* \"#utility.yul\":7585:7605   */\n      tag_202\n        /* \"#utility.yul\":7603:7604   */\n      dup4\n        /* \"#utility.yul\":7585:7605   */\n      tag_92\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":7580:7605   */\n      swap3\n      pop\n        /* \"#utility.yul\":7624:7625   */\n      dup3\n        /* \"#utility.yul\":7614:7649   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":7629:7647   */\n      tag_204\n      tag_113\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":7614:7649   */\n    tag_203:\n        /* \"#utility.yul\":7671:7672   */\n      dup3\n        /* \"#utility.yul\":7668:7669   */\n      dup3\n        /* \"#utility.yul\":7664:7673   */\n      div\n        /* \"#utility.yul\":7659:7673   */\n      swap1\n      pop\n        /* \"#utility.yul\":7494:7679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7685:7876   */\n    tag_88:\n        /* \"#utility.yul\":7725:7729   */\n      0x00\n        /* \"#utility.yul\":7745:7765   */\n      tag_206\n        /* \"#utility.yul\":7763:7764   */\n      dup3\n        /* \"#utility.yul\":7745:7765   */\n      tag_92\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":7740:7765   */\n      swap2\n      pop\n        /* \"#utility.yul\":7779:7799   */\n      tag_207\n        /* \"#utility.yul\":7797:7798   */\n      dup4\n        /* \"#utility.yul\":7779:7799   */\n      tag_92\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":7774:7799   */\n      swap3\n      pop\n        /* \"#utility.yul\":7818:7819   */\n      dup3\n        /* \"#utility.yul\":7815:7816   */\n      dup3\n        /* \"#utility.yul\":7812:7820   */\n      lt\n        /* \"#utility.yul\":7809:7843   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":7823:7841   */\n      tag_209\n      tag_112\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":7809:7843   */\n    tag_208:\n        /* \"#utility.yul\":7868:7869   */\n      dup3\n        /* \"#utility.yul\":7865:7866   */\n      dup3\n        /* \"#utility.yul\":7861:7870   */\n      sub\n        /* \"#utility.yul\":7853:7870   */\n      swap1\n      pop\n        /* \"#utility.yul\":7685:7876   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c402009edce8c74facec744d2edd95b34cc7aa53101f9f7e26581e748850eb8064736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_419": {
									"entryPoint": null,
									"id": 419,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1048:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:3",
														"type": ""
													}
												],
												"src": "545:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "817:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:32:3"
															},
															"nodeType": "YulIf",
															"src": "781:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "910:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "929:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "954:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "741:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "752:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "764:6:3",
														"type": ""
													}
												],
												"src": "694:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405273d14ff067355ce838a6e110bdfb672dbec83ca23c6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051610d35380380610d3583398181016040528101906100799190610102565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001819055505061012f565b600080fd5b6000819050919050565b6100df816100cc565b81146100ea57600080fd5b50565b6000815190506100fc816100d6565b92915050565b600060208284031215610118576101176100c7565b5b6000610126848285016100ed565b91505092915050565b610bf78061013e6000396000f3fe60806040526004361061004a5760003560e01c80633a23bf491461004f57806341a7726a1461008c57806394756aa7146100a857806397dedb1d146100d1578063c3c646741461010e575b600080fd5b34801561005b57600080fd5b506100766004803603810190610071919061077c565b610137565b60405161008391906107b8565b60405180910390f35b6100a660048036038101906100a19190610831565b610358565b005b3480156100b457600080fd5b506100cf60048036038101906100ca919061089c565b610465565b005b3480156100dd57600080fd5b506100f860048036038101906100f3919061077c565b61051b565b60405161010591906107b8565b60405180910390f35b34801561011a57600080fd5b5061013560048036038101906101309190610914565b610614565b005b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101999190610963565b602060405180830381865afa1580156101b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101da9190610993565b905060006101f185836106ff90919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102829190610993565b81111561031b5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103189190610993565b90505b60006103328260015461071590919063ffffffff16565b90506000610349828661072b90919063ffffffff16565b90508095505050505050919050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103b557600080fd5b60006103c03461051b565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161041d9291906109c0565b6020604051808303816000875af115801561043c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046091906109fe565b505050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146104c257600080fd5b60006104cd82610137565b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610515573d6000803e3d6000fd5b50505050565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161057d9190610963565b602060405180830381865afa15801561059a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105be9190610993565b905060006105d585846106ff90919063ffffffff16565b905060006105ee8260015461071590919063ffffffff16565b90506000610605828561072b90919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069b90610a88565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000818361070d9190610ad7565b905092915050565b600081836107239190610b5c565b905092915050565b600081836107399190610b8d565b905092915050565b600080fd5b6000819050919050565b61075981610746565b811461076457600080fd5b50565b60008135905061077681610750565b92915050565b60006020828403121561079257610791610741565b5b60006107a084828501610767565b91505092915050565b6107b281610746565b82525050565b60006020820190506107cd60008301846107a9565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107fe826107d3565b9050919050565b61080e816107f3565b811461081957600080fd5b50565b60008135905061082b81610805565b92915050565b60006020828403121561084757610846610741565b5b60006108558482850161081c565b91505092915050565b6000610869826107d3565b9050919050565b6108798161085e565b811461088457600080fd5b50565b60008135905061089681610870565b92915050565b600080604083850312156108b3576108b2610741565b5b60006108c185828601610887565b92505060206108d285828601610767565b9150509250929050565b60008115159050919050565b6108f1816108dc565b81146108fc57600080fd5b50565b60008135905061090e816108e8565b92915050565b6000806040838503121561092b5761092a610741565b5b60006109398582860161081c565b925050602061094a858286016108ff565b9150509250929050565b61095d816107f3565b82525050565b60006020820190506109786000830184610954565b92915050565b60008151905061098d81610750565b92915050565b6000602082840312156109a9576109a8610741565b5b60006109b78482850161097e565b91505092915050565b60006040820190506109d56000830185610954565b6109e260208301846107a9565b9392505050565b6000815190506109f8816108e8565b92915050565b600060208284031215610a1457610a13610741565b5b6000610a22848285016109e9565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a72602083610a2b565b9150610a7d82610a3c565b602082019050919050565b60006020820190508181036000830152610aa181610a65565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ae282610746565b9150610aed83610746565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b2257610b21610aa8565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b6782610746565b9150610b7283610746565b925082610b8257610b81610b2d565b5b828204905092915050565b6000610b9882610746565b9150610ba383610746565b925082821015610bb657610bb5610aa8565b5b82820390509291505056fea2646970667358221220c402009edce8c74facec744d2edd95b34cc7aa53101f9f7e26581e748850eb8064736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xD14FF067355CE838A6E110BDFB672DBEC83CA23C PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0xD35 CODESIZE SUB DUP1 PUSH2 0xD35 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x102 JUMP JUMPDEST CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP PUSH2 0x12F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF DUP2 PUSH2 0xCC JUMP JUMPDEST DUP2 EQ PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFC DUP2 PUSH2 0xD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x118 JUMPI PUSH2 0x117 PUSH2 0xC7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x126 DUP5 DUP3 DUP6 ADD PUSH2 0xED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBF7 DUP1 PUSH2 0x13E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3A23BF49 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x41A7726A EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x94756AA7 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x10E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x914 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F1 DUP6 DUP4 PUSH2 0x6FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x332 DUP3 PUSH1 0x1 SLOAD PUSH2 0x715 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x349 DUP3 DUP7 PUSH2 0x72B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C0 CALLVALUE PUSH2 0x51B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP3 SWAP2 SWAP1 PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x9FE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4CD DUP3 PUSH2 0x137 JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x515 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x59A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5D5 DUP6 DUP5 PUSH2 0x6FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5EE DUP3 PUSH1 0x1 SLOAD PUSH2 0x715 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x605 DUP3 DUP6 PUSH2 0x72B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69B SWAP1 PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x723 SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x739 SWAP2 SWAP1 PUSH2 0xB8D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x759 DUP2 PUSH2 0x746 JUMP JUMPDEST DUP2 EQ PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x776 DUP2 PUSH2 0x750 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x792 JUMPI PUSH2 0x791 PUSH2 0x741 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7A0 DUP5 DUP3 DUP6 ADD PUSH2 0x767 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7B2 DUP2 PUSH2 0x746 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7CD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FE DUP3 PUSH2 0x7D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80E DUP2 PUSH2 0x7F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x82B DUP2 PUSH2 0x805 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x847 JUMPI PUSH2 0x846 PUSH2 0x741 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x855 DUP5 DUP3 DUP6 ADD PUSH2 0x81C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 DUP3 PUSH2 0x7D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x879 DUP2 PUSH2 0x85E JUMP JUMPDEST DUP2 EQ PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x896 DUP2 PUSH2 0x870 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8B3 JUMPI PUSH2 0x8B2 PUSH2 0x741 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8C1 DUP6 DUP3 DUP7 ADD PUSH2 0x887 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8D2 DUP6 DUP3 DUP7 ADD PUSH2 0x767 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F1 DUP2 PUSH2 0x8DC JUMP JUMPDEST DUP2 EQ PUSH2 0x8FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x90E DUP2 PUSH2 0x8E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x92B JUMPI PUSH2 0x92A PUSH2 0x741 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x939 DUP6 DUP3 DUP7 ADD PUSH2 0x81C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x94A DUP6 DUP3 DUP7 ADD PUSH2 0x8FF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x95D DUP2 PUSH2 0x7F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x978 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x954 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x98D DUP2 PUSH2 0x750 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A9 JUMPI PUSH2 0x9A8 PUSH2 0x741 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9B7 DUP5 DUP3 DUP6 ADD PUSH2 0x97E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9D5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x954 JUMP JUMPDEST PUSH2 0x9E2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9F8 DUP2 PUSH2 0x8E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA14 JUMPI PUSH2 0xA13 PUSH2 0x741 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA22 DUP5 DUP3 DUP6 ADD PUSH2 0x9E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA72 PUSH1 0x20 DUP4 PUSH2 0xA2B JUMP JUMPDEST SWAP2 POP PUSH2 0xA7D DUP3 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAA1 DUP2 PUSH2 0xA65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAE2 DUP3 PUSH2 0x746 JUMP JUMPDEST SWAP2 POP PUSH2 0xAED DUP4 PUSH2 0x746 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xB22 JUMPI PUSH2 0xB21 PUSH2 0xAA8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB67 DUP3 PUSH2 0x746 JUMP JUMPDEST SWAP2 POP PUSH2 0xB72 DUP4 PUSH2 0x746 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB82 JUMPI PUSH2 0xB81 PUSH2 0xB2D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB98 DUP3 PUSH2 0x746 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA3 DUP4 PUSH2 0x746 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xBB6 JUMPI PUSH2 0xBB5 PUSH2 0xAA8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 MUL STOP SWAP15 0xDC 0xE8 0xC7 0x4F 0xAC 0xEC PUSH21 0x4D2EDD95B34CC7AA53101F9F7E26581E748850EB80 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "181:1818:2:-:0;;;259:42;236:66;;;;;;;;;;;;;;;;;;;;333:71;;;;;;;;;;;;;;;;;;;;;:::i;:::-;375:10;367:5;;:18;;;;;;;;;;;;;;;;;;396:2;392:1;:6;;;;333:71;181:1818;;88:117:3;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;181:1818:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DCF_ETH_573": {
									"entryPoint": 311,
									"id": 573,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ETH_DCF_622": {
									"entryPoint": 1307,
									"id": 622,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@add_253": {
									"entryPoint": 1791,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_298": {
									"entryPoint": 1813,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@market_511": {
									"entryPoint": 1125,
									"id": 511,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setRouter_453": {
									"entryPoint": 1556,
									"id": 453,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_268": {
									"entryPoint": 1835,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@subscribe_482": {
									"entryPoint": 856,
									"id": 482,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 2183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 2303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2496,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 2142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2861,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1857,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 2160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7879:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:3",
														"type": ""
													}
												],
												"src": "1025:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:3",
														"type": ""
													}
												],
												"src": "1149:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:3",
														"type": ""
													}
												],
												"src": "1377:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:3",
														"type": ""
													}
												],
												"src": "1509:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:3"
															},
															"nodeType": "YulIf",
															"src": "1664:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:3",
														"type": ""
													}
												],
												"src": "1611:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:3",
														"type": ""
													}
												],
												"src": "1739:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:3"
															},
															"nodeType": "YulIf",
															"src": "1960:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2089:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:3",
														"type": ""
													}
												],
												"src": "1884:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2272:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2282:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2311:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2293:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2293:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2282:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2254:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2264:7:3",
														"type": ""
													}
												],
												"src": "2219:104:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2380:87:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2445:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2454:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2457:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2447:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2447:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2447:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2403:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2436:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "2410:25:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2410:32:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2400:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2400:43:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2393:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2393:51:3"
															},
															"nodeType": "YulIf",
															"src": "2390:71:3"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2373:5:3",
														"type": ""
													}
												],
												"src": "2329:138:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2533:95:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2543:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2565:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2552:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2552:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2543:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2616:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "2581:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2581:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2581:41:3"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2511:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2519:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2527:5:3",
														"type": ""
													}
												],
												"src": "2473:155:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2725:399:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2771:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2773:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2773:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2773:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2746:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2755:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2767:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2738:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:32:3"
															},
															"nodeType": "YulIf",
															"src": "2735:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2864:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2879:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2893:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2883:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2908:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2951:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2962:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2971:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "2918:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2918:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2908:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2999:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3014:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3028:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3018:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3044:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3079:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3090:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3075:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3075:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3099:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3054:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3044:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2687:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2698:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2710:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2718:6:3",
														"type": ""
													}
												],
												"src": "2634:490:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3172:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3182:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3207:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3200:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3200:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3193:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3193:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3182:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3154:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3164:7:3",
														"type": ""
													}
												],
												"src": "3130:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3266:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3320:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3329:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3322:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3322:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3322:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3289:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3311:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3296:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3296:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3286:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3286:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3279:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3279:40:3"
															},
															"nodeType": "YulIf",
															"src": "3276:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3259:5:3",
														"type": ""
													}
												],
												"src": "3226:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3397:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3407:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3416:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3407:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3469:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3445:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3445:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3375:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3383:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3391:5:3",
														"type": ""
													}
												],
												"src": "3348:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3567:388:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3613:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3615:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3615:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3615:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3588:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3597:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3584:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3584:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3609:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3580:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:32:3"
															},
															"nodeType": "YulIf",
															"src": "3577:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3706:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3721:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3735:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3725:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3750:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3785:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3796:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3781:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3781:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3805:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3760:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3760:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3750:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3833:115:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3848:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3862:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3852:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3878:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3910:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3921:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3906:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3906:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3930:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3888:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3888:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3878:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3529:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3540:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3552:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3560:6:3",
														"type": ""
													}
												],
												"src": "3487:468:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4026:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4043:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4066:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4048:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4048:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4036:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4036:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4036:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4014:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4021:3:3",
														"type": ""
													}
												],
												"src": "3961:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4183:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4193:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4205:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4216:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4201:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4201:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4193:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4273:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4286:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4297:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4282:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4282:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4229:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4229:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4229:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4155:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4167:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4178:4:3",
														"type": ""
													}
												],
												"src": "4085:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4376:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4386:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4401:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4395:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4395:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4386:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4444:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4417:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4417:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4417:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4354:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4362:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4370:5:3",
														"type": ""
													}
												],
												"src": "4313:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4539:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4585:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4587:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4587:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4587:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4560:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4569:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4556:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4556:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4581:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4552:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4552:32:3"
															},
															"nodeType": "YulIf",
															"src": "4549:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4678:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4693:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4707:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4697:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4722:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4768:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4779:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4764:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4764:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4788:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4732:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4732:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4722:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4509:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4520:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4532:6:3",
														"type": ""
													}
												],
												"src": "4462:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4945:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4955:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4967:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4978:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4963:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4963:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4955:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5035:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5048:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5059:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5044:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5044:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4991:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4991:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5116:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5129:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5140:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5125:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5125:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5072:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5072:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5072:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4909:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4921:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4929:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4940:4:3",
														"type": ""
													}
												],
												"src": "4819:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5217:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5227:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5242:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5236:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5227:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5282:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5258:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5258:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5258:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5195:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5203:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5211:5:3",
														"type": ""
													}
												],
												"src": "5157:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5374:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5420:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5422:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5422:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5422:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5395:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5404:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5391:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5391:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5416:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5387:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5387:32:3"
															},
															"nodeType": "YulIf",
															"src": "5384:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5513:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5528:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5542:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5532:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5557:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5600:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5611:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5596:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5596:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5620:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5567:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5567:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5557:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5344:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5355:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5367:6:3",
														"type": ""
													}
												],
												"src": "5300:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5747:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5764:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5769:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5757:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5757:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5757:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5785:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5804:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5809:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5800:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5800:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5785:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5719:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5724:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5735:11:3",
														"type": ""
													}
												],
												"src": "5651:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5932:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5954:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5962:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5966:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5943:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5943:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5943:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5924:6:3",
														"type": ""
													}
												],
												"src": "5826:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6160:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6170:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6236:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6241:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6177:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6177:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6342:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "6253:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6253:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6253:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6355:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6366:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6371:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6362:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6355:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6148:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6156:3:3",
														"type": ""
													}
												],
												"src": "6014:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6557:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6567:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6579:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6590:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6575:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6575:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6567:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6614:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6625:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6610:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6610:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6633:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6639:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6629:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6629:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6603:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6603:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6603:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6659:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6793:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6667:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6667:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6659:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6537:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6552:4:3",
														"type": ""
													}
												],
												"src": "6386:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6839:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6856:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6859:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6849:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6849:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6849:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6953:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6956:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6946:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6946:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6946:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6977:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6980:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6970:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6970:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6970:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6811:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7041:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7051:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7074:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7056:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7056:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7051:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7085:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7108:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7090:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7090:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7085:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7248:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7250:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7250:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7250:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7169:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7176:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7244:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7172:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7172:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7166:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7166:81:3"
															},
															"nodeType": "YulIf",
															"src": "7163:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7280:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7291:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7294:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7287:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7287:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7280:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7028:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7031:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7037:3:3",
														"type": ""
													}
												],
												"src": "6997:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7336:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7353:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7356:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7346:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7346:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7346:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7450:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7453:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7443:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7443:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7443:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7474:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7477:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7467:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7467:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7467:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7308:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7536:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7546:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7569:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7551:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7551:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7546:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7580:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7603:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7585:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7585:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7580:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7627:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7629:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7629:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7629:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7624:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7617:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7617:9:3"
															},
															"nodeType": "YulIf",
															"src": "7614:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7659:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7668:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7671:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7664:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7664:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7659:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7525:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7528:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7534:1:3",
														"type": ""
													}
												],
												"src": "7494:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7730:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7740:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7763:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7745:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7745:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7740:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7774:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7797:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7779:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7779:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7774:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7821:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7823:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7823:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7823:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7815:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7818:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7812:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7812:8:3"
															},
															"nodeType": "YulIf",
															"src": "7809:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7853:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7865:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7868:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7861:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7861:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7853:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7716:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7719:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7725:4:3",
														"type": ""
													}
												],
												"src": "7685:191:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80633a23bf491461004f57806341a7726a1461008c57806394756aa7146100a857806397dedb1d146100d1578063c3c646741461010e575b600080fd5b34801561005b57600080fd5b506100766004803603810190610071919061077c565b610137565b60405161008391906107b8565b60405180910390f35b6100a660048036038101906100a19190610831565b610358565b005b3480156100b457600080fd5b506100cf60048036038101906100ca919061089c565b610465565b005b3480156100dd57600080fd5b506100f860048036038101906100f3919061077c565b61051b565b60405161010591906107b8565b60405180910390f35b34801561011a57600080fd5b5061013560048036038101906101309190610914565b610614565b005b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101999190610963565b602060405180830381865afa1580156101b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101da9190610993565b905060006101f185836106ff90919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102829190610993565b81111561031b5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103189190610993565b90505b60006103328260015461071590919063ffffffff16565b90506000610349828661072b90919063ffffffff16565b90508095505050505050919050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103b557600080fd5b60006103c03461051b565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161041d9291906109c0565b6020604051808303816000875af115801561043c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046091906109fe565b505050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146104c257600080fd5b60006104cd82610137565b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610515573d6000803e3d6000fd5b50505050565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161057d9190610963565b602060405180830381865afa15801561059a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105be9190610993565b905060006105d585846106ff90919063ffffffff16565b905060006105ee8260015461071590919063ffffffff16565b90506000610605828561072b90919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069b90610a88565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000818361070d9190610ad7565b905092915050565b600081836107239190610b5c565b905092915050565b600081836107399190610b8d565b905092915050565b600080fd5b6000819050919050565b61075981610746565b811461076457600080fd5b50565b60008135905061077681610750565b92915050565b60006020828403121561079257610791610741565b5b60006107a084828501610767565b91505092915050565b6107b281610746565b82525050565b60006020820190506107cd60008301846107a9565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107fe826107d3565b9050919050565b61080e816107f3565b811461081957600080fd5b50565b60008135905061082b81610805565b92915050565b60006020828403121561084757610846610741565b5b60006108558482850161081c565b91505092915050565b6000610869826107d3565b9050919050565b6108798161085e565b811461088457600080fd5b50565b60008135905061089681610870565b92915050565b600080604083850312156108b3576108b2610741565b5b60006108c185828601610887565b92505060206108d285828601610767565b9150509250929050565b60008115159050919050565b6108f1816108dc565b81146108fc57600080fd5b50565b60008135905061090e816108e8565b92915050565b6000806040838503121561092b5761092a610741565b5b60006109398582860161081c565b925050602061094a858286016108ff565b9150509250929050565b61095d816107f3565b82525050565b60006020820190506109786000830184610954565b92915050565b60008151905061098d81610750565b92915050565b6000602082840312156109a9576109a8610741565b5b60006109b78482850161097e565b91505092915050565b60006040820190506109d56000830185610954565b6109e260208301846107a9565b9392505050565b6000815190506109f8816108e8565b92915050565b600060208284031215610a1457610a13610741565b5b6000610a22848285016109e9565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a72602083610a2b565b9150610a7d82610a3c565b602082019050919050565b60006020820190508181036000830152610aa181610a65565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ae282610746565b9150610aed83610746565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b2257610b21610aa8565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b6782610746565b9150610b7283610746565b925082610b8257610b81610b2d565b5b828204905092915050565b6000610b9882610746565b9150610ba383610746565b925082821015610bb657610bb5610aa8565b5b82820390509291505056fea2646970667358221220c402009edce8c74facec744d2edd95b34cc7aa53101f9f7e26581e748850eb8064736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3A23BF49 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x41A7726A EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x94756AA7 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x10E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x831 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH2 0x465 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x914 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1F1 DUP6 DUP4 PUSH2 0x6FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x332 DUP3 PUSH1 0x1 SLOAD PUSH2 0x715 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x349 DUP3 DUP7 PUSH2 0x72B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C0 CALLVALUE PUSH2 0x51B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP3 SWAP2 SWAP1 PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x9FE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4CD DUP3 PUSH2 0x137 JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x515 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x59A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BE SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5D5 DUP6 DUP5 PUSH2 0x6FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5EE DUP3 PUSH1 0x1 SLOAD PUSH2 0x715 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x605 DUP3 DUP6 PUSH2 0x72B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69B SWAP1 PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x70D SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x723 SWAP2 SWAP1 PUSH2 0xB5C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x739 SWAP2 SWAP1 PUSH2 0xB8D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x759 DUP2 PUSH2 0x746 JUMP JUMPDEST DUP2 EQ PUSH2 0x764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x776 DUP2 PUSH2 0x750 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x792 JUMPI PUSH2 0x791 PUSH2 0x741 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7A0 DUP5 DUP3 DUP6 ADD PUSH2 0x767 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7B2 DUP2 PUSH2 0x746 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7CD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FE DUP3 PUSH2 0x7D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80E DUP2 PUSH2 0x7F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x82B DUP2 PUSH2 0x805 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x847 JUMPI PUSH2 0x846 PUSH2 0x741 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x855 DUP5 DUP3 DUP6 ADD PUSH2 0x81C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 DUP3 PUSH2 0x7D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x879 DUP2 PUSH2 0x85E JUMP JUMPDEST DUP2 EQ PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x896 DUP2 PUSH2 0x870 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8B3 JUMPI PUSH2 0x8B2 PUSH2 0x741 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8C1 DUP6 DUP3 DUP7 ADD PUSH2 0x887 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8D2 DUP6 DUP3 DUP7 ADD PUSH2 0x767 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F1 DUP2 PUSH2 0x8DC JUMP JUMPDEST DUP2 EQ PUSH2 0x8FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x90E DUP2 PUSH2 0x8E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x92B JUMPI PUSH2 0x92A PUSH2 0x741 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x939 DUP6 DUP3 DUP7 ADD PUSH2 0x81C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x94A DUP6 DUP3 DUP7 ADD PUSH2 0x8FF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x95D DUP2 PUSH2 0x7F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x978 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x954 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x98D DUP2 PUSH2 0x750 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A9 JUMPI PUSH2 0x9A8 PUSH2 0x741 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9B7 DUP5 DUP3 DUP6 ADD PUSH2 0x97E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9D5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x954 JUMP JUMPDEST PUSH2 0x9E2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9F8 DUP2 PUSH2 0x8E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA14 JUMPI PUSH2 0xA13 PUSH2 0x741 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA22 DUP5 DUP3 DUP6 ADD PUSH2 0x9E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA72 PUSH1 0x20 DUP4 PUSH2 0xA2B JUMP JUMPDEST SWAP2 POP PUSH2 0xA7D DUP3 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAA1 DUP2 PUSH2 0xA65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAE2 DUP3 PUSH2 0x746 JUMP JUMPDEST SWAP2 POP PUSH2 0xAED DUP4 PUSH2 0x746 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xB22 JUMPI PUSH2 0xB21 PUSH2 0xAA8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB67 DUP3 PUSH2 0x746 JUMP JUMPDEST SWAP2 POP PUSH2 0xB72 DUP4 PUSH2 0x746 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB82 JUMPI PUSH2 0xB81 PUSH2 0xB2D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB98 DUP3 PUSH2 0x746 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA3 DUP4 PUSH2 0x746 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xBB6 JUMPI PUSH2 0xBB5 PUSH2 0xAA8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 MUL STOP SWAP15 0xDC 0xE8 0xC7 0x4F 0xAC 0xEC PUSH21 0x4D2EDD95B34CC7AA53101F9F7E26581E748850EB80 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "181:1818:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1149:461;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;712:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;925:216;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1618:358;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;604:100;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1149:461;1205:7;1220:19;1242:21;1220:43;;1270:19;1292:5;;;;;;;;;;;:15;;;1316:4;1292:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1270:52;;1333:20;1356:27;1372:10;1356:11;:15;;:27;;;;:::i;:::-;1333:50;;1410:5;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1395:12;:34;1392:89;;;1454:5;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1439:34;;1392:89;1489:20;1512:19;1518:12;1512:1;;:5;;:19;;;;:::i;:::-;1489:42;;1538:14;1555:29;1571:12;1555:11;:15;;:29;;;;:::i;:::-;1538:46;;1598:6;1591:13;;;;;;;1149:461;;;:::o;712:205::-;810:4;783:31;;:11;:23;795:10;783:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;775:40;;;;;;824:18;845;853:9;845:7;:18::i;:::-;824:39;;872:5;;;;;;;;;;:14;;;887:10;898;872:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;766:151;712:205;:::o;925:216::-;1037:4;1010:31;;:11;:23;1022:10;1010:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;1002:40;;;;;;1051:18;1072:19;1080:10;1072:7;:19::i;:::-;1051:40;;1100:6;:15;;:27;1116:10;1100:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:148;925:216;;:::o;1618:358::-;1674:7;1689:19;1711:21;1689:43;;1739:19;1761:5;;;;;;;;;;;:15;;;1785:4;1761:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1739:52;;1798:20;1821:27;1837:10;1821:11;:15;;:27;;;;:::i;:::-;1798:50;;1855:20;1878:19;1884:12;1878:1;;:5;;:19;;;;:::i;:::-;1855:42;;1904:14;1921:29;1937:12;1921:11;:15;;:29;;;;:::i;:::-;1904:46;;1964:6;1957:13;;;;;;;1618:358;;;:::o;604:100::-;527:10;518:19;;:5;;;;;;;;;;;:19;;;510:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;693:5:::1;673:11;:17;685:4;673:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;604:100:::0;;:::o;2755:96:1:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:104::-;2264:7;2293:24;2311:5;2293:24;:::i;:::-;2282:35;;2219:104;;;:::o;2329:138::-;2410:32;2436:5;2410:32;:::i;:::-;2403:5;2400:43;2390:71;;2457:1;2454;2447:12;2390:71;2329:138;:::o;2473:155::-;2527:5;2565:6;2552:20;2543:29;;2581:41;2616:5;2581:41;:::i;:::-;2473:155;;;;:::o;2634:490::-;2710:6;2718;2767:2;2755:9;2746:7;2742:23;2738:32;2735:119;;;2773:79;;:::i;:::-;2735:119;2893:1;2918:61;2971:7;2962:6;2951:9;2947:22;2918:61;:::i;:::-;2908:71;;2864:125;3028:2;3054:53;3099:7;3090:6;3079:9;3075:22;3054:53;:::i;:::-;3044:63;;2999:118;2634:490;;;;;:::o;3130:90::-;3164:7;3207:5;3200:13;3193:21;3182:32;;3130:90;;;:::o;3226:116::-;3296:21;3311:5;3296:21;:::i;:::-;3289:5;3286:32;3276:60;;3332:1;3329;3322:12;3276:60;3226:116;:::o;3348:133::-;3391:5;3429:6;3416:20;3407:29;;3445:30;3469:5;3445:30;:::i;:::-;3348:133;;;;:::o;3487:468::-;3552:6;3560;3609:2;3597:9;3588:7;3584:23;3580:32;3577:119;;;3615:79;;:::i;:::-;3577:119;3735:1;3760:53;3805:7;3796:6;3785:9;3781:22;3760:53;:::i;:::-;3750:63;;3706:117;3862:2;3888:50;3930:7;3921:6;3910:9;3906:22;3888:50;:::i;:::-;3878:60;;3833:115;3487:468;;;;;:::o;3961:118::-;4048:24;4066:5;4048:24;:::i;:::-;4043:3;4036:37;3961:118;;:::o;4085:222::-;4178:4;4216:2;4205:9;4201:18;4193:26;;4229:71;4297:1;4286:9;4282:17;4273:6;4229:71;:::i;:::-;4085:222;;;;:::o;4313:143::-;4370:5;4401:6;4395:13;4386:22;;4417:33;4444:5;4417:33;:::i;:::-;4313:143;;;;:::o;4462:351::-;4532:6;4581:2;4569:9;4560:7;4556:23;4552:32;4549:119;;;4587:79;;:::i;:::-;4549:119;4707:1;4732:64;4788:7;4779:6;4768:9;4764:22;4732:64;:::i;:::-;4722:74;;4678:128;4462:351;;;;:::o;4819:332::-;4940:4;4978:2;4967:9;4963:18;4955:26;;4991:71;5059:1;5048:9;5044:17;5035:6;4991:71;:::i;:::-;5072:72;5140:2;5129:9;5125:18;5116:6;5072:72;:::i;:::-;4819:332;;;;;:::o;5157:137::-;5211:5;5242:6;5236:13;5227:22;;5258:30;5282:5;5258:30;:::i;:::-;5157:137;;;;:::o;5300:345::-;5367:6;5416:2;5404:9;5395:7;5391:23;5387:32;5384:119;;;5422:79;;:::i;:::-;5384:119;5542:1;5567:61;5620:7;5611:6;5600:9;5596:22;5567:61;:::i;:::-;5557:71;;5513:125;5300:345;;;;:::o;5651:169::-;5735:11;5769:6;5764:3;5757:19;5809:4;5804:3;5800:14;5785:29;;5651:169;;;;:::o;5826:182::-;5966:34;5962:1;5954:6;5950:14;5943:58;5826:182;:::o;6014:366::-;6156:3;6177:67;6241:2;6236:3;6177:67;:::i;:::-;6170:74;;6253:93;6342:3;6253:93;:::i;:::-;6371:2;6366:3;6362:12;6355:19;;6014:366;;;:::o;6386:419::-;6552:4;6590:2;6579:9;6575:18;6567:26;;6639:9;6633:4;6629:20;6625:1;6614:9;6610:17;6603:47;6667:131;6793:4;6667:131;:::i;:::-;6659:139;;6386:419;;;:::o;6811:180::-;6859:77;6856:1;6849:88;6956:4;6953:1;6946:15;6980:4;6977:1;6970:15;6997:305;7037:3;7056:20;7074:1;7056:20;:::i;:::-;7051:25;;7090:20;7108:1;7090:20;:::i;:::-;7085:25;;7244:1;7176:66;7172:74;7169:1;7166:81;7163:107;;;7250:18;;:::i;:::-;7163:107;7294:1;7291;7287:9;7280:16;;6997:305;;;;:::o;7308:180::-;7356:77;7353:1;7346:88;7453:4;7450:1;7443:15;7477:4;7474:1;7467:15;7494:185;7534:1;7551:20;7569:1;7551:20;:::i;:::-;7546:25;;7585:20;7603:1;7585:20;:::i;:::-;7580:25;;7624:1;7614:35;;7629:18;;:::i;:::-;7614:35;7671:1;7668;7664:9;7659:14;;7494:185;;;;:::o;7685:191::-;7725:4;7745:20;7763:1;7745:20;:::i;:::-;7740:25;;7779:20;7797:1;7779:20;:::i;:::-;7774:25;;7818:1;7815;7812:8;7809:34;;;7823:18;;:::i;:::-;7809:34;7868:1;7865;7861:9;7853:17;;7685:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "612600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DCF_ETH(uint256)": "infinite",
								"ETH_DCF(uint256)": "infinite",
								"market(address,uint256)": "infinite",
								"setRouter(address,bool)": "27227",
								"subscribe(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 1999,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 181,
									"end": 1999,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 181,
									"end": 1999,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 259,
									"end": 301,
									"name": "PUSH",
									"source": 2,
									"value": "D14FF067355CE838A6E110BDFB672DBEC83CA23C"
								},
								{
									"begin": 236,
									"end": 302,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 236,
									"end": 302,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 236,
									"end": 302,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 236,
									"end": 302,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 236,
									"end": 302,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 236,
									"end": 302,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 236,
									"end": 302,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 236,
									"end": 302,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 236,
									"end": 302,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 236,
									"end": 302,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 236,
									"end": 302,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 236,
									"end": 302,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 236,
									"end": 302,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 236,
									"end": 302,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 236,
									"end": 302,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 236,
									"end": 302,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 236,
									"end": 302,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 236,
									"end": 302,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 236,
									"end": 302,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 236,
									"end": 302,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 333,
									"end": 404,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 333,
									"end": 404,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 333,
									"end": 404,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 333,
									"end": 404,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 333,
									"end": 404,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 375,
									"end": 385,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 367,
									"end": 372,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 367,
									"end": 372,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 385,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 367,
									"end": 385,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 367,
									"end": 385,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 367,
									"end": 385,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 367,
									"end": 385,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 367,
									"end": 385,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 367,
									"end": 385,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 367,
									"end": 385,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 367,
									"end": 385,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 367,
									"end": 385,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 367,
									"end": 385,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 367,
									"end": 385,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 367,
									"end": 385,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 367,
									"end": 385,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 367,
									"end": 385,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 367,
									"end": 385,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 367,
									"end": 385,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 367,
									"end": 385,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 396,
									"end": 398,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 392,
									"end": 393,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 392,
									"end": 398,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 392,
									"end": 398,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 392,
									"end": 398,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 392,
									"end": 398,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 333,
									"end": 404,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 181,
									"end": 1999,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 181,
									"end": 1999,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 181,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1999,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1999,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1999,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1999,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1999,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1999,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1999,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c402009edce8c74facec744d2edd95b34cc7aa53101f9f7e26581e748850eb8064736f6c634300080e0033",
									".code": [
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH",
											"source": 2,
											"value": "3A23BF49"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH",
											"source": 2,
											"value": "41A7726A"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH",
											"source": 2,
											"value": "94756AA7"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH",
											"source": 2,
											"value": "97DEDB1D"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH",
											"source": 2,
											"value": "C3C64674"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1999,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1149,
											"end": 1610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1149,
											"end": 1610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1149,
											"end": 1610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 712,
											"end": 917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 712,
											"end": 917,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 712,
											"end": 917,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 712,
											"end": 917,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 712,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 712,
											"end": 917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 712,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 712,
											"end": 917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 925,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 925,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1618,
											"end": 1976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1618,
											"end": 1976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1618,
											"end": 1976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 604,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 604,
											"end": 704,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 604,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 604,
											"end": 704,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 604,
											"end": 704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 604,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 604,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 604,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 604,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1212,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1239,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1297,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1297,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1292,
											"end": 1297,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1297,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1292,
											"end": 1297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1292,
											"end": 1307,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1316,
											"end": 1320,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1292,
											"end": 1322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1292,
											"end": 1322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1292,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1382,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1367,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1356,
											"end": 1371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1383,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1356,
											"end": 1383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1383,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1356,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1333,
											"end": 1383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1415,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1415,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1415,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1410,
											"end": 1415,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1415,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1415,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1410,
											"end": 1415,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1427,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1410,
											"end": 1427,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1427,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1410,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1410,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1407,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1429,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1392,
											"end": 1481,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1471,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1471,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1471,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1454,
											"end": 1473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1481,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1392,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1518,
											"end": 1530,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1512,
											"end": 1517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1512,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1489,
											"end": 1531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1571,
											"end": 1583,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1555,
											"end": 1570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1584,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1555,
											"end": 1584,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1584,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1555,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1598,
											"end": 1604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 712,
											"end": 917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 810,
											"end": 814,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 783,
											"end": 814,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 783,
											"end": 814,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 783,
											"end": 794,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 783,
											"end": 806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 805,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 783,
											"end": 806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 783,
											"end": 806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 783,
											"end": 806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 806,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 783,
											"end": 806,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 783,
											"end": 806,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 783,
											"end": 806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 783,
											"end": 814,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 783,
											"end": 814,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 783,
											"end": 814,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 775,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 775,
											"end": 815,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 775,
											"end": 815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 815,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 775,
											"end": 815,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 775,
											"end": 815,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 775,
											"end": 815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 824,
											"end": 842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 845,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 845,
											"end": 863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 845,
											"end": 863,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 845,
											"end": 863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 824,
											"end": 863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 824,
											"end": 863,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 877,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 872,
											"end": 877,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 877,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 872,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 872,
											"end": 877,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 872,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 872,
											"end": 886,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 872,
											"end": 886,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 887,
											"end": 897,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 898,
											"end": 908,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 872,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 872,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 872,
											"end": 909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 872,
											"end": 909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 766,
											"end": 917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 712,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1041,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1041,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1041,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1021,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1032,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1041,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1041,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1041,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1002,
											"end": 1042,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1042,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1002,
											"end": 1042,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1002,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1080,
											"end": 1090,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1072,
											"end": 1091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1091,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1072,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1100,
											"end": 1115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 1116,
											"end": 1126,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1732,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1689,
											"end": 1732,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1761,
											"end": 1776,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1785,
											"end": 1789,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1761,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1761,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1761,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1837,
											"end": 1847,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1832,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1821,
											"end": 1836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1848,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1848,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1848,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1821,
											"end": 1848,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1848,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1821,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1848,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1848,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1884,
											"end": 1896,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1879,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1878,
											"end": 1879,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1878,
											"end": 1883,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1878,
											"end": 1897,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 1897,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1878,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1918,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1932,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1921,
											"end": 1936,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1970,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 604,
											"end": 704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 527,
											"end": 537,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 518,
											"end": 537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 518,
											"end": 537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 518,
											"end": 523,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 518,
											"end": 523,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 518,
											"end": 523,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 518,
											"end": 523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 518,
											"end": 523,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 518,
											"end": 523,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 518,
											"end": 523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 518,
											"end": 523,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 518,
											"end": 523,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 518,
											"end": 523,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 518,
											"end": 537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 518,
											"end": 537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 518,
											"end": 537,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 510,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 510,
											"end": 574,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 510,
											"end": 574,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 574,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 510,
											"end": 574,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 510,
											"end": 574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 510,
											"end": 574,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 510,
											"end": 574,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 510,
											"end": 574,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 510,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 510,
											"end": 574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 510,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 510,
											"end": 574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 510,
											"end": 574,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 510,
											"end": 574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 510,
											"end": 574,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 574,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 510,
											"end": 574,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 510,
											"end": 574,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 510,
											"end": 574,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 510,
											"end": 574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 510,
											"end": 574,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 510,
											"end": 574,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 510,
											"end": 574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 698,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 689,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 673,
											"end": 690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 673,
											"end": 698,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 604,
											"end": 704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2219,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2311,
											"end": 2316,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2293,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2282,
											"end": 2317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2282,
											"end": 2317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2323,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2323,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2323,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2467,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2329,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2410,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2400,
											"end": 2443,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2532,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2571,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2572,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2616,
											"end": 2621,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2581,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2622,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2581,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2755,
											"end": 2764,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2765,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2770,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2735,
											"end": 2854,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2735,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2735,
											"end": 2854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2773,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2773,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2852,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2773,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2735,
											"end": 2854,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2735,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2893,
											"end": 2894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2971,
											"end": 2978,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 2968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 2960,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 2969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2918,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2918,
											"end": 2979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2918,
											"end": 2979,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2918,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2979,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2864,
											"end": 2989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3028,
											"end": 3030,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3099,
											"end": 3106,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3090,
											"end": 3096,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3097,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3054,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2999,
											"end": 3117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 3124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3171,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3213,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3182,
											"end": 3214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3182,
											"end": 3214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3342,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3226,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3296,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3317,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3296,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3294,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3318,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3276,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3276,
											"end": 3336,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3333,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3330,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3276,
											"end": 3336,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3276,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3342,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3391,
											"end": 3396,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3436,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3469,
											"end": 3474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3445,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3475,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3445,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3552,
											"end": 3558,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3560,
											"end": 3566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3611,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3607,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3612,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3615,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3736,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3805,
											"end": 3812,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3802,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3785,
											"end": 3794,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3803,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3760,
											"end": 3813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3813,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3706,
											"end": 3823,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3862,
											"end": 3864,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3930,
											"end": 3937,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 3927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3906,
											"end": 3928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3888,
											"end": 3938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3938,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3888,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 3938,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 3938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3948,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4079,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3961,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4048,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4066,
											"end": 4071,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4048,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4048,
											"end": 4072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4048,
											"end": 4072,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4048,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4046,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4036,
											"end": 4073,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4178,
											"end": 4182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4205,
											"end": 4214,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4295,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4299,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4279,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4229,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4085,
											"end": 4307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4370,
											"end": 4375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4407,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4408,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4386,
											"end": 4408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4386,
											"end": 4408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4444,
											"end": 4449,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4417,
											"end": 4450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4450,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4417,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4532,
											"end": 4538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4581,
											"end": 4583,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4569,
											"end": 4578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4560,
											"end": 4567,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4556,
											"end": 4579,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4552,
											"end": 4584,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4668,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4549,
											"end": 4668,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4587,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4587,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4587,
											"end": 4666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4587,
											"end": 4666,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 4587,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4668,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4549,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4732,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4788,
											"end": 4795,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4779,
											"end": 4785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4768,
											"end": 4777,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4764,
											"end": 4786,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4732,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4732,
											"end": 4796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4732,
											"end": 4796,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4732,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4796,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4678,
											"end": 4806,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4940,
											"end": 4944,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 4980,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4967,
											"end": 4976,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4963,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4955,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4955,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5059,
											"end": 5060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5057,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5061,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4991,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5062,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4991,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 5140,
											"end": 5142,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5125,
											"end": 5143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5116,
											"end": 5122,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5072,
											"end": 5144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 5151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5211,
											"end": 5216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5236,
											"end": 5249,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5249,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5249,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5258,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5282,
											"end": 5287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5258,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 5258,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5258,
											"end": 5288,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 5258,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5416,
											"end": 5418,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5395,
											"end": 5402,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5391,
											"end": 5414,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5387,
											"end": 5419,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5384,
											"end": 5503,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5384,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5384,
											"end": 5503,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5422,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 5422,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 5422,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5422,
											"end": 5501,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 5422,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5384,
											"end": 5503,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5384,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5542,
											"end": 5543,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5620,
											"end": 5627,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5611,
											"end": 5617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5600,
											"end": 5609,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5567,
											"end": 5628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5557,
											"end": 5628,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5557,
											"end": 5628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5513,
											"end": 5638,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 5820,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5651,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5775,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5764,
											"end": 5767,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5757,
											"end": 5776,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5809,
											"end": 5813,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5804,
											"end": 5807,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5814,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5785,
											"end": 5814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5785,
											"end": 5814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 5820,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 5820,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 5820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 5820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 5820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5826,
											"end": 6008,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5826,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5966,
											"end": 6000,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5962,
											"end": 5963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5954,
											"end": 5960,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 6001,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5826,
											"end": 6008,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5826,
											"end": 6008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6014,
											"end": 6380,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6014,
											"end": 6380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6241,
											"end": 6243,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6236,
											"end": 6239,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6177,
											"end": 6244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 6177,
											"end": 6244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6177,
											"end": 6244,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6177,
											"end": 6244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6170,
											"end": 6244,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6170,
											"end": 6244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 6342,
											"end": 6345,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6253,
											"end": 6346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6346,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 6253,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6371,
											"end": 6373,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6366,
											"end": 6369,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6362,
											"end": 6374,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6355,
											"end": 6374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6355,
											"end": 6374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6014,
											"end": 6380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6014,
											"end": 6380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6014,
											"end": 6380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6014,
											"end": 6380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6805,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 6386,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6590,
											"end": 6592,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6588,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6575,
											"end": 6593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6567,
											"end": 6593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6567,
											"end": 6593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6639,
											"end": 6648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6633,
											"end": 6637,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6629,
											"end": 6649,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6625,
											"end": 6626,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6614,
											"end": 6623,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6610,
											"end": 6627,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6650,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6793,
											"end": 6797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6667,
											"end": 6798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6798,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6667,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6659,
											"end": 6798,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6659,
											"end": 6798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6805,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6991,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6811,
											"end": 6991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6859,
											"end": 6936,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6856,
											"end": 6857,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6849,
											"end": 6937,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6956,
											"end": 6960,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6953,
											"end": 6954,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6946,
											"end": 6961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6980,
											"end": 6984,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6977,
											"end": 6978,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 6985,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7302,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 6997,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7037,
											"end": 7040,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 7074,
											"end": 7075,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 7056,
											"end": 7076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 7056,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7051,
											"end": 7076,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7051,
											"end": 7076,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7090,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 7108,
											"end": 7109,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7090,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 7090,
											"end": 7110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7090,
											"end": 7110,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 7090,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7110,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7244,
											"end": 7245,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7176,
											"end": 7242,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7172,
											"end": 7246,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7166,
											"end": 7247,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7270,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 7163,
											"end": 7270,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7250,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 7250,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 7250,
											"end": 7268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7250,
											"end": 7268,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 7250,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7163,
											"end": 7270,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 7163,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7295,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7291,
											"end": 7292,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7287,
											"end": 7296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7280,
											"end": 7296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7280,
											"end": 7296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7302,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7302,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6997,
											"end": 7302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7308,
											"end": 7488,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 7308,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7356,
											"end": 7433,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7353,
											"end": 7354,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7346,
											"end": 7434,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7453,
											"end": 7457,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 7450,
											"end": 7451,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7443,
											"end": 7458,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7477,
											"end": 7481,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7474,
											"end": 7475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7467,
											"end": 7482,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 7679,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 7494,
											"end": 7679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7534,
											"end": 7535,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7551,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 7569,
											"end": 7570,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7551,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 7551,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7551,
											"end": 7571,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 7551,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7546,
											"end": 7571,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7546,
											"end": 7571,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7585,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 7603,
											"end": 7604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7585,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 7585,
											"end": 7605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7585,
											"end": 7605,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 7585,
											"end": 7605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7614,
											"end": 7649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 7614,
											"end": 7649,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 7629,
											"end": 7647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 7629,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7614,
											"end": 7649,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 7614,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7671,
											"end": 7672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7668,
											"end": 7669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7664,
											"end": 7673,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7673,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7673,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 7679,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 7679,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 7679,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 7679,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7494,
											"end": 7679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7685,
											"end": 7876,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 7685,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7725,
											"end": 7729,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7763,
											"end": 7764,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 7745,
											"end": 7765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7740,
											"end": 7765,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7740,
											"end": 7765,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7779,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7797,
											"end": 7798,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7779,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 7779,
											"end": 7799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7779,
											"end": 7799,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 7779,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7774,
											"end": 7799,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7774,
											"end": 7799,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7818,
											"end": 7819,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7816,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7812,
											"end": 7820,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7809,
											"end": 7843,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7809,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 7809,
											"end": 7843,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 7823,
											"end": 7841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7809,
											"end": 7843,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 7809,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7868,
											"end": 7869,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7865,
											"end": 7866,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7861,
											"end": 7870,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7853,
											"end": 7870,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7853,
											"end": 7870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7685,
											"end": 7876,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7685,
											"end": 7876,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7685,
											"end": 7876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7685,
											"end": 7876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7685,
											"end": 7876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DCF_ETH(uint256)": "3a23bf49",
							"ETH_DCF(uint256)": "97dedb1d",
							"market(address,uint256)": "94756aa7",
							"setRouter(address,bool)": "c3c64674",
							"subscribe(address)": "41a7726a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_k\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"DCF_ETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"ETH_DCF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"market\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"power\",\"type\":\"bool\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"subscribe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/treasury.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/treasury.sol\":{\"keccak256\":\"0x9aeceb08123d8c0c18a6b07efb4264505131117d935ac372dddc1fb8b6a5dd51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f69a134bfb834969296cdf9ef8dd6d12b4c81950702e89c3bca3e61151af4af\",\"dweb:/ipfs/QmXRf4GL9vwMxL2Gcq2bpi4RyHZkhPc7bBnQBi6xNr3evK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 402,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "dcoff",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 404,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "K",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 421,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 425,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "RouterAdmin",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"Dcoffer/treasury.sol": {
				"ast": {
					"absolutePath": "Dcoffer/treasury.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						],
						"treasury": [
							623
						]
					},
					"id": 624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 78,
							"src": "60:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 390,
							"src": "118:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 623,
							"linearizedBaseContracts": [
								623
							],
							"name": "treasury",
							"nameLocation": "190:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 396,
									"libraryName": {
										"id": 394,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "210:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "204:24:2",
									"typeName": {
										"id": 395,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "223:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 402,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "243:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "236:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 398,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 397,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "236:6:2"
										},
										"referencedDeclaration": 77,
										"src": "236:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307864313466663036373335354365383338413665313130624446623637324462456338336341323343",
												"id": 400,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "259:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 399,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "252:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 401,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "252:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 404,
									"mutability": "mutable",
									"name": "K",
									"nameLocation": "325:1:2",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "309:17:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 403,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "309:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "360:44:2",
										"statements": [
											{
												"expression": {
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 409,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "367:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 410,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "375:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "375:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "367:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "367:18:2"
											},
											{
												"expression": {
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 414,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "392:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 415,
														"name": "_k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "396:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "392:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "392:6:2"
											}
										]
									},
									"id": 419,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "_k",
												"nameLocation": "350:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "345:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "345:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:9:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "360:0:2"
									},
									"scope": 623,
									"src": "333:71:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 421,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "418:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "410:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 420,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "410:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "RouterAdmin",
									"nameLocation": "460:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "428:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 424,
										"keyType": {
											"id": 422,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "436:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "428:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 423,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "447:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "499:93:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 428,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "518:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 429,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "527:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "527:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "518:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "539:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "510:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "510:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "510:64:2"
											},
											{
												"id": 435,
												"nodeType": "PlaceholderStatement",
												"src": "585:1:2"
											}
										]
									},
									"id": 437,
									"name": "onlyOwner",
									"nameLocation": "487:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:2"
									},
									"src": "478:114:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "666:38:2",
										"statements": [
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 446,
															"name": "RouterAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "673:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 448,
														"indexExpression": {
															"id": 447,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "685:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "673:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 449,
														"name": "power",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "693:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "673:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "673:25:2"
											}
										]
									},
									"functionSelector": "c3c64674",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 444,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 443,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "657:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "657:9:2"
										}
									],
									"name": "setRouter",
									"nameLocation": "613:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "631:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "623:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "power",
												"nameLocation": "642:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "637:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "637:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:26:2"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "666:0:2"
									},
									"scope": 623,
									"src": "604:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "766:151:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 459,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "783:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 462,
																"indexExpression": {
																	"expression": {
																		"id": 460,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "795:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "795:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "783:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "810:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "783:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "775:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "775:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "775:40:2"
											},
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "832:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "824:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 467,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "824:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 470,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "853:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "853:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 469,
														"name": "ETH_DCF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "845:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "845:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "824:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "subscriber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "887:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "898:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 474,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "872:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "872:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "872:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "872:37:2"
											}
										]
									},
									"functionSelector": "41a7726a",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "subscribe",
									"nameLocation": "721:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "subscriber",
												"nameLocation": "739:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "731:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:20:2"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "766:0:2"
									},
									"scope": 623,
									"src": "712:205:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "993:148:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 490,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "1010:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 493,
																"indexExpression": {
																	"expression": {
																		"id": 491,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1022:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1022:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1010:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1037:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1010:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1002:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1002:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "1002:40:2"
											},
											{
												"assignments": [
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "eth_amount",
														"nameLocation": "1059:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 510,
														"src": "1051:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 498,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1051:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"arguments": [
														{
															"id": 501,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "1080:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 500,
														"name": "DCF_ETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "1072:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1072:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1051:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "1116:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 504,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "1100:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1100:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1100:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "1100:27:2"
											}
										]
									},
									"functionSelector": "94756aa7",
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "934:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "957:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "941:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "973:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "965:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:44:2"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "993:0:2"
									},
									"scope": 623,
									"src": "925:216:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "1213:397:2",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "1228:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "1220:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1220:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 522,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1250:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_treasury_$623",
																	"typeString": "contract treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_treasury_$623",
																	"typeString": "contract treasury"
																}
															],
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1242:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 520,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1242:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1242:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1242:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1220:43:2"
											},
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "1278:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "1270:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1270:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 532,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1316:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$623",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$623",
																		"typeString": "contract treasury"
																	}
																],
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1308:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 530,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1308:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1308:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 528,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1292:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1292:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1292:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1270:52:2"
											},
											{
												"assignments": [
													537
												],
												"declarations": [
													{
														"constant": false,
														"id": 537,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "1341:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "1333:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 536,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1333:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 542,
												"initialValue": {
													"arguments": [
														{
															"id": 540,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "1372:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 538,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "1356:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "1356:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1356:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1333:50:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 543,
														"name": "Variable_dcf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "1395:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 544,
																"name": "dcoff",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "1410:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "1410:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1410:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1395:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 555,
												"nodeType": "IfStatement",
												"src": "1392:89:2",
												"trueBody": {
													"id": 554,
													"nodeType": "Block",
													"src": "1430:51:2",
													"statements": [
														{
															"expression": {
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 548,
																	"name": "Variable_dcf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "1439:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 549,
																			"name": "dcoff",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "1454:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 26,
																		"src": "1454:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1454:19:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1439:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 553,
															"nodeType": "ExpressionStatement",
															"src": "1439:34:2"
														}
													]
												}
											},
											{
												"assignments": [
													557
												],
												"declarations": [
													{
														"constant": false,
														"id": 557,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "1497:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "1489:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 556,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1489:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 562,
												"initialValue": {
													"arguments": [
														{
															"id": 560,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "1518:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 558,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "1512:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1512:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1512:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1489:42:2"
											},
											{
												"assignments": [
													564
												],
												"declarations": [
													{
														"constant": false,
														"id": 564,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "1546:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "1538:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1538:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 569,
												"initialValue": {
													"arguments": [
														{
															"id": 567,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "1571:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 565,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "1555:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1555:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1555:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1538:46:2"
											},
											{
												"expression": {
													"id": 570,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 564,
													"src": "1598:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 517,
												"id": 571,
												"nodeType": "Return",
												"src": "1591:13:2"
											}
										]
									},
									"functionSelector": "3a23bf49",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DCF_ETH",
									"nameLocation": "1158:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "1174:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "1166:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:20:2"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "1205:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:9:2"
									},
									"scope": 623,
									"src": "1149:461:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "1682:294:2",
										"statements": [
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "1697:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "1689:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1689:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 584,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1719:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_treasury_$623",
																	"typeString": "contract treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_treasury_$623",
																	"typeString": "contract treasury"
																}
															],
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1711:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 582,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1711:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1711:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1711:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1689:43:2"
											},
											{
												"assignments": [
													589
												],
												"declarations": [
													{
														"constant": false,
														"id": 589,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "1747:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "1739:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 588,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1739:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 594,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1785:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$623",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$623",
																		"typeString": "contract treasury"
																	}
																],
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1777:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 592,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1777:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1777:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 590,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1761:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1761:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1761:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1739:52:2"
											},
											{
												"assignments": [
													599
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "1806:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "1798:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 598,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1798:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 604,
												"initialValue": {
													"arguments": [
														{
															"id": 602,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "1837:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 600,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "1821:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "1821:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1821:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1798:50:2"
											},
											{
												"assignments": [
													606
												],
												"declarations": [
													{
														"constant": false,
														"id": 606,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "1863:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "1855:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 605,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1855:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"arguments": [
														{
															"id": 609,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "1884:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 607,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "1878:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1878:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1878:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1855:42:2"
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "1912:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "1904:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1904:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 616,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "1937:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 614,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "1921:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1921:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1921:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1904:46:2"
											},
											{
												"expression": {
													"id": 619,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 613,
													"src": "1964:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 579,
												"id": 620,
												"nodeType": "Return",
												"src": "1957:13:2"
											}
										]
									},
									"functionSelector": "97dedb1d",
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ETH_DCF",
									"nameLocation": "1627:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "1643:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1635:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:20:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1674:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:9:2"
									},
									"scope": 623,
									"src": "1618:358:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 624,
							"src": "181:1818:2",
							"usedErrors": []
						}
					],
					"src": "33:1966:2"
				},
				"id": 2
			}
		}
	}
}