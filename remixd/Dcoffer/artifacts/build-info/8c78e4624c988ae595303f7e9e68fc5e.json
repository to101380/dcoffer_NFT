{
	"id": "8c78e4624c988ae595303f7e9e68fc5e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dcoffer/Router.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\n\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\n\r\ninterface _treasury{\r\n  function subscribe(address subscriber)external payable;   \r\n  function market(address payable seller, uint256 dcf_amount)external; \r\n  function ETH_DCF(uint256 eth_amount)external view returns(uint256);\r\n  function DCF_ETH(uint256 dcf_amount)external view returns(uint256);\r\n}\r\n\r\n\r\ncontract Router {\r\n  using SafeMath for uint;  \r\n\r\n  _treasury treasuryCtrl = _treasury(0x776D9270c11E89F212980EAF8971925E620790BB);\r\n \r\n\r\n \r\n  function Subscribe()external payable{\r\n      treasuryCtrl.subscribe{value: msg.value}(msg.sender);\r\n  }  \r\n\r\n  function Market(uint256 dcf_amount)external{\r\n      treasuryCtrl.market(payable(msg.sender),dcf_amount);\r\n  }\r\n\r\n\r\n   function ETH_DCF(uint256 eth_amount)external view returns(uint256){\r\n      treasuryCtrl.ETH_DCF(eth_amount);\r\n  }\r\n\r\n\r\n\r\n \r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n \r\n\r\n \r\n   \r\n  \r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXP PUSH3 0xF3573C 0xCE KECCAK256 CREATE2 0xEE BALANCE SWAP16 PUSH9 0x43457384F89FC6651C 0xD7 PUSH1 0x81 0x4A PUSH11 0xC6104B4C0E64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXP PUSH3 0xF3573C 0xCE KECCAK256 CREATE2 0xEE BALANCE SWAP16 PUSH9 0x43457384F89FC6651C 0xD7 PUSH1 0x81 0x4A PUSH11 0xC6104B4C0E64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/Router.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/Router.sol": {
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "ETH_DCF",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "Market",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Subscribe",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dcoffer/Router.sol\":429:971  contract Router {... */\n  mstore(0x40, 0x80)\n    /* \"Dcoffer/Router.sol\":517:559  0x776D9270c11E89F212980EAF8971925E620790BB */\n  0x776d9270c11e89f212980eaf8971925e620790bb\n    /* \"Dcoffer/Router.sol\":482:560  _treasury treasuryCtrl = _treasury(0x776D9270c11E89F212980EAF8971925E620790BB) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/Router.sol\":429:971  contract Router {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dcoffer/Router.sol\":429:971  contract Router {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x97dedb1d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xadfb1394\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf358a6f3\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/Router.sol\":802:915  function ETH_DCF(uint256 eth_amount)external view returns(uint256){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/Router.sol\":573:676  function Subscribe()external payable{... */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Dcoffer/Router.sol\":684:793  function Market(uint256 dcf_amount)external{... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_16:\n      tag_17\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Dcoffer/Router.sol\":802:915  function ETH_DCF(uint256 eth_amount)external view returns(uint256){... */\n    tag_9:\n        /* \"Dcoffer/Router.sol\":860:867  uint256 */\n      0x00\n        /* \"Dcoffer/Router.sol\":877:889  treasuryCtrl */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/Router.sol\":877:897  treasuryCtrl.ETH_DCF */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x97dedb1d\n        /* \"Dcoffer/Router.sol\":898:908  eth_amount */\n      dup4\n        /* \"Dcoffer/Router.sol\":877:909  treasuryCtrl.ETH_DCF(eth_amount) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_19:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      pop\n        /* \"Dcoffer/Router.sol\":802:915  function ETH_DCF(uint256 eth_amount)external view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/Router.sol\":573:676  function Subscribe()external payable{... */\n    tag_13:\n        /* \"Dcoffer/Router.sol\":618:630  treasuryCtrl */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/Router.sol\":618:640  treasuryCtrl.subscribe */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x41a7726a\n        /* \"Dcoffer/Router.sol\":648:657  msg.value */\n      callvalue\n        /* \"Dcoffer/Router.sol\":659:669  msg.sender */\n      caller\n        /* \"Dcoffer/Router.sol\":618:670  treasuryCtrl.subscribe{value: msg.value}(msg.sender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/Router.sol\":573:676  function Subscribe()external payable{... */\n      jump\t// out\n        /* \"Dcoffer/Router.sol\":684:793  function Market(uint256 dcf_amount)external{... */\n    tag_17:\n        /* \"Dcoffer/Router.sol\":736:748  treasuryCtrl */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/Router.sol\":736:755  treasuryCtrl.market */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x94756aa7\n        /* \"Dcoffer/Router.sol\":764:774  msg.sender */\n      caller\n        /* \"Dcoffer/Router.sol\":776:786  dcf_amount */\n      dup4\n        /* \"Dcoffer/Router.sol\":736:787  treasuryCtrl.market(payable(msg.sender),dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/Router.sol\":684:793  function Market(uint256 dcf_amount)external{... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_37:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_39:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_40:\n        /* \"#utility.yul\":490:514   */\n      tag_55\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_39\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_56:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_41:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_58\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_40\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_8:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_61\n      tag_37\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":766:885   */\n    tag_60:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_62\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_41\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_42:\n        /* \"#utility.yul\":1112:1136   */\n      tag_64\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_39\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_11:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_66\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_42\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1520   */\n    tag_43:\n        /* \"#utility.yul\":1434:1439   */\n      0x00\n        /* \"#utility.yul\":1465:1471   */\n      dup2\n        /* \"#utility.yul\":1459:1472   */\n      mload\n        /* \"#utility.yul\":1450:1472   */\n      swap1\n      pop\n        /* \"#utility.yul\":1481:1514   */\n      tag_68\n        /* \"#utility.yul\":1508:1513   */\n      dup2\n        /* \"#utility.yul\":1481:1514   */\n      tag_40\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1377:1520   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1526:1877   */\n    tag_23:\n        /* \"#utility.yul\":1596:1602   */\n      0x00\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1633:1642   */\n      dup3\n        /* \"#utility.yul\":1624:1631   */\n      dup5\n        /* \"#utility.yul\":1620:1643   */\n      sub\n        /* \"#utility.yul\":1616:1648   */\n      slt\n        /* \"#utility.yul\":1613:1732   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":1651:1730   */\n      tag_71\n      tag_37\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1613:1732   */\n    tag_70:\n        /* \"#utility.yul\":1771:1772   */\n      0x00\n        /* \"#utility.yul\":1796:1860   */\n      tag_72\n        /* \"#utility.yul\":1852:1859   */\n      dup5\n        /* \"#utility.yul\":1843:1849   */\n      dup3\n        /* \"#utility.yul\":1832:1841   */\n      dup6\n        /* \"#utility.yul\":1828:1850   */\n      add\n        /* \"#utility.yul\":1796:1860   */\n      tag_43\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1786:1860   */\n      swap2\n      pop\n        /* \"#utility.yul\":1742:1870   */\n      pop\n        /* \"#utility.yul\":1526:1877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1883:2009   */\n    tag_44:\n        /* \"#utility.yul\":1920:1927   */\n      0x00\n        /* \"#utility.yul\":1960:2002   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1953:1958   */\n      dup3\n        /* \"#utility.yul\":1949:2003   */\n      and\n        /* \"#utility.yul\":1938:2003   */\n      swap1\n      pop\n        /* \"#utility.yul\":1883:2009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2015:2111   */\n    tag_45:\n        /* \"#utility.yul\":2052:2059   */\n      0x00\n        /* \"#utility.yul\":2081:2105   */\n      tag_75\n        /* \"#utility.yul\":2099:2104   */\n      dup3\n        /* \"#utility.yul\":2081:2105   */\n      tag_44\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2070:2105   */\n      swap1\n      pop\n        /* \"#utility.yul\":2015:2111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2117:2235   */\n    tag_46:\n        /* \"#utility.yul\":2204:2228   */\n      tag_77\n        /* \"#utility.yul\":2222:2227   */\n      dup2\n        /* \"#utility.yul\":2204:2228   */\n      tag_45\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2199:2202   */\n      dup3\n        /* \"#utility.yul\":2192:2229   */\n      mstore\n        /* \"#utility.yul\":2117:2235   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2241:2463   */\n    tag_26:\n        /* \"#utility.yul\":2334:2338   */\n      0x00\n        /* \"#utility.yul\":2372:2374   */\n      0x20\n        /* \"#utility.yul\":2361:2370   */\n      dup3\n        /* \"#utility.yul\":2357:2375   */\n      add\n        /* \"#utility.yul\":2349:2375   */\n      swap1\n      pop\n        /* \"#utility.yul\":2385:2456   */\n      tag_79\n        /* \"#utility.yul\":2453:2454   */\n      0x00\n        /* \"#utility.yul\":2442:2451   */\n      dup4\n        /* \"#utility.yul\":2438:2455   */\n      add\n        /* \"#utility.yul\":2429:2435   */\n      dup5\n        /* \"#utility.yul\":2385:2456   */\n      tag_46\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2241:2463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2469:2573   */\n    tag_47:\n        /* \"#utility.yul\":2514:2521   */\n      0x00\n        /* \"#utility.yul\":2543:2567   */\n      tag_81\n        /* \"#utility.yul\":2561:2566   */\n      dup3\n        /* \"#utility.yul\":2543:2567   */\n      tag_44\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2532:2567   */\n      swap1\n      pop\n        /* \"#utility.yul\":2469:2573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2579:2721   */\n    tag_48:\n        /* \"#utility.yul\":2682:2714   */\n      tag_83\n        /* \"#utility.yul\":2708:2713   */\n      dup2\n        /* \"#utility.yul\":2682:2714   */\n      tag_47\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2677:2680   */\n      dup3\n        /* \"#utility.yul\":2670:2715   */\n      mstore\n        /* \"#utility.yul\":2579:2721   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2727:3091   */\n    tag_32:\n        /* \"#utility.yul\":2864:2868   */\n      0x00\n        /* \"#utility.yul\":2902:2904   */\n      0x40\n        /* \"#utility.yul\":2891:2900   */\n      dup3\n        /* \"#utility.yul\":2887:2905   */\n      add\n        /* \"#utility.yul\":2879:2905   */\n      swap1\n      pop\n        /* \"#utility.yul\":2915:3002   */\n      tag_85\n        /* \"#utility.yul\":2999:3000   */\n      0x00\n        /* \"#utility.yul\":2988:2997   */\n      dup4\n        /* \"#utility.yul\":2984:3001   */\n      add\n        /* \"#utility.yul\":2975:2981   */\n      dup6\n        /* \"#utility.yul\":2915:3002   */\n      tag_48\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":3012:3084   */\n      tag_86\n        /* \"#utility.yul\":3080:3082   */\n      0x20\n        /* \"#utility.yul\":3069:3078   */\n      dup4\n        /* \"#utility.yul\":3065:3083   */\n      add\n        /* \"#utility.yul\":3056:3062   */\n      dup5\n        /* \"#utility.yul\":3012:3084   */\n      tag_42\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2727:3091   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205ffcfb284e8d768a37f817ebbba6c1d7cff21bb5ed437f5c92bffe221050306764736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273776d9270c11e89f212980eaf8971925e620790bb6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b5061041a806100746000396000f3fe6080604052600436106100345760003560e01c806397dedb1d14610039578063adfb139414610076578063f358a6f314610080575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b91906102a5565b6100a9565b60405161006d91906102e1565b60405180910390f35b61007e61014c565b005b34801561008c57600080fd5b506100a760048036038101906100a291906102a5565b6101da565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166397dedb1d836040518263ffffffff1660e01b815260040161010591906102e1565b602060405180830381865afa158015610122573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101469190610311565b50919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341a7726a34336040518363ffffffff1660e01b81526004016101a6919061037f565b6000604051808303818588803b1580156101bf57600080fd5b505af11580156101d3573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394756aa733836040518363ffffffff1660e01b81526004016102359291906103bb565b600060405180830381600087803b15801561024f57600080fd5b505af1158015610263573d6000803e3d6000fd5b5050505050565b600080fd5b6000819050919050565b6102828161026f565b811461028d57600080fd5b50565b60008135905061029f81610279565b92915050565b6000602082840312156102bb576102ba61026a565b5b60006102c984828501610290565b91505092915050565b6102db8161026f565b82525050565b60006020820190506102f660008301846102d2565b92915050565b60008151905061030b81610279565b92915050565b6000602082840312156103275761032661026a565b5b6000610335848285016102fc565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103698261033e565b9050919050565b6103798161035e565b82525050565b60006020820190506103946000830184610370565b92915050565b60006103a58261033e565b9050919050565b6103b58161039a565b82525050565b60006040820190506103d060008301856103ac565b6103dd60208301846102d2565b939250505056fea26469706673582212205ffcfb284e8d768a37f817ebbba6c1d7cff21bb5ed437f5c92bffe221050306764736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x776D9270C11E89F212980EAF8971925E620790BB PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A DUP1 PUSH2 0x74 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xADFB1394 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF358A6F3 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x14C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x97DEDB1D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x122 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x311 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41A7726A CALLVALUE CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94756AA7 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235 SWAP3 SWAP2 SWAP1 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x263 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x282 DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29F DUP2 PUSH2 0x279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BB JUMPI PUSH2 0x2BA PUSH2 0x26A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C9 DUP5 DUP3 DUP6 ADD PUSH2 0x290 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DB DUP2 PUSH2 0x26F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x30B DUP2 PUSH2 0x279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x327 JUMPI PUSH2 0x326 PUSH2 0x26A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x335 DUP5 DUP3 DUP6 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x369 DUP3 PUSH2 0x33E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x379 DUP2 PUSH2 0x35E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x394 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x370 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A5 DUP3 PUSH2 0x33E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B5 DUP2 PUSH2 0x39A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xFC 0xFB 0x28 0x4E DUP14 PUSH23 0x8A37F817EBBBA6C1D7CFF21BB5ED437F5C92BFFE221050 ADDRESS PUSH8 0x64736F6C63430008 0xE STOP CALLER ",
							"sourceMap": "429:542:1:-:0;;;517:42;482:78;;;;;;;;;;;;;;;;;;;;429:542;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ETH_DCF_395": {
									"entryPoint": 169,
									"id": 395,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@Market_381": {
									"entryPoint": 474,
									"id": 381,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@Subscribe_364": {
									"entryPoint": 332,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3094:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:2"
															},
															"nodeType": "YulIf",
															"src": "766:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:2",
														"type": ""
													}
												],
												"src": "690:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:2",
														"type": ""
													}
												],
												"src": "1025:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:2",
														"type": ""
													}
												],
												"src": "1149:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1440:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1450:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1465:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1459:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1459:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1450:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1508:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1481:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1481:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1481:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1418:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1426:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1434:5:2",
														"type": ""
													}
												],
												"src": "1377:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1603:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1649:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1651:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1651:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1651:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1624:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1633:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1620:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1620:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1616:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1616:32:2"
															},
															"nodeType": "YulIf",
															"src": "1613:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1742:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1757:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1771:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1761:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1786:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1832:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1843:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1828:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1828:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1852:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1796:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1786:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1573:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1584:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1596:6:2",
														"type": ""
													}
												],
												"src": "1526:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1928:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1938:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1953:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1960:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1949:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1938:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1910:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1920:7:2",
														"type": ""
													}
												],
												"src": "1883:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2060:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2070:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2099:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2081:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2081:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2070:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2042:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2052:7:2",
														"type": ""
													}
												],
												"src": "2015:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2182:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2199:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2222:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2204:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2204:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2192:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2192:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2170:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2177:3:2",
														"type": ""
													}
												],
												"src": "2117:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2339:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2349:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2361:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2372:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2357:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2349:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2429:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2442:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2453:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2438:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2438:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2385:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2385:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2311:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2323:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2334:4:2",
														"type": ""
													}
												],
												"src": "2241:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2522:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2532:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2561:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2543:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2532:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2504:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2514:7:2",
														"type": ""
													}
												],
												"src": "2469:104:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2660:61:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2677:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2708:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "2682:25:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2670:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2670:45:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2670:45:2"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2648:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2655:3:2",
														"type": ""
													}
												],
												"src": "2579:142:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2869:222:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2879:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2891:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2902:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2887:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2887:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2879:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2975:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2988:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2999:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2984:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2984:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2915:59:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2915:87:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2915:87:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3056:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3069:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3080:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3065:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3065:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3012:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3012:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3012:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2833:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2845:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2853:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2864:4:2",
														"type": ""
													}
												],
												"src": "2727:364:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c806397dedb1d14610039578063adfb139414610076578063f358a6f314610080575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b91906102a5565b6100a9565b60405161006d91906102e1565b60405180910390f35b61007e61014c565b005b34801561008c57600080fd5b506100a760048036038101906100a291906102a5565b6101da565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166397dedb1d836040518263ffffffff1660e01b815260040161010591906102e1565b602060405180830381865afa158015610122573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101469190610311565b50919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341a7726a34336040518363ffffffff1660e01b81526004016101a6919061037f565b6000604051808303818588803b1580156101bf57600080fd5b505af11580156101d3573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394756aa733836040518363ffffffff1660e01b81526004016102359291906103bb565b600060405180830381600087803b15801561024f57600080fd5b505af1158015610263573d6000803e3d6000fd5b5050505050565b600080fd5b6000819050919050565b6102828161026f565b811461028d57600080fd5b50565b60008135905061029f81610279565b92915050565b6000602082840312156102bb576102ba61026a565b5b60006102c984828501610290565b91505092915050565b6102db8161026f565b82525050565b60006020820190506102f660008301846102d2565b92915050565b60008151905061030b81610279565b92915050565b6000602082840312156103275761032661026a565b5b6000610335848285016102fc565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103698261033e565b9050919050565b6103798161035e565b82525050565b60006020820190506103946000830184610370565b92915050565b60006103a58261033e565b9050919050565b6103b58161039a565b82525050565b60006040820190506103d060008301856103ac565b6103dd60208301846102d2565b939250505056fea26469706673582212205ffcfb284e8d768a37f817ebbba6c1d7cff21bb5ed437f5c92bffe221050306764736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xADFB1394 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF358A6F3 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x14C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x2A5 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x97DEDB1D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x122 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x311 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x41A7726A CALLVALUE CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x94756AA7 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235 SWAP3 SWAP2 SWAP1 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x263 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x282 DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29F DUP2 PUSH2 0x279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BB JUMPI PUSH2 0x2BA PUSH2 0x26A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C9 DUP5 DUP3 DUP6 ADD PUSH2 0x290 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DB DUP2 PUSH2 0x26F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x30B DUP2 PUSH2 0x279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x327 JUMPI PUSH2 0x326 PUSH2 0x26A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x335 DUP5 DUP3 DUP6 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x369 DUP3 PUSH2 0x33E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x379 DUP2 PUSH2 0x35E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x394 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x370 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A5 DUP3 PUSH2 0x33E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B5 DUP2 PUSH2 0x39A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x3DD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xFC 0xFB 0x28 0x4E DUP14 PUSH23 0x8A37F817EBBBA6C1D7CFF21BB5ED437F5C92BFFE221050 ADDRESS PUSH8 0x64736F6C63430008 0xE STOP CALLER ",
							"sourceMap": "429:542:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;573:103;;;:::i;:::-;;684:109;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;802:113;860:7;877:12;;;;;;;;;;;:20;;;898:10;877:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;802:113;;;:::o;573:103::-;618:12;;;;;;;;;;:22;;;648:9;659:10;618:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;573:103::o;684:109::-;736:12;;;;;;;;;;:19;;;764:10;776;736:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;684:109;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:143::-;1434:5;1465:6;1459:13;1450:22;;1481:33;1508:5;1481:33;:::i;:::-;1377:143;;;;:::o;1526:351::-;1596:6;1645:2;1633:9;1624:7;1620:23;1616:32;1613:119;;;1651:79;;:::i;:::-;1613:119;1771:1;1796:64;1852:7;1843:6;1832:9;1828:22;1796:64;:::i;:::-;1786:74;;1742:128;1526:351;;;;:::o;1883:126::-;1920:7;1960:42;1953:5;1949:54;1938:65;;1883:126;;;:::o;2015:96::-;2052:7;2081:24;2099:5;2081:24;:::i;:::-;2070:35;;2015:96;;;:::o;2117:118::-;2204:24;2222:5;2204:24;:::i;:::-;2199:3;2192:37;2117:118;;:::o;2241:222::-;2334:4;2372:2;2361:9;2357:18;2349:26;;2385:71;2453:1;2442:9;2438:17;2429:6;2385:71;:::i;:::-;2241:222;;;;:::o;2469:104::-;2514:7;2543:24;2561:5;2543:24;:::i;:::-;2532:35;;2469:104;;;:::o;2579:142::-;2682:32;2708:5;2682:32;:::i;:::-;2677:3;2670:45;2579:142;;:::o;2727:364::-;2864:4;2902:2;2891:9;2887:18;2879:26;;2915:87;2999:1;2988:9;2984:17;2975:6;2915:87;:::i;:::-;3012:72;3080:2;3069:9;3065:18;3056:6;3012:72;:::i;:::-;2727:364;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "210000",
								"executionCost": "24518",
								"totalCost": "234518"
							},
							"external": {
								"ETH_DCF(uint256)": "infinite",
								"Market(uint256)": "infinite",
								"Subscribe()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 429,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 429,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 429,
									"end": 971,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 517,
									"end": 559,
									"name": "PUSH",
									"source": 1,
									"value": "776D9270C11E89F212980EAF8971925E620790BB"
								},
								{
									"begin": 482,
									"end": 560,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 560,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 560,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 482,
									"end": 560,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 482,
									"end": 560,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 560,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 560,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 560,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 482,
									"end": 560,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 482,
									"end": 560,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 560,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 482,
									"end": 560,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 560,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 482,
									"end": 560,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 482,
									"end": 560,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 482,
									"end": 560,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 482,
									"end": 560,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 482,
									"end": 560,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 560,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 560,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 429,
									"end": 971,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 429,
									"end": 971,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 429,
									"end": 971,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 429,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 429,
									"end": 971,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 429,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 971,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 429,
									"end": 971,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 429,
									"end": 971,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 429,
									"end": 971,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 429,
									"end": 971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 429,
									"end": 971,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 429,
									"end": 971,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 429,
									"end": 971,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 429,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 971,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 429,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 429,
									"end": 971,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205ffcfb284e8d768a37f817ebbba6c1d7cff21bb5ed437f5c92bffe221050306764736f6c634300080e0033",
									".code": [
										{
											"begin": 429,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 429,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 429,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 429,
											"end": 971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 971,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 429,
											"end": 971,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "97DEDB1D"
										},
										{
											"begin": 429,
											"end": 971,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 429,
											"end": 971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "ADFB1394"
										},
										{
											"begin": 429,
											"end": 971,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 429,
											"end": 971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "F358A6F3"
										},
										{
											"begin": 429,
											"end": 971,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 429,
											"end": 971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 429,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 429,
											"end": 971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 802,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 802,
											"end": 915,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 802,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 802,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 802,
											"end": 915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 802,
											"end": 915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 802,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 802,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 802,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 802,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 802,
											"end": 915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 802,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 802,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 573,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 573,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 573,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 573,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 573,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 573,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 573,
											"end": 676,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 684,
											"end": 793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 684,
											"end": 793,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 684,
											"end": 793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 684,
											"end": 793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 684,
											"end": 793,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 684,
											"end": 793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 684,
											"end": 793,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 684,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 684,
											"end": 793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 684,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 684,
											"end": 793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 802,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 860,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 889,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 877,
											"end": 889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 877,
											"end": 889,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 877,
											"end": 889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 889,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 877,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 877,
											"end": 889,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "97DEDB1D"
										},
										{
											"begin": 898,
											"end": 908,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 877,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 877,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 877,
											"end": 909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 877,
											"end": 909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 802,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 573,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 618,
											"end": 630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 630,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 618,
											"end": 630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 630,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 618,
											"end": 630,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 618,
											"end": 630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 630,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 618,
											"end": 630,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 630,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 618,
											"end": 640,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 618,
											"end": 640,
											"name": "PUSH",
											"source": 1,
											"value": "41A7726A"
										},
										{
											"begin": 648,
											"end": 657,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 659,
											"end": 669,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 618,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 618,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 618,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 684,
											"end": 793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 736,
											"end": 748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 748,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 736,
											"end": 748,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 736,
											"end": 748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 736,
											"end": 748,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 736,
											"end": 748,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 736,
											"end": 748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 736,
											"end": 748,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 736,
											"end": 748,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 748,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 755,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "94756AA7"
										},
										{
											"begin": 764,
											"end": 774,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 776,
											"end": 786,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 736,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 736,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 736,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1472,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1508,
											"end": 1513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1514,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1481,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1631,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1643,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1616,
											"end": 1648,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1732,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1613,
											"end": 1732,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1651,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1651,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1730,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1651,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1732,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1613,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1852,
											"end": 1859,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1849,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1841,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1796,
											"end": 1860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1860,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1796,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1860,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1870,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1883,
											"end": 2009,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1883,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 2002,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1953,
											"end": 1958,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 2003,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1938,
											"end": 2003,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1938,
											"end": 2003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1883,
											"end": 2009,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1883,
											"end": 2009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1883,
											"end": 2009,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1883,
											"end": 2009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2111,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2015,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2052,
											"end": 2059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2099,
											"end": 2104,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2081,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2105,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2070,
											"end": 2105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2111,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2015,
											"end": 2111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2235,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2117,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2222,
											"end": 2227,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2204,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2228,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2204,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2202,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2229,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2241,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2374,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2370,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2453,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2451,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2435,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2385,
											"end": 2456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2456,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2385,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2463,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2573,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2469,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2561,
											"end": 2566,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2567,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2721,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2579,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2708,
											"end": 2713,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2682,
											"end": 2714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2682,
											"end": 2714,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2682,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2680,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2715,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 3091,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2727,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2864,
											"end": 2868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 2905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2999,
											"end": 3000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 2997,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 2981,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2915,
											"end": 3002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 3002,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2915,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3080,
											"end": 3082,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3065,
											"end": 3083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3056,
											"end": 3062,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3012,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3012,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 3091,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 3091,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 3091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 3091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 3091,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 3091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/Router.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ETH_DCF(uint256)": "97dedb1d",
							"Market(uint256)": "f358a6f3",
							"Subscribe()": "adfb1394"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"ETH_DCF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"Market\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Subscribe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/Router.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/Router.sol\":{\"keccak256\":\"0x74c7b0b4abc778953123f3435463cc42ce75cace91ae7c2ddcc06ef2210fa0a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8f72b111faacad5ae0e63f5eef32ea51b9830b075737aa590c8f90ed12057a4\",\"dweb:/ipfs/QmQnNnwLbMvQiofyivCiNTTZ7KBEMsG7vpgNaos6Ym6GMd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 350,
								"contract": "Dcoffer/Router.sol:Router",
								"label": "treasuryCtrl",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(_treasury)341"
							}
						],
						"types": {
							"t_contract(_treasury)341": {
								"encoding": "inplace",
								"label": "contract _treasury",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"_treasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "DCF_ETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "ETH_DCF",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "market",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "subscriber",
									"type": "address"
								}
							],
							"name": "subscribe",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DCF_ETH(uint256)": "3a23bf49",
							"ETH_DCF(uint256)": "97dedb1d",
							"market(address,uint256)": "94756aa7",
							"subscribe(address)": "41a7726a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"DCF_ETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"ETH_DCF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"market\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"subscribe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/Router.sol\":\"_treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/Router.sol\":{\"keccak256\":\"0x74c7b0b4abc778953123f3435463cc42ce75cace91ae7c2ddcc06ef2210fa0a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8f72b111faacad5ae0e63f5eef32ea51b9830b075737aa590c8f90ed12057a4\",\"dweb:/ipfs/QmQnNnwLbMvQiofyivCiNTTZ7KBEMsG7vpgNaos6Ym6GMd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> Dcoffer/Router.sol:31:62:\n   |\n31 |    function ETH_DCF(uint256 eth_amount)external view returns(uint256){\n   |                                                              ^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 867,
					"file": "Dcoffer/Router.sol",
					"start": 860
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"Dcoffer/Router.sol": {
				"ast": {
					"absolutePath": "Dcoffer/Router.sol",
					"exportedSymbols": {
						"Router": [
							396
						],
						"SafeMath": [
							311
						],
						"_treasury": [
							341
						]
					},
					"id": 397,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 397,
							"sourceUnit": 312,
							"src": "62:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "_treasury",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 341,
							"linearizedBaseContracts": [
								341
							],
							"name": "_treasury",
							"nameLocation": "133:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "41a7726a",
									"id": 319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "subscribe",
									"nameLocation": "156:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "subscriber",
												"nameLocation": "174:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "166:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "166:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:20:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "201:0:1"
									},
									"scope": 341,
									"src": "147:55:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "94756aa7",
									"id": 326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "218:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "225:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "225:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "257:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "249:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:44:1"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "276:0:1"
									},
									"scope": 341,
									"src": "209:68:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "97dedb1d",
									"id": 333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ETH_DCF",
									"nameLocation": "291:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "307:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "299:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "299:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "298:20:1"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "340:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "340:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "339:9:1"
									},
									"scope": 341,
									"src": "282:67:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3a23bf49",
									"id": 340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DCF_ETH",
									"nameLocation": "362:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "378:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "370:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "370:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:20:1"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "411:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:9:1"
									},
									"scope": 341,
									"src": "353:67:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 397,
							"src": "123:300:1",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Router",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 396,
							"linearizedBaseContracts": [
								396
							],
							"name": "Router",
							"nameLocation": "438:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 344,
									"libraryName": {
										"id": 342,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "456:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "450:24:1",
									"typeName": {
										"id": 343,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "469:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 350,
									"mutability": "mutable",
									"name": "treasuryCtrl",
									"nameLocation": "492:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "482:78:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$__treasury_$341",
										"typeString": "contract _treasury"
									},
									"typeName": {
										"id": 346,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 345,
											"name": "_treasury",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 341,
											"src": "482:9:1"
										},
										"referencedDeclaration": 341,
										"src": "482:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$__treasury_$341",
											"typeString": "contract _treasury"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307837373644393237306331314538394632313239383045414638393731393235453632303739304242",
												"id": 348,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "517:42:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x776D9270c11E89F212980EAF8971925E620790BB"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 347,
											"name": "_treasury",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 341,
											"src": "507:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$__treasury_$341_$",
												"typeString": "type(contract _treasury)"
											}
										},
										"id": 349,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "507:53:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$__treasury_$341",
											"typeString": "contract _treasury"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "609:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 359,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "659:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "659:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 353,
																"name": "treasuryCtrl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "618:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$__treasury_$341",
																	"typeString": "contract _treasury"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "subscribe",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 319,
															"src": "618:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
																"typeString": "function (address) payable external"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 356,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "648:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "648:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "618:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
															"typeString": "function (address) payable external"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "618:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "618:52:1"
											}
										]
									},
									"functionSelector": "adfb1394",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Subscribe",
									"nameLocation": "582:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:0:1"
									},
									"scope": 396,
									"src": "573:103:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "727:66:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 374,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "764:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "764:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "756:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 372,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "756:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "756:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 377,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "776:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 369,
															"name": "treasuryCtrl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "736:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$__treasury_$341",
																"typeString": "contract _treasury"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "market",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 326,
														"src": "736:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256) external"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "736:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "736:51:1"
											}
										]
									},
									"functionSelector": "f358a6f3",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Market",
									"nameLocation": "693:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "708:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "700:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "699:20:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:0:1"
									},
									"scope": 396,
									"src": "684:109:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "868:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 391,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "898:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 388,
															"name": "treasuryCtrl",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "877:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$__treasury_$341",
																"typeString": "contract _treasury"
															}
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ETH_DCF",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 333,
														"src": "877:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "877:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "877:32:1"
											}
										]
									},
									"functionSelector": "97dedb1d",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ETH_DCF",
									"nameLocation": "811:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "827:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "819:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:1"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "860:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:9:1"
									},
									"scope": 396,
									"src": "802:113:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 397,
							"src": "429:542:1",
							"usedErrors": []
						}
					],
					"src": "33:938:1"
				},
				"id": 1
			}
		}
	}
}