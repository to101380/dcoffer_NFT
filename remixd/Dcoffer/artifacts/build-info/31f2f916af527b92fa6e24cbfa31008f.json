{
	"id": "31f2f916af527b92fa6e24cbfa31008f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dcoffer/treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\n\r\n\r\n\r\ncontract treasury {\r\n  using SafeMath for uint;  \r\n\r\n  IERC20 dcoff =  IERC20(0x58d3a4cb28f30d9C87E8F79544f98F358cde6227);\r\n\r\n\r\n  uint256 private K;\r\n  uint256 private fee;\r\n  uint256 private last_balance;\r\n  uint256 private admin;\r\n\r\n  mapping(uint256 => mapping(uint256=>uint256))private info;\r\n  //01 = K\r\n  //02 = fee\r\n  // 0\r\n\r\n  constructor(uint256 _k, uint256 _fee)payable{\r\n    owner = msg.sender;\r\n    last_balance = msg.value;\r\n    K = _k;\r\n    fee = _fee;\r\n  }\r\n\r\n  address owner;\r\n  mapping(address => bool)private RouterAdmin;\r\n\r\n  modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n  }\r\n\r\n\r\n\r\n\r\n  function setRouter(address user, bool power)external onlyOwner{\r\n      RouterAdmin[user] = power;\r\n  }\r\n\r\n\r\n  function subscribe(address subscriber)external payable{\r\n      require(RouterAdmin[msg.sender] == true);\r\n\r\n      uint256 _fee = msg.value.mul(fee).div(1000);      \r\n      admin = admin.add(_fee);\r\n      uint256 eth_amount = msg.value.sub(_fee);\r\n\r\n      uint256 dcf_amount = ETH_DCF(eth_amount);      \r\n      dcoff.transfer(subscriber,dcf_amount);  \r\n\r\n      last_balance = address(this).balance;        \r\n  }\r\n\r\n\r\n  function market(address payable seller, uint256 dcf_amount)external {\r\n      require(RouterAdmin[msg.sender] == true);\r\n      require(dcoff.balanceOf(seller) >= dcf_amount);\r\n\r\n      uint256 eth_amount = DCF_ETH(dcf_amount);\r\n      uint256 _fee = eth_amount.mul(fee).div(1000);\r\n      admin = admin.add(_fee);\r\n      eth_amount = eth_amount.sub(_fee);\r\n    \r\n      seller.transfer(eth_amount);\r\n      dcoff.transferFrom(seller,address(this),dcf_amount);   \r\n\r\n      last_balance = address(this).balance;       \r\n     \r\n  }\r\n\r\n\r\n  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){\r\n    uint256 _eth_amount = last_balance.sub(admin);\r\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));    \r\n    uint256 Variable_dcf = _dcf_amount.add(dcf_amount);\r\n\r\n    if(Variable_dcf > dcoff.totalSupply()){\r\n      Variable_dcf = dcoff.totalSupply();\r\n    }\r\n\r\n    uint256 Variable_eth = K.div(Variable_dcf);\r\n    uint256 _price = _eth_amount.sub(Variable_eth);\r\n    return _price;\r\n  }\r\n\r\n\r\n  function ETH_DCF(uint256 eth_amount)public view returns(uint256){\r\n    uint256 _eth_amount = last_balance.sub(admin);\r\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));\r\n    uint256 Variable_eth = _eth_amount.add(eth_amount);\r\n    uint256 Variable_dcf = K.div(Variable_eth);\r\n    uint256 _price = _dcf_amount.sub(Variable_dcf);\r\n    return _price;\r\n  }\r\n\r\n\r\n \r\n\r\n  function Warning_protect()external onlyOwner{\r\n    payable(owner).transfer(address(this).balance);\r\n    dcoff.transfer(owner,dcoff.balanceOf(address(this)));\r\n  }\r\n\r\n\r\n  function admin_fee()external onlyOwner{\r\n    payable(owner).transfer(admin);\r\n    admin = 0; \r\n  }\r\n\r\n\r\n\r\n \r\n   \r\n  \r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXP PUSH3 0xF3573C 0xCE KECCAK256 CREATE2 0xEE BALANCE SWAP16 PUSH9 0x43457384F89FC6651C 0xD7 PUSH1 0x81 0x4A PUSH11 0xC6104B4C0E64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXP PUSH3 0xF3573C 0xCE KECCAK256 CREATE2 0xEE BALANCE SWAP16 PUSH9 0x43457384F89FC6651C 0xD7 PUSH1 0x81 0x4A PUSH11 0xC6104B4C0E64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/treasury.sol": {
				"treasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_k",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "DCF_ETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "ETH_DCF",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Warning_protect",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin_fee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "market",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "power",
									"type": "bool"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "subscriber",
									"type": "address"
								}
							],
							"name": "subscribe",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dcoffer/treasury.sol\":183:3047  contract treasury {... */\n  mstore(0x40, 0x80)\n    /* \"Dcoffer/treasury.sol\":261:303  0x58d3a4cb28f30d9C87E8F79544f98F358cde6227 */\n  0x58d3a4cb28f30d9c87e8f79544f98f358cde6227\n    /* \"Dcoffer/treasury.sol\":238:304  IERC20 dcoff =  IERC20(0x58d3a4cb28f30d9C87E8F79544f98F358cde6227) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":518:654  constructor(uint256 _k, uint256 _fee)payable{... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"Dcoffer/treasury.sol\":577:587  msg.sender */\n  caller\n    /* \"Dcoffer/treasury.sol\":569:574  owner */\n  0x06\n  0x00\n    /* \"Dcoffer/treasury.sol\":569:587  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":609:618  msg.value */\n  callvalue\n    /* \"Dcoffer/treasury.sol\":594:606  last_balance */\n  0x03\n    /* \"Dcoffer/treasury.sol\":594:618  last_balance = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":629:631  _k */\n  dup2\n    /* \"Dcoffer/treasury.sol\":625:626  K */\n  0x01\n    /* \"Dcoffer/treasury.sol\":625:631  K = _k */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":644:648  _fee */\n  dup1\n    /* \"Dcoffer/treasury.sol\":638:641  fee */\n  0x02\n    /* \"Dcoffer/treasury.sol\":638:648  fee = _fee */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":518:654  constructor(uint256 _k, uint256 _fee)payable{... */\n  pop\n  pop\n    /* \"Dcoffer/treasury.sol\":183:3047  contract treasury {... */\n  jump(tag_5)\n    /* \"#utility.yul\":88:205   */\ntag_7:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_9:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_10:\n    /* \"#utility.yul\":490:514   */\n  tag_18\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_9\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_19:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_11:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_21\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1201   */\ntag_2:\n    /* \"#utility.yul\":773:779   */\n  0x00\n    /* \"#utility.yul\":781:787   */\n  dup1\n    /* \"#utility.yul\":830:832   */\n  0x40\n    /* \"#utility.yul\":818:827   */\n  dup4\n    /* \"#utility.yul\":809:816   */\n  dup6\n    /* \"#utility.yul\":805:828   */\n  sub\n    /* \"#utility.yul\":801:833   */\n  slt\n    /* \"#utility.yul\":798:917   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":836:915   */\n  tag_24\n  tag_7\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":798:917   */\ntag_23:\n    /* \"#utility.yul\":956:957   */\n  0x00\n    /* \"#utility.yul\":981:1045   */\n  tag_25\n    /* \"#utility.yul\":1037:1044   */\n  dup6\n    /* \"#utility.yul\":1028:1034   */\n  dup3\n    /* \"#utility.yul\":1017:1026   */\n  dup7\n    /* \"#utility.yul\":1013:1035   */\n  add\n    /* \"#utility.yul\":981:1045   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":971:1045   */\n  swap3\n  pop\n    /* \"#utility.yul\":927:1055   */\n  pop\n    /* \"#utility.yul\":1094:1096   */\n  0x20\n    /* \"#utility.yul\":1120:1184   */\n  tag_26\n    /* \"#utility.yul\":1176:1183   */\n  dup6\n    /* \"#utility.yul\":1167:1173   */\n  dup3\n    /* \"#utility.yul\":1156:1165   */\n  dup7\n    /* \"#utility.yul\":1152:1174   */\n  add\n    /* \"#utility.yul\":1120:1184   */\n  tag_11\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":1110:1184   */\n  swap2\n  pop\n    /* \"#utility.yul\":1065:1194   */\n  pop\n    /* \"#utility.yul\":694:1201   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"Dcoffer/treasury.sol\":183:3047  contract treasury {... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dcoffer/treasury.sol\":183:3047  contract treasury {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x97dedb1d\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x97dedb1d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc3c64674\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdac3fad4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfee3f7f9\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x3a23bf49\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x41a7726a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x94756aa7\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/treasury.sol\":1912:2375  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":964:1374  function subscribe(address subscriber)external payable{... */\n    tag_3:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"Dcoffer/treasury.sol\":1382:1904  function market(address payable seller, uint256 dcf_amount)external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"Dcoffer/treasury.sol\":2383:2743  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":854:956  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"Dcoffer/treasury.sol\":2756:2918  function Warning_protect()external onlyOwner{... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"Dcoffer/treasury.sol\":2926:3024  function admin_fee()external onlyOwner{... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      stop\n        /* \"Dcoffer/treasury.sol\":1912:2375  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n    tag_14:\n        /* \"Dcoffer/treasury.sol\":1968:1975  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1983:2002  uint256 _eth_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":2005:2028  last_balance.sub(admin) */\n      tag_43\n        /* \"Dcoffer/treasury.sol\":2022:2027  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":2005:2017  last_balance */\n      sload(0x03)\n        /* \"Dcoffer/treasury.sol\":2005:2021  last_balance.sub */\n      tag_44\n      swap1\n        /* \"Dcoffer/treasury.sol\":2005:2028  last_balance.sub(admin) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_43:\n        /* \"Dcoffer/treasury.sol\":1983:2028  uint256 _eth_amount = last_balance.sub(admin) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2035:2054  uint256 _dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2057:2062  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2057:2072  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":2081:2085  this */\n      address\n        /* \"Dcoffer/treasury.sol\":2057:2087  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"Dcoffer/treasury.sol\":2035:2087  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2098:2118  uint256 Variable_dcf */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2121:2148  _dcf_amount.add(dcf_amount) */\n      tag_51\n        /* \"Dcoffer/treasury.sol\":2137:2147  dcf_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":2121:2132  _dcf_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":2121:2136  _dcf_amount.add */\n      tag_52\n      swap1\n        /* \"Dcoffer/treasury.sol\":2121:2148  _dcf_amount.add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_51:\n        /* \"Dcoffer/treasury.sol\":2098:2148  uint256 Variable_dcf = _dcf_amount.add(dcf_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2175:2180  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2175:2192  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"Dcoffer/treasury.sol\":2175:2194  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_55:\n        /* \"Dcoffer/treasury.sol\":2160:2172  Variable_dcf */\n      dup2\n        /* \"Dcoffer/treasury.sol\":2160:2194  Variable_dcf > dcoff.totalSupply() */\n      gt\n        /* \"Dcoffer/treasury.sol\":2157:2246  if(Variable_dcf > dcoff.totalSupply()){... */\n      iszero\n      tag_56\n      jumpi\n        /* \"Dcoffer/treasury.sol\":2219:2224  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2219:2236  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"Dcoffer/treasury.sol\":2219:2238  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_58:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_59:\n        /* \"Dcoffer/treasury.sol\":2204:2238  Variable_dcf = dcoff.totalSupply() */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2157:2246  if(Variable_dcf > dcoff.totalSupply()){... */\n    tag_56:\n        /* \"Dcoffer/treasury.sol\":2254:2274  uint256 Variable_eth */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2277:2296  K.div(Variable_dcf) */\n      tag_60\n        /* \"Dcoffer/treasury.sol\":2283:2295  Variable_dcf */\n      dup3\n        /* \"Dcoffer/treasury.sol\":2277:2278  K */\n      sload(0x01)\n        /* \"Dcoffer/treasury.sol\":2277:2282  K.div */\n      tag_61\n      swap1\n        /* \"Dcoffer/treasury.sol\":2277:2296  K.div(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_60:\n        /* \"Dcoffer/treasury.sol\":2254:2296  uint256 Variable_eth = K.div(Variable_dcf) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2303:2317  uint256 _price */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2320:2349  _eth_amount.sub(Variable_eth) */\n      tag_62\n        /* \"Dcoffer/treasury.sol\":2336:2348  Variable_eth */\n      dup3\n        /* \"Dcoffer/treasury.sol\":2320:2331  _eth_amount */\n      dup7\n        /* \"Dcoffer/treasury.sol\":2320:2335  _eth_amount.sub */\n      tag_44\n      swap1\n        /* \"Dcoffer/treasury.sol\":2320:2349  _eth_amount.sub(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_62:\n        /* \"Dcoffer/treasury.sol\":2303:2349  uint256 _price = _eth_amount.sub(Variable_eth) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2363:2369  _price */\n      dup1\n        /* \"Dcoffer/treasury.sol\":2356:2369  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":1912:2375  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":964:1374  function subscribe(address subscriber)external payable{... */\n    tag_20:\n        /* \"Dcoffer/treasury.sol\":1062:1066  true */\n      0x01\n        /* \"Dcoffer/treasury.sol\":1035:1066  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"Dcoffer/treasury.sol\":1035:1046  RouterAdmin */\n      0x07\n        /* \"Dcoffer/treasury.sol\":1035:1058  RouterAdmin[msg.sender] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1047:1057  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":1035:1058  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dcoffer/treasury.sol\":1035:1066  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"Dcoffer/treasury.sol\":1027:1067  require(RouterAdmin[msg.sender] == true) */\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n        /* \"Dcoffer/treasury.sol\":1078:1090  uint256 _fee */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1093:1121  msg.value.mul(fee).div(1000) */\n      tag_65\n        /* \"Dcoffer/treasury.sol\":1116:1120  1000 */\n      0x03e8\n        /* \"Dcoffer/treasury.sol\":1093:1111  msg.value.mul(fee) */\n      tag_66\n        /* \"Dcoffer/treasury.sol\":1107:1110  fee */\n      sload(0x02)\n        /* \"Dcoffer/treasury.sol\":1093:1102  msg.value */\n      callvalue\n        /* \"Dcoffer/treasury.sol\":1093:1106  msg.value.mul */\n      tag_67\n      swap1\n        /* \"Dcoffer/treasury.sol\":1093:1111  msg.value.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_66:\n        /* \"Dcoffer/treasury.sol\":1093:1115  msg.value.mul(fee).div */\n      tag_61\n      swap1\n        /* \"Dcoffer/treasury.sol\":1093:1121  msg.value.mul(fee).div(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_65:\n        /* \"Dcoffer/treasury.sol\":1078:1121  uint256 _fee = msg.value.mul(fee).div(1000) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1144:1159  admin.add(_fee) */\n      tag_68\n        /* \"Dcoffer/treasury.sol\":1154:1158  _fee */\n      dup2\n        /* \"Dcoffer/treasury.sol\":1144:1149  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":1144:1153  admin.add */\n      tag_52\n      swap1\n        /* \"Dcoffer/treasury.sol\":1144:1159  admin.add(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_68:\n        /* \"Dcoffer/treasury.sol\":1136:1141  admin */\n      0x04\n        /* \"Dcoffer/treasury.sol\":1136:1159  admin = admin.add(_fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":1168:1186  uint256 eth_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1189:1208  msg.value.sub(_fee) */\n      tag_69\n        /* \"Dcoffer/treasury.sol\":1203:1207  _fee */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1189:1198  msg.value */\n      callvalue\n        /* \"Dcoffer/treasury.sol\":1189:1202  msg.value.sub */\n      tag_44\n      swap1\n        /* \"Dcoffer/treasury.sol\":1189:1208  msg.value.sub(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_69:\n        /* \"Dcoffer/treasury.sol\":1168:1208  uint256 eth_amount = msg.value.sub(_fee) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1219:1237  uint256 dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1240:1259  ETH_DCF(eth_amount) */\n      tag_70\n        /* \"Dcoffer/treasury.sol\":1248:1258  eth_amount */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1240:1247  ETH_DCF */\n      tag_29\n        /* \"Dcoffer/treasury.sol\":1240:1259  ETH_DCF(eth_amount) */\n      jump\t// in\n    tag_70:\n        /* \"Dcoffer/treasury.sol\":1219:1259  uint256 dcf_amount = ETH_DCF(eth_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1274:1279  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1274:1288  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Dcoffer/treasury.sol\":1289:1299  subscriber */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1300:1310  dcf_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1274:1311  dcoff.transfer(subscriber,dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      pop\n        /* \"Dcoffer/treasury.sol\":1339:1360  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":1324:1336  last_balance */\n      0x03\n        /* \"Dcoffer/treasury.sol\":1324:1360  last_balance = address(this).balance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":1018:1374  {... */\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":964:1374  function subscribe(address subscriber)external payable{... */\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":1382:1904  function market(address payable seller, uint256 dcf_amount)external {... */\n    tag_25:\n        /* \"Dcoffer/treasury.sol\":1494:1498  true */\n      0x01\n        /* \"Dcoffer/treasury.sol\":1467:1498  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"Dcoffer/treasury.sol\":1467:1478  RouterAdmin */\n      0x07\n        /* \"Dcoffer/treasury.sol\":1467:1490  RouterAdmin[msg.sender] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1479:1489  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":1467:1490  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dcoffer/treasury.sol\":1467:1498  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"Dcoffer/treasury.sol\":1459:1499  require(RouterAdmin[msg.sender] == true) */\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n        /* \"Dcoffer/treasury.sol\":1543:1553  dcf_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1516:1521  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1516:1531  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":1532:1538  seller */\n      dup5\n        /* \"Dcoffer/treasury.sol\":1516:1539  dcoff.balanceOf(seller) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_83:\n        /* \"Dcoffer/treasury.sol\":1516:1553  dcoff.balanceOf(seller) >= dcf_amount */\n      lt\n      iszero\n        /* \"Dcoffer/treasury.sol\":1508:1554  require(dcoff.balanceOf(seller) >= dcf_amount) */\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n        /* \"Dcoffer/treasury.sol\":1565:1583  uint256 eth_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1586:1605  DCF_ETH(dcf_amount) */\n      tag_85\n        /* \"Dcoffer/treasury.sol\":1594:1604  dcf_amount */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1586:1593  DCF_ETH */\n      tag_14\n        /* \"Dcoffer/treasury.sol\":1586:1605  DCF_ETH(dcf_amount) */\n      jump\t// in\n    tag_85:\n        /* \"Dcoffer/treasury.sol\":1565:1605  uint256 eth_amount = DCF_ETH(dcf_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1614:1626  uint256 _fee */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1629:1658  eth_amount.mul(fee).div(1000) */\n      tag_86\n        /* \"Dcoffer/treasury.sol\":1653:1657  1000 */\n      0x03e8\n        /* \"Dcoffer/treasury.sol\":1629:1648  eth_amount.mul(fee) */\n      tag_87\n        /* \"Dcoffer/treasury.sol\":1644:1647  fee */\n      sload(0x02)\n        /* \"Dcoffer/treasury.sol\":1629:1639  eth_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1629:1643  eth_amount.mul */\n      tag_67\n      swap1\n        /* \"Dcoffer/treasury.sol\":1629:1648  eth_amount.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_87:\n        /* \"Dcoffer/treasury.sol\":1629:1652  eth_amount.mul(fee).div */\n      tag_61\n      swap1\n        /* \"Dcoffer/treasury.sol\":1629:1658  eth_amount.mul(fee).div(1000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"Dcoffer/treasury.sol\":1614:1658  uint256 _fee = eth_amount.mul(fee).div(1000) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1675:1690  admin.add(_fee) */\n      tag_88\n        /* \"Dcoffer/treasury.sol\":1685:1689  _fee */\n      dup2\n        /* \"Dcoffer/treasury.sol\":1675:1680  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":1675:1684  admin.add */\n      tag_52\n      swap1\n        /* \"Dcoffer/treasury.sol\":1675:1690  admin.add(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_88:\n        /* \"Dcoffer/treasury.sol\":1667:1672  admin */\n      0x04\n        /* \"Dcoffer/treasury.sol\":1667:1690  admin = admin.add(_fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":1712:1732  eth_amount.sub(_fee) */\n      tag_89\n        /* \"Dcoffer/treasury.sol\":1727:1731  _fee */\n      dup2\n        /* \"Dcoffer/treasury.sol\":1712:1722  eth_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1712:1726  eth_amount.sub */\n      tag_44\n      swap1\n        /* \"Dcoffer/treasury.sol\":1712:1732  eth_amount.sub(_fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_89:\n        /* \"Dcoffer/treasury.sol\":1699:1732  eth_amount = eth_amount.sub(_fee) */\n      swap2\n      pop\n        /* \"Dcoffer/treasury.sol\":1747:1753  seller */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1747:1762  seller.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1747:1774  seller.transfer(eth_amount) */\n      0x08fc\n        /* \"Dcoffer/treasury.sol\":1763:1773  eth_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1747:1774  seller.transfer(eth_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n        /* \"Dcoffer/treasury.sol\":1783:1788  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1783:1801  dcoff.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Dcoffer/treasury.sol\":1802:1808  seller */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1817:1821  this */\n      address\n        /* \"Dcoffer/treasury.sol\":1823:1833  dcf_amount */\n      dup7\n        /* \"Dcoffer/treasury.sol\":1783:1834  dcoff.transferFrom(seller,address(this),dcf_amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_96:\n      pop\n        /* \"Dcoffer/treasury.sol\":1863:1884  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":1848:1860  last_balance */\n      0x03\n        /* \"Dcoffer/treasury.sol\":1848:1884  last_balance = address(this).balance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":1450:1904  {... */\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":1382:1904  function market(address payable seller, uint256 dcf_amount)external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":2383:2743  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n    tag_29:\n        /* \"Dcoffer/treasury.sol\":2439:2446  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2454:2473  uint256 _eth_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":2476:2499  last_balance.sub(admin) */\n      tag_98\n        /* \"Dcoffer/treasury.sol\":2493:2498  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":2476:2488  last_balance */\n      sload(0x03)\n        /* \"Dcoffer/treasury.sol\":2476:2492  last_balance.sub */\n      tag_44\n      swap1\n        /* \"Dcoffer/treasury.sol\":2476:2499  last_balance.sub(admin) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_98:\n        /* \"Dcoffer/treasury.sol\":2454:2499  uint256 _eth_amount = last_balance.sub(admin) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2506:2525  uint256 _dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2528:2533  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2528:2543  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":2552:2556  this */\n      address\n        /* \"Dcoffer/treasury.sol\":2528:2558  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_99:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_102:\n        /* \"Dcoffer/treasury.sol\":2506:2558  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2565:2585  uint256 Variable_eth */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2588:2615  _eth_amount.add(eth_amount) */\n      tag_103\n        /* \"Dcoffer/treasury.sol\":2604:2614  eth_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":2588:2599  _eth_amount */\n      dup5\n        /* \"Dcoffer/treasury.sol\":2588:2603  _eth_amount.add */\n      tag_52\n      swap1\n        /* \"Dcoffer/treasury.sol\":2588:2615  _eth_amount.add(eth_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"Dcoffer/treasury.sol\":2565:2615  uint256 Variable_eth = _eth_amount.add(eth_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2622:2642  uint256 Variable_dcf */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2645:2664  K.div(Variable_eth) */\n      tag_104\n        /* \"Dcoffer/treasury.sol\":2651:2663  Variable_eth */\n      dup3\n        /* \"Dcoffer/treasury.sol\":2645:2646  K */\n      sload(0x01)\n        /* \"Dcoffer/treasury.sol\":2645:2650  K.div */\n      tag_61\n      swap1\n        /* \"Dcoffer/treasury.sol\":2645:2664  K.div(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_104:\n        /* \"Dcoffer/treasury.sol\":2622:2664  uint256 Variable_dcf = K.div(Variable_eth) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2671:2685  uint256 _price */\n      0x00\n        /* \"Dcoffer/treasury.sol\":2688:2717  _dcf_amount.sub(Variable_dcf) */\n      tag_105\n        /* \"Dcoffer/treasury.sol\":2704:2716  Variable_dcf */\n      dup3\n        /* \"Dcoffer/treasury.sol\":2688:2699  _dcf_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":2688:2703  _dcf_amount.sub */\n      tag_44\n      swap1\n        /* \"Dcoffer/treasury.sol\":2688:2717  _dcf_amount.sub(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"Dcoffer/treasury.sol\":2671:2717  uint256 _price = _dcf_amount.sub(Variable_dcf) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":2731:2737  _price */\n      dup1\n        /* \"Dcoffer/treasury.sol\":2724:2737  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":2383:2743  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":854:956  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_35:\n        /* \"Dcoffer/treasury.sol\":777:787  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":768:787  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":768:773  owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":768:787  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":760:824  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"Dcoffer/treasury.sol\":945:950  power */\n      dup1\n        /* \"Dcoffer/treasury.sol\":925:936  RouterAdmin */\n      0x07\n        /* \"Dcoffer/treasury.sol\":925:942  RouterAdmin[user] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":937:941  user */\n      dup5\n        /* \"Dcoffer/treasury.sol\":925:942  RouterAdmin[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Dcoffer/treasury.sol\":925:950  RouterAdmin[user] = power */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":854:956  function setRouter(address user, bool power)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":2756:2918  function Warning_protect()external onlyOwner{... */\n    tag_38:\n        /* \"Dcoffer/treasury.sol\":777:787  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":768:787  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":768:773  owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":768:787  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":760:824  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_109\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"Dcoffer/treasury.sol\":2815:2820  owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2807:2830  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2807:2853  payable(owner).transfer(address(this).balance) */\n      0x08fc\n        /* \"Dcoffer/treasury.sol\":2831:2852  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":2807:2853  payable(owner).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n        /* \"Dcoffer/treasury.sol\":2860:2865  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2860:2874  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Dcoffer/treasury.sol\":2875:2880  owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2881:2886  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2881:2896  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":2905:2909  this */\n      address\n        /* \"Dcoffer/treasury.sol\":2881:2911  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_117:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_120:\n        /* \"Dcoffer/treasury.sol\":2860:2912  dcoff.transfer(owner,dcoff.balanceOf(address(this))) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_121:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_124:\n      pop\n        /* \"Dcoffer/treasury.sol\":2756:2918  function Warning_protect()external onlyOwner{... */\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":2926:3024  function admin_fee()external onlyOwner{... */\n    tag_41:\n        /* \"Dcoffer/treasury.sol\":777:787  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":768:787  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":768:773  owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":768:787  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":760:824  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_109\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"Dcoffer/treasury.sol\":2979:2984  owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2971:2994  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":2971:3001  payable(owner).transfer(admin) */\n      0x08fc\n        /* \"Dcoffer/treasury.sol\":2995:3000  admin */\n      sload(0x04)\n        /* \"Dcoffer/treasury.sol\":2971:3001  payable(owner).transfer(admin) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n        /* \"Dcoffer/treasury.sol\":3016:3017  0 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":3008:3013  admin */\n      0x04\n        /* \"Dcoffer/treasury.sol\":3008:3017  admin = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":2926:3024  function admin_fee()external onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_144:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_146:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_147:\n        /* \"#utility.yul\":490:514   */\n      tag_179\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_146\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_180:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_148:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_182\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_147\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_13:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_185\n      tag_144\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":766:885   */\n    tag_184:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_186\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_148\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_149:\n        /* \"#utility.yul\":1112:1136   */\n      tag_188\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_146\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_16:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_190\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_149\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_150:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_151:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_193\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_150\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_152:\n        /* \"#utility.yul\":1684:1708   */\n      tag_195\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_151\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_196:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_153:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_198\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_152\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_19:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_201\n      tag_144\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1960:2079   */\n    tag_200:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_202\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_153\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2323   */\n    tag_154:\n        /* \"#utility.yul\":2264:2271   */\n      0x00\n        /* \"#utility.yul\":2293:2317   */\n      tag_204\n        /* \"#utility.yul\":2311:2316   */\n      dup3\n        /* \"#utility.yul\":2293:2317   */\n      tag_150\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2282:2317   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2329:2467   */\n    tag_155:\n        /* \"#utility.yul\":2410:2442   */\n      tag_206\n        /* \"#utility.yul\":2436:2441   */\n      dup2\n        /* \"#utility.yul\":2410:2442   */\n      tag_154\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2403:2408   */\n      dup2\n        /* \"#utility.yul\":2400:2443   */\n      eq\n        /* \"#utility.yul\":2390:2461   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2457:2458   */\n      0x00\n        /* \"#utility.yul\":2454:2455   */\n      dup1\n        /* \"#utility.yul\":2447:2459   */\n      revert\n        /* \"#utility.yul\":2390:2461   */\n    tag_207:\n        /* \"#utility.yul\":2329:2467   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2473:2628   */\n    tag_156:\n        /* \"#utility.yul\":2527:2532   */\n      0x00\n        /* \"#utility.yul\":2565:2571   */\n      dup2\n        /* \"#utility.yul\":2552:2572   */\n      calldataload\n        /* \"#utility.yul\":2543:2572   */\n      swap1\n      pop\n        /* \"#utility.yul\":2581:2622   */\n      tag_209\n        /* \"#utility.yul\":2616:2621   */\n      dup2\n        /* \"#utility.yul\":2581:2622   */\n      tag_155\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2473:2628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2634:3124   */\n    tag_24:\n        /* \"#utility.yul\":2710:2716   */\n      0x00\n        /* \"#utility.yul\":2718:2724   */\n      dup1\n        /* \"#utility.yul\":2767:2769   */\n      0x40\n        /* \"#utility.yul\":2755:2764   */\n      dup4\n        /* \"#utility.yul\":2746:2753   */\n      dup6\n        /* \"#utility.yul\":2742:2765   */\n      sub\n        /* \"#utility.yul\":2738:2770   */\n      slt\n        /* \"#utility.yul\":2735:2854   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":2773:2852   */\n      tag_212\n      tag_144\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2735:2854   */\n    tag_211:\n        /* \"#utility.yul\":2893:2894   */\n      0x00\n        /* \"#utility.yul\":2918:2979   */\n      tag_213\n        /* \"#utility.yul\":2971:2978   */\n      dup6\n        /* \"#utility.yul\":2962:2968   */\n      dup3\n        /* \"#utility.yul\":2951:2960   */\n      dup7\n        /* \"#utility.yul\":2947:2969   */\n      add\n        /* \"#utility.yul\":2918:2979   */\n      tag_156\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2908:2979   */\n      swap3\n      pop\n        /* \"#utility.yul\":2864:2989   */\n      pop\n        /* \"#utility.yul\":3028:3030   */\n      0x20\n        /* \"#utility.yul\":3054:3107   */\n      tag_214\n        /* \"#utility.yul\":3099:3106   */\n      dup6\n        /* \"#utility.yul\":3090:3096   */\n      dup3\n        /* \"#utility.yul\":3079:3088   */\n      dup7\n        /* \"#utility.yul\":3075:3097   */\n      add\n        /* \"#utility.yul\":3054:3107   */\n      tag_148\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":3044:3107   */\n      swap2\n      pop\n        /* \"#utility.yul\":2999:3117   */\n      pop\n        /* \"#utility.yul\":2634:3124   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3130:3220   */\n    tag_157:\n        /* \"#utility.yul\":3164:3171   */\n      0x00\n        /* \"#utility.yul\":3207:3212   */\n      dup2\n        /* \"#utility.yul\":3200:3213   */\n      iszero\n        /* \"#utility.yul\":3193:3214   */\n      iszero\n        /* \"#utility.yul\":3182:3214   */\n      swap1\n      pop\n        /* \"#utility.yul\":3130:3220   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3226:3342   */\n    tag_158:\n        /* \"#utility.yul\":3296:3317   */\n      tag_217\n        /* \"#utility.yul\":3311:3316   */\n      dup2\n        /* \"#utility.yul\":3296:3317   */\n      tag_157\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3289:3294   */\n      dup2\n        /* \"#utility.yul\":3286:3318   */\n      eq\n        /* \"#utility.yul\":3276:3336   */\n      tag_218\n      jumpi\n        /* \"#utility.yul\":3332:3333   */\n      0x00\n        /* \"#utility.yul\":3329:3330   */\n      dup1\n        /* \"#utility.yul\":3322:3334   */\n      revert\n        /* \"#utility.yul\":3276:3336   */\n    tag_218:\n        /* \"#utility.yul\":3226:3342   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3348:3481   */\n    tag_159:\n        /* \"#utility.yul\":3391:3396   */\n      0x00\n        /* \"#utility.yul\":3429:3435   */\n      dup2\n        /* \"#utility.yul\":3416:3436   */\n      calldataload\n        /* \"#utility.yul\":3407:3436   */\n      swap1\n      pop\n        /* \"#utility.yul\":3445:3475   */\n      tag_220\n        /* \"#utility.yul\":3469:3474   */\n      dup2\n        /* \"#utility.yul\":3445:3475   */\n      tag_158\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3348:3481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3487:3955   */\n    tag_34:\n        /* \"#utility.yul\":3552:3558   */\n      0x00\n        /* \"#utility.yul\":3560:3566   */\n      dup1\n        /* \"#utility.yul\":3609:3611   */\n      0x40\n        /* \"#utility.yul\":3597:3606   */\n      dup4\n        /* \"#utility.yul\":3588:3595   */\n      dup6\n        /* \"#utility.yul\":3584:3607   */\n      sub\n        /* \"#utility.yul\":3580:3612   */\n      slt\n        /* \"#utility.yul\":3577:3696   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":3615:3694   */\n      tag_223\n      tag_144\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3577:3696   */\n    tag_222:\n        /* \"#utility.yul\":3735:3736   */\n      0x00\n        /* \"#utility.yul\":3760:3813   */\n      tag_224\n        /* \"#utility.yul\":3805:3812   */\n      dup6\n        /* \"#utility.yul\":3796:3802   */\n      dup3\n        /* \"#utility.yul\":3785:3794   */\n      dup7\n        /* \"#utility.yul\":3781:3803   */\n      add\n        /* \"#utility.yul\":3760:3813   */\n      tag_153\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3750:3813   */\n      swap3\n      pop\n        /* \"#utility.yul\":3706:3823   */\n      pop\n        /* \"#utility.yul\":3862:3864   */\n      0x20\n        /* \"#utility.yul\":3888:3938   */\n      tag_225\n        /* \"#utility.yul\":3930:3937   */\n      dup6\n        /* \"#utility.yul\":3921:3927   */\n      dup3\n        /* \"#utility.yul\":3910:3919   */\n      dup7\n        /* \"#utility.yul\":3906:3928   */\n      add\n        /* \"#utility.yul\":3888:3938   */\n      tag_159\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":3878:3938   */\n      swap2\n      pop\n        /* \"#utility.yul\":3833:3948   */\n      pop\n        /* \"#utility.yul\":3487:3955   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3961:4079   */\n    tag_160:\n        /* \"#utility.yul\":4048:4072   */\n      tag_227\n        /* \"#utility.yul\":4066:4071   */\n      dup2\n        /* \"#utility.yul\":4048:4072   */\n      tag_151\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4043:4046   */\n      dup3\n        /* \"#utility.yul\":4036:4073   */\n      mstore\n        /* \"#utility.yul\":3961:4079   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4085:4307   */\n    tag_46:\n        /* \"#utility.yul\":4178:4182   */\n      0x00\n        /* \"#utility.yul\":4216:4218   */\n      0x20\n        /* \"#utility.yul\":4205:4214   */\n      dup3\n        /* \"#utility.yul\":4201:4219   */\n      add\n        /* \"#utility.yul\":4193:4219   */\n      swap1\n      pop\n        /* \"#utility.yul\":4229:4300   */\n      tag_229\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4286:4295   */\n      dup4\n        /* \"#utility.yul\":4282:4299   */\n      add\n        /* \"#utility.yul\":4273:4279   */\n      dup5\n        /* \"#utility.yul\":4229:4300   */\n      tag_160\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4085:4307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4313:4456   */\n    tag_161:\n        /* \"#utility.yul\":4370:4375   */\n      0x00\n        /* \"#utility.yul\":4401:4407   */\n      dup2\n        /* \"#utility.yul\":4395:4408   */\n      mload\n        /* \"#utility.yul\":4386:4408   */\n      swap1\n      pop\n        /* \"#utility.yul\":4417:4450   */\n      tag_231\n        /* \"#utility.yul\":4444:4449   */\n      dup2\n        /* \"#utility.yul\":4417:4450   */\n      tag_147\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4313:4456   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4462:4813   */\n    tag_50:\n        /* \"#utility.yul\":4532:4538   */\n      0x00\n        /* \"#utility.yul\":4581:4583   */\n      0x20\n        /* \"#utility.yul\":4569:4578   */\n      dup3\n        /* \"#utility.yul\":4560:4567   */\n      dup5\n        /* \"#utility.yul\":4556:4579   */\n      sub\n        /* \"#utility.yul\":4552:4584   */\n      slt\n        /* \"#utility.yul\":4549:4668   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":4587:4666   */\n      tag_234\n      tag_144\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4549:4668   */\n    tag_233:\n        /* \"#utility.yul\":4707:4708   */\n      0x00\n        /* \"#utility.yul\":4732:4796   */\n      tag_235\n        /* \"#utility.yul\":4788:4795   */\n      dup5\n        /* \"#utility.yul\":4779:4785   */\n      dup3\n        /* \"#utility.yul\":4768:4777   */\n      dup6\n        /* \"#utility.yul\":4764:4786   */\n      add\n        /* \"#utility.yul\":4732:4796   */\n      tag_161\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4722:4796   */\n      swap2\n      pop\n        /* \"#utility.yul\":4678:4806   */\n      pop\n        /* \"#utility.yul\":4462:4813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4819:5151   */\n    tag_72:\n        /* \"#utility.yul\":4940:4944   */\n      0x00\n        /* \"#utility.yul\":4978:4980   */\n      0x40\n        /* \"#utility.yul\":4967:4976   */\n      dup3\n        /* \"#utility.yul\":4963:4981   */\n      add\n        /* \"#utility.yul\":4955:4981   */\n      swap1\n      pop\n        /* \"#utility.yul\":4991:5062   */\n      tag_237\n        /* \"#utility.yul\":5059:5060   */\n      0x00\n        /* \"#utility.yul\":5048:5057   */\n      dup4\n        /* \"#utility.yul\":5044:5061   */\n      add\n        /* \"#utility.yul\":5035:5041   */\n      dup6\n        /* \"#utility.yul\":4991:5062   */\n      tag_160\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5072:5144   */\n      tag_238\n        /* \"#utility.yul\":5140:5142   */\n      0x20\n        /* \"#utility.yul\":5129:5138   */\n      dup4\n        /* \"#utility.yul\":5125:5143   */\n      add\n        /* \"#utility.yul\":5116:5122   */\n      dup5\n        /* \"#utility.yul\":5072:5144   */\n      tag_149\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4819:5151   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5157:5294   */\n    tag_162:\n        /* \"#utility.yul\":5211:5216   */\n      0x00\n        /* \"#utility.yul\":5242:5248   */\n      dup2\n        /* \"#utility.yul\":5236:5249   */\n      mload\n        /* \"#utility.yul\":5227:5249   */\n      swap1\n      pop\n        /* \"#utility.yul\":5258:5288   */\n      tag_240\n        /* \"#utility.yul\":5282:5287   */\n      dup2\n        /* \"#utility.yul\":5258:5288   */\n      tag_158\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5157:5294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5300:5645   */\n    tag_76:\n        /* \"#utility.yul\":5367:5373   */\n      0x00\n        /* \"#utility.yul\":5416:5418   */\n      0x20\n        /* \"#utility.yul\":5404:5413   */\n      dup3\n        /* \"#utility.yul\":5395:5402   */\n      dup5\n        /* \"#utility.yul\":5391:5414   */\n      sub\n        /* \"#utility.yul\":5387:5419   */\n      slt\n        /* \"#utility.yul\":5384:5503   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":5422:5501   */\n      tag_243\n      tag_144\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5384:5503   */\n    tag_242:\n        /* \"#utility.yul\":5542:5543   */\n      0x00\n        /* \"#utility.yul\":5567:5628   */\n      tag_244\n        /* \"#utility.yul\":5620:5627   */\n      dup5\n        /* \"#utility.yul\":5611:5617   */\n      dup3\n        /* \"#utility.yul\":5600:5609   */\n      dup6\n        /* \"#utility.yul\":5596:5618   */\n      add\n        /* \"#utility.yul\":5567:5628   */\n      tag_162\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5557:5628   */\n      swap2\n      pop\n        /* \"#utility.yul\":5513:5638   */\n      pop\n        /* \"#utility.yul\":5300:5645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5651:5711   */\n    tag_163:\n        /* \"#utility.yul\":5679:5682   */\n      0x00\n        /* \"#utility.yul\":5700:5705   */\n      dup2\n        /* \"#utility.yul\":5693:5705   */\n      swap1\n      pop\n        /* \"#utility.yul\":5651:5711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5717:5859   */\n    tag_164:\n        /* \"#utility.yul\":5767:5776   */\n      0x00\n        /* \"#utility.yul\":5800:5853   */\n      tag_247\n        /* \"#utility.yul\":5818:5852   */\n      tag_248\n        /* \"#utility.yul\":5827:5851   */\n      tag_249\n        /* \"#utility.yul\":5845:5850   */\n      dup5\n        /* \"#utility.yul\":5827:5851   */\n      tag_150\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":5818:5852   */\n      tag_163\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5800:5853   */\n      tag_150\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5787:5853   */\n      swap1\n      pop\n        /* \"#utility.yul\":5717:5859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5865:5991   */\n    tag_165:\n        /* \"#utility.yul\":5915:5924   */\n      0x00\n        /* \"#utility.yul\":5948:5985   */\n      tag_251\n        /* \"#utility.yul\":5979:5984   */\n      dup3\n        /* \"#utility.yul\":5948:5985   */\n      tag_164\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5935:5985   */\n      swap1\n      pop\n        /* \"#utility.yul\":5865:5991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5997:6131   */\n    tag_166:\n        /* \"#utility.yul\":6055:6064   */\n      0x00\n        /* \"#utility.yul\":6088:6125   */\n      tag_253\n        /* \"#utility.yul\":6119:6124   */\n      dup3\n        /* \"#utility.yul\":6088:6125   */\n      tag_165\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":6075:6125   */\n      swap1\n      pop\n        /* \"#utility.yul\":5997:6131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6137:6284   */\n    tag_167:\n        /* \"#utility.yul\":6232:6277   */\n      tag_255\n        /* \"#utility.yul\":6271:6276   */\n      dup2\n        /* \"#utility.yul\":6232:6277   */\n      tag_166\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6227:6230   */\n      dup3\n        /* \"#utility.yul\":6220:6278   */\n      mstore\n        /* \"#utility.yul\":6137:6284   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6290:6528   */\n    tag_80:\n        /* \"#utility.yul\":6391:6395   */\n      0x00\n        /* \"#utility.yul\":6429:6431   */\n      0x20\n        /* \"#utility.yul\":6418:6427   */\n      dup3\n        /* \"#utility.yul\":6414:6432   */\n      add\n        /* \"#utility.yul\":6406:6432   */\n      swap1\n      pop\n        /* \"#utility.yul\":6442:6521   */\n      tag_257\n        /* \"#utility.yul\":6518:6519   */\n      0x00\n        /* \"#utility.yul\":6507:6516   */\n      dup4\n        /* \"#utility.yul\":6503:6520   */\n      add\n        /* \"#utility.yul\":6494:6500   */\n      dup5\n        /* \"#utility.yul\":6442:6521   */\n      tag_167\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":6290:6528   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6534:6992   */\n    tag_93:\n        /* \"#utility.yul\":6691:6695   */\n      0x00\n        /* \"#utility.yul\":6729:6731   */\n      0x60\n        /* \"#utility.yul\":6718:6727   */\n      dup3\n        /* \"#utility.yul\":6714:6732   */\n      add\n        /* \"#utility.yul\":6706:6732   */\n      swap1\n      pop\n        /* \"#utility.yul\":6742:6821   */\n      tag_259\n        /* \"#utility.yul\":6818:6819   */\n      0x00\n        /* \"#utility.yul\":6807:6816   */\n      dup4\n        /* \"#utility.yul\":6803:6820   */\n      add\n        /* \"#utility.yul\":6794:6800   */\n      dup7\n        /* \"#utility.yul\":6742:6821   */\n      tag_167\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":6831:6903   */\n      tag_260\n        /* \"#utility.yul\":6899:6901   */\n      0x20\n        /* \"#utility.yul\":6888:6897   */\n      dup4\n        /* \"#utility.yul\":6884:6902   */\n      add\n        /* \"#utility.yul\":6875:6881   */\n      dup6\n        /* \"#utility.yul\":6831:6903   */\n      tag_160\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":6913:6985   */\n      tag_261\n        /* \"#utility.yul\":6981:6983   */\n      0x40\n        /* \"#utility.yul\":6970:6979   */\n      dup4\n        /* \"#utility.yul\":6966:6984   */\n      add\n        /* \"#utility.yul\":6957:6963   */\n      dup5\n        /* \"#utility.yul\":6913:6985   */\n      tag_149\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":6534:6992   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6998:7167   */\n    tag_168:\n        /* \"#utility.yul\":7082:7093   */\n      0x00\n        /* \"#utility.yul\":7116:7122   */\n      dup3\n        /* \"#utility.yul\":7111:7114   */\n      dup3\n        /* \"#utility.yul\":7104:7123   */\n      mstore\n        /* \"#utility.yul\":7156:7160   */\n      0x20\n        /* \"#utility.yul\":7151:7154   */\n      dup3\n        /* \"#utility.yul\":7147:7161   */\n      add\n        /* \"#utility.yul\":7132:7161   */\n      swap1\n      pop\n        /* \"#utility.yul\":6998:7167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7173:7355   */\n    tag_169:\n        /* \"#utility.yul\":7313:7347   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7309:7310   */\n      0x00\n        /* \"#utility.yul\":7301:7307   */\n      dup3\n        /* \"#utility.yul\":7297:7311   */\n      add\n        /* \"#utility.yul\":7290:7348   */\n      mstore\n        /* \"#utility.yul\":7173:7355   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7727   */\n    tag_170:\n        /* \"#utility.yul\":7503:7506   */\n      0x00\n        /* \"#utility.yul\":7524:7591   */\n      tag_265\n        /* \"#utility.yul\":7588:7590   */\n      0x20\n        /* \"#utility.yul\":7583:7586   */\n      dup4\n        /* \"#utility.yul\":7524:7591   */\n      tag_168\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":7517:7591   */\n      swap2\n      pop\n        /* \"#utility.yul\":7600:7693   */\n      tag_266\n        /* \"#utility.yul\":7689:7692   */\n      dup3\n        /* \"#utility.yul\":7600:7693   */\n      tag_169\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7718:7720   */\n      0x20\n        /* \"#utility.yul\":7713:7716   */\n      dup3\n        /* \"#utility.yul\":7709:7721   */\n      add\n        /* \"#utility.yul\":7702:7721   */\n      swap1\n      pop\n        /* \"#utility.yul\":7361:7727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7733:8152   */\n    tag_109:\n        /* \"#utility.yul\":7899:7903   */\n      0x00\n        /* \"#utility.yul\":7937:7939   */\n      0x20\n        /* \"#utility.yul\":7926:7935   */\n      dup3\n        /* \"#utility.yul\":7922:7940   */\n      add\n        /* \"#utility.yul\":7914:7940   */\n      swap1\n      pop\n        /* \"#utility.yul\":7986:7995   */\n      dup2\n        /* \"#utility.yul\":7980:7984   */\n      dup2\n        /* \"#utility.yul\":7976:7996   */\n      sub\n        /* \"#utility.yul\":7972:7973   */\n      0x00\n        /* \"#utility.yul\":7961:7970   */\n      dup4\n        /* \"#utility.yul\":7957:7974   */\n      add\n        /* \"#utility.yul\":7950:7997   */\n      mstore\n        /* \"#utility.yul\":8014:8145   */\n      tag_268\n        /* \"#utility.yul\":8140:8144   */\n      dup2\n        /* \"#utility.yul\":8014:8145   */\n      tag_170\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":8006:8145   */\n      swap1\n      pop\n        /* \"#utility.yul\":7733:8152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8158:8338   */\n    tag_171:\n        /* \"#utility.yul\":8206:8283   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8203:8204   */\n      0x00\n        /* \"#utility.yul\":8196:8284   */\n      mstore\n        /* \"#utility.yul\":8303:8307   */\n      0x11\n        /* \"#utility.yul\":8300:8301   */\n      0x04\n        /* \"#utility.yul\":8293:8308   */\n      mstore\n        /* \"#utility.yul\":8327:8331   */\n      0x24\n        /* \"#utility.yul\":8324:8325   */\n      0x00\n        /* \"#utility.yul\":8317:8332   */\n      revert\n        /* \"#utility.yul\":8344:8535   */\n    tag_133:\n        /* \"#utility.yul\":8384:8388   */\n      0x00\n        /* \"#utility.yul\":8404:8424   */\n      tag_271\n        /* \"#utility.yul\":8422:8423   */\n      dup3\n        /* \"#utility.yul\":8404:8424   */\n      tag_146\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":8399:8424   */\n      swap2\n      pop\n        /* \"#utility.yul\":8438:8458   */\n      tag_272\n        /* \"#utility.yul\":8456:8457   */\n      dup4\n        /* \"#utility.yul\":8438:8458   */\n      tag_146\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":8433:8458   */\n      swap3\n      pop\n        /* \"#utility.yul\":8477:8478   */\n      dup3\n        /* \"#utility.yul\":8474:8475   */\n      dup3\n        /* \"#utility.yul\":8471:8479   */\n      lt\n        /* \"#utility.yul\":8468:8502   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":8482:8500   */\n      tag_274\n      tag_171\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":8468:8502   */\n    tag_273:\n        /* \"#utility.yul\":8527:8528   */\n      dup3\n        /* \"#utility.yul\":8524:8525   */\n      dup3\n        /* \"#utility.yul\":8520:8529   */\n      sub\n        /* \"#utility.yul\":8512:8529   */\n      swap1\n      pop\n        /* \"#utility.yul\":8344:8535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8541:8846   */\n    tag_136:\n        /* \"#utility.yul\":8581:8584   */\n      0x00\n        /* \"#utility.yul\":8600:8620   */\n      tag_276\n        /* \"#utility.yul\":8618:8619   */\n      dup3\n        /* \"#utility.yul\":8600:8620   */\n      tag_146\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":8595:8620   */\n      swap2\n      pop\n        /* \"#utility.yul\":8634:8654   */\n      tag_277\n        /* \"#utility.yul\":8652:8653   */\n      dup4\n        /* \"#utility.yul\":8634:8654   */\n      tag_146\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":8629:8654   */\n      swap3\n      pop\n        /* \"#utility.yul\":8788:8789   */\n      dup3\n        /* \"#utility.yul\":8720:8786   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8716:8790   */\n      sub\n        /* \"#utility.yul\":8713:8714   */\n      dup3\n        /* \"#utility.yul\":8710:8791   */\n      gt\n        /* \"#utility.yul\":8707:8814   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":8794:8812   */\n      tag_279\n      tag_171\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":8707:8814   */\n    tag_278:\n        /* \"#utility.yul\":8838:8839   */\n      dup3\n        /* \"#utility.yul\":8835:8836   */\n      dup3\n        /* \"#utility.yul\":8831:8840   */\n      add\n        /* \"#utility.yul\":8824:8840   */\n      swap1\n      pop\n        /* \"#utility.yul\":8541:8846   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8852:9032   */\n    tag_172:\n        /* \"#utility.yul\":8900:8977   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8897:8898   */\n      0x00\n        /* \"#utility.yul\":8890:8978   */\n      mstore\n        /* \"#utility.yul\":8997:9001   */\n      0x12\n        /* \"#utility.yul\":8994:8995   */\n      0x04\n        /* \"#utility.yul\":8987:9002   */\n      mstore\n        /* \"#utility.yul\":9021:9025   */\n      0x24\n        /* \"#utility.yul\":9018:9019   */\n      0x00\n        /* \"#utility.yul\":9011:9026   */\n      revert\n        /* \"#utility.yul\":9038:9223   */\n    tag_139:\n        /* \"#utility.yul\":9078:9079   */\n      0x00\n        /* \"#utility.yul\":9095:9115   */\n      tag_282\n        /* \"#utility.yul\":9113:9114   */\n      dup3\n        /* \"#utility.yul\":9095:9115   */\n      tag_146\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":9090:9115   */\n      swap2\n      pop\n        /* \"#utility.yul\":9129:9149   */\n      tag_283\n        /* \"#utility.yul\":9147:9148   */\n      dup4\n        /* \"#utility.yul\":9129:9149   */\n      tag_146\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":9124:9149   */\n      swap3\n      pop\n        /* \"#utility.yul\":9168:9169   */\n      dup3\n        /* \"#utility.yul\":9158:9193   */\n      tag_284\n      jumpi\n        /* \"#utility.yul\":9173:9191   */\n      tag_285\n      tag_172\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":9158:9193   */\n    tag_284:\n        /* \"#utility.yul\":9215:9216   */\n      dup3\n        /* \"#utility.yul\":9212:9213   */\n      dup3\n        /* \"#utility.yul\":9208:9217   */\n      div\n        /* \"#utility.yul\":9203:9217   */\n      swap1\n      pop\n        /* \"#utility.yul\":9038:9223   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9229:9577   */\n    tag_142:\n        /* \"#utility.yul\":9269:9276   */\n      0x00\n        /* \"#utility.yul\":9292:9312   */\n      tag_287\n        /* \"#utility.yul\":9310:9311   */\n      dup3\n        /* \"#utility.yul\":9292:9312   */\n      tag_146\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":9287:9312   */\n      swap2\n      pop\n        /* \"#utility.yul\":9326:9346   */\n      tag_288\n        /* \"#utility.yul\":9344:9345   */\n      dup4\n        /* \"#utility.yul\":9326:9346   */\n      tag_146\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":9321:9346   */\n      swap3\n      pop\n        /* \"#utility.yul\":9514:9515   */\n      dup2\n        /* \"#utility.yul\":9446:9512   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9442:9516   */\n      div\n        /* \"#utility.yul\":9439:9440   */\n      dup4\n        /* \"#utility.yul\":9436:9517   */\n      gt\n        /* \"#utility.yul\":9431:9432   */\n      dup3\n        /* \"#utility.yul\":9424:9433   */\n      iszero\n        /* \"#utility.yul\":9417:9434   */\n      iszero\n        /* \"#utility.yul\":9413:9518   */\n      and\n        /* \"#utility.yul\":9410:9541   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":9521:9539   */\n      tag_290\n      tag_171\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":9410:9541   */\n    tag_289:\n        /* \"#utility.yul\":9569:9570   */\n      dup3\n        /* \"#utility.yul\":9566:9567   */\n      dup3\n        /* \"#utility.yul\":9562:9571   */\n      mul\n        /* \"#utility.yul\":9551:9571   */\n      swap1\n      pop\n        /* \"#utility.yul\":9229:9577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b09e14db54ac6e696aa475daf4cae14aba57f7b37aaaf4961106b2cd81b6371764736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_442": {
									"entryPoint": null,
									"id": 442,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1204:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:3",
														"type": ""
													}
												],
												"src": "545:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "788:413:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "834:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "836:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "836:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "836:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "809:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "818:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "805:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "801:32:3"
															},
															"nodeType": "YulIf",
															"src": "798:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "927:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "942:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "956:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "946:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "971:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1017:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1028:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1013:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1013:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1037:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "981:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "971:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1065:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1080:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1084:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1110:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1156:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1167:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1152:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1152:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1176:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1120:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1120:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1110:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "750:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "761:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "773:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "781:6:3",
														"type": ""
													}
												],
												"src": "694:507:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040527358d3a4cb28f30d9c87e8f79544f98f358cde62276000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051620014783803806200147883398181016040528101906200007d91906200011b565b33600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346003819055508160018190555080600281905550505062000162565b600080fd5b6000819050919050565b620000f581620000e0565b81146200010157600080fd5b50565b6000815190506200011581620000ea565b92915050565b60008060408385031215620001355762000134620000db565b5b6000620001458582860162000104565b9250506020620001588582860162000104565b9150509250929050565b61130680620001726000396000f3fe6080604052600436106100705760003560e01c806397dedb1d1161004e57806397dedb1d146100f7578063c3c6467414610134578063dac3fad41461015d578063fee3f7f91461017457610070565b80633a23bf491461007557806341a7726a146100b257806394756aa7146100ce575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610d80565b61018b565b6040516100a99190610dbc565b60405180910390f35b6100cc60048036038101906100c79190610e35565b6103c2565b005b3480156100da57600080fd5b506100f560048036038101906100f09190610ea0565b610537565b005b34801561010357600080fd5b5061011e60048036038101906101199190610d80565b610799565b60405161012b9190610dbc565b60405180910390f35b34801561014057600080fd5b5061015b60048036038101906101569190610f18565b6108a8565b005b34801561016957600080fd5b50610172610993565b005b34801561018057600080fd5b50610189610be8565b005b6000806101a5600454600354610ced90919063ffffffff16565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102039190610f67565b602060405180830381865afa158015610220573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102449190610f97565b9050600061025b8583610d0390919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ec9190610f97565b8111156103855760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561035e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103829190610f97565b90505b600061039c82600154610d1990919063ffffffff16565b905060006103b38286610ced90919063ffffffff16565b90508095505050505050919050565b60011515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461041f57600080fd5b600061044a6103e861043c60025434610d2f90919063ffffffff16565b610d1990919063ffffffff16565b905061046181600454610d0390919063ffffffff16565b600481905550600061047c8234610ced90919063ffffffff16565b9050600061048982610799565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b81526004016104e6929190610fc4565b6020604051808303816000875af1158015610505573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105299190611002565b504760038190555050505050565b60011515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461059457600080fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016105ee919061108e565b602060405180830381865afa15801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062f9190610f97565b101561063a57600080fd5b60006106458261018b565b905060006106726103e861066460025485610d2f90919063ffffffff16565b610d1990919063ffffffff16565b905061068981600454610d0390919063ffffffff16565b6004819055506106a28183610ced90919063ffffffff16565b91508373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156106ea573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8530866040518463ffffffff1660e01b8152600401610748939291906110a9565b6020604051808303816000875af1158015610767573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b9190611002565b504760038190555050505050565b6000806107b3600454600354610ced90919063ffffffff16565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108119190610f67565b602060405180830381865afa15801561082e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108529190610f97565b905060006108698584610d0390919063ffffffff16565b9050600061088282600154610d1990919063ffffffff16565b905060006108998285610ced90919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092f9061113d565b60405180910390fd5b80600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b3373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1a9061113d565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610a8b573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b449190610f67565b602060405180830381865afa158015610b61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b859190610f97565b6040518363ffffffff1660e01b8152600401610ba2929190610fc4565b6020604051808303816000875af1158015610bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be59190611002565b50565b3373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6f9061113d565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610ce2573d6000803e3d6000fd5b506000600481905550565b60008183610cfb919061118c565b905092915050565b60008183610d1191906111c0565b905092915050565b60008183610d279190611245565b905092915050565b60008183610d3d9190611276565b905092915050565b600080fd5b6000819050919050565b610d5d81610d4a565b8114610d6857600080fd5b50565b600081359050610d7a81610d54565b92915050565b600060208284031215610d9657610d95610d45565b5b6000610da484828501610d6b565b91505092915050565b610db681610d4a565b82525050565b6000602082019050610dd16000830184610dad565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e0282610dd7565b9050919050565b610e1281610df7565b8114610e1d57600080fd5b50565b600081359050610e2f81610e09565b92915050565b600060208284031215610e4b57610e4a610d45565b5b6000610e5984828501610e20565b91505092915050565b6000610e6d82610dd7565b9050919050565b610e7d81610e62565b8114610e8857600080fd5b50565b600081359050610e9a81610e74565b92915050565b60008060408385031215610eb757610eb6610d45565b5b6000610ec585828601610e8b565b9250506020610ed685828601610d6b565b9150509250929050565b60008115159050919050565b610ef581610ee0565b8114610f0057600080fd5b50565b600081359050610f1281610eec565b92915050565b60008060408385031215610f2f57610f2e610d45565b5b6000610f3d85828601610e20565b9250506020610f4e85828601610f03565b9150509250929050565b610f6181610df7565b82525050565b6000602082019050610f7c6000830184610f58565b92915050565b600081519050610f9181610d54565b92915050565b600060208284031215610fad57610fac610d45565b5b6000610fbb84828501610f82565b91505092915050565b6000604082019050610fd96000830185610f58565b610fe66020830184610dad565b9392505050565b600081519050610ffc81610eec565b92915050565b60006020828403121561101857611017610d45565b5b600061102684828501610fed565b91505092915050565b6000819050919050565b600061105461104f61104a84610dd7565b61102f565b610dd7565b9050919050565b600061106682611039565b9050919050565b60006110788261105b565b9050919050565b6110888161106d565b82525050565b60006020820190506110a3600083018461107f565b92915050565b60006060820190506110be600083018661107f565b6110cb6020830185610f58565b6110d86040830184610dad565b949350505050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006111276020836110e0565b9150611132826110f1565b602082019050919050565b600060208201905081810360008301526111568161111a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061119782610d4a565b91506111a283610d4a565b9250828210156111b5576111b461115d565b5b828203905092915050565b60006111cb82610d4a565b91506111d683610d4a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561120b5761120a61115d565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061125082610d4a565b915061125b83610d4a565b92508261126b5761126a611216565b5b828204905092915050565b600061128182610d4a565b915061128c83610d4a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112c5576112c461115d565b5b82820290509291505056fea2646970667358221220b09e14db54ac6e696aa475daf4cae14aba57f7b37aaaf4961106b2cd81b6371764736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x58D3A4CB28F30D9C87E8F79544F98F358CDE6227 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH3 0x1478 CODESIZE SUB DUP1 PUSH3 0x1478 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x7D SWAP2 SWAP1 PUSH3 0x11B JUMP JUMPDEST CALLER PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x162 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xF5 DUP2 PUSH3 0xE0 JUMP JUMPDEST DUP2 EQ PUSH3 0x101 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x115 DUP2 PUSH3 0xEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x135 JUMPI PUSH3 0x134 PUSH3 0xDB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x145 DUP6 DUP3 DUP7 ADD PUSH3 0x104 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x158 DUP6 DUP3 DUP7 ADD PUSH3 0x104 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1306 DUP1 PUSH3 0x172 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97DEDB1D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xDAC3FAD4 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xFEE3F7F9 EQ PUSH2 0x174 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x3A23BF49 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x41A7726A EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x94756AA7 EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xD80 JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xD80 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x993 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0xBE8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A5 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xCED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x220 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25B DUP6 DUP4 PUSH2 0xD03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x39C DUP3 PUSH1 0x1 SLOAD PUSH2 0xD19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3B3 DUP3 DUP7 PUSH2 0xCED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x44A PUSH2 0x3E8 PUSH2 0x43C PUSH1 0x2 SLOAD CALLVALUE PUSH2 0xD2F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x461 DUP2 PUSH1 0x4 SLOAD PUSH2 0xD03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x47C DUP3 CALLVALUE PUSH2 0xCED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x489 DUP3 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E6 SWAP3 SWAP2 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x505 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST POP SELFBALANCE PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST LT ISZERO PUSH2 0x63A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x645 DUP3 PUSH2 0x18B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x672 PUSH2 0x3E8 PUSH2 0x664 PUSH1 0x2 SLOAD DUP6 PUSH2 0xD2F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x689 DUP2 PUSH1 0x4 SLOAD PUSH2 0xD03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x6A2 DUP2 DUP4 PUSH2 0xCED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x767 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x78B SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST POP SELFBALANCE PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7B3 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xCED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x811 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x852 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x869 DUP6 DUP5 PUSH2 0xD03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x882 DUP3 PUSH1 0x1 SLOAD PUSH2 0xD19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x899 DUP3 DUP6 PUSH2 0xCED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1A SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB44 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB85 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA2 SWAP3 SWAP2 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6F SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x4 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xCFB SWAP2 SWAP1 PUSH2 0x118C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD11 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD27 SWAP2 SWAP1 PUSH2 0x1245 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x1276 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5D DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP2 EQ PUSH2 0xD68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD7A DUP2 PUSH2 0xD54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD96 JUMPI PUSH2 0xD95 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDA4 DUP5 DUP3 DUP6 ADD PUSH2 0xD6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDB6 DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDD1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE02 DUP3 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE12 DUP2 PUSH2 0xDF7 JUMP JUMPDEST DUP2 EQ PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE2F DUP2 PUSH2 0xE09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4B JUMPI PUSH2 0xE4A PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE59 DUP5 DUP3 DUP6 ADD PUSH2 0xE20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6D DUP3 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7D DUP2 PUSH2 0xE62 JUMP JUMPDEST DUP2 EQ PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE9A DUP2 PUSH2 0xE74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB7 JUMPI PUSH2 0xEB6 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC5 DUP6 DUP3 DUP7 ADD PUSH2 0xE8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xED6 DUP6 DUP3 DUP7 ADD PUSH2 0xD6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEF5 DUP2 PUSH2 0xEE0 JUMP JUMPDEST DUP2 EQ PUSH2 0xF00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF12 DUP2 PUSH2 0xEEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF2F JUMPI PUSH2 0xF2E PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF3D DUP6 DUP3 DUP7 ADD PUSH2 0xE20 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF4E DUP6 DUP3 DUP7 ADD PUSH2 0xF03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xF61 DUP2 PUSH2 0xDF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF91 DUP2 PUSH2 0xD54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFAD JUMPI PUSH2 0xFAC PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFBB DUP5 DUP3 DUP6 ADD PUSH2 0xF82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFD9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF58 JUMP JUMPDEST PUSH2 0xFE6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDAD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFFC DUP2 PUSH2 0xEEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1018 JUMPI PUSH2 0x1017 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1026 DUP5 DUP3 DUP6 ADD PUSH2 0xFED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1054 PUSH2 0x104F PUSH2 0x104A DUP5 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x102F JUMP JUMPDEST PUSH2 0xDD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1066 DUP3 PUSH2 0x1039 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1078 DUP3 PUSH2 0x105B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1088 DUP2 PUSH2 0x106D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x107F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10BE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x107F JUMP JUMPDEST PUSH2 0x10CB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF58 JUMP JUMPDEST PUSH2 0x10D8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDAD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1127 PUSH1 0x20 DUP4 PUSH2 0x10E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1132 DUP3 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1156 DUP2 PUSH2 0x111A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1197 DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP PUSH2 0x11A2 DUP4 PUSH2 0xD4A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x11B5 JUMPI PUSH2 0x11B4 PUSH2 0x115D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CB DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP PUSH2 0x11D6 DUP4 PUSH2 0xD4A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x120B JUMPI PUSH2 0x120A PUSH2 0x115D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1250 DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP PUSH2 0x125B DUP4 PUSH2 0xD4A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x126B JUMPI PUSH2 0x126A PUSH2 0x1216 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1281 DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP PUSH2 0x128C DUP4 PUSH2 0xD4A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12C5 JUMPI PUSH2 0x12C4 PUSH2 0x115D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 SWAP15 EQ 0xDB SLOAD 0xAC PUSH15 0x696AA475DAF4CAE14ABA57F7B37AAA DELEGATECALL SWAP7 GT MOD 0xB2 0xCD DUP2 0xB6 CALLDATACOPY OR PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "183:2864:2:-:0;;;261:42;238:66;;;;;;;;;;;;;;;;;;;;518:136;;;;;;;;;;;;;;;;;;;;;:::i;:::-;577:10;569:5;;:18;;;;;;;;;;;;;;;;;;609:9;594:12;:24;;;;629:2;625:1;:6;;;;644:4;638:3;:10;;;;518:136;;183:2864;;88:117:3;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:507::-;773:6;781;830:2;818:9;809:7;805:23;801:32;798:119;;;836:79;;:::i;:::-;798:119;956:1;981:64;1037:7;1028:6;1017:9;1013:22;981:64;:::i;:::-;971:74;;927:128;1094:2;1120:64;1176:7;1167:6;1156:9;1152:22;1120:64;:::i;:::-;1110:74;;1065:129;694:507;;;;;:::o;183:2864:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DCF_ETH_680": {
									"entryPoint": 395,
									"id": 680,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ETH_DCF_728": {
									"entryPoint": 1945,
									"id": 728,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@Warning_protect_759": {
									"entryPoint": 2451,
									"id": 759,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_253": {
									"entryPoint": 3331,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@admin_fee_777": {
									"entryPoint": 3048,
									"id": 777,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_298": {
									"entryPoint": 3353,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@market_619": {
									"entryPoint": 1335,
									"id": 619,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mul_283": {
									"entryPoint": 3375,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setRouter_476": {
									"entryPoint": 2216,
									"id": 476,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_268": {
									"entryPoint": 3309,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@subscribe_538": {
									"entryPoint": 962,
									"id": 538,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 3723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 3843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 3744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 4223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed": {
									"entryPoint": 4238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4265,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4036,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 3682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 4205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4445,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4630,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3397,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9580:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:3",
														"type": ""
													}
												],
												"src": "1025:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:3",
														"type": ""
													}
												],
												"src": "1149:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:3",
														"type": ""
													}
												],
												"src": "1377:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:3",
														"type": ""
													}
												],
												"src": "1509:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:3"
															},
															"nodeType": "YulIf",
															"src": "1664:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:3",
														"type": ""
													}
												],
												"src": "1611:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:3",
														"type": ""
													}
												],
												"src": "1739:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:3"
															},
															"nodeType": "YulIf",
															"src": "1960:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2089:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:3",
														"type": ""
													}
												],
												"src": "1884:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2272:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2282:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2311:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2293:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2293:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2282:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2254:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2264:7:3",
														"type": ""
													}
												],
												"src": "2219:104:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2380:87:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2445:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2454:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2457:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2447:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2447:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2447:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2403:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2436:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "2410:25:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2410:32:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2400:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2400:43:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2393:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2393:51:3"
															},
															"nodeType": "YulIf",
															"src": "2390:71:3"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2373:5:3",
														"type": ""
													}
												],
												"src": "2329:138:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2533:95:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2543:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2565:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2552:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2552:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2543:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2616:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "2581:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2581:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2581:41:3"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2511:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2519:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2527:5:3",
														"type": ""
													}
												],
												"src": "2473:155:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2725:399:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2771:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2773:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2773:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2773:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2746:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2755:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2767:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2738:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2738:32:3"
															},
															"nodeType": "YulIf",
															"src": "2735:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2864:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2879:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2893:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2883:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2908:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2951:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2962:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2971:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "2918:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2918:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2908:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2999:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3014:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3028:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3018:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3044:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3079:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3090:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3075:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3075:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3099:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3054:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3044:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2687:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2698:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2710:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2718:6:3",
														"type": ""
													}
												],
												"src": "2634:490:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3172:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3182:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3207:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3200:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3200:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3193:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3193:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3182:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3154:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3164:7:3",
														"type": ""
													}
												],
												"src": "3130:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3266:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3320:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3329:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3322:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3322:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3322:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3289:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3311:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3296:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3296:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3286:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3286:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3279:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3279:40:3"
															},
															"nodeType": "YulIf",
															"src": "3276:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3259:5:3",
														"type": ""
													}
												],
												"src": "3226:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3397:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3407:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3416:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3407:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3469:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3445:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3445:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3375:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3383:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3391:5:3",
														"type": ""
													}
												],
												"src": "3348:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3567:388:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3613:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3615:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3615:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3615:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3588:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3597:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3584:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3584:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3609:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3580:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:32:3"
															},
															"nodeType": "YulIf",
															"src": "3577:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3706:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3721:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3735:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3725:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3750:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3785:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3796:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3781:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3781:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3805:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3760:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3760:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3750:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3833:115:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3848:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3862:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3852:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3878:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3910:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3921:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3906:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3906:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3930:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3888:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3888:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3878:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3529:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3540:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3552:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3560:6:3",
														"type": ""
													}
												],
												"src": "3487:468:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4026:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4043:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4066:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4048:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4048:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4036:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4036:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4036:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4014:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4021:3:3",
														"type": ""
													}
												],
												"src": "3961:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4183:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4193:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4205:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4216:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4201:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4201:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4193:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4273:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4286:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4297:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4282:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4282:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4229:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4229:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4229:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4155:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4167:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4178:4:3",
														"type": ""
													}
												],
												"src": "4085:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4376:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4386:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4401:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4395:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4395:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4386:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4444:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4417:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4417:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4417:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4354:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4362:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4370:5:3",
														"type": ""
													}
												],
												"src": "4313:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4539:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4585:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4587:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4587:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4587:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4560:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4569:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4556:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4556:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4581:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4552:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4552:32:3"
															},
															"nodeType": "YulIf",
															"src": "4549:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4678:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4693:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4707:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4697:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4722:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4768:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4779:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4764:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4764:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4788:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4732:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4732:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4722:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4509:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4520:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4532:6:3",
														"type": ""
													}
												],
												"src": "4462:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4945:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4955:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4967:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4978:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4963:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4963:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4955:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5035:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5048:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5059:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5044:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5044:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4991:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4991:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5116:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5129:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5140:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5125:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5125:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5072:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5072:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5072:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4909:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4921:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4929:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4940:4:3",
														"type": ""
													}
												],
												"src": "4819:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5217:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5227:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5242:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5236:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5227:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5282:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5258:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5258:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5258:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5195:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5203:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5211:5:3",
														"type": ""
													}
												],
												"src": "5157:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5374:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5420:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5422:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5422:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5422:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5395:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5404:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5391:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5391:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5416:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5387:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5387:32:3"
															},
															"nodeType": "YulIf",
															"src": "5384:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5513:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5528:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5542:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5532:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5557:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5600:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5611:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5596:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5596:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5620:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5567:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5567:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5557:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5344:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5355:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5367:6:3",
														"type": ""
													}
												],
												"src": "5300:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5683:28:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5693:12:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5700:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5693:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5669:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5679:3:3",
														"type": ""
													}
												],
												"src": "5651:60:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5777:82:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5787:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5845:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "5827:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5827:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5818:8:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5818:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5800:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5800:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5787:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5757:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5767:9:3",
														"type": ""
													}
												],
												"src": "5717:142:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5925:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5935:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5979:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5948:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5948:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5935:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5905:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5915:9:3",
														"type": ""
													}
												],
												"src": "5865:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6065:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6075:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6119:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6088:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6088:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6075:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6045:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6055:9:3",
														"type": ""
													}
												],
												"src": "5997:134:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6210:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6227:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6271:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6232:38:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6232:45:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6220:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6220:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6220:58:3"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6198:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6205:3:3",
														"type": ""
													}
												],
												"src": "6137:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6396:132:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6406:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6418:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6429:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6414:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6414:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6406:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6494:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6507:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6518:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6503:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6503:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6442:51:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6442:79:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6442:79:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6368:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6380:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6391:4:3",
														"type": ""
													}
												],
												"src": "6290:238:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6696:296:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6706:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6718:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6729:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6714:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6714:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6706:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6794:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6807:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6818:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6803:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6803:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6742:51:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6742:79:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6742:79:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6875:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6888:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6899:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6884:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6831:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6831:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6831:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6957:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6970:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6981:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6966:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6966:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6913:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6913:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6913:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6652:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6664:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6672:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6680:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6691:4:3",
														"type": ""
													}
												],
												"src": "6534:458:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7094:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7111:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7116:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7104:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7104:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7104:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7132:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7151:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7156:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7147:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7147:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7132:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7066:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7071:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7082:11:3",
														"type": ""
													}
												],
												"src": "6998:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7279:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7301:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7309:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7297:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7297:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7313:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7290:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7290:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7290:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7271:6:3",
														"type": ""
													}
												],
												"src": "7173:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7507:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7517:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7583:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7588:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7524:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7524:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7517:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7689:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "7600:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7600:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7600:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7702:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7713:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7718:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7709:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7709:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7702:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7495:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7503:3:3",
														"type": ""
													}
												],
												"src": "7361:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7904:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7914:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7926:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7937:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7922:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7922:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7914:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7961:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7972:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7957:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7957:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7980:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7986:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7976:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7976:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7950:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7950:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7950:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8006:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8140:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8014:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8014:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8006:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7884:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7899:4:3",
														"type": ""
													}
												],
												"src": "7733:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8186:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8203:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8206:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8196:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8196:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8196:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8300:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8303:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8293:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8293:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8293:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8324:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8327:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8317:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8317:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8317:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8158:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8389:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8399:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8422:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8404:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8404:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8399:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8433:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8456:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8438:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8438:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8433:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8480:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8482:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8482:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8482:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8474:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8477:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8471:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8471:8:3"
															},
															"nodeType": "YulIf",
															"src": "8468:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8512:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8524:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8527:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8520:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8520:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8512:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8375:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8378:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8384:4:3",
														"type": ""
													}
												],
												"src": "8344:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8585:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8595:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8618:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8600:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8600:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8595:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8629:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8652:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8634:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8634:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8629:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8792:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8794:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8794:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8794:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8713:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8720:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8788:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8716:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8716:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8710:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8710:81:3"
															},
															"nodeType": "YulIf",
															"src": "8707:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8824:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8835:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8838:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8831:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8831:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8824:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8572:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8575:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8581:3:3",
														"type": ""
													}
												],
												"src": "8541:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8880:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8897:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8900:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8890:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8890:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8890:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8994:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8997:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8987:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8987:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8987:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9018:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9021:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9011:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9011:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9011:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8852:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9080:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9090:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9113:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9095:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9095:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9090:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9124:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9147:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9129:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9129:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9124:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9171:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9173:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9173:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9173:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9168:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9161:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9161:9:3"
															},
															"nodeType": "YulIf",
															"src": "9158:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9203:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9212:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9215:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9208:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9208:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9203:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9069:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9072:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9078:1:3",
														"type": ""
													}
												],
												"src": "9038:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9277:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9287:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9310:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9292:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9292:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9287:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9321:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9344:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9326:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9326:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9321:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9519:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9521:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9521:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9521:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9431:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9424:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9424:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9417:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9417:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9439:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9446:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9514:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9442:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9442:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9436:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9436:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9413:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9413:105:3"
															},
															"nodeType": "YulIf",
															"src": "9410:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9551:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9566:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9569:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9562:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9562:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9551:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9260:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9263:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9269:7:3",
														"type": ""
													}
												],
												"src": "9229:348:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100705760003560e01c806397dedb1d1161004e57806397dedb1d146100f7578063c3c6467414610134578063dac3fad41461015d578063fee3f7f91461017457610070565b80633a23bf491461007557806341a7726a146100b257806394756aa7146100ce575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610d80565b61018b565b6040516100a99190610dbc565b60405180910390f35b6100cc60048036038101906100c79190610e35565b6103c2565b005b3480156100da57600080fd5b506100f560048036038101906100f09190610ea0565b610537565b005b34801561010357600080fd5b5061011e60048036038101906101199190610d80565b610799565b60405161012b9190610dbc565b60405180910390f35b34801561014057600080fd5b5061015b60048036038101906101569190610f18565b6108a8565b005b34801561016957600080fd5b50610172610993565b005b34801561018057600080fd5b50610189610be8565b005b6000806101a5600454600354610ced90919063ffffffff16565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102039190610f67565b602060405180830381865afa158015610220573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102449190610f97565b9050600061025b8583610d0390919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ec9190610f97565b8111156103855760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561035e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103829190610f97565b90505b600061039c82600154610d1990919063ffffffff16565b905060006103b38286610ced90919063ffffffff16565b90508095505050505050919050565b60011515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461041f57600080fd5b600061044a6103e861043c60025434610d2f90919063ffffffff16565b610d1990919063ffffffff16565b905061046181600454610d0390919063ffffffff16565b600481905550600061047c8234610ced90919063ffffffff16565b9050600061048982610799565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b81526004016104e6929190610fc4565b6020604051808303816000875af1158015610505573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105299190611002565b504760038190555050505050565b60011515600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461059457600080fd5b8060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016105ee919061108e565b602060405180830381865afa15801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062f9190610f97565b101561063a57600080fd5b60006106458261018b565b905060006106726103e861066460025485610d2f90919063ffffffff16565b610d1990919063ffffffff16565b905061068981600454610d0390919063ffffffff16565b6004819055506106a28183610ced90919063ffffffff16565b91508373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156106ea573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8530866040518463ffffffff1660e01b8152600401610748939291906110a9565b6020604051808303816000875af1158015610767573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078b9190611002565b504760038190555050505050565b6000806107b3600454600354610ced90919063ffffffff16565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108119190610f67565b602060405180830381865afa15801561082e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108529190610f97565b905060006108698584610d0390919063ffffffff16565b9050600061088282600154610d1990919063ffffffff16565b905060006108998285610ced90919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092f9061113d565b60405180910390fd5b80600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b3373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1a9061113d565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610a8b573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b449190610f67565b602060405180830381865afa158015610b61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b859190610f97565b6040518363ffffffff1660e01b8152600401610ba2929190610fc4565b6020604051808303816000875af1158015610bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be59190611002565b50565b3373ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6f9061113d565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610ce2573d6000803e3d6000fd5b506000600481905550565b60008183610cfb919061118c565b905092915050565b60008183610d1191906111c0565b905092915050565b60008183610d279190611245565b905092915050565b60008183610d3d9190611276565b905092915050565b600080fd5b6000819050919050565b610d5d81610d4a565b8114610d6857600080fd5b50565b600081359050610d7a81610d54565b92915050565b600060208284031215610d9657610d95610d45565b5b6000610da484828501610d6b565b91505092915050565b610db681610d4a565b82525050565b6000602082019050610dd16000830184610dad565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e0282610dd7565b9050919050565b610e1281610df7565b8114610e1d57600080fd5b50565b600081359050610e2f81610e09565b92915050565b600060208284031215610e4b57610e4a610d45565b5b6000610e5984828501610e20565b91505092915050565b6000610e6d82610dd7565b9050919050565b610e7d81610e62565b8114610e8857600080fd5b50565b600081359050610e9a81610e74565b92915050565b60008060408385031215610eb757610eb6610d45565b5b6000610ec585828601610e8b565b9250506020610ed685828601610d6b565b9150509250929050565b60008115159050919050565b610ef581610ee0565b8114610f0057600080fd5b50565b600081359050610f1281610eec565b92915050565b60008060408385031215610f2f57610f2e610d45565b5b6000610f3d85828601610e20565b9250506020610f4e85828601610f03565b9150509250929050565b610f6181610df7565b82525050565b6000602082019050610f7c6000830184610f58565b92915050565b600081519050610f9181610d54565b92915050565b600060208284031215610fad57610fac610d45565b5b6000610fbb84828501610f82565b91505092915050565b6000604082019050610fd96000830185610f58565b610fe66020830184610dad565b9392505050565b600081519050610ffc81610eec565b92915050565b60006020828403121561101857611017610d45565b5b600061102684828501610fed565b91505092915050565b6000819050919050565b600061105461104f61104a84610dd7565b61102f565b610dd7565b9050919050565b600061106682611039565b9050919050565b60006110788261105b565b9050919050565b6110888161106d565b82525050565b60006020820190506110a3600083018461107f565b92915050565b60006060820190506110be600083018661107f565b6110cb6020830185610f58565b6110d86040830184610dad565b949350505050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006111276020836110e0565b9150611132826110f1565b602082019050919050565b600060208201905081810360008301526111568161111a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061119782610d4a565b91506111a283610d4a565b9250828210156111b5576111b461115d565b5b828203905092915050565b60006111cb82610d4a565b91506111d683610d4a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561120b5761120a61115d565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061125082610d4a565b915061125b83610d4a565b92508261126b5761126a611216565b5b828204905092915050565b600061128182610d4a565b915061128c83610d4a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112c5576112c461115d565b5b82820290509291505056fea2646970667358221220b09e14db54ac6e696aa475daf4cae14aba57f7b37aaaf4961106b2cd81b6371764736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97DEDB1D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xDAC3FAD4 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xFEE3F7F9 EQ PUSH2 0x174 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x3A23BF49 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x41A7726A EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x94756AA7 EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xD80 JUMP JUMPDEST PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xD80 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x993 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0xBE8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A5 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xCED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x220 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25B DUP6 DUP4 PUSH2 0xD03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x382 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x39C DUP3 PUSH1 0x1 SLOAD PUSH2 0xD19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3B3 DUP3 DUP7 PUSH2 0xCED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x44A PUSH2 0x3E8 PUSH2 0x43C PUSH1 0x2 SLOAD CALLVALUE PUSH2 0xD2F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x461 DUP2 PUSH1 0x4 SLOAD PUSH2 0xD03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x47C DUP3 CALLVALUE PUSH2 0xCED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x489 DUP3 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E6 SWAP3 SWAP2 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x505 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST POP SELFBALANCE PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST LT ISZERO PUSH2 0x63A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x645 DUP3 PUSH2 0x18B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x672 PUSH2 0x3E8 PUSH2 0x664 PUSH1 0x2 SLOAD DUP6 PUSH2 0xD2F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x689 DUP2 PUSH1 0x4 SLOAD PUSH2 0xD03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x6A2 DUP2 DUP4 PUSH2 0xCED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x767 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x78B SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST POP SELFBALANCE PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7B3 PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD PUSH2 0xCED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x811 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x852 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x869 DUP6 DUP5 PUSH2 0xD03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x882 DUP3 PUSH1 0x1 SLOAD PUSH2 0xD19 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x899 DUP3 DUP6 PUSH2 0xCED SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92F SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1A SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB44 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB85 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA2 SWAP3 SWAP2 SWAP1 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x1002 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6F SWAP1 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x4 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xCFB SWAP2 SWAP1 PUSH2 0x118C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD11 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD27 SWAP2 SWAP1 PUSH2 0x1245 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x1276 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5D DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP2 EQ PUSH2 0xD68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD7A DUP2 PUSH2 0xD54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD96 JUMPI PUSH2 0xD95 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDA4 DUP5 DUP3 DUP6 ADD PUSH2 0xD6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDB6 DUP2 PUSH2 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDD1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE02 DUP3 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE12 DUP2 PUSH2 0xDF7 JUMP JUMPDEST DUP2 EQ PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE2F DUP2 PUSH2 0xE09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4B JUMPI PUSH2 0xE4A PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE59 DUP5 DUP3 DUP6 ADD PUSH2 0xE20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6D DUP3 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE7D DUP2 PUSH2 0xE62 JUMP JUMPDEST DUP2 EQ PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE9A DUP2 PUSH2 0xE74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB7 JUMPI PUSH2 0xEB6 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEC5 DUP6 DUP3 DUP7 ADD PUSH2 0xE8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xED6 DUP6 DUP3 DUP7 ADD PUSH2 0xD6B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEF5 DUP2 PUSH2 0xEE0 JUMP JUMPDEST DUP2 EQ PUSH2 0xF00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF12 DUP2 PUSH2 0xEEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF2F JUMPI PUSH2 0xF2E PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF3D DUP6 DUP3 DUP7 ADD PUSH2 0xE20 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF4E DUP6 DUP3 DUP7 ADD PUSH2 0xF03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xF61 DUP2 PUSH2 0xDF7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF91 DUP2 PUSH2 0xD54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFAD JUMPI PUSH2 0xFAC PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFBB DUP5 DUP3 DUP6 ADD PUSH2 0xF82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFD9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF58 JUMP JUMPDEST PUSH2 0xFE6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDAD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFFC DUP2 PUSH2 0xEEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1018 JUMPI PUSH2 0x1017 PUSH2 0xD45 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1026 DUP5 DUP3 DUP6 ADD PUSH2 0xFED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1054 PUSH2 0x104F PUSH2 0x104A DUP5 PUSH2 0xDD7 JUMP JUMPDEST PUSH2 0x102F JUMP JUMPDEST PUSH2 0xDD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1066 DUP3 PUSH2 0x1039 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1078 DUP3 PUSH2 0x105B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1088 DUP2 PUSH2 0x106D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x107F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10BE PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x107F JUMP JUMPDEST PUSH2 0x10CB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF58 JUMP JUMPDEST PUSH2 0x10D8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDAD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1127 PUSH1 0x20 DUP4 PUSH2 0x10E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1132 DUP3 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1156 DUP2 PUSH2 0x111A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1197 DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP PUSH2 0x11A2 DUP4 PUSH2 0xD4A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x11B5 JUMPI PUSH2 0x11B4 PUSH2 0x115D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CB DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP PUSH2 0x11D6 DUP4 PUSH2 0xD4A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x120B JUMPI PUSH2 0x120A PUSH2 0x115D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1250 DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP PUSH2 0x125B DUP4 PUSH2 0xD4A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x126B JUMPI PUSH2 0x126A PUSH2 0x1216 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1281 DUP3 PUSH2 0xD4A JUMP JUMPDEST SWAP2 POP PUSH2 0x128C DUP4 PUSH2 0xD4A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12C5 JUMPI PUSH2 0x12C4 PUSH2 0x115D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 SWAP15 EQ 0xDB SLOAD 0xAC PUSH15 0x696AA475DAF4CAE14ABA57F7B37AAA DELEGATECALL SWAP7 GT MOD 0xB2 0xCD DUP2 0xB6 CALLDATACOPY OR PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "183:2864:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1912:463;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;964:410;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1382:522;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2383:360;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;854:102;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2756:162;;;;;;;;;;;;;:::i;:::-;;2926:98;;;;;;;;;;;;;:::i;:::-;;1912:463;1968:7;1983:19;2005:23;2022:5;;2005:12;;:16;;:23;;;;:::i;:::-;1983:45;;2035:19;2057:5;;;;;;;;;;;:15;;;2081:4;2057:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2035:52;;2098:20;2121:27;2137:10;2121:11;:15;;:27;;;;:::i;:::-;2098:50;;2175:5;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2160:12;:34;2157:89;;;2219:5;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2204:34;;2157:89;2254:20;2277:19;2283:12;2277:1;;:5;;:19;;;;:::i;:::-;2254:42;;2303:14;2320:29;2336:12;2320:11;:15;;:29;;;;:::i;:::-;2303:46;;2363:6;2356:13;;;;;;;1912:463;;;:::o;964:410::-;1062:4;1035:31;;:11;:23;1047:10;1035:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;1027:40;;;;;;1078:12;1093:28;1116:4;1093:18;1107:3;;1093:9;:13;;:18;;;;:::i;:::-;:22;;:28;;;;:::i;:::-;1078:43;;1144:15;1154:4;1144:5;;:9;;:15;;;;:::i;:::-;1136:5;:23;;;;1168:18;1189:19;1203:4;1189:9;:13;;:19;;;;:::i;:::-;1168:40;;1219:18;1240:19;1248:10;1240:7;:19::i;:::-;1219:40;;1274:5;;;;;;;;;;:14;;;1289:10;1300;1274:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1339:21;1324:12;:36;;;;1018:356;;;964:410;:::o;1382:522::-;1494:4;1467:31;;:11;:23;1479:10;1467:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;1459:40;;;;;;1543:10;1516:5;;;;;;;;;;:15;;;1532:6;1516:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;1508:46;;;;;;1565:18;1586:19;1594:10;1586:7;:19::i;:::-;1565:40;;1614:12;1629:29;1653:4;1629:19;1644:3;;1629:10;:14;;:19;;;;:::i;:::-;:23;;:29;;;;:::i;:::-;1614:44;;1675:15;1685:4;1675:5;;:9;;:15;;;;:::i;:::-;1667:5;:23;;;;1712:20;1727:4;1712:10;:14;;:20;;;;:::i;:::-;1699:33;;1747:6;:15;;:27;1763:10;1747:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1783:5;;;;;;;;;;:18;;;1802:6;1817:4;1823:10;1783:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1863:21;1848:12;:36;;;;1450:454;;1382:522;;:::o;2383:360::-;2439:7;2454:19;2476:23;2493:5;;2476:12;;:16;;:23;;;;:::i;:::-;2454:45;;2506:19;2528:5;;;;;;;;;;;:15;;;2552:4;2528:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2506:52;;2565:20;2588:27;2604:10;2588:11;:15;;:27;;;;:::i;:::-;2565:50;;2622:20;2645:19;2651:12;2645:1;;:5;;:19;;;;:::i;:::-;2622:42;;2671:14;2688:29;2704:12;2688:11;:15;;:29;;;;:::i;:::-;2671:46;;2731:6;2724:13;;;;;;;2383:360;;;:::o;854:102::-;777:10;768:19;;:5;;;;;;;;;;;:19;;;760:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;945:5:::1;925:11;:17;937:4;925:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;854:102:::0;;:::o;2756:162::-;777:10;768:19;;:5;;;;;;;;;;;:19;;;760:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2815:5:::1;;;;;;;;;;;2807:23;;:46;2831:21;2807:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2860:5;::::0;::::1;;;;;;;;:14;;;2875:5;;;;;;;;;;;2881;::::0;::::1;;;;;;;;:15;;;2905:4;2881:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2860:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2756:162::o:0;2926:98::-;777:10;768:19;;:5;;;;;;;;;;;:19;;;760:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2979:5:::1;;;;;;;;;;;2971:23;;:30;2995:5;;2971:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3016:1;3008:5;:9;;;;2926:98::o:0;3122:96:1:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:104::-;2264:7;2293:24;2311:5;2293:24;:::i;:::-;2282:35;;2219:104;;;:::o;2329:138::-;2410:32;2436:5;2410:32;:::i;:::-;2403:5;2400:43;2390:71;;2457:1;2454;2447:12;2390:71;2329:138;:::o;2473:155::-;2527:5;2565:6;2552:20;2543:29;;2581:41;2616:5;2581:41;:::i;:::-;2473:155;;;;:::o;2634:490::-;2710:6;2718;2767:2;2755:9;2746:7;2742:23;2738:32;2735:119;;;2773:79;;:::i;:::-;2735:119;2893:1;2918:61;2971:7;2962:6;2951:9;2947:22;2918:61;:::i;:::-;2908:71;;2864:125;3028:2;3054:53;3099:7;3090:6;3079:9;3075:22;3054:53;:::i;:::-;3044:63;;2999:118;2634:490;;;;;:::o;3130:90::-;3164:7;3207:5;3200:13;3193:21;3182:32;;3130:90;;;:::o;3226:116::-;3296:21;3311:5;3296:21;:::i;:::-;3289:5;3286:32;3276:60;;3332:1;3329;3322:12;3276:60;3226:116;:::o;3348:133::-;3391:5;3429:6;3416:20;3407:29;;3445:30;3469:5;3445:30;:::i;:::-;3348:133;;;;:::o;3487:468::-;3552:6;3560;3609:2;3597:9;3588:7;3584:23;3580:32;3577:119;;;3615:79;;:::i;:::-;3577:119;3735:1;3760:53;3805:7;3796:6;3785:9;3781:22;3760:53;:::i;:::-;3750:63;;3706:117;3862:2;3888:50;3930:7;3921:6;3910:9;3906:22;3888:50;:::i;:::-;3878:60;;3833:115;3487:468;;;;;:::o;3961:118::-;4048:24;4066:5;4048:24;:::i;:::-;4043:3;4036:37;3961:118;;:::o;4085:222::-;4178:4;4216:2;4205:9;4201:18;4193:26;;4229:71;4297:1;4286:9;4282:17;4273:6;4229:71;:::i;:::-;4085:222;;;;:::o;4313:143::-;4370:5;4401:6;4395:13;4386:22;;4417:33;4444:5;4417:33;:::i;:::-;4313:143;;;;:::o;4462:351::-;4532:6;4581:2;4569:9;4560:7;4556:23;4552:32;4549:119;;;4587:79;;:::i;:::-;4549:119;4707:1;4732:64;4788:7;4779:6;4768:9;4764:22;4732:64;:::i;:::-;4722:74;;4678:128;4462:351;;;;:::o;4819:332::-;4940:4;4978:2;4967:9;4963:18;4955:26;;4991:71;5059:1;5048:9;5044:17;5035:6;4991:71;:::i;:::-;5072:72;5140:2;5129:9;5125:18;5116:6;5072:72;:::i;:::-;4819:332;;;;;:::o;5157:137::-;5211:5;5242:6;5236:13;5227:22;;5258:30;5282:5;5258:30;:::i;:::-;5157:137;;;;:::o;5300:345::-;5367:6;5416:2;5404:9;5395:7;5391:23;5387:32;5384:119;;;5422:79;;:::i;:::-;5384:119;5542:1;5567:61;5620:7;5611:6;5600:9;5596:22;5567:61;:::i;:::-;5557:71;;5513:125;5300:345;;;;:::o;5651:60::-;5679:3;5700:5;5693:12;;5651:60;;;:::o;5717:142::-;5767:9;5800:53;5818:34;5827:24;5845:5;5827:24;:::i;:::-;5818:34;:::i;:::-;5800:53;:::i;:::-;5787:66;;5717:142;;;:::o;5865:126::-;5915:9;5948:37;5979:5;5948:37;:::i;:::-;5935:50;;5865:126;;;:::o;5997:134::-;6055:9;6088:37;6119:5;6088:37;:::i;:::-;6075:50;;5997:134;;;:::o;6137:147::-;6232:45;6271:5;6232:45;:::i;:::-;6227:3;6220:58;6137:147;;:::o;6290:238::-;6391:4;6429:2;6418:9;6414:18;6406:26;;6442:79;6518:1;6507:9;6503:17;6494:6;6442:79;:::i;:::-;6290:238;;;;:::o;6534:458::-;6691:4;6729:2;6718:9;6714:18;6706:26;;6742:79;6818:1;6807:9;6803:17;6794:6;6742:79;:::i;:::-;6831:72;6899:2;6888:9;6884:18;6875:6;6831:72;:::i;:::-;6913;6981:2;6970:9;6966:18;6957:6;6913:72;:::i;:::-;6534:458;;;;;;:::o;6998:169::-;7082:11;7116:6;7111:3;7104:19;7156:4;7151:3;7147:14;7132:29;;6998:169;;;;:::o;7173:182::-;7313:34;7309:1;7301:6;7297:14;7290:58;7173:182;:::o;7361:366::-;7503:3;7524:67;7588:2;7583:3;7524:67;:::i;:::-;7517:74;;7600:93;7689:3;7600:93;:::i;:::-;7718:2;7713:3;7709:12;7702:19;;7361:366;;;:::o;7733:419::-;7899:4;7937:2;7926:9;7922:18;7914:26;;7986:9;7980:4;7976:20;7972:1;7961:9;7957:17;7950:47;8014:131;8140:4;8014:131;:::i;:::-;8006:139;;7733:419;;;:::o;8158:180::-;8206:77;8203:1;8196:88;8303:4;8300:1;8293:15;8327:4;8324:1;8317:15;8344:191;8384:4;8404:20;8422:1;8404:20;:::i;:::-;8399:25;;8438:20;8456:1;8438:20;:::i;:::-;8433:25;;8477:1;8474;8471:8;8468:34;;;8482:18;;:::i;:::-;8468:34;8527:1;8524;8520:9;8512:17;;8344:191;;;;:::o;8541:305::-;8581:3;8600:20;8618:1;8600:20;:::i;:::-;8595:25;;8634:20;8652:1;8634:20;:::i;:::-;8629:25;;8788:1;8720:66;8716:74;8713:1;8710:81;8707:107;;;8794:18;;:::i;:::-;8707:107;8838:1;8835;8831:9;8824:16;;8541:305;;;;:::o;8852:180::-;8900:77;8897:1;8890:88;8997:4;8994:1;8987:15;9021:4;9018:1;9011:15;9038:185;9078:1;9095:20;9113:1;9095:20;:::i;:::-;9090:25;;9129:20;9147:1;9129:20;:::i;:::-;9124:25;;9168:1;9158:35;;9173:18;;:::i;:::-;9158:35;9215:1;9212;9208:9;9203:14;;9038:185;;;;:::o;9229:348::-;9269:7;9292:20;9310:1;9292:20;:::i;:::-;9287:25;;9326:20;9344:1;9326:20;:::i;:::-;9321:25;;9514:1;9446:66;9442:74;9439:1;9436:81;9431:1;9424:9;9417:17;9413:105;9410:131;;;9521:18;;:::i;:::-;9410:131;9569:1;9566;9562:9;9551:20;;9229:348;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "974000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DCF_ETH(uint256)": "infinite",
								"ETH_DCF(uint256)": "infinite",
								"Warning_protect()": "infinite",
								"admin_fee()": "infinite",
								"market(address,uint256)": "infinite",
								"setRouter(address,bool)": "27183",
								"subscribe(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 183,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 183,
									"end": 3047,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 261,
									"end": 303,
									"name": "PUSH",
									"source": 2,
									"value": "58D3A4CB28F30D9C87E8F79544F98F358CDE6227"
								},
								{
									"begin": 238,
									"end": 304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 304,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 238,
									"end": 304,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 238,
									"end": 304,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 238,
									"end": 304,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 238,
									"end": 304,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 518,
									"end": 654,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 518,
									"end": 654,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 518,
									"end": 654,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 518,
									"end": 654,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 518,
									"end": 654,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 577,
									"end": 587,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 569,
									"end": 574,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 569,
									"end": 574,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 569,
									"end": 587,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 569,
									"end": 587,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 569,
									"end": 587,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 569,
									"end": 587,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 569,
									"end": 587,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 569,
									"end": 587,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 569,
									"end": 587,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 569,
									"end": 587,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 569,
									"end": 587,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 569,
									"end": 587,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 569,
									"end": 587,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 569,
									"end": 587,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 569,
									"end": 587,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 569,
									"end": 587,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 609,
									"end": 618,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 594,
									"end": 606,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 594,
									"end": 618,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 594,
									"end": 618,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 594,
									"end": 618,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 594,
									"end": 618,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 629,
									"end": 631,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 625,
									"end": 626,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 625,
									"end": 631,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 625,
									"end": 631,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 625,
									"end": 631,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 625,
									"end": 631,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 644,
									"end": 648,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 638,
									"end": 641,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 638,
									"end": 648,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 638,
									"end": 648,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 638,
									"end": 648,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 638,
									"end": 648,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 518,
									"end": 654,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 183,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 183,
									"end": 3047,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 773,
									"end": 779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 787,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 830,
									"end": 832,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 827,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 809,
									"end": 816,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 805,
									"end": 828,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 801,
									"end": 833,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 798,
									"end": 917,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 798,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 836,
									"end": 915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 836,
									"end": 915,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 798,
									"end": 917,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 956,
									"end": 957,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1037,
									"end": 1044,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1017,
									"end": 1026,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1013,
									"end": 1035,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 981,
									"end": 1045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 927,
									"end": 1055,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1094,
									"end": 1096,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1176,
									"end": 1183,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1167,
									"end": 1173,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1156,
									"end": 1165,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1152,
									"end": 1174,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1120,
									"end": 1184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1065,
									"end": 1194,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 183,
									"end": 3047,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 183,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 183,
									"end": 3047,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 3047,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 183,
									"end": 3047,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 3047,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 183,
									"end": 3047,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 3047,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b09e14db54ac6e696aa475daf4cae14aba57f7b37aaaf4961106b2cd81b6371764736f6c634300080e0033",
									".code": [
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "97DEDB1D"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "97DEDB1D"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "C3C64674"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "DAC3FAD4"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "FEE3F7F9"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "3A23BF49"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "41A7726A"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "94756AA7"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 183,
											"end": 3047,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1912,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1912,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1912,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 964,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1382,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1382,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2383,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2383,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2383,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 854,
											"end": 956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 854,
											"end": 956,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 854,
											"end": 956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 854,
											"end": 956,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 854,
											"end": 956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 854,
											"end": 956,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 854,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 854,
											"end": 956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 854,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 854,
											"end": 956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2756,
											"end": 2918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2926,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 1975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2002,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2022,
											"end": 2027,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2022,
											"end": 2027,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2005,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2028,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2028,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2005,
											"end": 2028,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2028,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2005,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 2028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2057,
											"end": 2062,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2057,
											"end": 2072,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2081,
											"end": 2085,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2057,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2057,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2057,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2137,
											"end": 2147,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2121,
											"end": 2136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2148,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2148,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2121,
											"end": 2148,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2148,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2121,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2192,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2175,
											"end": 2192,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2192,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2175,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2175,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2172,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2194,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2246,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2157,
											"end": 2246,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2224,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2219,
											"end": 2224,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2224,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2219,
											"end": 2224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2236,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2219,
											"end": 2236,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2236,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2219,
											"end": 2238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2219,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2238,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2204,
											"end": 2238,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2246,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2157,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2278,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2277,
											"end": 2278,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2277,
											"end": 2282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2277,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2254,
											"end": 2296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2336,
											"end": 2348,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2320,
											"end": 2331,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2320,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2320,
											"end": 2335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2320,
											"end": 2349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2320,
											"end": 2349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2320,
											"end": 2349,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2320,
											"end": 2349,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2320,
											"end": 2349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2320,
											"end": 2349,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2320,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2369,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1066,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1035,
											"end": 1066,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1066,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1066,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1066,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1066,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1027,
											"end": 1067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1067,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1027,
											"end": 1067,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1027,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1116,
											"end": 1120,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1102,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1093,
											"end": 1106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1093,
											"end": 1115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1121,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1093,
											"end": 1121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1121,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1093,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1154,
											"end": 1158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1149,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1144,
											"end": 1149,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1144,
											"end": 1153,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1159,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1144,
											"end": 1159,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1159,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1144,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1141,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1203,
											"end": 1207,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1198,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1189,
											"end": 1202,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1208,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1189,
											"end": 1208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1189,
											"end": 1208,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1189,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1248,
											"end": 1258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1240,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1259,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1240,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1289,
											"end": 1299,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1310,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1274,
											"end": 1311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1274,
											"end": 1311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1311,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1360,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1336,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1324,
											"end": 1360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1360,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 964,
											"end": 1374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1494,
											"end": 1498,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1467,
											"end": 1498,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1498,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1478,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1489,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1498,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1498,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1498,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1459,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1521,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1521,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1516,
											"end": 1521,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1521,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1521,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1521,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1521,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1531,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 1538,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1516,
											"end": 1539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1516,
											"end": 1539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1553,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1553,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1508,
											"end": 1554,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1554,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1554,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1554,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1508,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1594,
											"end": 1604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1586,
											"end": 1605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1586,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1614,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1653,
											"end": 1657,
											"name": "PUSH",
											"source": 2,
											"value": "3E8"
										},
										{
											"begin": 1629,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1644,
											"end": 1647,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1644,
											"end": 1647,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1639,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1629,
											"end": 1643,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1648,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1648,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1648,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1648,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1629,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1629,
											"end": 1652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1614,
											"end": 1658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1614,
											"end": 1658,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1685,
											"end": 1689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1680,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1675,
											"end": 1680,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1675,
											"end": 1684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1690,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1690,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1675,
											"end": 1690,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1690,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1675,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1667,
											"end": 1690,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1690,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1727,
											"end": 1731,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1722,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1712,
											"end": 1726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1732,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1732,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1753,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1762,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1747,
											"end": 1762,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 1763,
											"end": 1773,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1747,
											"end": 1774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1788,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1788,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1788,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1783,
											"end": 1788,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1788,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1788,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1783,
											"end": 1788,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1783,
											"end": 1801,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1802,
											"end": 1808,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1821,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1823,
											"end": 1833,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1783,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1783,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1884,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1848,
											"end": 1884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1884,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1450,
											"end": 1904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2439,
											"end": 2446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2493,
											"end": 2498,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2493,
											"end": 2498,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2488,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2476,
											"end": 2488,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2476,
											"end": 2492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2525,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2543,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2552,
											"end": 2556,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2528,
											"end": 2558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2528,
											"end": 2558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2604,
											"end": 2614,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2599,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2588,
											"end": 2603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2615,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2615,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2615,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2588,
											"end": 2615,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2615,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2588,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2615,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2615,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2642,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2651,
											"end": 2663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2646,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2645,
											"end": 2646,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2645,
											"end": 2650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2622,
											"end": 2664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2685,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2704,
											"end": 2716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2699,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2688,
											"end": 2703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2717,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2688,
											"end": 2717,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2717,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2688,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2737,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 854,
											"end": 956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 768,
											"end": 787,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 787,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 768,
											"end": 787,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 787,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 768,
											"end": 787,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 760,
											"end": 824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 945,
											"end": 950,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 925,
											"end": 936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 925,
											"end": 942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 925,
											"end": 950,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2756,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 768,
											"end": 787,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 787,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 768,
											"end": 787,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 787,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 768,
											"end": 787,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 760,
											"end": 824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2815,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2815,
											"end": 2820,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2815,
											"end": 2820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2830,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 2831,
											"end": 2852,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2853,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2807,
											"end": 2853,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2860,
											"end": 2874,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 2875,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2875,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2880,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2875,
											"end": 2880,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2880,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2875,
											"end": 2880,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2886,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2886,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2881,
											"end": 2886,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2886,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2881,
											"end": 2886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2881,
											"end": 2896,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2905,
											"end": 2909,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2881,
											"end": 2911,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2881,
											"end": 2911,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2881,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2860,
											"end": 2912,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2860,
											"end": 2912,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2912,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2926,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 777,
											"end": 787,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 768,
											"end": 787,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 787,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 768,
											"end": 773,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 768,
											"end": 787,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 787,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 768,
											"end": 787,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 760,
											"end": 824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 760,
											"end": 824,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 760,
											"end": 824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2979,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2979,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2979,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2979,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2979,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2979,
											"end": 2984,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2979,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2979,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2979,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2979,
											"end": 2984,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2971,
											"end": 2994,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 2995,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2995,
											"end": 3000,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 3001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3016,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3008,
											"end": 3017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3017,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 3024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2219,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2311,
											"end": 2316,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2293,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2293,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2282,
											"end": 2317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2282,
											"end": 2317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2323,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2323,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2323,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2467,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2329,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2410,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2400,
											"end": 2443,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2532,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2571,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2572,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2616,
											"end": 2621,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2581,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2581,
											"end": 2622,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2581,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2724,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2755,
											"end": 2764,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2742,
											"end": 2765,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2770,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2735,
											"end": 2854,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2735,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2735,
											"end": 2854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2773,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2773,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2852,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2773,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2735,
											"end": 2854,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2735,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2893,
											"end": 2894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2971,
											"end": 2978,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 2968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 2960,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 2969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2918,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2918,
											"end": 2979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2918,
											"end": 2979,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2918,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2979,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2864,
											"end": 2989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3028,
											"end": 3030,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 3099,
											"end": 3106,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3090,
											"end": 3096,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3097,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3054,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 3054,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2999,
											"end": 3117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 3124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 3124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3171,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3212,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3213,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3193,
											"end": 3214,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3182,
											"end": 3214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3182,
											"end": 3214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3220,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3342,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3226,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3296,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3317,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 3296,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3294,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3318,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3276,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3276,
											"end": 3336,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3333,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3330,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3276,
											"end": 3336,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3276,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3342,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3226,
											"end": 3342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3391,
											"end": 3396,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3436,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 3469,
											"end": 3474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3445,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3475,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 3445,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3552,
											"end": 3558,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3560,
											"end": 3566,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3609,
											"end": 3611,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3607,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3612,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3615,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3736,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3805,
											"end": 3812,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3802,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3785,
											"end": 3794,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3781,
											"end": 3803,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3760,
											"end": 3813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3813,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3706,
											"end": 3823,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3862,
											"end": 3864,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 3930,
											"end": 3937,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 3927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3906,
											"end": 3928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3888,
											"end": 3938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3938,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 3888,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 3938,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 3938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3948,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3487,
											"end": 3955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4079,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3961,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4048,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 4066,
											"end": 4071,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4048,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4048,
											"end": 4072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4048,
											"end": 4072,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 4048,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4046,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4036,
											"end": 4073,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4178,
											"end": 4182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4205,
											"end": 4214,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4201,
											"end": 4219,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4295,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4299,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4273,
											"end": 4279,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4229,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 4229,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4085,
											"end": 4307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4085,
											"end": 4307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4370,
											"end": 4375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4407,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4395,
											"end": 4408,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4386,
											"end": 4408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4386,
											"end": 4408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 4444,
											"end": 4449,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4417,
											"end": 4450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4417,
											"end": 4450,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 4417,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4313,
											"end": 4456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4532,
											"end": 4538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4581,
											"end": 4583,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4569,
											"end": 4578,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4560,
											"end": 4567,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4556,
											"end": 4579,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4552,
											"end": 4584,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4668,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4549,
											"end": 4668,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4587,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 4587,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4587,
											"end": 4666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4587,
											"end": 4666,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 4587,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4668,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4549,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4732,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 4788,
											"end": 4795,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4779,
											"end": 4785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4768,
											"end": 4777,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4764,
											"end": 4786,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4732,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4732,
											"end": 4796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4732,
											"end": 4796,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 4732,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4796,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4796,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4678,
											"end": 4806,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4940,
											"end": 4944,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 4980,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4967,
											"end": 4976,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4963,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4955,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4955,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 5059,
											"end": 5060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5057,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5061,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4991,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5062,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 4991,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 5140,
											"end": 5142,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5125,
											"end": 5143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5116,
											"end": 5122,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5072,
											"end": 5144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 5072,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 5151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 5151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5211,
											"end": 5216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5236,
											"end": 5249,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5249,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5249,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5258,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 5282,
											"end": 5287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5258,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 5258,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5258,
											"end": 5288,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 5258,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5157,
											"end": 5294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5416,
											"end": 5418,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5395,
											"end": 5402,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5391,
											"end": 5414,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5387,
											"end": 5419,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5384,
											"end": 5503,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5384,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 5384,
											"end": 5503,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5422,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 5422,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5422,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5422,
											"end": 5501,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 5422,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5384,
											"end": 5503,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 5384,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5542,
											"end": 5543,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 5620,
											"end": 5627,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5611,
											"end": 5617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5600,
											"end": 5609,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 5618,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5567,
											"end": 5628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 5567,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5557,
											"end": 5628,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5557,
											"end": 5628,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5513,
											"end": 5638,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5300,
											"end": 5645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 5711,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5651,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5682,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5700,
											"end": 5705,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 5711,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 5711,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 5711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5651,
											"end": 5711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5717,
											"end": 5859,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5717,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5800,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 5818,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 5827,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 5845,
											"end": 5850,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5827,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5827,
											"end": 5851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5827,
											"end": 5851,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 5827,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5818,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5818,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5818,
											"end": 5852,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 5818,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5800,
											"end": 5853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5853,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 5800,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5787,
											"end": 5853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5787,
											"end": 5853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5717,
											"end": 5859,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5717,
											"end": 5859,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5717,
											"end": 5859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5717,
											"end": 5859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5991,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5865,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 5924,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 5979,
											"end": 5984,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5948,
											"end": 5985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 5948,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5935,
											"end": 5985,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5935,
											"end": 5985,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5991,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5991,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5991,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6131,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5997,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6055,
											"end": 6064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6088,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 6119,
											"end": 6124,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6088,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 6088,
											"end": 6125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6088,
											"end": 6125,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 6088,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6075,
											"end": 6125,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6075,
											"end": 6125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6131,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6131,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5997,
											"end": 6131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6284,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6137,
											"end": 6284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6232,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6271,
											"end": 6276,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6232,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 6232,
											"end": 6277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6232,
											"end": 6277,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 6232,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6227,
											"end": 6230,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6220,
											"end": 6278,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6137,
											"end": 6284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6528,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6290,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6391,
											"end": 6395,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6431,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6418,
											"end": 6427,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6406,
											"end": 6432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6442,
											"end": 6521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6518,
											"end": 6519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6507,
											"end": 6516,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6503,
											"end": 6520,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6494,
											"end": 6500,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6442,
											"end": 6521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6442,
											"end": 6521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6442,
											"end": 6521,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6442,
											"end": 6521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6528,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6992,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 6534,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6691,
											"end": 6695,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6731,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6718,
											"end": 6727,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6714,
											"end": 6732,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6706,
											"end": 6732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6706,
											"end": 6732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 6818,
											"end": 6819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 6816,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6820,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6794,
											"end": 6800,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6742,
											"end": 6821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 6821,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 6742,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6831,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 6899,
											"end": 6901,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6888,
											"end": 6897,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6884,
											"end": 6902,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6875,
											"end": 6881,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6831,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 6831,
											"end": 6903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6831,
											"end": 6903,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 6831,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 6981,
											"end": 6983,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6970,
											"end": 6979,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6966,
											"end": 6984,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6957,
											"end": 6963,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 6913,
											"end": 6985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6985,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 6913,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6992,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6992,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6992,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6998,
											"end": 7167,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 6998,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7093,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7116,
											"end": 7122,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7111,
											"end": 7114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7104,
											"end": 7123,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7156,
											"end": 7160,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7151,
											"end": 7154,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7147,
											"end": 7161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6998,
											"end": 7167,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6998,
											"end": 7167,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6998,
											"end": 7167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6998,
											"end": 7167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6998,
											"end": 7167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7173,
											"end": 7355,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 7173,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7313,
											"end": 7347,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7309,
											"end": 7310,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7301,
											"end": 7307,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7348,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7173,
											"end": 7355,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7173,
											"end": 7355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7727,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 7361,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7503,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7588,
											"end": 7590,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7583,
											"end": 7586,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 7524,
											"end": 7591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7591,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7524,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7517,
											"end": 7591,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7517,
											"end": 7591,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7600,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 7689,
											"end": 7692,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7600,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 7600,
											"end": 7693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7600,
											"end": 7693,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 7600,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7718,
											"end": 7720,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7713,
											"end": 7716,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7709,
											"end": 7721,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7702,
											"end": 7721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7702,
											"end": 7721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7727,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7733,
											"end": 8152,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 7733,
											"end": 8152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7899,
											"end": 7903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7939,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7926,
											"end": 7935,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7922,
											"end": 7940,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7914,
											"end": 7940,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7914,
											"end": 7940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7986,
											"end": 7995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7980,
											"end": 7984,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7976,
											"end": 7996,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7972,
											"end": 7973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7961,
											"end": 7970,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7974,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7997,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 8140,
											"end": 8144,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 8014,
											"end": 8145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8145,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 8014,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8006,
											"end": 8145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8006,
											"end": 8145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7733,
											"end": 8152,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7733,
											"end": 8152,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7733,
											"end": 8152,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7733,
											"end": 8152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8158,
											"end": 8338,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 8158,
											"end": 8338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8206,
											"end": 8283,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8203,
											"end": 8204,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8196,
											"end": 8284,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8303,
											"end": 8307,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 8300,
											"end": 8301,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8293,
											"end": 8308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8327,
											"end": 8331,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8332,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8535,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 8344,
											"end": 8535,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8384,
											"end": 8388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 8422,
											"end": 8423,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 8404,
											"end": 8424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 8404,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8424,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8438,
											"end": 8458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 8456,
											"end": 8457,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8438,
											"end": 8458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 8438,
											"end": 8458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8438,
											"end": 8458,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 8438,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8433,
											"end": 8458,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8433,
											"end": 8458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8477,
											"end": 8478,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8474,
											"end": 8475,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8471,
											"end": 8479,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8468,
											"end": 8502,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8468,
											"end": 8502,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 8468,
											"end": 8502,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8482,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 8482,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 8482,
											"end": 8500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8482,
											"end": 8500,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 8482,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8468,
											"end": 8502,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 8468,
											"end": 8502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8527,
											"end": 8528,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8524,
											"end": 8525,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8520,
											"end": 8529,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8512,
											"end": 8529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8512,
											"end": 8529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8535,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8535,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8541,
											"end": 8846,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 8541,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8581,
											"end": 8584,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8600,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 8618,
											"end": 8619,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8600,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 8600,
											"end": 8620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8600,
											"end": 8620,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 8600,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8595,
											"end": 8620,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8595,
											"end": 8620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8634,
											"end": 8654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 8652,
											"end": 8653,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8634,
											"end": 8654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 8634,
											"end": 8654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8634,
											"end": 8654,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 8634,
											"end": 8654,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8629,
											"end": 8654,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8629,
											"end": 8654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8788,
											"end": 8789,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8720,
											"end": 8786,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8716,
											"end": 8790,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8713,
											"end": 8714,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8710,
											"end": 8791,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8814,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 8707,
											"end": 8814,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8794,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 8794,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 8794,
											"end": 8812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8794,
											"end": 8812,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 8794,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8814,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 8707,
											"end": 8814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 8839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8831,
											"end": 8840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8824,
											"end": 8840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8824,
											"end": 8840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8541,
											"end": 8846,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8541,
											"end": 8846,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8541,
											"end": 8846,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8541,
											"end": 8846,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8541,
											"end": 8846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8852,
											"end": 9032,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 8852,
											"end": 9032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8900,
											"end": 8977,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8897,
											"end": 8898,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8890,
											"end": 8978,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8997,
											"end": 9001,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 8994,
											"end": 8995,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8987,
											"end": 9002,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9021,
											"end": 9025,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9018,
											"end": 9019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9011,
											"end": 9026,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9038,
											"end": 9223,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 9038,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9078,
											"end": 9079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9095,
											"end": 9115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 9113,
											"end": 9114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9095,
											"end": 9115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 9095,
											"end": 9115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9095,
											"end": 9115,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 9095,
											"end": 9115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9090,
											"end": 9115,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9090,
											"end": 9115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9129,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 9147,
											"end": 9148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9129,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 9129,
											"end": 9149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9129,
											"end": 9149,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 9129,
											"end": 9149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9124,
											"end": 9149,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9124,
											"end": 9149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9168,
											"end": 9169,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9158,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 9158,
											"end": 9193,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9173,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 9173,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 9173,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9173,
											"end": 9191,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 9173,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9158,
											"end": 9193,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 9158,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9215,
											"end": 9216,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9212,
											"end": 9213,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9208,
											"end": 9217,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9203,
											"end": 9217,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9203,
											"end": 9217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9038,
											"end": 9223,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9038,
											"end": 9223,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9038,
											"end": 9223,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9038,
											"end": 9223,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9038,
											"end": 9223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9229,
											"end": 9577,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 9229,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9269,
											"end": 9276,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 9310,
											"end": 9311,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9292,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 9292,
											"end": 9312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9292,
											"end": 9312,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 9292,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9287,
											"end": 9312,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9287,
											"end": 9312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9326,
											"end": 9346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 9344,
											"end": 9345,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9326,
											"end": 9346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 9326,
											"end": 9346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9326,
											"end": 9346,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 9326,
											"end": 9346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9321,
											"end": 9346,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9321,
											"end": 9346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9514,
											"end": 9515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9446,
											"end": 9512,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9442,
											"end": 9516,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9439,
											"end": 9440,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9436,
											"end": 9517,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9431,
											"end": 9432,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9424,
											"end": 9433,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9417,
											"end": 9434,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9413,
											"end": 9518,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9410,
											"end": 9541,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9410,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 9410,
											"end": 9541,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9521,
											"end": 9539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 9521,
											"end": 9539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 9521,
											"end": 9539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9521,
											"end": 9539,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 9521,
											"end": 9539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9410,
											"end": 9541,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 9410,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9569,
											"end": 9570,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9566,
											"end": 9567,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9562,
											"end": 9571,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9551,
											"end": 9571,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9551,
											"end": 9571,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9229,
											"end": 9577,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9229,
											"end": 9577,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9229,
											"end": 9577,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9229,
											"end": 9577,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9229,
											"end": 9577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DCF_ETH(uint256)": "3a23bf49",
							"ETH_DCF(uint256)": "97dedb1d",
							"Warning_protect()": "dac3fad4",
							"admin_fee()": "fee3f7f9",
							"market(address,uint256)": "94756aa7",
							"setRouter(address,bool)": "c3c64674",
							"subscribe(address)": "41a7726a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_k\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"DCF_ETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"ETH_DCF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Warning_protect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin_fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"market\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"power\",\"type\":\"bool\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"subscribe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/treasury.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/treasury.sol\":{\"keccak256\":\"0xb5bb2d6e1b0e5efe1e90f45983730a2e49132e4c977de7fc7f5d96cf7475e42a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6685959c10e513be912fef8eb12821a712ab0cce014b4171b94bf286a8be4ed5\",\"dweb:/ipfs/QmdFWVxFjRiBijUsz93o1o5Xg7GmZMhT75VbdTG77kJU3e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 402,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "dcoff",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 404,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "K",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 406,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "fee",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 408,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "last_balance",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 410,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "admin",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 416,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "info",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 444,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 448,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "RouterAdmin",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"Dcoffer/treasury.sol": {
				"ast": {
					"absolutePath": "Dcoffer/treasury.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						],
						"treasury": [
							778
						]
					},
					"id": 779,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 779,
							"sourceUnit": 78,
							"src": "60:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 779,
							"sourceUnit": 390,
							"src": "118:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 778,
							"linearizedBaseContracts": [
								778
							],
							"name": "treasury",
							"nameLocation": "192:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 396,
									"libraryName": {
										"id": 394,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "212:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "206:24:2",
									"typeName": {
										"id": 395,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "225:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 402,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "245:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 778,
									"src": "238:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 398,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 397,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "238:6:2"
										},
										"referencedDeclaration": 77,
										"src": "238:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307835386433613463623238663330643943383745384637393534346639384633353863646536323237",
												"id": 400,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "261:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x58d3a4cb28f30d9C87E8F79544f98F358cde6227"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 399,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "254:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 401,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "254:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 404,
									"mutability": "mutable",
									"name": "K",
									"nameLocation": "329:1:2",
									"nodeType": "VariableDeclaration",
									"scope": 778,
									"src": "313:17:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 403,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "313:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 406,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "351:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 778,
									"src": "335:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 405,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 408,
									"mutability": "mutable",
									"name": "last_balance",
									"nameLocation": "375:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 778,
									"src": "359:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 407,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "359:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 410,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "408:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 778,
									"src": "392:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 409,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "392:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 416,
									"mutability": "mutable",
									"name": "info",
									"nameLocation": "473:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 778,
									"src": "420:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 415,
										"keyType": {
											"id": 411,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "428:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "420:45:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 414,
											"keyType": {
												"id": 412,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "447:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "439:25:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 413,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "456:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "562:92:2",
										"statements": [
											{
												"expression": {
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 423,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "569:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 424,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "577:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "577:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "569:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "569:18:2"
											},
											{
												"expression": {
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 428,
														"name": "last_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "594:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 429,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "609:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "609:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "594:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "594:24:2"
											},
											{
												"expression": {
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 433,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "625:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 434,
														"name": "_k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "629:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "625:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "625:6:2"
											},
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 437,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "638:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 438,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "644:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "638:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "638:10:2"
											}
										]
									},
									"id": 442,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "_k",
												"nameLocation": "538:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "530:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "550:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "542:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "529:26:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:0:2"
									},
									"scope": 778,
									"src": "518:136:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 444,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "668:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 778,
									"src": "660:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 443,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "660:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 448,
									"mutability": "mutable",
									"name": "RouterAdmin",
									"nameLocation": "710:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 778,
									"src": "678:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 447,
										"keyType": {
											"id": 445,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "686:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "678:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 446,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "697:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "749:93:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 451,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "768:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 452,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "777:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "777:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "768:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "789:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "760:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "760:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "760:64:2"
											},
											{
												"id": 458,
												"nodeType": "PlaceholderStatement",
												"src": "835:1:2"
											}
										]
									},
									"id": 460,
									"name": "onlyOwner",
									"nameLocation": "737:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "746:2:2"
									},
									"src": "728:114:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "916:40:2",
										"statements": [
											{
												"expression": {
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 469,
															"name": "RouterAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "925:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 471,
														"indexExpression": {
															"id": 470,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "937:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "925:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 472,
														"name": "power",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "945:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "925:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "925:25:2"
											}
										]
									},
									"functionSelector": "c3c64674",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 467,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 466,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 460,
												"src": "907:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "907:9:2"
										}
									],
									"name": "setRouter",
									"nameLocation": "863:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "881:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "873:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "power",
												"nameLocation": "892:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "887:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "887:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "872:26:2"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:0:2"
									},
									"scope": 778,
									"src": "854:102:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "1018:356:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 482,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "1035:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 485,
																"indexExpression": {
																	"expression": {
																		"id": 483,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1047:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1047:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1035:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1062:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1035:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1027:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1027:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "1027:40:2"
											},
											{
												"assignments": [
													491
												],
												"declarations": [
													{
														"constant": false,
														"id": 491,
														"mutability": "mutable",
														"name": "_fee",
														"nameLocation": "1086:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "1078:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1078:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 500,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1116:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 495,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1107:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 492,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1093:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "1093:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 283,
																"src": "1093:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1093:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1093:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1093:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1078:43:2"
											},
											{
												"expression": {
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 501,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "1136:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 504,
																"name": "_fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "1154:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 502,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "1144:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "1144:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1144:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1136:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "1136:23:2"
											},
											{
												"assignments": [
													509
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "eth_amount",
														"nameLocation": "1176:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "1168:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 508,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1168:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "1203:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 510,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1189:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1189:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1189:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1189:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1168:40:2"
											},
											{
												"assignments": [
													517
												],
												"declarations": [
													{
														"constant": false,
														"id": 517,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "1227:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "1219:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 516,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1219:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 521,
												"initialValue": {
													"arguments": [
														{
															"id": 519,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1248:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 518,
														"name": "ETH_DCF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "1240:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1219:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 525,
															"name": "subscriber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "1289:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "1300:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 522,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1274:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1274:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1274:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "1274:37:2"
											},
											{
												"expression": {
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 529,
														"name": "last_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "1324:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 532,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1347:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$778",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$778",
																		"typeString": "contract treasury"
																	}
																],
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1339:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 530,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1339:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1339:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1339:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1324:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "1324:36:2"
											}
										]
									},
									"functionSelector": "41a7726a",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "subscribe",
									"nameLocation": "973:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "subscriber",
												"nameLocation": "991:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "983:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "983:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "982:20:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1018:0:2"
									},
									"scope": 778,
									"src": "964:410:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "1450:454:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 546,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "1467:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 549,
																"indexExpression": {
																	"expression": {
																		"id": 547,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1479:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1479:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1467:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1494:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1467:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1459:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1459:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "1459:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 557,
																		"name": "seller",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 540,
																		"src": "1532:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"expression": {
																		"id": 555,
																		"name": "dcoff",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "1516:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "1516:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1516:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 559,
																"name": "dcf_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "1543:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1516:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1508:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1508:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "1508:46:2"
											},
											{
												"assignments": [
													564
												],
												"declarations": [
													{
														"constant": false,
														"id": 564,
														"mutability": "mutable",
														"name": "eth_amount",
														"nameLocation": "1573:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 618,
														"src": "1565:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1565:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 568,
												"initialValue": {
													"arguments": [
														{
															"id": 566,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "1594:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 565,
														"name": "DCF_ETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "1586:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1565:40:2"
											},
											{
												"assignments": [
													570
												],
												"declarations": [
													{
														"constant": false,
														"id": 570,
														"mutability": "mutable",
														"name": "_fee",
														"nameLocation": "1622:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 618,
														"src": "1614:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1614:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 578,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1653:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 573,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1644:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 571,
																	"name": "eth_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "1629:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 283,
																"src": "1629:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1629:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1629:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1629:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1614:44:2"
											},
											{
												"expression": {
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 579,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 582,
																"name": "_fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1685:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 580,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "1675:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "1675:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1675:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1667:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "1667:23:2"
											},
											{
												"expression": {
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 586,
														"name": "eth_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "1699:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 589,
																"name": "_fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1727:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 587,
																"name": "eth_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "1712:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "1712:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1712:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1699:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "1699:33:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 596,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "1763:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 593,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "1747:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1747:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1747:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "1747:27:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 602,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "1802:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 605,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1817:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$778",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$778",
																		"typeString": "contract treasury"
																	}
																],
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1809:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 603,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1809:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1809:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "1823:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 599,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1783:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "1783:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1783:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "1783:51:2"
											},
											{
												"expression": {
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 610,
														"name": "last_balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "1848:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 613,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1871:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$778",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$778",
																		"typeString": "contract treasury"
																	}
																],
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1863:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 611,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1863:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1863:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1863:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1848:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "1848:36:2"
											}
										]
									},
									"functionSelector": "94756aa7",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "market",
									"nameLocation": "1391:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "1414:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1398:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1398:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "1430:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1422:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1422:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1397:44:2"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1450:0:2"
									},
									"scope": 778,
									"src": "1382:522:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "1976:399:2",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "1991:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 679,
														"src": "1983:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1983:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 632,
												"initialValue": {
													"arguments": [
														{
															"id": 630,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "2022:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 628,
															"name": "last_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2005:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "2005:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2005:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1983:45:2"
											},
											{
												"assignments": [
													634
												],
												"declarations": [
													{
														"constant": false,
														"id": 634,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "2043:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 679,
														"src": "2035:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 633,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2035:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 642,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 639,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2081:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$778",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$778",
																		"typeString": "contract treasury"
																	}
																],
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2073:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 637,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2073:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2073:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 635,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "2057:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "2057:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2057:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2035:52:2"
											},
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "2106:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 679,
														"src": "2098:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 647,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "2137:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 645,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "2121:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "2121:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2098:50:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 650,
														"name": "Variable_dcf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "2160:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 651,
																"name": "dcoff",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "2175:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "2175:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2175:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2160:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 662,
												"nodeType": "IfStatement",
												"src": "2157:89:2",
												"trueBody": {
													"id": 661,
													"nodeType": "Block",
													"src": "2195:51:2",
													"statements": [
														{
															"expression": {
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 655,
																	"name": "Variable_dcf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "2204:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 656,
																			"name": "dcoff",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "2219:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 26,
																		"src": "2219:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2219:19:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2204:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 660,
															"nodeType": "ExpressionStatement",
															"src": "2204:34:2"
														}
													]
												}
											},
											{
												"assignments": [
													664
												],
												"declarations": [
													{
														"constant": false,
														"id": 664,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "2262:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 679,
														"src": "2254:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 663,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2254:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 669,
												"initialValue": {
													"arguments": [
														{
															"id": 667,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "2283:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 665,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "2277:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "2277:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2277:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2254:42:2"
											},
											{
												"assignments": [
													671
												],
												"declarations": [
													{
														"constant": false,
														"id": 671,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "2311:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 679,
														"src": "2303:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 670,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2303:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 676,
												"initialValue": {
													"arguments": [
														{
															"id": 674,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "2336:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 672,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "2320:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "2320:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2320:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2303:46:2"
											},
											{
												"expression": {
													"id": 677,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "2363:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 625,
												"id": 678,
												"nodeType": "Return",
												"src": "2356:13:2"
											}
										]
									},
									"functionSelector": "3a23bf49",
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DCF_ETH",
									"nameLocation": "1921:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "1937:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1929:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1928:20:2"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1968:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1968:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:9:2"
									},
									"scope": 778,
									"src": "1912:463:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "2447:296:2",
										"statements": [
											{
												"assignments": [
													688
												],
												"declarations": [
													{
														"constant": false,
														"id": 688,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "2462:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "2454:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 687,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2454:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"arguments": [
														{
															"id": 691,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "2493:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 689,
															"name": "last_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2476:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "2476:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2476:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2454:45:2"
											},
											{
												"assignments": [
													695
												],
												"declarations": [
													{
														"constant": false,
														"id": 695,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "2514:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "2506:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 703,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 700,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2552:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$778",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$778",
																		"typeString": "contract treasury"
																	}
																],
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2544:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 698,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2544:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2544:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 696,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "2528:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "2528:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2528:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:52:2"
											},
											{
												"assignments": [
													705
												],
												"declarations": [
													{
														"constant": false,
														"id": 705,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "2573:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "2565:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2565:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"initialValue": {
													"arguments": [
														{
															"id": 708,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "2604:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 706,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "2588:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "2588:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2588:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2565:50:2"
											},
											{
												"assignments": [
													712
												],
												"declarations": [
													{
														"constant": false,
														"id": 712,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "2630:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "2622:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 711,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2622:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 717,
												"initialValue": {
													"arguments": [
														{
															"id": 715,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "2651:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 713,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "2645:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "2645:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2645:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2622:42:2"
											},
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "2679:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "2671:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2671:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 724,
												"initialValue": {
													"arguments": [
														{
															"id": 722,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "2704:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 720,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "2688:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "2688:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2688:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2671:46:2"
											},
											{
												"expression": {
													"id": 725,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 719,
													"src": "2731:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 686,
												"id": 726,
												"nodeType": "Return",
												"src": "2724:13:2"
											}
										]
									},
									"functionSelector": "97dedb1d",
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ETH_DCF",
									"nameLocation": "2392:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "2408:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2400:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2399:20:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2439:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2439:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2438:9:2"
									},
									"scope": 778,
									"src": "2383:360:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "2800:118:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 740,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2839:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_treasury_$778",
																			"typeString": "contract treasury"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_treasury_$778",
																			"typeString": "contract treasury"
																		}
																	],
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2831:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 738,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2831:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2831:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2831:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 735,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "2815:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2807:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 733,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2807:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2807:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2807:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "2807:46:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2875:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 753,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2905:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_treasury_$778",
																				"typeString": "contract treasury"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_treasury_$778",
																				"typeString": "contract treasury"
																			}
																		],
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2897:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 751,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2897:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2897:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 749,
																	"name": "dcoff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "2881:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "2881:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2881:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 745,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "2860:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "2860:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2860:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "2860:52:2"
											}
										]
									},
									"functionSelector": "dac3fad4",
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 731,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 730,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 460,
												"src": "2791:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2791:9:2"
										}
									],
									"name": "Warning_protect",
									"nameLocation": "2765:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2780:2:2"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2800:0:2"
									},
									"scope": 778,
									"src": "2756:162:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "2964:60:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 769,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "2995:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 766,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "2979:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2971:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 764,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2971:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2971:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2971:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2971:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "2971:30:2"
											},
											{
												"expression": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 772,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "3008:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3016:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3008:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "3008:9:2"
											}
										]
									},
									"functionSelector": "fee3f7f9",
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 762,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 761,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 460,
												"src": "2955:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2955:9:2"
										}
									],
									"name": "admin_fee",
									"nameLocation": "2935:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2944:2:2"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2964:0:2"
									},
									"scope": 778,
									"src": "2926:98:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 779,
							"src": "183:2864:2",
							"usedErrors": []
						}
					],
					"src": "33:3014:2"
				},
				"id": 2
			}
		}
	}
}