{
	"id": "69cad523238047eb178d9204865c51fb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dcoffer/treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\n\r\n\r\ncontract treasury  {\r\n  using SafeMath for uint;  \r\n\r\n  IERC20 dcoff =  IERC20(0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C);\r\n\r\n  uint256 private K;\r\n\r\n  constructor(uint _k)payable{\r\n    owner = msg.sender;\r\n    K = _k;\r\n  }\r\n\r\n  address owner;\r\n  mapping(address => bool)private RouterAdmin;\r\n\r\n  modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  function setRouter(address user, bool power)external onlyOwner{\r\n    RouterAdmin[user] = power;\r\n  }\r\n\r\n\r\n  function DCFETH(uint256 dcf_amount)public view returns(uint){\r\n    uint256 _eth_amount = address(this).balance;\r\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));\r\n    uint256 Variable_dcf = _dcf_amount.add(dcf_amount);\r\n    uint256 Variable_eth = K.div(Variable_dcf);\r\n    uint256 _price = _eth_amount.sub(Variable_eth);\r\n    return _price;\r\n  }\r\n\r\n\r\n  function DcfPrice(uint256 dcf_amount)public view returns(uint){\r\n    uint256 _eth_amount = address(this).balance;\r\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));\r\n    uint256 Variable_dcf = _dcf_amount.add(dcf_amount);\r\n    uint256 Variable_eth = K.div(Variable_dcf);\r\n    uint256 _price = _eth_amount.sub(Variable_eth);\r\n    return _price;\r\n  }\r\n\r\n\r\n\r\n \r\n   \r\n  \r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXP PUSH3 0xF3573C 0xCE KECCAK256 CREATE2 0xEE BALANCE SWAP16 PUSH9 0x43457384F89FC6651C 0xD7 PUSH1 0x81 0x4A PUSH11 0xC6104B4C0E64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXP PUSH3 0xF3573C 0xCE KECCAK256 CREATE2 0xEE BALANCE SWAP16 PUSH9 0x43457384F89FC6651C 0xD7 PUSH1 0x81 0x4A PUSH11 0xC6104B4C0E64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/treasury.sol": {
				"treasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_k",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "DCFETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "DcfPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "power",
									"type": "bool"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dcoffer/treasury.sol\":181:1464  contract treasury  {... */\n  mstore(0x40, 0x80)\n    /* \"Dcoffer/treasury.sol\":260:302  0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C */\n  0xd14ff067355ce838a6e110bdfb672dbec83ca23c\n    /* \"Dcoffer/treasury.sol\":237:303  IERC20 dcoff =  IERC20(0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":334:405  constructor(uint _k)payable{... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"Dcoffer/treasury.sol\":376:386  msg.sender */\n  caller\n    /* \"Dcoffer/treasury.sol\":368:373  owner */\n  0x02\n  0x00\n    /* \"Dcoffer/treasury.sol\":368:386  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":397:399  _k */\n  dup1\n    /* \"Dcoffer/treasury.sol\":393:394  K */\n  0x01\n    /* \"Dcoffer/treasury.sol\":393:399  K = _k */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":334:405  constructor(uint _k)payable{... */\n  pop\n    /* \"Dcoffer/treasury.sol\":181:1464  contract treasury  {... */\n  jump(tag_5)\n    /* \"#utility.yul\":88:205   */\ntag_7:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_9:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_10:\n    /* \"#utility.yul\":490:514   */\n  tag_18\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_9\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_19:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_11:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_21\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_2:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_24\n  tag_7\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":781:900   */\ntag_23:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_25\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Dcoffer/treasury.sol\":181:1464  contract treasury  {... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dcoffer/treasury.sol\":181:1464  contract treasury  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5d48403c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8c8335f3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc3c64674\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/treasury.sol\":1085:1441  function DcfPrice(uint256 dcf_amount)public view returns(uint){... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":723:1077  function DCFETH(uint256 dcf_amount)public view returns(uint){... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":615:715  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"Dcoffer/treasury.sol\":1085:1441  function DcfPrice(uint256 dcf_amount)public view returns(uint){... */\n    tag_9:\n        /* \"Dcoffer/treasury.sol\":1142:1146  uint */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1154:1173  uint256 _eth_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1176:1197  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":1154:1197  uint256 _eth_amount = address(this).balance */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1204:1223  uint256 _dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1226:1231  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1226:1241  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":1250:1254  this */\n      address\n        /* \"Dcoffer/treasury.sol\":1226:1256  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"Dcoffer/treasury.sol\":1204:1256  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1263:1283  uint256 Variable_dcf */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1286:1313  _dcf_amount.add(dcf_amount) */\n      tag_27\n        /* \"Dcoffer/treasury.sol\":1302:1312  dcf_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1286:1297  _dcf_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1286:1301  _dcf_amount.add */\n      tag_28\n      swap1\n        /* \"Dcoffer/treasury.sol\":1286:1313  _dcf_amount.add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_27:\n        /* \"Dcoffer/treasury.sol\":1263:1313  uint256 Variable_dcf = _dcf_amount.add(dcf_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1320:1340  uint256 Variable_eth */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1343:1362  K.div(Variable_dcf) */\n      tag_29\n        /* \"Dcoffer/treasury.sol\":1349:1361  Variable_dcf */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1343:1344  K */\n      sload(0x01)\n        /* \"Dcoffer/treasury.sol\":1343:1348  K.div */\n      tag_30\n      swap1\n        /* \"Dcoffer/treasury.sol\":1343:1362  K.div(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_29:\n        /* \"Dcoffer/treasury.sol\":1320:1362  uint256 Variable_eth = K.div(Variable_dcf) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1369:1383  uint256 _price */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1386:1415  _eth_amount.sub(Variable_eth) */\n      tag_31\n        /* \"Dcoffer/treasury.sol\":1402:1414  Variable_eth */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1386:1397  _eth_amount */\n      dup7\n        /* \"Dcoffer/treasury.sol\":1386:1401  _eth_amount.sub */\n      tag_32\n      swap1\n        /* \"Dcoffer/treasury.sol\":1386:1415  _eth_amount.sub(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_31:\n        /* \"Dcoffer/treasury.sol\":1369:1415  uint256 _price = _eth_amount.sub(Variable_eth) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1429:1435  _price */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1422:1435  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":1085:1441  function DcfPrice(uint256 dcf_amount)public view returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":723:1077  function DCFETH(uint256 dcf_amount)public view returns(uint){... */\n    tag_14:\n        /* \"Dcoffer/treasury.sol\":778:782  uint */\n      0x00\n        /* \"Dcoffer/treasury.sol\":790:809  uint256 _eth_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":812:833  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":790:833  uint256 _eth_amount = address(this).balance */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":840:859  uint256 _dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":862:867  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":862:877  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":886:890  this */\n      address\n        /* \"Dcoffer/treasury.sol\":862:892  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_34:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_37:\n        /* \"Dcoffer/treasury.sol\":840:892  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":899:919  uint256 Variable_dcf */\n      0x00\n        /* \"Dcoffer/treasury.sol\":922:949  _dcf_amount.add(dcf_amount) */\n      tag_38\n        /* \"Dcoffer/treasury.sol\":938:948  dcf_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":922:933  _dcf_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":922:937  _dcf_amount.add */\n      tag_28\n      swap1\n        /* \"Dcoffer/treasury.sol\":922:949  _dcf_amount.add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_38:\n        /* \"Dcoffer/treasury.sol\":899:949  uint256 Variable_dcf = _dcf_amount.add(dcf_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":956:976  uint256 Variable_eth */\n      0x00\n        /* \"Dcoffer/treasury.sol\":979:998  K.div(Variable_dcf) */\n      tag_39\n        /* \"Dcoffer/treasury.sol\":985:997  Variable_dcf */\n      dup3\n        /* \"Dcoffer/treasury.sol\":979:980  K */\n      sload(0x01)\n        /* \"Dcoffer/treasury.sol\":979:984  K.div */\n      tag_30\n      swap1\n        /* \"Dcoffer/treasury.sol\":979:998  K.div(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_39:\n        /* \"Dcoffer/treasury.sol\":956:998  uint256 Variable_eth = K.div(Variable_dcf) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1005:1019  uint256 _price */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1022:1051  _eth_amount.sub(Variable_eth) */\n      tag_40\n        /* \"Dcoffer/treasury.sol\":1038:1050  Variable_eth */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1022:1033  _eth_amount */\n      dup7\n        /* \"Dcoffer/treasury.sol\":1022:1037  _eth_amount.sub */\n      tag_32\n      swap1\n        /* \"Dcoffer/treasury.sol\":1022:1051  _eth_amount.sub(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_40:\n        /* \"Dcoffer/treasury.sol\":1005:1051  uint256 _price = _eth_amount.sub(Variable_eth) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1065:1071  _price */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1058:1071  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":723:1077  function DCFETH(uint256 dcf_amount)public view returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":615:715  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_19:\n        /* \"Dcoffer/treasury.sol\":528:538  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":519:538  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":519:524  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":519:538  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":511:575  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"Dcoffer/treasury.sol\":704:709  power */\n      dup1\n        /* \"Dcoffer/treasury.sol\":684:695  RouterAdmin */\n      0x03\n        /* \"Dcoffer/treasury.sol\":684:701  RouterAdmin[user] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":696:700  user */\n      dup5\n        /* \"Dcoffer/treasury.sol\":684:701  RouterAdmin[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Dcoffer/treasury.sol\":684:709  RouterAdmin[user] = power */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":615:715  function setRouter(address user, bool power)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_56:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_58:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_59:\n        /* \"#utility.yul\":490:514   */\n      tag_82\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_58\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_83\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_83:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_60:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_85\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_59\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_8:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_88\n      tag_56\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":766:885   */\n    tag_87:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_89\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_60\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_61:\n        /* \"#utility.yul\":1112:1136   */\n      tag_91\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_58\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_11:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_93\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_61\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_62:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_63:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_96\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_62\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_64:\n        /* \"#utility.yul\":1684:1708   */\n      tag_98\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_63\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_99\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_99:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_65:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_101\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_64\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:1974   */\n    tag_66:\n        /* \"#utility.yul\":1918:1925   */\n      0x00\n        /* \"#utility.yul\":1961:1966   */\n      dup2\n        /* \"#utility.yul\":1954:1967   */\n      iszero\n        /* \"#utility.yul\":1947:1968   */\n      iszero\n        /* \"#utility.yul\":1936:1968   */\n      swap1\n      pop\n        /* \"#utility.yul\":1884:1974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1980:2096   */\n    tag_67:\n        /* \"#utility.yul\":2050:2071   */\n      tag_104\n        /* \"#utility.yul\":2065:2070   */\n      dup2\n        /* \"#utility.yul\":2050:2071   */\n      tag_66\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2043:2048   */\n      dup2\n        /* \"#utility.yul\":2040:2072   */\n      eq\n        /* \"#utility.yul\":2030:2090   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":2086:2087   */\n      0x00\n        /* \"#utility.yul\":2083:2084   */\n      dup1\n        /* \"#utility.yul\":2076:2088   */\n      revert\n        /* \"#utility.yul\":2030:2090   */\n    tag_105:\n        /* \"#utility.yul\":1980:2096   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2102:2235   */\n    tag_68:\n        /* \"#utility.yul\":2145:2150   */\n      0x00\n        /* \"#utility.yul\":2183:2189   */\n      dup2\n        /* \"#utility.yul\":2170:2190   */\n      calldataload\n        /* \"#utility.yul\":2161:2190   */\n      swap1\n      pop\n        /* \"#utility.yul\":2199:2229   */\n      tag_107\n        /* \"#utility.yul\":2223:2228   */\n      dup2\n        /* \"#utility.yul\":2199:2229   */\n      tag_67\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2102:2235   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2241:2709   */\n    tag_18:\n        /* \"#utility.yul\":2306:2312   */\n      0x00\n        /* \"#utility.yul\":2314:2320   */\n      dup1\n        /* \"#utility.yul\":2363:2365   */\n      0x40\n        /* \"#utility.yul\":2351:2360   */\n      dup4\n        /* \"#utility.yul\":2342:2349   */\n      dup6\n        /* \"#utility.yul\":2338:2361   */\n      sub\n        /* \"#utility.yul\":2334:2366   */\n      slt\n        /* \"#utility.yul\":2331:2450   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":2369:2448   */\n      tag_110\n      tag_56\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2331:2450   */\n    tag_109:\n        /* \"#utility.yul\":2489:2490   */\n      0x00\n        /* \"#utility.yul\":2514:2567   */\n      tag_111\n        /* \"#utility.yul\":2559:2566   */\n      dup6\n        /* \"#utility.yul\":2550:2556   */\n      dup3\n        /* \"#utility.yul\":2539:2548   */\n      dup7\n        /* \"#utility.yul\":2535:2557   */\n      add\n        /* \"#utility.yul\":2514:2567   */\n      tag_65\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2504:2567   */\n      swap3\n      pop\n        /* \"#utility.yul\":2460:2577   */\n      pop\n        /* \"#utility.yul\":2616:2618   */\n      0x20\n        /* \"#utility.yul\":2642:2692   */\n      tag_112\n        /* \"#utility.yul\":2684:2691   */\n      dup6\n        /* \"#utility.yul\":2675:2681   */\n      dup3\n        /* \"#utility.yul\":2664:2673   */\n      dup7\n        /* \"#utility.yul\":2660:2682   */\n      add\n        /* \"#utility.yul\":2642:2692   */\n      tag_68\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2632:2692   */\n      swap2\n      pop\n        /* \"#utility.yul\":2587:2702   */\n      pop\n        /* \"#utility.yul\":2241:2709   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2715:2833   */\n    tag_69:\n        /* \"#utility.yul\":2802:2826   */\n      tag_114\n        /* \"#utility.yul\":2820:2825   */\n      dup2\n        /* \"#utility.yul\":2802:2826   */\n      tag_63\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2797:2800   */\n      dup3\n        /* \"#utility.yul\":2790:2827   */\n      mstore\n        /* \"#utility.yul\":2715:2833   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2839:3061   */\n    tag_22:\n        /* \"#utility.yul\":2932:2936   */\n      0x00\n        /* \"#utility.yul\":2970:2972   */\n      0x20\n        /* \"#utility.yul\":2959:2968   */\n      dup3\n        /* \"#utility.yul\":2955:2973   */\n      add\n        /* \"#utility.yul\":2947:2973   */\n      swap1\n      pop\n        /* \"#utility.yul\":2983:3054   */\n      tag_116\n        /* \"#utility.yul\":3051:3052   */\n      0x00\n        /* \"#utility.yul\":3040:3049   */\n      dup4\n        /* \"#utility.yul\":3036:3053   */\n      add\n        /* \"#utility.yul\":3027:3033   */\n      dup5\n        /* \"#utility.yul\":2983:3054   */\n      tag_69\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2839:3061   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3067:3210   */\n    tag_70:\n        /* \"#utility.yul\":3124:3129   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3149:3162   */\n      mload\n        /* \"#utility.yul\":3140:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_118\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_59\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":3067:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3567   */\n    tag_26:\n        /* \"#utility.yul\":3286:3292   */\n      0x00\n        /* \"#utility.yul\":3335:3337   */\n      0x20\n        /* \"#utility.yul\":3323:3332   */\n      dup3\n        /* \"#utility.yul\":3314:3321   */\n      dup5\n        /* \"#utility.yul\":3310:3333   */\n      sub\n        /* \"#utility.yul\":3306:3338   */\n      slt\n        /* \"#utility.yul\":3303:3422   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":3341:3420   */\n      tag_121\n      tag_56\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3303:3422   */\n    tag_120:\n        /* \"#utility.yul\":3461:3462   */\n      0x00\n        /* \"#utility.yul\":3486:3550   */\n      tag_122\n        /* \"#utility.yul\":3542:3549   */\n      dup5\n        /* \"#utility.yul\":3533:3539   */\n      dup3\n        /* \"#utility.yul\":3522:3531   */\n      dup6\n        /* \"#utility.yul\":3518:3540   */\n      add\n        /* \"#utility.yul\":3486:3550   */\n      tag_70\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3476:3550   */\n      swap2\n      pop\n        /* \"#utility.yul\":3432:3560   */\n      pop\n        /* \"#utility.yul\":3216:3567   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3573:3742   */\n    tag_71:\n        /* \"#utility.yul\":3657:3668   */\n      0x00\n        /* \"#utility.yul\":3691:3697   */\n      dup3\n        /* \"#utility.yul\":3686:3689   */\n      dup3\n        /* \"#utility.yul\":3679:3698   */\n      mstore\n        /* \"#utility.yul\":3731:3735   */\n      0x20\n        /* \"#utility.yul\":3726:3729   */\n      dup3\n        /* \"#utility.yul\":3722:3736   */\n      add\n        /* \"#utility.yul\":3707:3736   */\n      swap1\n      pop\n        /* \"#utility.yul\":3573:3742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3748:3930   */\n    tag_72:\n        /* \"#utility.yul\":3888:3922   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3884:3885   */\n      0x00\n        /* \"#utility.yul\":3876:3882   */\n      dup3\n        /* \"#utility.yul\":3872:3886   */\n      add\n        /* \"#utility.yul\":3865:3923   */\n      mstore\n        /* \"#utility.yul\":3748:3930   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3936:4302   */\n    tag_73:\n        /* \"#utility.yul\":4078:4081   */\n      0x00\n        /* \"#utility.yul\":4099:4166   */\n      tag_126\n        /* \"#utility.yul\":4163:4165   */\n      0x20\n        /* \"#utility.yul\":4158:4161   */\n      dup4\n        /* \"#utility.yul\":4099:4166   */\n      tag_71\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":4092:4166   */\n      swap2\n      pop\n        /* \"#utility.yul\":4175:4268   */\n      tag_127\n        /* \"#utility.yul\":4264:4267   */\n      dup3\n        /* \"#utility.yul\":4175:4268   */\n      tag_72\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4293:4295   */\n      0x20\n        /* \"#utility.yul\":4288:4291   */\n      dup3\n        /* \"#utility.yul\":4284:4296   */\n      add\n        /* \"#utility.yul\":4277:4296   */\n      swap1\n      pop\n        /* \"#utility.yul\":3936:4302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4308:4727   */\n    tag_44:\n        /* \"#utility.yul\":4474:4478   */\n      0x00\n        /* \"#utility.yul\":4512:4514   */\n      0x20\n        /* \"#utility.yul\":4501:4510   */\n      dup3\n        /* \"#utility.yul\":4497:4515   */\n      add\n        /* \"#utility.yul\":4489:4515   */\n      swap1\n      pop\n        /* \"#utility.yul\":4561:4570   */\n      dup2\n        /* \"#utility.yul\":4555:4559   */\n      dup2\n        /* \"#utility.yul\":4551:4571   */\n      sub\n        /* \"#utility.yul\":4547:4548   */\n      0x00\n        /* \"#utility.yul\":4536:4545   */\n      dup4\n        /* \"#utility.yul\":4532:4549   */\n      add\n        /* \"#utility.yul\":4525:4572   */\n      mstore\n        /* \"#utility.yul\":4589:4720   */\n      tag_129\n        /* \"#utility.yul\":4715:4719   */\n      dup2\n        /* \"#utility.yul\":4589:4720   */\n      tag_73\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":4581:4720   */\n      swap1\n      pop\n        /* \"#utility.yul\":4308:4727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4733:4913   */\n    tag_74:\n        /* \"#utility.yul\":4781:4858   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4778:4779   */\n      0x00\n        /* \"#utility.yul\":4771:4859   */\n      mstore\n        /* \"#utility.yul\":4878:4882   */\n      0x11\n        /* \"#utility.yul\":4875:4876   */\n      0x04\n        /* \"#utility.yul\":4868:4883   */\n      mstore\n        /* \"#utility.yul\":4902:4906   */\n      0x24\n        /* \"#utility.yul\":4899:4900   */\n      0x00\n        /* \"#utility.yul\":4892:4907   */\n      revert\n        /* \"#utility.yul\":4919:5224   */\n    tag_48:\n        /* \"#utility.yul\":4959:4962   */\n      0x00\n        /* \"#utility.yul\":4978:4998   */\n      tag_132\n        /* \"#utility.yul\":4996:4997   */\n      dup3\n        /* \"#utility.yul\":4978:4998   */\n      tag_58\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4973:4998   */\n      swap2\n      pop\n        /* \"#utility.yul\":5012:5032   */\n      tag_133\n        /* \"#utility.yul\":5030:5031   */\n      dup4\n        /* \"#utility.yul\":5012:5032   */\n      tag_58\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":5007:5032   */\n      swap3\n      pop\n        /* \"#utility.yul\":5166:5167   */\n      dup3\n        /* \"#utility.yul\":5098:5164   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5094:5168   */\n      sub\n        /* \"#utility.yul\":5091:5092   */\n      dup3\n        /* \"#utility.yul\":5088:5169   */\n      gt\n        /* \"#utility.yul\":5085:5192   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":5172:5190   */\n      tag_135\n      tag_74\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":5085:5192   */\n    tag_134:\n        /* \"#utility.yul\":5216:5217   */\n      dup3\n        /* \"#utility.yul\":5213:5214   */\n      dup3\n        /* \"#utility.yul\":5209:5218   */\n      add\n        /* \"#utility.yul\":5202:5218   */\n      swap1\n      pop\n        /* \"#utility.yul\":4919:5224   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5230:5410   */\n    tag_75:\n        /* \"#utility.yul\":5278:5355   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5275:5276   */\n      0x00\n        /* \"#utility.yul\":5268:5356   */\n      mstore\n        /* \"#utility.yul\":5375:5379   */\n      0x12\n        /* \"#utility.yul\":5372:5373   */\n      0x04\n        /* \"#utility.yul\":5365:5380   */\n      mstore\n        /* \"#utility.yul\":5399:5403   */\n      0x24\n        /* \"#utility.yul\":5396:5397   */\n      0x00\n        /* \"#utility.yul\":5389:5404   */\n      revert\n        /* \"#utility.yul\":5416:5601   */\n    tag_51:\n        /* \"#utility.yul\":5456:5457   */\n      0x00\n        /* \"#utility.yul\":5473:5493   */\n      tag_138\n        /* \"#utility.yul\":5491:5492   */\n      dup3\n        /* \"#utility.yul\":5473:5493   */\n      tag_58\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":5468:5493   */\n      swap2\n      pop\n        /* \"#utility.yul\":5507:5527   */\n      tag_139\n        /* \"#utility.yul\":5525:5526   */\n      dup4\n        /* \"#utility.yul\":5507:5527   */\n      tag_58\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":5502:5527   */\n      swap3\n      pop\n        /* \"#utility.yul\":5546:5547   */\n      dup3\n        /* \"#utility.yul\":5536:5571   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":5551:5569   */\n      tag_141\n      tag_75\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":5536:5571   */\n    tag_140:\n        /* \"#utility.yul\":5593:5594   */\n      dup3\n        /* \"#utility.yul\":5590:5591   */\n      dup3\n        /* \"#utility.yul\":5586:5595   */\n      div\n        /* \"#utility.yul\":5581:5595   */\n      swap1\n      pop\n        /* \"#utility.yul\":5416:5601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5607:5798   */\n    tag_54:\n        /* \"#utility.yul\":5647:5651   */\n      0x00\n        /* \"#utility.yul\":5667:5687   */\n      tag_143\n        /* \"#utility.yul\":5685:5686   */\n      dup3\n        /* \"#utility.yul\":5667:5687   */\n      tag_58\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":5662:5687   */\n      swap2\n      pop\n        /* \"#utility.yul\":5701:5721   */\n      tag_144\n        /* \"#utility.yul\":5719:5720   */\n      dup4\n        /* \"#utility.yul\":5701:5721   */\n      tag_58\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":5696:5721   */\n      swap3\n      pop\n        /* \"#utility.yul\":5740:5741   */\n      dup3\n        /* \"#utility.yul\":5737:5738   */\n      dup3\n        /* \"#utility.yul\":5734:5742   */\n      lt\n        /* \"#utility.yul\":5731:5765   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":5745:5763   */\n      tag_146\n      tag_74\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":5731:5765   */\n    tag_145:\n        /* \"#utility.yul\":5790:5791   */\n      dup3\n        /* \"#utility.yul\":5787:5788   */\n      dup3\n        /* \"#utility.yul\":5783:5792   */\n      sub\n        /* \"#utility.yul\":5775:5792   */\n      swap1\n      pop\n        /* \"#utility.yul\":5607:5798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f5df746ff48991b5747419eb470752e21cec393b7e440708fee814bf1be0443464736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_419": {
									"entryPoint": null,
									"id": 419,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1048:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:3",
														"type": ""
													}
												],
												"src": "545:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "817:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:32:3"
															},
															"nodeType": "YulIf",
															"src": "781:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "910:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "929:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "954:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "741:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "752:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "764:6:3",
														"type": ""
													}
												],
												"src": "694:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405273d14ff067355ce838a6e110bdfb672dbec83ca23c6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040516108bf3803806108bf83398181016040528101906100799190610102565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001819055505061012f565b600080fd5b6000819050919050565b6100df816100cc565b81146100ea57600080fd5b50565b6000815190506100fc816100d6565b92915050565b600060208284031215610118576101176100c7565b5b6000610126848285016100ed565b91505092915050565b6107818061013e6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635d48403c146100465780638c8335f314610076578063c3c64674146100a6575b600080fd5b610060600480360381019061005b919061041c565b6100c2565b60405161006d9190610458565b60405180910390f35b610090600480360381019061008b919061041c565b6101bb565b60405161009d9190610458565b60405180910390f35b6100c060048036038101906100bb9190610509565b6102b4565b005b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101249190610558565b602060405180830381865afa158015610141573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101659190610588565b9050600061017c858361039f90919063ffffffff16565b90506000610195826001546103b590919063ffffffff16565b905060006101ac82866103cb90919063ffffffff16565b90508095505050505050919050565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161021d9190610558565b602060405180830381865afa15801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e9190610588565b90506000610275858361039f90919063ffffffff16565b9050600061028e826001546103b590919063ffffffff16565b905060006102a582866103cb90919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b90610612565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600081836103ad9190610661565b905092915050565b600081836103c391906106e6565b905092915050565b600081836103d99190610717565b905092915050565b600080fd5b6000819050919050565b6103f9816103e6565b811461040457600080fd5b50565b600081359050610416816103f0565b92915050565b600060208284031215610432576104316103e1565b5b600061044084828501610407565b91505092915050565b610452816103e6565b82525050565b600060208201905061046d6000830184610449565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061049e82610473565b9050919050565b6104ae81610493565b81146104b957600080fd5b50565b6000813590506104cb816104a5565b92915050565b60008115159050919050565b6104e6816104d1565b81146104f157600080fd5b50565b600081359050610503816104dd565b92915050565b600080604083850312156105205761051f6103e1565b5b600061052e858286016104bc565b925050602061053f858286016104f4565b9150509250929050565b61055281610493565b82525050565b600060208201905061056d6000830184610549565b92915050565b600081519050610582816103f0565b92915050565b60006020828403121561059e5761059d6103e1565b5b60006105ac84828501610573565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006105fc6020836105b5565b9150610607826105c6565b602082019050919050565b6000602082019050818103600083015261062b816105ef565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061066c826103e6565b9150610677836103e6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156106ac576106ab610632565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006106f1826103e6565b91506106fc836103e6565b92508261070c5761070b6106b7565b5b828204905092915050565b6000610722826103e6565b915061072d836103e6565b9250828210156107405761073f610632565b5b82820390509291505056fea2646970667358221220f5df746ff48991b5747419eb470752e21cec393b7e440708fee814bf1be0443464736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xD14FF067355CE838A6E110BDFB672DBEC83CA23C PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x8BF CODESIZE SUB DUP1 PUSH2 0x8BF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x102 JUMP JUMPDEST CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP PUSH2 0x12F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF DUP2 PUSH2 0xCC JUMP JUMPDEST DUP2 EQ PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFC DUP2 PUSH2 0xD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x118 JUMPI PUSH2 0x117 PUSH2 0xC7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x126 DUP5 DUP3 DUP6 ADD PUSH2 0xED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x781 DUP1 PUSH2 0x13E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D48403C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8C8335F3 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x509 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x558 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x141 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17C DUP6 DUP4 PUSH2 0x39F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x195 DUP3 PUSH1 0x1 SLOAD PUSH2 0x3B5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AC DUP3 DUP7 PUSH2 0x3CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x558 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x275 DUP6 DUP4 PUSH2 0x39F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x28E DUP3 PUSH1 0x1 SLOAD PUSH2 0x3B5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A5 DUP3 DUP7 PUSH2 0x3CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x661 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F9 DUP2 PUSH2 0x3E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x416 DUP2 PUSH2 0x3F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x432 JUMPI PUSH2 0x431 PUSH2 0x3E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x440 DUP5 DUP3 DUP6 ADD PUSH2 0x407 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x452 DUP2 PUSH2 0x3E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x449 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49E DUP3 PUSH2 0x473 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AE DUP2 PUSH2 0x493 JUMP JUMPDEST DUP2 EQ PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4CB DUP2 PUSH2 0x4A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E6 DUP2 PUSH2 0x4D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x503 DUP2 PUSH2 0x4DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x520 JUMPI PUSH2 0x51F PUSH2 0x3E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x52E DUP6 DUP3 DUP7 ADD PUSH2 0x4BC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x53F DUP6 DUP3 DUP7 ADD PUSH2 0x4F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x552 DUP2 PUSH2 0x493 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x56D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x549 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x582 DUP2 PUSH2 0x3F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59E JUMPI PUSH2 0x59D PUSH2 0x3E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5AC DUP5 DUP3 DUP6 ADD PUSH2 0x573 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FC PUSH1 0x20 DUP4 PUSH2 0x5B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x607 DUP3 PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x62B DUP2 PUSH2 0x5EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x66C DUP3 PUSH2 0x3E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x677 DUP4 PUSH2 0x3E6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x6AC JUMPI PUSH2 0x6AB PUSH2 0x632 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6F1 DUP3 PUSH2 0x3E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x6FC DUP4 PUSH2 0x3E6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x70C JUMPI PUSH2 0x70B PUSH2 0x6B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x722 DUP3 PUSH2 0x3E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x72D DUP4 PUSH2 0x3E6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x740 JUMPI PUSH2 0x73F PUSH2 0x632 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xDF PUSH21 0x6FF48991B5747419EB470752E21CEC393B7E440708 INVALID 0xE8 EQ 0xBF SHL 0xE0 DIFFICULTY CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "181:1283:2:-:0;;;260:42;237:66;;;;;;;;;;;;;;;;;;;;334:71;;;;;;;;;;;;;;;;;;;;;:::i;:::-;376:10;368:5;;:18;;;;;;;;;;;;;;;;;;397:2;393:1;:6;;;;334:71;181:1283;;88:117:3;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;181:1283:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DCFETH_502": {
									"entryPoint": 443,
									"id": 502,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@DcfPrice_551": {
									"entryPoint": 194,
									"id": 551,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@add_253": {
									"entryPoint": 927,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_298": {
									"entryPoint": 949,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setRouter_453": {
									"entryPoint": 692,
									"id": 453,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_268": {
									"entryPoint": 971,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 1268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 1289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1586,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5801:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:3",
														"type": ""
													}
												],
												"src": "1025:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:3",
														"type": ""
													}
												],
												"src": "1149:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:3",
														"type": ""
													}
												],
												"src": "1377:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:3",
														"type": ""
													}
												],
												"src": "1509:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:3"
															},
															"nodeType": "YulIf",
															"src": "1664:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:3",
														"type": ""
													}
												],
												"src": "1611:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:3",
														"type": ""
													}
												],
												"src": "1739:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1926:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1936:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1961:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1954:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1954:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1947:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1936:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1908:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1918:7:3",
														"type": ""
													}
												],
												"src": "1884:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2020:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2074:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2083:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2086:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2076:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2076:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2076:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2043:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2065:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2050:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2050:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2040:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2040:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2033:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:40:3"
															},
															"nodeType": "YulIf",
															"src": "2030:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2013:5:3",
														"type": ""
													}
												],
												"src": "1980:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2151:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2161:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2183:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2170:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2161:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2223:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2199:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2199:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2199:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2129:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2137:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2145:5:3",
														"type": ""
													}
												],
												"src": "2102:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2321:388:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2367:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2369:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2369:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2369:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2342:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2351:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2338:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2338:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2363:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2334:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2334:32:3"
															},
															"nodeType": "YulIf",
															"src": "2331:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2460:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2475:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2489:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2479:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2504:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2539:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2550:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2535:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2535:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2559:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2514:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2514:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2504:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2587:115:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2602:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2616:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2606:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2632:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2664:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2675:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2660:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2660:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2684:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2642:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2642:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2632:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2283:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2294:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2306:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2314:6:3",
														"type": ""
													}
												],
												"src": "2241:468:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2780:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2797:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2820:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2802:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2802:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2790:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2790:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2790:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2768:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2775:3:3",
														"type": ""
													}
												],
												"src": "2715:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2937:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2947:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2959:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2970:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2955:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2947:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3027:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3040:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3051:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3036:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3036:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2983:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2983:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2909:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2921:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2932:4:3",
														"type": ""
													}
												],
												"src": "2839:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3130:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3140:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3149:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3140:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3108:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3116:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3124:5:3",
														"type": ""
													}
												],
												"src": "3067:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3293:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3339:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3341:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3341:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3341:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3314:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3323:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3310:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3310:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3335:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3306:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3306:32:3"
															},
															"nodeType": "YulIf",
															"src": "3303:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3432:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3447:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3461:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3451:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3476:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3522:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3533:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3518:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3518:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3542:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3486:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3486:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3476:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3263:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3274:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3286:6:3",
														"type": ""
													}
												],
												"src": "3216:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3686:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3691:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3707:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3726:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3731:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3722:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3722:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3707:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3641:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3646:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3657:11:3",
														"type": ""
													}
												],
												"src": "3573:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3854:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3876:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3884:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3872:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3888:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3865:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3865:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3865:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3846:6:3",
														"type": ""
													}
												],
												"src": "3748:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4082:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4092:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4158:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4163:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4099:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4099:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4092:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4264:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4175:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4175:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4175:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4277:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4288:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4293:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4284:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4284:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4277:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4070:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4078:3:3",
														"type": ""
													}
												],
												"src": "3936:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4479:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4489:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4501:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4512:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4497:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4497:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4489:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4536:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4547:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4532:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4532:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4555:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4561:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4551:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4551:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4525:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4525:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4581:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4715:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4589:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4589:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4581:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4459:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4474:4:3",
														"type": ""
													}
												],
												"src": "4308:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4761:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4778:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4771:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4771:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4771:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4875:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4878:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4868:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4868:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4868:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4899:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4902:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4892:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4892:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4892:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4733:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4963:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4973:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4996:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4978:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4978:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4973:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5007:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5030:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5012:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5012:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5007:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5170:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5172:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5172:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5172:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5091:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5098:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5166:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5094:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5094:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5088:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5088:81:3"
															},
															"nodeType": "YulIf",
															"src": "5085:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5202:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5213:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5216:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5209:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5209:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5202:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4950:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4953:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4959:3:3",
														"type": ""
													}
												],
												"src": "4919:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5258:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5275:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5278:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5268:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5268:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5268:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5372:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5375:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5365:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5365:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5365:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5396:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5399:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5389:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5389:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5389:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5230:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5458:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5468:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5491:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5473:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5473:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5468:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5502:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5525:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5507:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5507:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5502:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5549:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5551:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5551:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5551:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5546:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5539:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5539:9:3"
															},
															"nodeType": "YulIf",
															"src": "5536:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5581:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5590:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5593:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5586:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5581:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5447:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5450:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5456:1:3",
														"type": ""
													}
												],
												"src": "5416:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5652:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5662:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5685:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5667:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5667:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5662:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5696:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5719:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5701:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5701:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5696:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5743:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5745:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5745:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5745:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5737:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5740:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5734:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:8:3"
															},
															"nodeType": "YulIf",
															"src": "5731:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5775:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5787:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5790:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5783:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5775:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5638:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5641:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5647:4:3",
														"type": ""
													}
												],
												"src": "5607:191:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80635d48403c146100465780638c8335f314610076578063c3c64674146100a6575b600080fd5b610060600480360381019061005b919061041c565b6100c2565b60405161006d9190610458565b60405180910390f35b610090600480360381019061008b919061041c565b6101bb565b60405161009d9190610458565b60405180910390f35b6100c060048036038101906100bb9190610509565b6102b4565b005b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101249190610558565b602060405180830381865afa158015610141573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101659190610588565b9050600061017c858361039f90919063ffffffff16565b90506000610195826001546103b590919063ffffffff16565b905060006101ac82866103cb90919063ffffffff16565b90508095505050505050919050565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161021d9190610558565b602060405180830381865afa15801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e9190610588565b90506000610275858361039f90919063ffffffff16565b9050600061028e826001546103b590919063ffffffff16565b905060006102a582866103cb90919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b90610612565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600081836103ad9190610661565b905092915050565b600081836103c391906106e6565b905092915050565b600081836103d99190610717565b905092915050565b600080fd5b6000819050919050565b6103f9816103e6565b811461040457600080fd5b50565b600081359050610416816103f0565b92915050565b600060208284031215610432576104316103e1565b5b600061044084828501610407565b91505092915050565b610452816103e6565b82525050565b600060208201905061046d6000830184610449565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061049e82610473565b9050919050565b6104ae81610493565b81146104b957600080fd5b50565b6000813590506104cb816104a5565b92915050565b60008115159050919050565b6104e6816104d1565b81146104f157600080fd5b50565b600081359050610503816104dd565b92915050565b600080604083850312156105205761051f6103e1565b5b600061052e858286016104bc565b925050602061053f858286016104f4565b9150509250929050565b61055281610493565b82525050565b600060208201905061056d6000830184610549565b92915050565b600081519050610582816103f0565b92915050565b60006020828403121561059e5761059d6103e1565b5b60006105ac84828501610573565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006105fc6020836105b5565b9150610607826105c6565b602082019050919050565b6000602082019050818103600083015261062b816105ef565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061066c826103e6565b9150610677836103e6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156106ac576106ab610632565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006106f1826103e6565b91506106fc836103e6565b92508261070c5761070b6106b7565b5b828204905092915050565b6000610722826103e6565b915061072d836103e6565b9250828210156107405761073f610632565b5b82820390509291505056fea2646970667358221220f5df746ff48991b5747419eb470752e21cec393b7e440708fee814bf1be0443464736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D48403C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8C8335F3 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x509 JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x558 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x141 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17C DUP6 DUP4 PUSH2 0x39F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x195 DUP3 PUSH1 0x1 SLOAD PUSH2 0x3B5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1AC DUP3 DUP7 PUSH2 0x3CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x558 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x588 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x275 DUP6 DUP4 PUSH2 0x39F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x28E DUP3 PUSH1 0x1 SLOAD PUSH2 0x3B5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A5 DUP3 DUP7 PUSH2 0x3CB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33B SWAP1 PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x661 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F9 DUP2 PUSH2 0x3E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x416 DUP2 PUSH2 0x3F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x432 JUMPI PUSH2 0x431 PUSH2 0x3E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x440 DUP5 DUP3 DUP6 ADD PUSH2 0x407 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x452 DUP2 PUSH2 0x3E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x449 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49E DUP3 PUSH2 0x473 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AE DUP2 PUSH2 0x493 JUMP JUMPDEST DUP2 EQ PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4CB DUP2 PUSH2 0x4A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E6 DUP2 PUSH2 0x4D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x503 DUP2 PUSH2 0x4DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x520 JUMPI PUSH2 0x51F PUSH2 0x3E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x52E DUP6 DUP3 DUP7 ADD PUSH2 0x4BC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x53F DUP6 DUP3 DUP7 ADD PUSH2 0x4F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x552 DUP2 PUSH2 0x493 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x56D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x549 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x582 DUP2 PUSH2 0x3F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59E JUMPI PUSH2 0x59D PUSH2 0x3E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5AC DUP5 DUP3 DUP6 ADD PUSH2 0x573 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5FC PUSH1 0x20 DUP4 PUSH2 0x5B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x607 DUP3 PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x62B DUP2 PUSH2 0x5EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x66C DUP3 PUSH2 0x3E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x677 DUP4 PUSH2 0x3E6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x6AC JUMPI PUSH2 0x6AB PUSH2 0x632 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6F1 DUP3 PUSH2 0x3E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x6FC DUP4 PUSH2 0x3E6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x70C JUMPI PUSH2 0x70B PUSH2 0x6B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x722 DUP3 PUSH2 0x3E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x72D DUP4 PUSH2 0x3E6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x740 JUMPI PUSH2 0x73F PUSH2 0x632 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xDF PUSH21 0x6FF48991B5747419EB470752E21CEC393B7E440708 INVALID 0xE8 EQ 0xBF SHL 0xE0 DIFFICULTY CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "181:1283:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;723:354;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;615:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1085:356;1142:4;1154:19;1176:21;1154:43;;1204:19;1226:5;;;;;;;;;;;:15;;;1250:4;1226:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1204:52;;1263:20;1286:27;1302:10;1286:11;:15;;:27;;;;:::i;:::-;1263:50;;1320:20;1343:19;1349:12;1343:1;;:5;;:19;;;;:::i;:::-;1320:42;;1369:14;1386:29;1402:12;1386:11;:15;;:29;;;;:::i;:::-;1369:46;;1429:6;1422:13;;;;;;;1085:356;;;:::o;723:354::-;778:4;790:19;812:21;790:43;;840:19;862:5;;;;;;;;;;;:15;;;886:4;862:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;840:52;;899:20;922:27;938:10;922:11;:15;;:27;;;;:::i;:::-;899:50;;956:20;979:19;985:12;979:1;;:5;;:19;;;;:::i;:::-;956:42;;1005:14;1022:29;1038:12;1022:11;:15;;:29;;;;:::i;:::-;1005:46;;1065:6;1058:13;;;;;;;723:354;;;:::o;615:100::-;528:10;519:19;;:5;;;;;;;;;;;:19;;;511:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;704:5:::1;684:11;:17;696:4;684:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;615:100:::0;;:::o;2755:96:1:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:90::-;1918:7;1961:5;1954:13;1947:21;1936:32;;1884:90;;;:::o;1980:116::-;2050:21;2065:5;2050:21;:::i;:::-;2043:5;2040:32;2030:60;;2086:1;2083;2076:12;2030:60;1980:116;:::o;2102:133::-;2145:5;2183:6;2170:20;2161:29;;2199:30;2223:5;2199:30;:::i;:::-;2102:133;;;;:::o;2241:468::-;2306:6;2314;2363:2;2351:9;2342:7;2338:23;2334:32;2331:119;;;2369:79;;:::i;:::-;2331:119;2489:1;2514:53;2559:7;2550:6;2539:9;2535:22;2514:53;:::i;:::-;2504:63;;2460:117;2616:2;2642:50;2684:7;2675:6;2664:9;2660:22;2642:50;:::i;:::-;2632:60;;2587:115;2241:468;;;;;:::o;2715:118::-;2802:24;2820:5;2802:24;:::i;:::-;2797:3;2790:37;2715:118;;:::o;2839:222::-;2932:4;2970:2;2959:9;2955:18;2947:26;;2983:71;3051:1;3040:9;3036:17;3027:6;2983:71;:::i;:::-;2839:222;;;;:::o;3067:143::-;3124:5;3155:6;3149:13;3140:22;;3171:33;3198:5;3171:33;:::i;:::-;3067:143;;;;:::o;3216:351::-;3286:6;3335:2;3323:9;3314:7;3310:23;3306:32;3303:119;;;3341:79;;:::i;:::-;3303:119;3461:1;3486:64;3542:7;3533:6;3522:9;3518:22;3486:64;:::i;:::-;3476:74;;3432:128;3216:351;;;;:::o;3573:169::-;3657:11;3691:6;3686:3;3679:19;3731:4;3726:3;3722:14;3707:29;;3573:169;;;;:::o;3748:182::-;3888:34;3884:1;3876:6;3872:14;3865:58;3748:182;:::o;3936:366::-;4078:3;4099:67;4163:2;4158:3;4099:67;:::i;:::-;4092:74;;4175:93;4264:3;4175:93;:::i;:::-;4293:2;4288:3;4284:12;4277:19;;3936:366;;;:::o;4308:419::-;4474:4;4512:2;4501:9;4497:18;4489:26;;4561:9;4555:4;4551:20;4547:1;4536:9;4532:17;4525:47;4589:131;4715:4;4589:131;:::i;:::-;4581:139;;4308:419;;;:::o;4733:180::-;4781:77;4778:1;4771:88;4878:4;4875:1;4868:15;4902:4;4899:1;4892:15;4919:305;4959:3;4978:20;4996:1;4978:20;:::i;:::-;4973:25;;5012:20;5030:1;5012:20;:::i;:::-;5007:25;;5166:1;5098:66;5094:74;5091:1;5088:81;5085:107;;;5172:18;;:::i;:::-;5085:107;5216:1;5213;5209:9;5202:16;;4919:305;;;;:::o;5230:180::-;5278:77;5275:1;5268:88;5375:4;5372:1;5365:15;5399:4;5396:1;5389:15;5416:185;5456:1;5473:20;5491:1;5473:20;:::i;:::-;5468:25;;5507:20;5525:1;5507:20;:::i;:::-;5502:25;;5546:1;5536:35;;5551:18;;:::i;:::-;5536:35;5593:1;5590;5586:9;5581:14;;5416:185;;;;:::o;5607:191::-;5647:4;5667:20;5685:1;5667:20;:::i;:::-;5662:25;;5701:20;5719:1;5701:20;:::i;:::-;5696:25;;5740:1;5737;5734:8;5731:34;;;5745:18;;:::i;:::-;5731:34;5790:1;5787;5783:9;5775:17;;5607:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "384200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DCFETH(uint256)": "infinite",
								"DcfPrice(uint256)": "infinite",
								"setRouter(address,bool)": "27183"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 1464,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 181,
									"end": 1464,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 181,
									"end": 1464,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 260,
									"end": 302,
									"name": "PUSH",
									"source": 2,
									"value": "D14FF067355CE838A6E110BDFB672DBEC83CA23C"
								},
								{
									"begin": 237,
									"end": 303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 237,
									"end": 303,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 237,
									"end": 303,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 237,
									"end": 303,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 237,
									"end": 303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 334,
									"end": 405,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 334,
									"end": 405,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 405,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 334,
									"end": 405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 405,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 376,
									"end": 386,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 368,
									"end": 373,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 368,
									"end": 373,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 386,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 368,
									"end": 386,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 368,
									"end": 386,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 368,
									"end": 386,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 397,
									"end": 399,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 393,
									"end": 394,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 393,
									"end": 399,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 393,
									"end": 399,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 393,
									"end": 399,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 393,
									"end": 399,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 181,
									"end": 1464,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 181,
									"end": 1464,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 181,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1464,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1464,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1464,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1464,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1464,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1464,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1464,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f5df746ff48991b5747419eb470752e21cec393b7e440708fee814bf1be0443464736f6c634300080e0033",
									".code": [
										{
											"begin": 181,
											"end": 1464,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "PUSH",
											"source": 2,
											"value": "5D48403C"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "PUSH",
											"source": 2,
											"value": "8C8335F3"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "PUSH",
											"source": 2,
											"value": "C3C64674"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1464,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1085,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1085,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1085,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 723,
											"end": 1077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 723,
											"end": 1077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 723,
											"end": 1077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 615,
											"end": 715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 615,
											"end": 715,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 615,
											"end": 715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 615,
											"end": 715,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 615,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 615,
											"end": 715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 615,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 615,
											"end": 715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1154,
											"end": 1173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1197,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1197,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1197,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1204,
											"end": 1223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1241,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1250,
											"end": 1254,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1226,
											"end": 1256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1226,
											"end": 1256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1204,
											"end": 1256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1204,
											"end": 1256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1263,
											"end": 1283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1297,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1286,
											"end": 1313,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1313,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1286,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1263,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1263,
											"end": 1313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1340,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1344,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1343,
											"end": 1344,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1362,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1362,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1343,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1402,
											"end": 1414,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1397,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1386,
											"end": 1401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1415,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1386,
											"end": 1415,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1386,
											"end": 1415,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1386,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1429,
											"end": 1435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 778,
											"end": 782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 809,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 812,
											"end": 833,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 790,
											"end": 833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 790,
											"end": 833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 840,
											"end": 859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 862,
											"end": 867,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 862,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 867,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 862,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 877,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 862,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 886,
											"end": 890,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 862,
											"end": 892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 862,
											"end": 892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 862,
											"end": 892,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 862,
											"end": 892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 840,
											"end": 892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 899,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 938,
											"end": 948,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 922,
											"end": 933,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 922,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 922,
											"end": 949,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 922,
											"end": 949,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 922,
											"end": 949,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 922,
											"end": 949,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 922,
											"end": 949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 922,
											"end": 949,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 922,
											"end": 949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 899,
											"end": 949,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 899,
											"end": 949,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 956,
											"end": 976,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 985,
											"end": 997,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 979,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 979,
											"end": 980,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 979,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 979,
											"end": 984,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 998,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 979,
											"end": 998,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 998,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 979,
											"end": 998,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 979,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 979,
											"end": 998,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 979,
											"end": 998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 956,
											"end": 998,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 956,
											"end": 998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1050,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1033,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1022,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1071,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 723,
											"end": 1077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 615,
											"end": 715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 528,
											"end": 538,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 519,
											"end": 538,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 538,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 519,
											"end": 538,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 538,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 519,
											"end": 538,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 511,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 704,
											"end": 709,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 684,
											"end": 695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 696,
											"end": 700,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 684,
											"end": 701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 684,
											"end": 709,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1974,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1884,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1961,
											"end": 1966,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 1967,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 1968,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1974,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1974,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1974,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2096,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1980,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2065,
											"end": 2070,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2050,
											"end": 2071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2071,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2050,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2043,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2072,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2030,
											"end": 2090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2076,
											"end": 2088,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2090,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2030,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2150,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2190,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2223,
											"end": 2228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2199,
											"end": 2229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2229,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2199,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2320,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2363,
											"end": 2365,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2360,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2342,
											"end": 2349,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2361,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2334,
											"end": 2366,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2331,
											"end": 2450,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2331,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2331,
											"end": 2450,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2369,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2369,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2369,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2369,
											"end": 2448,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2369,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2331,
											"end": 2450,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2331,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2559,
											"end": 2566,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2556,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 2548,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2535,
											"end": 2557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2514,
											"end": 2567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2567,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2514,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2567,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2577,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2616,
											"end": 2618,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2642,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2684,
											"end": 2691,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2675,
											"end": 2681,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2664,
											"end": 2673,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2660,
											"end": 2682,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2642,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2642,
											"end": 2692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2642,
											"end": 2692,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2642,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2692,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2702,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2833,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2715,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2820,
											"end": 2825,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2802,
											"end": 2826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2826,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2802,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2800,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2790,
											"end": 2827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 3061,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2839,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2932,
											"end": 2936,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 2972,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2959,
											"end": 2968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 2973,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 2973,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 2973,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2983,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3051,
											"end": 3052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3049,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3036,
											"end": 3053,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3027,
											"end": 3033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2983,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2983,
											"end": 3054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2983,
											"end": 3054,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2983,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 3061,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 3061,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 3061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 3061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 3061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3210,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3067,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3124,
											"end": 3129,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3149,
											"end": 3162,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3140,
											"end": 3162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3140,
											"end": 3162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3210,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3210,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3067,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3216,
											"end": 3567,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3216,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3292,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3335,
											"end": 3337,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3314,
											"end": 3321,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3310,
											"end": 3333,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3306,
											"end": 3338,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3422,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3303,
											"end": 3422,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3341,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3341,
											"end": 3420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3420,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3341,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3422,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3303,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3461,
											"end": 3462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3542,
											"end": 3549,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3539,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3540,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3486,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3486,
											"end": 3550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3486,
											"end": 3550,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3486,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3476,
											"end": 3550,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3476,
											"end": 3550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3560,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3216,
											"end": 3567,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3216,
											"end": 3567,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3216,
											"end": 3567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3216,
											"end": 3567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3216,
											"end": 3567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3573,
											"end": 3742,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3573,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3691,
											"end": 3697,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3686,
											"end": 3689,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3698,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3726,
											"end": 3729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3736,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3707,
											"end": 3736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3707,
											"end": 3736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3573,
											"end": 3742,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3573,
											"end": 3742,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3573,
											"end": 3742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3573,
											"end": 3742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3573,
											"end": 3742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3748,
											"end": 3930,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3748,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3922,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3884,
											"end": 3885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3872,
											"end": 3886,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3865,
											"end": 3923,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3748,
											"end": 3930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3748,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3936,
											"end": 4302,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3936,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4078,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4163,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4158,
											"end": 4161,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4099,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4099,
											"end": 4166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4099,
											"end": 4166,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4099,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4092,
											"end": 4166,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4092,
											"end": 4166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4264,
											"end": 4267,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4175,
											"end": 4268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4268,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4175,
											"end": 4268,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4295,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4291,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4284,
											"end": 4296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4277,
											"end": 4296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4277,
											"end": 4296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3936,
											"end": 4302,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3936,
											"end": 4302,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3936,
											"end": 4302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3936,
											"end": 4302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4308,
											"end": 4727,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4308,
											"end": 4727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4474,
											"end": 4478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4512,
											"end": 4514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4501,
											"end": 4510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4497,
											"end": 4515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4489,
											"end": 4515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4489,
											"end": 4515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4561,
											"end": 4570,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4555,
											"end": 4559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4571,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4545,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4532,
											"end": 4549,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4525,
											"end": 4572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4715,
											"end": 4719,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4589,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4720,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4589,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4581,
											"end": 4720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4581,
											"end": 4720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4308,
											"end": 4727,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4308,
											"end": 4727,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4308,
											"end": 4727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4308,
											"end": 4727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4733,
											"end": 4913,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4733,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4781,
											"end": 4858,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4778,
											"end": 4779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4859,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4878,
											"end": 4882,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4875,
											"end": 4876,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4868,
											"end": 4883,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4902,
											"end": 4906,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4899,
											"end": 4900,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4892,
											"end": 4907,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 5224,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4919,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4959,
											"end": 4962,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4978,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4978,
											"end": 4998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4978,
											"end": 4998,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4978,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4973,
											"end": 4998,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4973,
											"end": 4998,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5012,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5030,
											"end": 5031,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5012,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5012,
											"end": 5032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5012,
											"end": 5032,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5012,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5007,
											"end": 5032,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5007,
											"end": 5032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5166,
											"end": 5167,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5094,
											"end": 5168,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5091,
											"end": 5092,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5088,
											"end": 5169,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5192,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5085,
											"end": 5192,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5172,
											"end": 5190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5085,
											"end": 5192,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5085,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5216,
											"end": 5217,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5214,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5209,
											"end": 5218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5202,
											"end": 5218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5202,
											"end": 5218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 5224,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 5224,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 5224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 5224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 5224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5230,
											"end": 5410,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5230,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5278,
											"end": 5355,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5275,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5356,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5379,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5365,
											"end": 5380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5399,
											"end": 5403,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5404,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5416,
											"end": 5601,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5416,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5456,
											"end": 5457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5473,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5491,
											"end": 5492,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5473,
											"end": 5493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5493,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5473,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5468,
											"end": 5493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5468,
											"end": 5493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5507,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5527,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5546,
											"end": 5547,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5536,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5536,
											"end": 5571,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5551,
											"end": 5569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5536,
											"end": 5571,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 5536,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5590,
											"end": 5591,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5586,
											"end": 5595,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5581,
											"end": 5595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5581,
											"end": 5595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5416,
											"end": 5601,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5416,
											"end": 5601,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5416,
											"end": 5601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5416,
											"end": 5601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5416,
											"end": 5601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5607,
											"end": 5798,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5607,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5647,
											"end": 5651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5685,
											"end": 5686,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5667,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5667,
											"end": 5687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5667,
											"end": 5687,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5667,
											"end": 5687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5719,
											"end": 5720,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5701,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5721,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5701,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5721,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5741,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5737,
											"end": 5738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5734,
											"end": 5742,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5731,
											"end": 5765,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5731,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5731,
											"end": 5765,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5745,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5745,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5745,
											"end": 5763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5745,
											"end": 5763,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5745,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5731,
											"end": 5765,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5731,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5790,
											"end": 5791,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5787,
											"end": 5788,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5783,
											"end": 5792,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5775,
											"end": 5792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5775,
											"end": 5792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5607,
											"end": 5798,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5607,
											"end": 5798,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5607,
											"end": 5798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5607,
											"end": 5798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5607,
											"end": 5798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DCFETH(uint256)": "8c8335f3",
							"DcfPrice(uint256)": "5d48403c",
							"setRouter(address,bool)": "c3c64674"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_k\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"DCFETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"DcfPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"power\",\"type\":\"bool\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/treasury.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/treasury.sol\":{\"keccak256\":\"0xa719b5c1ea462c89fa203e2d4f84b5f36e35477f7d5b6270c457e44a03dcb314\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd2838a109fb972065130235c43ed4a703346b6fde70e15f858aec343d599bcf\",\"dweb:/ipfs/QmT8tc3i1xCJViGVgeuTUhdCEwKh3yHXku6hBX9dJk7dh3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 402,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "dcoff",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 404,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "K",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 421,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 425,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "RouterAdmin",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"Dcoffer/treasury.sol": {
				"ast": {
					"absolutePath": "Dcoffer/treasury.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						],
						"treasury": [
							552
						]
					},
					"id": 553,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 553,
							"sourceUnit": 78,
							"src": "60:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 553,
							"sourceUnit": 390,
							"src": "118:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 552,
							"linearizedBaseContracts": [
								552
							],
							"name": "treasury",
							"nameLocation": "190:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 396,
									"libraryName": {
										"id": 394,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "211:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "205:24:2",
									"typeName": {
										"id": 395,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "224:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 402,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "244:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "237:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 398,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 397,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "237:6:2"
										},
										"referencedDeclaration": 77,
										"src": "237:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307864313466663036373335354365383338413665313130624446623637324462456338336341323343",
												"id": 400,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "260:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 399,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "253:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 401,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "253:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 404,
									"mutability": "mutable",
									"name": "K",
									"nameLocation": "326:1:2",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "310:17:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 403,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "310:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "361:44:2",
										"statements": [
											{
												"expression": {
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 409,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "368:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 410,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "376:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "376:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "368:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "368:18:2"
											},
											{
												"expression": {
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 414,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "393:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 415,
														"name": "_k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "397:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "393:6:2"
											}
										]
									},
									"id": 419,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "_k",
												"nameLocation": "351:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "346:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:9:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:0:2"
									},
									"scope": 552,
									"src": "334:71:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 421,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "419:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "411:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 420,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "411:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "RouterAdmin",
									"nameLocation": "461:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "429:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 424,
										"keyType": {
											"id": 422,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "437:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "429:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 423,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "448:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "500:93:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 428,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "519:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 429,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "528:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "528:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "519:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "540:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "511:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "511:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "511:64:2"
											},
											{
												"id": 435,
												"nodeType": "PlaceholderStatement",
												"src": "586:1:2"
											}
										]
									},
									"id": 437,
									"name": "onlyOwner",
									"nameLocation": "488:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "497:2:2"
									},
									"src": "479:114:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "677:38:2",
										"statements": [
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 446,
															"name": "RouterAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "684:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 448,
														"indexExpression": {
															"id": 447,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "696:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "684:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 449,
														"name": "power",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "704:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "684:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "684:25:2"
											}
										]
									},
									"functionSelector": "c3c64674",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 444,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 443,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "668:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "668:9:2"
										}
									],
									"name": "setRouter",
									"nameLocation": "624:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "642:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "634:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "power",
												"nameLocation": "653:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "648:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "648:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:26:2"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "677:0:2"
									},
									"scope": 552,
									"src": "615:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "783:294:2",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "798:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "790:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 460,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "790:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 467,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 464,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "820:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_treasury_$552",
																	"typeString": "contract treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_treasury_$552",
																	"typeString": "contract treasury"
																}
															],
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "812:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 462,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "812:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "812:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "812:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "790:43:2"
											},
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "848:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "840:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 468,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 474,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "886:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$552",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$552",
																		"typeString": "contract treasury"
																	}
																],
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "878:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 472,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "878:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "878:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 470,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "862:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "862:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "862:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "840:52:2"
											},
											{
												"assignments": [
													479
												],
												"declarations": [
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "907:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "899:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 478,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "899:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 484,
												"initialValue": {
													"arguments": [
														{
															"id": 482,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "938:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 480,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "922:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "922:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "922:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "899:50:2"
											},
											{
												"assignments": [
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "964:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "956:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 485,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "956:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 491,
												"initialValue": {
													"arguments": [
														{
															"id": 489,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "985:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 487,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "979:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "979:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "979:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "956:42:2"
											},
											{
												"assignments": [
													493
												],
												"declarations": [
													{
														"constant": false,
														"id": 493,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "1013:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "1005:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 492,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1005:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 498,
												"initialValue": {
													"arguments": [
														{
															"id": 496,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "1038:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 494,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "1022:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1022:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1022:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1005:46:2"
											},
											{
												"expression": {
													"id": 499,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 493,
													"src": "1065:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 459,
												"id": 500,
												"nodeType": "Return",
												"src": "1058:13:2"
											}
										]
									},
									"functionSelector": "8c8335f3",
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DCFETH",
									"nameLocation": "732:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "747:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "739:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:20:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "778:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:2"
									},
									"scope": 552,
									"src": "723:354:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "1147:294:2",
										"statements": [
											{
												"assignments": [
													510
												],
												"declarations": [
													{
														"constant": false,
														"id": 510,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "1162:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "1154:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 509,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1154:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 516,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 513,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1184:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_treasury_$552",
																	"typeString": "contract treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_treasury_$552",
																	"typeString": "contract treasury"
																}
															],
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1176:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 511,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1176:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1176:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1176:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1154:43:2"
											},
											{
												"assignments": [
													518
												],
												"declarations": [
													{
														"constant": false,
														"id": 518,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "1212:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "1204:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 517,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 523,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1250:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$552",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$552",
																		"typeString": "contract treasury"
																	}
																],
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1242:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 521,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1242:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1242:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 519,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1226:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1226:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1226:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1204:52:2"
											},
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "1271:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "1263:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 527,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1263:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 533,
												"initialValue": {
													"arguments": [
														{
															"id": 531,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "1302:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 529,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "1286:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "1286:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1286:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1263:50:2"
											},
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "1328:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "1320:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1320:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 540,
												"initialValue": {
													"arguments": [
														{
															"id": 538,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "1349:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 536,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "1343:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1343:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1343:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1320:42:2"
											},
											{
												"assignments": [
													542
												],
												"declarations": [
													{
														"constant": false,
														"id": 542,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "1377:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "1369:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 541,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1369:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [
														{
															"id": 545,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "1402:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 543,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "1386:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1386:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1386:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1369:46:2"
											},
											{
												"expression": {
													"id": 548,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 542,
													"src": "1429:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 508,
												"id": 549,
												"nodeType": "Return",
												"src": "1422:13:2"
											}
										]
									},
									"functionSelector": "5d48403c",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DcfPrice",
									"nameLocation": "1094:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "1111:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "1103:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:20:2"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "1142:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1142:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:6:2"
									},
									"scope": 552,
									"src": "1085:356:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 553,
							"src": "181:1283:2",
							"usedErrors": []
						}
					],
					"src": "33:1431:2"
				},
				"id": 2
			}
		}
	}
}