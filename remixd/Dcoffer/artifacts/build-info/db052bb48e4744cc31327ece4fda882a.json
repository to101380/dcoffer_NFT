{
	"id": "db052bb48e4744cc31327ece4fda882a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dcoffer/treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\nimport './IDCF/IDCF.sol';\r\n\r\ncontract treasury  {\r\n  using SafeMath for uint;  \r\n  IDCF mine = IDCF(0x6a544367FCa7064B6ADA5dc87F7E5058A9bB7Af9);\r\n  IERC20 dcoff =  IERC20(0xbE0C856e2981b9f03d7613566DFC6679eEe4708A);\r\n\r\n  uint256 DcoffperBlock;  \r\n  mapping(address => uint256 )private ScoreWithdrawn;\r\n\r\n  constructor(){\r\n    DcoffperBlock = 2e14;\r\n  }\r\n\r\n\r\n  function MineDcoff()external{\r\n      uint256 afterScore = Score(msg.sender);\r\n      uint256 GetDCF = afterScore.mul(DcoffperBlock);\r\n      dcoff.transfer(msg.sender,GetDCF);\r\n      ScoreWithdrawn[msg.sender] = ScoreWithdrawn[msg.sender].add(afterScore);\r\n  }  \r\n\r\n  function Score(address user)internal view returns(uint256){\r\n      uint256 _Score = mine.BlockScore(user);\r\n      uint256 afterScore = _Score.sub(ScoreWithdrawn[user]);\r\n      return afterScore;\r\n  }\r\n\r\n  function mineStatus(address user)public view returns(uint256){\r\n      uint256 afterScore = Score(user);\r\n      uint256 GetDCF = afterScore.mul(DcoffperBlock);\r\n      return GetDCF;\r\n  }\r\n\r\n   \r\n  \r\n\r\n}"
			},
			"Dcoffer/IDCF/IDCF.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v3.3.0\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\n\r\n\r\n/**\r\n * @dev Interface of an ERC721A compliant contract.\r\n */\r\ninterface IDCF  {\r\n   \r\n\r\n    function BlockScore(address user)external view returns(uint);\r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122096cd1b093a4397f8438b96b89f783006275ebc2fa9dc186c5dc5b69d2e218b7764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122096cd1b093a4397f8438b96b89f783006275ebc2fa9dc186c5dc5b69d2e218b7764736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xCD SHL MULMOD GASPRICE NUMBER SWAP8 0xF8 NUMBER DUP12 SWAP7 0xB8 SWAP16 PUSH25 0x3006275EBC2FA9DC186C5DC5B69D2E218B7764736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122096cd1b093a4397f8438b96b89f783006275ebc2fa9dc186c5dc5b69d2e218b7764736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0xCD SHL MULMOD GASPRICE NUMBER SWAP8 0xF8 NUMBER DUP12 SWAP7 0xB8 SWAP16 PUSH25 0x3006275EBC2FA9DC186C5DC5B69D2E218B7764736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122096cd1b093a4397f8438b96b89f783006275ebc2fa9dc186c5dc5b69d2e218b7764736f6c634300080d0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/IDCF/IDCF.sol": {
				"IDCF": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "BlockScore",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"BlockScore(address)": "325b272a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"BlockScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/IDCF/IDCF.sol\":\"IDCF\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Dcoffer/IDCF/IDCF.sol\":{\"keccak256\":\"0x46f37359686638f9b09b85b67546f013da80a49dcbf195b3d27d0462cfacf135\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://715b10cc638500e1a1755f8612a35d906e2cf5a919629926ae43d51bace05911\",\"dweb:/ipfs/Qmb2Nxbut2U6yrr1hoqWj28VFPE7sGvG3BHbTfNnAkuVkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/treasury.sol": {
				"treasury": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "MineDcoff",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "mineStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dcoffer/treasury.sol\":206:1209  contract treasury  {... */\n  mstore(0x40, 0x80)\n    /* \"Dcoffer/treasury.sol\":277:319  0x6a544367FCa7064B6ADA5dc87F7E5058A9bB7Af9 */\n  0x6a544367fca7064b6ada5dc87f7e5058a9bb7af9\n    /* \"Dcoffer/treasury.sol\":260:320  IDCF mine = IDCF(0x6a544367FCa7064B6ADA5dc87F7E5058A9bB7Af9) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":348:390  0xbE0C856e2981b9f03d7613566DFC6679eEe4708A */\n  0xbe0c856e2981b9f03d7613566dfc6679eee4708a\n    /* \"Dcoffer/treasury.sol\":325:391  IERC20 dcoff =  IERC20(0xbE0C856e2981b9f03d7613566DFC6679eEe4708A) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":483:529  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Dcoffer/treasury.sol\":519:523  2e14 */\n  0xb5e620f48000\n    /* \"Dcoffer/treasury.sol\":503:516  DcoffperBlock */\n  0x02\n    /* \"Dcoffer/treasury.sol\":503:523  DcoffperBlock = 2e14 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":206:1209  contract treasury  {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dcoffer/treasury.sol\":206:1209  contract treasury  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x33a22571\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8bed4778\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/treasury.sol\":1008:1193  function mineStatus(address user)public view returns(uint256){... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":537:795  function MineDcoff()external{... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"Dcoffer/treasury.sol\":1008:1193  function mineStatus(address user)public view returns(uint256){... */\n    tag_8:\n        /* \"Dcoffer/treasury.sol\":1061:1068  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1078:1096  uint256 afterScore */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1099:1110  Score(user) */\n      tag_14\n        /* \"Dcoffer/treasury.sol\":1105:1109  user */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1099:1104  Score */\n      tag_15\n        /* \"Dcoffer/treasury.sol\":1099:1110  Score(user) */\n      jump\t// in\n    tag_14:\n        /* \"Dcoffer/treasury.sol\":1078:1110  uint256 afterScore = Score(user) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1119:1133  uint256 GetDCF */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1136:1165  afterScore.mul(DcoffperBlock) */\n      tag_16\n        /* \"Dcoffer/treasury.sol\":1151:1164  DcoffperBlock */\n      sload(0x02)\n        /* \"Dcoffer/treasury.sol\":1136:1146  afterScore */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1136:1150  afterScore.mul */\n      tag_17\n      swap1\n        /* \"Dcoffer/treasury.sol\":1136:1165  afterScore.mul(DcoffperBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_16:\n        /* \"Dcoffer/treasury.sol\":1119:1165  uint256 GetDCF = afterScore.mul(DcoffperBlock) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1181:1187  GetDCF */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1174:1187  return GetDCF */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":1008:1193  function mineStatus(address user)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":537:795  function MineDcoff()external{... */\n    tag_12:\n        /* \"Dcoffer/treasury.sol\":574:592  uint256 afterScore */\n      0x00\n        /* \"Dcoffer/treasury.sol\":595:612  Score(msg.sender) */\n      tag_19\n        /* \"Dcoffer/treasury.sol\":601:611  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":595:600  Score */\n      tag_15\n        /* \"Dcoffer/treasury.sol\":595:612  Score(msg.sender) */\n      jump\t// in\n    tag_19:\n        /* \"Dcoffer/treasury.sol\":574:612  uint256 afterScore = Score(msg.sender) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":621:635  uint256 GetDCF */\n      0x00\n        /* \"Dcoffer/treasury.sol\":638:667  afterScore.mul(DcoffperBlock) */\n      tag_20\n        /* \"Dcoffer/treasury.sol\":653:666  DcoffperBlock */\n      sload(0x02)\n        /* \"Dcoffer/treasury.sol\":638:648  afterScore */\n      dup4\n        /* \"Dcoffer/treasury.sol\":638:652  afterScore.mul */\n      tag_17\n      swap1\n        /* \"Dcoffer/treasury.sol\":638:667  afterScore.mul(DcoffperBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_20:\n        /* \"Dcoffer/treasury.sol\":621:667  uint256 GetDCF = afterScore.mul(DcoffperBlock) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":676:681  dcoff */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":676:690  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Dcoffer/treasury.sol\":691:701  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":702:708  GetDCF */\n      dup4\n        /* \"Dcoffer/treasury.sol\":676:709  dcoff.transfer(msg.sender,GetDCF) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_21\n      swap3\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      pop\n        /* \"Dcoffer/treasury.sol\":747:789  ScoreWithdrawn[msg.sender].add(afterScore) */\n      tag_27\n        /* \"Dcoffer/treasury.sol\":778:788  afterScore */\n      dup3\n        /* \"Dcoffer/treasury.sol\":747:761  ScoreWithdrawn */\n      0x03\n        /* \"Dcoffer/treasury.sol\":747:773  ScoreWithdrawn[msg.sender] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":762:772  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":747:773  ScoreWithdrawn[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Dcoffer/treasury.sol\":747:777  ScoreWithdrawn[msg.sender].add */\n      tag_28\n      swap1\n        /* \"Dcoffer/treasury.sol\":747:789  ScoreWithdrawn[msg.sender].add(afterScore) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_27:\n        /* \"Dcoffer/treasury.sol\":718:732  ScoreWithdrawn */\n      0x03\n        /* \"Dcoffer/treasury.sol\":718:744  ScoreWithdrawn[msg.sender] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":733:743  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":718:744  ScoreWithdrawn[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Dcoffer/treasury.sol\":718:789  ScoreWithdrawn[msg.sender] = ScoreWithdrawn[msg.sender].add(afterScore) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":565:795  {... */\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":537:795  function MineDcoff()external{... */\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":803:1002  function Score(address user)internal view returns(uint256){... */\n    tag_15:\n        /* \"Dcoffer/treasury.sol\":853:860  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":870:884  uint256 _Score */\n      dup1\n        /* \"Dcoffer/treasury.sol\":887:891  mine */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":887:902  mine.BlockScore */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x325b272a\n        /* \"Dcoffer/treasury.sol\":903:907  user */\n      dup5\n        /* \"Dcoffer/treasury.sol\":887:908  mine.BlockScore(user) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_33:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"Dcoffer/treasury.sol\":870:908  uint256 _Score = mine.BlockScore(user) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":917:935  uint256 afterScore */\n      0x00\n        /* \"Dcoffer/treasury.sol\":938:970  _Score.sub(ScoreWithdrawn[user]) */\n      tag_36\n        /* \"Dcoffer/treasury.sol\":949:963  ScoreWithdrawn */\n      0x03\n        /* \"Dcoffer/treasury.sol\":949:969  ScoreWithdrawn[user] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":964:968  user */\n      dup7\n        /* \"Dcoffer/treasury.sol\":949:969  ScoreWithdrawn[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Dcoffer/treasury.sol\":938:944  _Score */\n      dup4\n        /* \"Dcoffer/treasury.sol\":938:948  _Score.sub */\n      tag_37\n      swap1\n        /* \"Dcoffer/treasury.sol\":938:970  _Score.sub(ScoreWithdrawn[user]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_36:\n        /* \"Dcoffer/treasury.sol\":917:970  uint256 afterScore = _Score.sub(ScoreWithdrawn[user]) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":986:996  afterScore */\n      dup1\n        /* \"Dcoffer/treasury.sol\":979:996  return afterScore */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":803:1002  function Score(address user)internal view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_48:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_50:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_51:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_69\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_50\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_52:\n        /* \"#utility.yul\":641:665   */\n      tag_71\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_51\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_72\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_72:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_53:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_74\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_52\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_7:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_77\n      tag_48\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":917:1036   */\n    tag_76:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_78\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_53\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_54:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_55:\n        /* \"#utility.yul\":1346:1370   */\n      tag_81\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_54\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_10:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_83\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_55\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_56:\n        /* \"#utility.yul\":1698:1722   */\n      tag_85\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_51\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:2067   */\n    tag_22:\n        /* \"#utility.yul\":1856:1860   */\n      0x00\n        /* \"#utility.yul\":1894:1896   */\n      0x40\n        /* \"#utility.yul\":1883:1892   */\n      dup3\n        /* \"#utility.yul\":1879:1897   */\n      add\n        /* \"#utility.yul\":1871:1897   */\n      swap1\n      pop\n        /* \"#utility.yul\":1907:1978   */\n      tag_87\n        /* \"#utility.yul\":1975:1976   */\n      0x00\n        /* \"#utility.yul\":1964:1973   */\n      dup4\n        /* \"#utility.yul\":1960:1977   */\n      add\n        /* \"#utility.yul\":1951:1957   */\n      dup6\n        /* \"#utility.yul\":1907:1978   */\n      tag_56\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1988:2060   */\n      tag_88\n        /* \"#utility.yul\":2056:2058   */\n      0x20\n        /* \"#utility.yul\":2045:2054   */\n      dup4\n        /* \"#utility.yul\":2041:2059   */\n      add\n        /* \"#utility.yul\":2032:2038   */\n      dup5\n        /* \"#utility.yul\":1988:2060   */\n      tag_55\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1735:2067   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2073:2163   */\n    tag_57:\n        /* \"#utility.yul\":2107:2114   */\n      0x00\n        /* \"#utility.yul\":2150:2155   */\n      dup2\n        /* \"#utility.yul\":2143:2156   */\n      iszero\n        /* \"#utility.yul\":2136:2157   */\n      iszero\n        /* \"#utility.yul\":2125:2157   */\n      swap1\n      pop\n        /* \"#utility.yul\":2073:2163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2169:2285   */\n    tag_58:\n        /* \"#utility.yul\":2239:2260   */\n      tag_91\n        /* \"#utility.yul\":2254:2259   */\n      dup2\n        /* \"#utility.yul\":2239:2260   */\n      tag_57\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2232:2237   */\n      dup2\n        /* \"#utility.yul\":2229:2261   */\n      eq\n        /* \"#utility.yul\":2219:2279   */\n      tag_92\n      jumpi\n        /* \"#utility.yul\":2275:2276   */\n      0x00\n        /* \"#utility.yul\":2272:2273   */\n      dup1\n        /* \"#utility.yul\":2265:2277   */\n      revert\n        /* \"#utility.yul\":2219:2279   */\n    tag_92:\n        /* \"#utility.yul\":2169:2285   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2291:2428   */\n    tag_59:\n        /* \"#utility.yul\":2345:2350   */\n      0x00\n        /* \"#utility.yul\":2376:2382   */\n      dup2\n        /* \"#utility.yul\":2370:2383   */\n      mload\n        /* \"#utility.yul\":2361:2383   */\n      swap1\n      pop\n        /* \"#utility.yul\":2392:2422   */\n      tag_94\n        /* \"#utility.yul\":2416:2421   */\n      dup2\n        /* \"#utility.yul\":2392:2422   */\n      tag_58\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2291:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2779   */\n    tag_26:\n        /* \"#utility.yul\":2501:2507   */\n      0x00\n        /* \"#utility.yul\":2550:2552   */\n      0x20\n        /* \"#utility.yul\":2538:2547   */\n      dup3\n        /* \"#utility.yul\":2529:2536   */\n      dup5\n        /* \"#utility.yul\":2525:2548   */\n      sub\n        /* \"#utility.yul\":2521:2553   */\n      slt\n        /* \"#utility.yul\":2518:2637   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":2556:2635   */\n      tag_97\n      tag_48\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2518:2637   */\n    tag_96:\n        /* \"#utility.yul\":2676:2677   */\n      0x00\n        /* \"#utility.yul\":2701:2762   */\n      tag_98\n        /* \"#utility.yul\":2754:2761   */\n      dup5\n        /* \"#utility.yul\":2745:2751   */\n      dup3\n        /* \"#utility.yul\":2734:2743   */\n      dup6\n        /* \"#utility.yul\":2730:2752   */\n      add\n        /* \"#utility.yul\":2701:2762   */\n      tag_59\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2691:2762   */\n      swap2\n      pop\n        /* \"#utility.yul\":2647:2772   */\n      pop\n        /* \"#utility.yul\":2434:2779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2785:3007   */\n    tag_31:\n        /* \"#utility.yul\":2878:2882   */\n      0x00\n        /* \"#utility.yul\":2916:2918   */\n      0x20\n        /* \"#utility.yul\":2905:2914   */\n      dup3\n        /* \"#utility.yul\":2901:2919   */\n      add\n        /* \"#utility.yul\":2893:2919   */\n      swap1\n      pop\n        /* \"#utility.yul\":2929:3000   */\n      tag_100\n        /* \"#utility.yul\":2997:2998   */\n      0x00\n        /* \"#utility.yul\":2986:2995   */\n      dup4\n        /* \"#utility.yul\":2982:2999   */\n      add\n        /* \"#utility.yul\":2973:2979   */\n      dup5\n        /* \"#utility.yul\":2929:3000   */\n      tag_56\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2785:3007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3013:3135   */\n    tag_60:\n        /* \"#utility.yul\":3086:3110   */\n      tag_102\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3086:3110   */\n      tag_54\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3079:3084   */\n      dup2\n        /* \"#utility.yul\":3076:3111   */\n      eq\n        /* \"#utility.yul\":3066:3129   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":3125:3126   */\n      0x00\n        /* \"#utility.yul\":3122:3123   */\n      dup1\n        /* \"#utility.yul\":3115:3127   */\n      revert\n        /* \"#utility.yul\":3066:3129   */\n    tag_103:\n        /* \"#utility.yul\":3013:3135   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3141:3284   */\n    tag_61:\n        /* \"#utility.yul\":3198:3203   */\n      0x00\n        /* \"#utility.yul\":3229:3235   */\n      dup2\n        /* \"#utility.yul\":3223:3236   */\n      mload\n        /* \"#utility.yul\":3214:3236   */\n      swap1\n      pop\n        /* \"#utility.yul\":3245:3278   */\n      tag_105\n        /* \"#utility.yul\":3272:3277   */\n      dup2\n        /* \"#utility.yul\":3245:3278   */\n      tag_60\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3141:3284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3290:3641   */\n    tag_35:\n        /* \"#utility.yul\":3360:3366   */\n      0x00\n        /* \"#utility.yul\":3409:3411   */\n      0x20\n        /* \"#utility.yul\":3397:3406   */\n      dup3\n        /* \"#utility.yul\":3388:3395   */\n      dup5\n        /* \"#utility.yul\":3384:3407   */\n      sub\n        /* \"#utility.yul\":3380:3412   */\n      slt\n        /* \"#utility.yul\":3377:3496   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":3415:3494   */\n      tag_108\n      tag_48\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3377:3496   */\n    tag_107:\n        /* \"#utility.yul\":3535:3536   */\n      0x00\n        /* \"#utility.yul\":3560:3624   */\n      tag_109\n        /* \"#utility.yul\":3616:3623   */\n      dup5\n        /* \"#utility.yul\":3607:3613   */\n      dup3\n        /* \"#utility.yul\":3596:3605   */\n      dup6\n        /* \"#utility.yul\":3592:3614   */\n      add\n        /* \"#utility.yul\":3560:3624   */\n      tag_61\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3550:3624   */\n      swap2\n      pop\n        /* \"#utility.yul\":3506:3634   */\n      pop\n        /* \"#utility.yul\":3290:3641   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3647:3827   */\n    tag_62:\n        /* \"#utility.yul\":3695:3772   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3692:3693   */\n      0x00\n        /* \"#utility.yul\":3685:3773   */\n      mstore\n        /* \"#utility.yul\":3792:3796   */\n      0x11\n        /* \"#utility.yul\":3789:3790   */\n      0x04\n        /* \"#utility.yul\":3782:3797   */\n      mstore\n        /* \"#utility.yul\":3816:3820   */\n      0x24\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3806:3821   */\n      revert\n        /* \"#utility.yul\":3833:4181   */\n    tag_40:\n        /* \"#utility.yul\":3873:3880   */\n      0x00\n        /* \"#utility.yul\":3896:3916   */\n      tag_112\n        /* \"#utility.yul\":3914:3915   */\n      dup3\n        /* \"#utility.yul\":3896:3916   */\n      tag_54\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3891:3916   */\n      swap2\n      pop\n        /* \"#utility.yul\":3930:3950   */\n      tag_113\n        /* \"#utility.yul\":3948:3949   */\n      dup4\n        /* \"#utility.yul\":3930:3950   */\n      tag_54\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3925:3950   */\n      swap3\n      pop\n        /* \"#utility.yul\":4118:4119   */\n      dup2\n        /* \"#utility.yul\":4050:4116   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4046:4120   */\n      div\n        /* \"#utility.yul\":4043:4044   */\n      dup4\n        /* \"#utility.yul\":4040:4121   */\n      gt\n        /* \"#utility.yul\":4035:4036   */\n      dup3\n        /* \"#utility.yul\":4028:4037   */\n      iszero\n        /* \"#utility.yul\":4021:4038   */\n      iszero\n        /* \"#utility.yul\":4017:4122   */\n      and\n        /* \"#utility.yul\":4014:4145   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":4125:4143   */\n      tag_115\n      tag_62\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4014:4145   */\n    tag_114:\n        /* \"#utility.yul\":4173:4174   */\n      dup3\n        /* \"#utility.yul\":4170:4171   */\n      dup3\n        /* \"#utility.yul\":4166:4175   */\n      mul\n        /* \"#utility.yul\":4155:4175   */\n      swap1\n      pop\n        /* \"#utility.yul\":3833:4181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4187:4492   */\n    tag_43:\n        /* \"#utility.yul\":4227:4230   */\n      0x00\n        /* \"#utility.yul\":4246:4266   */\n      tag_117\n        /* \"#utility.yul\":4264:4265   */\n      dup3\n        /* \"#utility.yul\":4246:4266   */\n      tag_54\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":4241:4266   */\n      swap2\n      pop\n        /* \"#utility.yul\":4280:4300   */\n      tag_118\n        /* \"#utility.yul\":4298:4299   */\n      dup4\n        /* \"#utility.yul\":4280:4300   */\n      tag_54\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4275:4300   */\n      swap3\n      pop\n        /* \"#utility.yul\":4434:4435   */\n      dup3\n        /* \"#utility.yul\":4366:4432   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4362:4436   */\n      sub\n        /* \"#utility.yul\":4359:4360   */\n      dup3\n        /* \"#utility.yul\":4356:4437   */\n      gt\n        /* \"#utility.yul\":4353:4460   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":4440:4458   */\n      tag_120\n      tag_62\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":4353:4460   */\n    tag_119:\n        /* \"#utility.yul\":4484:4485   */\n      dup3\n        /* \"#utility.yul\":4481:4482   */\n      dup3\n        /* \"#utility.yul\":4477:4486   */\n      add\n        /* \"#utility.yul\":4470:4486   */\n      swap1\n      pop\n        /* \"#utility.yul\":4187:4492   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4498:4689   */\n    tag_46:\n        /* \"#utility.yul\":4538:4542   */\n      0x00\n        /* \"#utility.yul\":4558:4578   */\n      tag_122\n        /* \"#utility.yul\":4576:4577   */\n      dup3\n        /* \"#utility.yul\":4558:4578   */\n      tag_54\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":4553:4578   */\n      swap2\n      pop\n        /* \"#utility.yul\":4592:4612   */\n      tag_123\n        /* \"#utility.yul\":4610:4611   */\n      dup4\n        /* \"#utility.yul\":4592:4612   */\n      tag_54\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4587:4612   */\n      swap3\n      pop\n        /* \"#utility.yul\":4631:4632   */\n      dup3\n        /* \"#utility.yul\":4628:4629   */\n      dup3\n        /* \"#utility.yul\":4625:4633   */\n      lt\n        /* \"#utility.yul\":4622:4656   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":4636:4654   */\n      tag_125\n      tag_62\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":4622:4656   */\n    tag_124:\n        /* \"#utility.yul\":4681:4682   */\n      dup3\n        /* \"#utility.yul\":4678:4679   */\n      dup3\n        /* \"#utility.yul\":4674:4683   */\n      sub\n        /* \"#utility.yul\":4666:4683   */\n      swap1\n      pop\n        /* \"#utility.yul\":4498:4689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122072c71775270270c837d0afb6ed551e530ae8d6423c8ba64a8d69091a81a7241764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_434": {
									"entryPoint": null,
									"id": 434,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052736a544367fca7064b6ada5dc87f7e5058a9bb7af96000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073be0c856e2981b9f03d7613566dfc6679eee4708a600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100b957600080fd5b5065b5e620f48000600281905550610665806100d66000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806333a225711461003b5780638bed47781461006b575b600080fd5b610055600480360381019061005091906103aa565b610075565b60405161006291906103f0565b60405180910390f35b6100736100a6565b005b60008061008183610206565b9050600061009a6002548361030590919063ffffffff16565b90508092505050919050565b60006100b133610206565b905060006100ca6002548361030590919063ffffffff16565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161012992919061041a565b6020604051808303816000875af1158015610148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016c919061047b565b506101bf82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461031b90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663325b272a846040518263ffffffff1660e01b815260040161026291906104a8565b602060405180830381865afa15801561027f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a391906104ef565b905060006102f9600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361033190919063ffffffff16565b90508092505050919050565b60008183610313919061054b565b905092915050565b6000818361032991906105a5565b905092915050565b6000818361033f91906105fb565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103778261034c565b9050919050565b6103878161036c565b811461039257600080fd5b50565b6000813590506103a48161037e565b92915050565b6000602082840312156103c0576103bf610347565b5b60006103ce84828501610395565b91505092915050565b6000819050919050565b6103ea816103d7565b82525050565b600060208201905061040560008301846103e1565b92915050565b6104148161036c565b82525050565b600060408201905061042f600083018561040b565b61043c60208301846103e1565b9392505050565b60008115159050919050565b61045881610443565b811461046357600080fd5b50565b6000815190506104758161044f565b92915050565b60006020828403121561049157610490610347565b5b600061049f84828501610466565b91505092915050565b60006020820190506104bd600083018461040b565b92915050565b6104cc816103d7565b81146104d757600080fd5b50565b6000815190506104e9816104c3565b92915050565b60006020828403121561050557610504610347565b5b6000610513848285016104da565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610556826103d7565b9150610561836103d7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561059a5761059961051c565b5b828202905092915050565b60006105b0826103d7565b91506105bb836103d7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105f0576105ef61051c565b5b828201905092915050565b6000610606826103d7565b9150610611836103d7565b9250828210156106245761062361051c565b5b82820390509291505056fea264697066735822122072c71775270270c837d0afb6ed551e530ae8d6423c8ba64a8d69091a81a7241764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x6A544367FCA7064B6ADA5DC87F7E5058A9BB7AF9 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xBE0C856E2981B9F03D7613566DFC6679EEE4708A PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH6 0xB5E620F48000 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x665 DUP1 PUSH2 0xD6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x33A22571 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8BED4778 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x3AA JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xA6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x81 DUP4 PUSH2 0x206 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9A PUSH1 0x2 SLOAD DUP4 PUSH2 0x305 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1 CALLER PUSH2 0x206 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA PUSH1 0x2 SLOAD DUP4 PUSH2 0x305 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129 SWAP3 SWAP2 SWAP1 PUSH2 0x41A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x148 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x47B JUMP JUMPDEST POP PUSH2 0x1BF DUP3 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x31B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x325B272A DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F9 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x331 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x54B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x5A5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x377 DUP3 PUSH2 0x34C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x387 DUP2 PUSH2 0x36C JUMP JUMPDEST DUP2 EQ PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A4 DUP2 PUSH2 0x37E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C0 JUMPI PUSH2 0x3BF PUSH2 0x347 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CE DUP5 DUP3 DUP6 ADD PUSH2 0x395 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EA DUP2 PUSH2 0x3D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x405 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x414 DUP2 PUSH2 0x36C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x42F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x43C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x458 DUP2 PUSH2 0x443 JUMP JUMPDEST DUP2 EQ PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x475 DUP2 PUSH2 0x44F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x491 JUMPI PUSH2 0x490 PUSH2 0x347 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x49F DUP5 DUP3 DUP6 ADD PUSH2 0x466 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4BD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CC DUP2 PUSH2 0x3D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E9 DUP2 PUSH2 0x4C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x505 JUMPI PUSH2 0x504 PUSH2 0x347 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x513 DUP5 DUP3 DUP6 ADD PUSH2 0x4DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x556 DUP3 PUSH2 0x3D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x561 DUP4 PUSH2 0x3D7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x59A JUMPI PUSH2 0x599 PUSH2 0x51C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B0 DUP3 PUSH2 0x3D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x5BB DUP4 PUSH2 0x3D7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x5F0 JUMPI PUSH2 0x5EF PUSH2 0x51C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x606 DUP3 PUSH2 0x3D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x611 DUP4 PUSH2 0x3D7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x624 JUMPI PUSH2 0x623 PUSH2 0x51C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xC71775270270C837D0AFB6ED551E530AE8D642 EXTCODECOPY DUP12 0xA6 0x4A DUP14 PUSH10 0x91A81A7241764736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "206:1003:3:-:0;;;277:42;260:60;;;;;;;;;;;;;;;;;;;;348:42;325:66;;;;;;;;;;;;;;;;;;;;483:46;;;;;;;;;;519:4;503:13;:20;;;;206:1003;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MineDcoff_473": {
									"entryPoint": 166,
									"id": 473,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Score_499": {
									"entryPoint": 518,
									"id": 499,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@add_253": {
									"entryPoint": 795,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mineStatus_522": {
									"entryPoint": 117,
									"id": 522,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_283": {
									"entryPoint": 773,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_268": {
									"entryPoint": 817,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1050,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1308,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4692:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:4"
															},
															"nodeType": "YulIf",
															"src": "917:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:4",
														"type": ""
													}
												],
												"src": "841:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:4",
														"type": ""
													}
												],
												"src": "1176:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:4",
														"type": ""
													}
												],
												"src": "1259:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:4",
														"type": ""
													}
												],
												"src": "1383:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:4",
														"type": ""
													}
												],
												"src": "1611:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1861:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1871:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1883:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1894:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1879:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1871:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1951:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1964:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1975:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1960:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1960:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1907:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1907:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1907:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2032:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2045:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2056:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2041:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2041:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1988:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1988:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1825:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1837:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1845:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1856:4:4",
														"type": ""
													}
												],
												"src": "1735:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2115:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2125:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2150:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2143:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2136:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2136:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2125:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2097:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2107:7:4",
														"type": ""
													}
												],
												"src": "2073:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2209:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2263:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2272:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2275:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2265:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2265:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2265:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2232:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2254:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2239:14:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2239:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2229:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2229:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2222:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2222:40:4"
															},
															"nodeType": "YulIf",
															"src": "2219:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2202:5:4",
														"type": ""
													}
												],
												"src": "2169:116:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2351:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2361:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2376:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2370:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2361:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2416:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2392:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2392:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2392:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2329:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2337:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2345:5:4",
														"type": ""
													}
												],
												"src": "2291:137:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2508:271:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2554:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2556:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2556:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2556:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2529:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2525:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2525:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2550:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2521:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2521:32:4"
															},
															"nodeType": "YulIf",
															"src": "2518:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2647:125:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2662:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2676:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2666:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2691:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2734:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2745:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2730:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2730:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2754:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2701:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2701:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2691:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2478:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2489:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2501:6:4",
														"type": ""
													}
												],
												"src": "2434:345:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2883:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2893:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2905:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2916:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2901:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2901:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2893:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2973:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2986:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2997:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2982:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2982:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2929:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2929:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2929:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2855:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2867:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2878:4:4",
														"type": ""
													}
												],
												"src": "2785:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3056:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3113:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3122:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3125:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3115:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3115:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3115:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3079:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3104:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3086:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3086:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3076:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3076:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3069:43:4"
															},
															"nodeType": "YulIf",
															"src": "3066:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3049:5:4",
														"type": ""
													}
												],
												"src": "3013:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3204:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3214:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3229:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3223:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3223:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3272:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3245:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3245:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3245:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3198:5:4",
														"type": ""
													}
												],
												"src": "3141:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3367:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3413:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3415:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3415:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3415:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3388:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3397:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3384:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3384:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3409:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3380:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3380:32:4"
															},
															"nodeType": "YulIf",
															"src": "3377:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3506:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3521:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3535:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3525:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3550:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3596:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3607:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3592:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3592:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3616:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3560:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3560:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3550:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3337:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3348:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3360:6:4",
														"type": ""
													}
												],
												"src": "3290:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3675:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3692:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3695:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3685:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3685:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3789:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3792:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3782:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3782:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3782:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3813:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3806:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3806:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3806:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3647:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3881:300:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3891:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3914:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3896:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3896:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3891:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3925:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3948:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3930:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3930:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3925:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4123:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4125:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4125:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4125:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4035:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4028:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4028:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4021:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4021:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4043:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4050:66:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4118:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4046:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4046:74:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4040:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4040:81:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4017:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4017:105:4"
															},
															"nodeType": "YulIf",
															"src": "4014:131:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4155:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4170:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4173:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4166:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4155:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3864:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3867:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3873:7:4",
														"type": ""
													}
												],
												"src": "3833:348:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4231:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4241:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4264:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4246:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4241:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4275:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4298:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4280:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4280:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4275:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4438:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4440:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4440:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4440:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4359:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4366:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4434:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4362:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4362:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4356:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4356:81:4"
															},
															"nodeType": "YulIf",
															"src": "4353:107:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4470:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4481:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4484:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4477:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4477:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4470:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4218:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4221:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4227:3:4",
														"type": ""
													}
												],
												"src": "4187:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4543:146:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4553:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4576:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4558:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4558:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4553:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4587:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4610:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4592:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4592:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4587:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4634:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4636:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4636:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4636:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4628:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4631:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4625:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4625:8:4"
															},
															"nodeType": "YulIf",
															"src": "4622:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4666:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4678:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4681:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4674:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4666:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4529:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4532:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4538:4:4",
														"type": ""
													}
												],
												"src": "4498:191:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806333a225711461003b5780638bed47781461006b575b600080fd5b610055600480360381019061005091906103aa565b610075565b60405161006291906103f0565b60405180910390f35b6100736100a6565b005b60008061008183610206565b9050600061009a6002548361030590919063ffffffff16565b90508092505050919050565b60006100b133610206565b905060006100ca6002548361030590919063ffffffff16565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161012992919061041a565b6020604051808303816000875af1158015610148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016c919061047b565b506101bf82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461031b90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663325b272a846040518263ffffffff1660e01b815260040161026291906104a8565b602060405180830381865afa15801561027f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a391906104ef565b905060006102f9600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361033190919063ffffffff16565b90508092505050919050565b60008183610313919061054b565b905092915050565b6000818361032991906105a5565b905092915050565b6000818361033f91906105fb565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103778261034c565b9050919050565b6103878161036c565b811461039257600080fd5b50565b6000813590506103a48161037e565b92915050565b6000602082840312156103c0576103bf610347565b5b60006103ce84828501610395565b91505092915050565b6000819050919050565b6103ea816103d7565b82525050565b600060208201905061040560008301846103e1565b92915050565b6104148161036c565b82525050565b600060408201905061042f600083018561040b565b61043c60208301846103e1565b9392505050565b60008115159050919050565b61045881610443565b811461046357600080fd5b50565b6000815190506104758161044f565b92915050565b60006020828403121561049157610490610347565b5b600061049f84828501610466565b91505092915050565b60006020820190506104bd600083018461040b565b92915050565b6104cc816103d7565b81146104d757600080fd5b50565b6000815190506104e9816104c3565b92915050565b60006020828403121561050557610504610347565b5b6000610513848285016104da565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610556826103d7565b9150610561836103d7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561059a5761059961051c565b5b828202905092915050565b60006105b0826103d7565b91506105bb836103d7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105f0576105ef61051c565b5b828201905092915050565b6000610606826103d7565b9150610611836103d7565b9250828210156106245761062361051c565b5b82820390509291505056fea264697066735822122072c71775270270c837d0afb6ed551e530ae8d6423c8ba64a8d69091a81a7241764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x33A22571 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8BED4778 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x3AA JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xA6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x81 DUP4 PUSH2 0x206 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9A PUSH1 0x2 SLOAD DUP4 PUSH2 0x305 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1 CALLER PUSH2 0x206 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA PUSH1 0x2 SLOAD DUP4 PUSH2 0x305 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129 SWAP3 SWAP2 SWAP1 PUSH2 0x41A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x148 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x47B JUMP JUMPDEST POP PUSH2 0x1BF DUP3 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x31B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x325B272A DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2F9 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x331 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x54B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x5A5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x377 DUP3 PUSH2 0x34C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x387 DUP2 PUSH2 0x36C JUMP JUMPDEST DUP2 EQ PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A4 DUP2 PUSH2 0x37E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3C0 JUMPI PUSH2 0x3BF PUSH2 0x347 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3CE DUP5 DUP3 DUP6 ADD PUSH2 0x395 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EA DUP2 PUSH2 0x3D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x405 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x414 DUP2 PUSH2 0x36C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x42F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x40B JUMP JUMPDEST PUSH2 0x43C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x458 DUP2 PUSH2 0x443 JUMP JUMPDEST DUP2 EQ PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x475 DUP2 PUSH2 0x44F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x491 JUMPI PUSH2 0x490 PUSH2 0x347 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x49F DUP5 DUP3 DUP6 ADD PUSH2 0x466 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4BD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CC DUP2 PUSH2 0x3D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E9 DUP2 PUSH2 0x4C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x505 JUMPI PUSH2 0x504 PUSH2 0x347 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x513 DUP5 DUP3 DUP6 ADD PUSH2 0x4DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x556 DUP3 PUSH2 0x3D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x561 DUP4 PUSH2 0x3D7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x59A JUMPI PUSH2 0x599 PUSH2 0x51C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B0 DUP3 PUSH2 0x3D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x5BB DUP4 PUSH2 0x3D7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x5F0 JUMPI PUSH2 0x5EF PUSH2 0x51C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x606 DUP3 PUSH2 0x3D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x611 DUP4 PUSH2 0x3D7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x624 JUMPI PUSH2 0x623 PUSH2 0x51C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xC71775270270C837D0AFB6ED551E530AE8D642 EXTCODECOPY DUP12 0xA6 0x4A DUP14 PUSH10 0x91A81A7241764736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "206:1003:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;537:258;;;:::i;:::-;;1008:185;1061:7;1078:18;1099:11;1105:4;1099:5;:11::i;:::-;1078:32;;1119:14;1136:29;1151:13;;1136:10;:14;;:29;;;;:::i;:::-;1119:46;;1181:6;1174:13;;;;1008:185;;;:::o;537:258::-;574:18;595:17;601:10;595:5;:17::i;:::-;574:38;;621:14;638:29;653:13;;638:10;:14;;:29;;;;:::i;:::-;621:46;;676:5;;;;;;;;;;;:14;;;691:10;702:6;676:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;747:42;778:10;747:14;:26;762:10;747:26;;;;;;;;;;;;;;;;:30;;:42;;;;:::i;:::-;718:14;:26;733:10;718:26;;;;;;;;;;;;;;;:71;;;;565:230;;537:258::o;803:199::-;853:7;870:14;887:4;;;;;;;;;;:15;;;903:4;887:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;870:38;;917:18;938:32;949:14;:20;964:4;949:20;;;;;;;;;;;;;;;;938:6;:10;;:32;;;;:::i;:::-;917:53;;986:10;979:17;;;;803:199;;;:::o;3465:96:1:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:332::-;1856:4;1894:2;1883:9;1879:18;1871:26;;1907:71;1975:1;1964:9;1960:17;1951:6;1907:71;:::i;:::-;1988:72;2056:2;2045:9;2041:18;2032:6;1988:72;:::i;:::-;1735:332;;;;;:::o;2073:90::-;2107:7;2150:5;2143:13;2136:21;2125:32;;2073:90;;;:::o;2169:116::-;2239:21;2254:5;2239:21;:::i;:::-;2232:5;2229:32;2219:60;;2275:1;2272;2265:12;2219:60;2169:116;:::o;2291:137::-;2345:5;2376:6;2370:13;2361:22;;2392:30;2416:5;2392:30;:::i;:::-;2291:137;;;;:::o;2434:345::-;2501:6;2550:2;2538:9;2529:7;2525:23;2521:32;2518:119;;;2556:79;;:::i;:::-;2518:119;2676:1;2701:61;2754:7;2745:6;2734:9;2730:22;2701:61;:::i;:::-;2691:71;;2647:125;2434:345;;;;:::o;2785:222::-;2878:4;2916:2;2905:9;2901:18;2893:26;;2929:71;2997:1;2986:9;2982:17;2973:6;2929:71;:::i;:::-;2785:222;;;;:::o;3013:122::-;3086:24;3104:5;3086:24;:::i;:::-;3079:5;3076:35;3066:63;;3125:1;3122;3115:12;3066:63;3013:122;:::o;3141:143::-;3198:5;3229:6;3223:13;3214:22;;3245:33;3272:5;3245:33;:::i;:::-;3141:143;;;;:::o;3290:351::-;3360:6;3409:2;3397:9;3388:7;3384:23;3380:32;3377:119;;;3415:79;;:::i;:::-;3377:119;3535:1;3560:64;3616:7;3607:6;3596:9;3592:22;3560:64;:::i;:::-;3550:74;;3506:128;3290:351;;;;:::o;3647:180::-;3695:77;3692:1;3685:88;3792:4;3789:1;3782:15;3816:4;3813:1;3806:15;3833:348;3873:7;3896:20;3914:1;3896:20;:::i;:::-;3891:25;;3930:20;3948:1;3930:20;:::i;:::-;3925:25;;4118:1;4050:66;4046:74;4043:1;4040:81;4035:1;4028:9;4021:17;4017:105;4014:131;;;4125:18;;:::i;:::-;4014:131;4173:1;4170;4166:9;4155:20;;3833:348;;;;:::o;4187:305::-;4227:3;4246:20;4264:1;4246:20;:::i;:::-;4241:25;;4280:20;4298:1;4280:20;:::i;:::-;4275:25;;4434:1;4366:66;4362:74;4359:1;4356:81;4353:107;;;4440:18;;:::i;:::-;4353:107;4484:1;4481;4477:9;4470:16;;4187:305;;;;:::o;4498:191::-;4538:4;4558:20;4576:1;4558:20;:::i;:::-;4553:25;;4592:20;4610:1;4592:20;:::i;:::-;4587:25;;4631:1;4628;4625:8;4622:34;;;4636:18;;:::i;:::-;4622:34;4681:1;4678;4674:9;4666:17;;4498:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "327400",
								"executionCost": "71016",
								"totalCost": "398416"
							},
							"external": {
								"MineDcoff()": "infinite",
								"mineStatus(address)": "infinite"
							},
							"internal": {
								"Score(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 206,
									"end": 1209,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 206,
									"end": 1209,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 206,
									"end": 1209,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 277,
									"end": 319,
									"name": "PUSH",
									"source": 3,
									"value": "6A544367FCA7064B6ADA5DC87F7E5058A9BB7AF9"
								},
								{
									"begin": 260,
									"end": 320,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 320,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 260,
									"end": 320,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 260,
									"end": 320,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 260,
									"end": 320,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 260,
									"end": 320,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 260,
									"end": 320,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 260,
									"end": 320,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 260,
									"end": 320,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 260,
									"end": 320,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 260,
									"end": 320,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 260,
									"end": 320,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 260,
									"end": 320,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 260,
									"end": 320,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 260,
									"end": 320,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 260,
									"end": 320,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 260,
									"end": 320,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 260,
									"end": 320,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 260,
									"end": 320,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 260,
									"end": 320,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 348,
									"end": 390,
									"name": "PUSH",
									"source": 3,
									"value": "BE0C856E2981B9F03D7613566DFC6679EEE4708A"
								},
								{
									"begin": 325,
									"end": 391,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 325,
									"end": 391,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 325,
									"end": 391,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 325,
									"end": 391,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 325,
									"end": 391,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 325,
									"end": 391,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 325,
									"end": 391,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 325,
									"end": 391,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 325,
									"end": 391,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 325,
									"end": 391,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 325,
									"end": 391,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 325,
									"end": 391,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 325,
									"end": 391,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 325,
									"end": 391,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 325,
									"end": 391,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 325,
									"end": 391,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 325,
									"end": 391,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 325,
									"end": 391,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 325,
									"end": 391,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 325,
									"end": 391,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 483,
									"end": 529,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 483,
									"end": 529,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 483,
									"end": 529,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 483,
									"end": 529,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 529,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 483,
									"end": 529,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 529,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 483,
									"end": 529,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 483,
									"end": 529,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 529,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 483,
									"end": 529,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 519,
									"end": 523,
									"name": "PUSH",
									"source": 3,
									"value": "B5E620F48000"
								},
								{
									"begin": 503,
									"end": 516,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 503,
									"end": 523,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 503,
									"end": 523,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 503,
									"end": 523,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 503,
									"end": 523,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 206,
									"end": 1209,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 1209,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 206,
									"end": 1209,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 1209,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 1209,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 206,
									"end": 1209,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 1209,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122072c71775270270c837d0afb6ed551e530ae8d6423c8ba64a8d69091a81a7241764736f6c634300080d0033",
									".code": [
										{
											"begin": 206,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "33A22571"
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "8BED4778"
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1209,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 537,
											"end": 795,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 537,
											"end": 795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 537,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 537,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 537,
											"end": 795,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 537,
											"end": 795,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 537,
											"end": 795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 537,
											"end": 795,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1068,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1105,
											"end": 1109,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1099,
											"end": 1110,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1099,
											"end": 1110,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1099,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1078,
											"end": 1110,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1078,
											"end": 1110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1146,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1136,
											"end": 1150,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1165,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1165,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1165,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1136,
											"end": 1165,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1136,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1187,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1174,
											"end": 1187,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1193,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 537,
											"end": 795,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 537,
											"end": 795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 574,
											"end": 592,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 595,
											"end": 612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 574,
											"end": 612,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 574,
											"end": 612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 621,
											"end": 635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 666,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 653,
											"end": 666,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 638,
											"end": 648,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 638,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 638,
											"end": 652,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 638,
											"end": 667,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 638,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 621,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 621,
											"end": 667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 681,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 676,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 676,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 676,
											"end": 690,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 702,
											"end": 708,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 676,
											"end": 709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 676,
											"end": 709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 747,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 778,
											"end": 788,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 747,
											"end": 761,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 747,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 772,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 747,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 747,
											"end": 773,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 747,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 747,
											"end": 773,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 747,
											"end": 773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 747,
											"end": 773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 747,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 747,
											"end": 773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 747,
											"end": 773,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 747,
											"end": 773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 747,
											"end": 773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 747,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 747,
											"end": 773,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 747,
											"end": 773,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 773,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 747,
											"end": 773,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 747,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 747,
											"end": 777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 747,
											"end": 789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 747,
											"end": 789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 747,
											"end": 789,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 747,
											"end": 789,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 747,
											"end": 789,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 747,
											"end": 789,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 747,
											"end": 789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 718,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 718,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 743,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 718,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 718,
											"end": 744,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 718,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 718,
											"end": 744,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 718,
											"end": 744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 718,
											"end": 744,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 718,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 718,
											"end": 744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 718,
											"end": 744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 718,
											"end": 744,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 718,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 718,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 744,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 718,
											"end": 789,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 718,
											"end": 789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 718,
											"end": 789,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 718,
											"end": 789,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 565,
											"end": 795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 565,
											"end": 795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 537,
											"end": 795,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 803,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 803,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 853,
											"end": 860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 884,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 891,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 891,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 887,
											"end": 891,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 887,
											"end": 891,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 891,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 891,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 887,
											"end": 891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 887,
											"end": 891,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 887,
											"end": 902,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 887,
											"end": 902,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 887,
											"end": 902,
											"name": "PUSH",
											"source": 3,
											"value": "325B272A"
										},
										{
											"begin": 903,
											"end": 907,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 887,
											"end": 908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 870,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 917,
											"end": 935,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 949,
											"end": 963,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 968,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 938,
											"end": 948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 938,
											"end": 948,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 970,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 938,
											"end": 970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 938,
											"end": 970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 938,
											"end": 970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 938,
											"end": 970,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 938,
											"end": 970,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 938,
											"end": 970,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 917,
											"end": 970,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 986,
											"end": 996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 979,
											"end": 996,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 979,
											"end": 996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 979,
											"end": 996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 979,
											"end": 996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 803,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 803,
											"end": 1002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 803,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 803,
											"end": 1002,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1856,
											"end": 1860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1883,
											"end": 1892,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1897,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1871,
											"end": 1897,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1871,
											"end": 1897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1973,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1907,
											"end": 1978,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1907,
											"end": 1978,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1907,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2056,
											"end": 2058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2054,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2032,
											"end": 2038,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1988,
											"end": 2060,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2060,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1988,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 2067,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2157,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2073,
											"end": 2163,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2169,
											"end": 2285,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2169,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2254,
											"end": 2259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2232,
											"end": 2237,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2261,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2275,
											"end": 2276,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2273,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2285,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2285,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2345,
											"end": 2350,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2382,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2383,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2416,
											"end": 2421,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2392,
											"end": 2422,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2422,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2392,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2428,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2529,
											"end": 2536,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2548,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2637,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2518,
											"end": 2637,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2556,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2637,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2518,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2677,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2754,
											"end": 2761,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2751,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2743,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2701,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2701,
											"end": 2762,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2701,
											"end": 2762,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2701,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2691,
											"end": 2762,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2691,
											"end": 2762,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2772,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2779,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2785,
											"end": 3007,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2785,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 2918,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2905,
											"end": 2914,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2997,
											"end": 2998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 2995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 2999,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 2979,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2929,
											"end": 3000,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2929,
											"end": 3000,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2929,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 3007,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 3007,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 3007,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 3007,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 3007,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3013,
											"end": 3135,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3013,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3086,
											"end": 3110,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3110,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3086,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3079,
											"end": 3084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3111,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3066,
											"end": 3129,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3123,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3127,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3129,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3066,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3135,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3135,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3141,
											"end": 3284,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3141,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3235,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3236,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3214,
											"end": 3236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3214,
											"end": 3236,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3272,
											"end": 3277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3245,
											"end": 3278,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3245,
											"end": 3278,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3245,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3284,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3284,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3284,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3284,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3284,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3290,
											"end": 3641,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3290,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3366,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3411,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3397,
											"end": 3406,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3395,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3407,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3412,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3377,
											"end": 3496,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3377,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3377,
											"end": 3496,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3415,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3415,
											"end": 3494,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3415,
											"end": 3494,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3415,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3377,
											"end": 3496,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3377,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3560,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3616,
											"end": 3623,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3607,
											"end": 3613,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3560,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3560,
											"end": 3624,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3560,
											"end": 3624,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3560,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3550,
											"end": 3624,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3550,
											"end": 3624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3641,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3641,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3641,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3647,
											"end": 3827,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3647,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3772,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3692,
											"end": 3693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3773,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3792,
											"end": 3796,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3789,
											"end": 3790,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3782,
											"end": 3797,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3816,
											"end": 3820,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3821,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3833,
											"end": 4181,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 4181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 3880,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3914,
											"end": 3915,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3896,
											"end": 3916,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3896,
											"end": 3916,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3896,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3930,
											"end": 3950,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3930,
											"end": 3950,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3930,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3925,
											"end": 3950,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3925,
											"end": 3950,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4046,
											"end": 4120,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4044,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4040,
											"end": 4121,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4035,
											"end": 4036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4021,
											"end": 4038,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4017,
											"end": 4122,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4145,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4014,
											"end": 4145,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4145,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4014,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4174,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4175,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4155,
											"end": 4175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4155,
											"end": 4175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3833,
											"end": 4181,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3833,
											"end": 4181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3833,
											"end": 4181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3833,
											"end": 4181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3833,
											"end": 4181,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4187,
											"end": 4492,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4187,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4227,
											"end": 4230,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4264,
											"end": 4265,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4246,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4241,
											"end": 4266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4298,
											"end": 4299,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4280,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4434,
											"end": 4435,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4432,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4362,
											"end": 4436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4356,
											"end": 4437,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4460,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4353,
											"end": 4460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4460,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4353,
											"end": 4460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4485,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4482,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4477,
											"end": 4486,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4470,
											"end": 4486,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4470,
											"end": 4486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4492,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4492,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4492,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4492,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4492,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4498,
											"end": 4689,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4498,
											"end": 4689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4542,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4576,
											"end": 4577,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4558,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4558,
											"end": 4578,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4558,
											"end": 4578,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4558,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4553,
											"end": 4578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4553,
											"end": 4578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4592,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4610,
											"end": 4611,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4592,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4592,
											"end": 4612,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4592,
											"end": 4612,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4592,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4587,
											"end": 4612,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4587,
											"end": 4612,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4632,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4628,
											"end": 4629,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 4633,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4622,
											"end": 4656,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4622,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4622,
											"end": 4656,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4636,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4636,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4636,
											"end": 4654,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4636,
											"end": 4654,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4636,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4622,
											"end": 4656,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4622,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4681,
											"end": 4682,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4678,
											"end": 4679,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4674,
											"end": 4683,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4683,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4498,
											"end": 4689,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4498,
											"end": 4689,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4498,
											"end": 4689,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4498,
											"end": 4689,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4498,
											"end": 4689,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"MineDcoff()": "8bed4778",
							"mineStatus(address)": "33a22571"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MineDcoff\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"mineStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/treasury.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/IDCF/IDCF.sol\":{\"keccak256\":\"0x46f37359686638f9b09b85b67546f013da80a49dcbf195b3d27d0462cfacf135\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://715b10cc638500e1a1755f8612a35d906e2cf5a919629926ae43d51bace05911\",\"dweb:/ipfs/Qmb2Nxbut2U6yrr1hoqWj28VFPE7sGvG3BHbTfNnAkuVkM\"]},\"Dcoffer/treasury.sol\":{\"keccak256\":\"0xa25afc3a5d70b2dce22ebca4d02a9a03d25479ca076f77be63dbdd25d20bbbfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57676b5d6867d6a76e7712d59e79ae33f1ede39ca72e161535cbb541e7c0784f\",\"dweb:/ipfs/QmZS2PDSmCDCCSMFutv4MDeqQUtEPXF1uFEgeSWg86bUZ8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 414,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "mine",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDCF)400"
							},
							{
								"astId": 420,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "dcoff",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 422,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "DcoffperBlock",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 426,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "ScoreWithdrawn",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IDCF)400": {
								"encoding": "inplace",
								"label": "contract IDCF",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"Dcoffer/IDCF/IDCF.sol": {
				"ast": {
					"absolutePath": "Dcoffer/IDCF/IDCF.sol",
					"exportedSymbols": {
						"IDCF": [
							400
						]
					},
					"id": 401,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDCF",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 392,
								"nodeType": "StructuredDocumentation",
								"src": "119:61:2",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 400,
							"linearizedBaseContracts": [
								400
							],
							"name": "IDCF",
							"nameLocation": "192:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "325b272a",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "BlockScore",
									"nameLocation": "221:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "240:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "232:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:14:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:6:2"
									},
									"scope": 400,
									"src": "212:61:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 401,
							"src": "182:96:2",
							"usedErrors": []
						}
					],
					"src": "88:190:2"
				},
				"id": 2
			},
			"Dcoffer/treasury.sol": {
				"ast": {
					"absolutePath": "Dcoffer/treasury.sol",
					"exportedSymbols": {
						"IDCF": [
							400
						],
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						],
						"treasury": [
							523
						]
					},
					"id": 524,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 402,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 403,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 524,
							"sourceUnit": 78,
							"src": "60:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 404,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 524,
							"sourceUnit": 390,
							"src": "118:57:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Dcoffer/IDCF/IDCF.sol",
							"file": "./IDCF/IDCF.sol",
							"id": 405,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 524,
							"sourceUnit": 401,
							"src": "177:25:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 523,
							"linearizedBaseContracts": [
								523
							],
							"name": "treasury",
							"nameLocation": "215:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 408,
									"libraryName": {
										"id": 406,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "236:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "230:24:3",
									"typeName": {
										"id": 407,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "249:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 414,
									"mutability": "mutable",
									"name": "mine",
									"nameLocation": "265:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 523,
									"src": "260:60:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDCF_$400",
										"typeString": "contract IDCF"
									},
									"typeName": {
										"id": 410,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 409,
											"name": "IDCF",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 400,
											"src": "260:4:3"
										},
										"referencedDeclaration": 400,
										"src": "260:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDCF_$400",
											"typeString": "contract IDCF"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307836613534343336374643613730363442364144413564633837463745353035384139624237416639",
												"id": 412,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "277:42:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x6a544367FCa7064B6ADA5dc87F7E5058A9bB7Af9"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 411,
											"name": "IDCF",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 400,
											"src": "272:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IDCF_$400_$",
												"typeString": "type(contract IDCF)"
											}
										},
										"id": 413,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "272:48:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDCF_$400",
											"typeString": "contract IDCF"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 420,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "332:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 523,
									"src": "325:66:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 416,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 415,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "325:6:3"
										},
										"referencedDeclaration": 77,
										"src": "325:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307862453043383536653239383162396630336437363133353636444643363637396545653437303841",
												"id": 418,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "348:42:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xbE0C856e2981b9f03d7613566DFC6679eEe4708A"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 417,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "341:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 419,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "341:50:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 422,
									"mutability": "mutable",
									"name": "DcoffperBlock",
									"nameLocation": "406:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 523,
									"src": "398:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 421,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "398:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 426,
									"mutability": "mutable",
									"name": "ScoreWithdrawn",
									"nameLocation": "462:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 523,
									"src": "426:50:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 425,
										"keyType": {
											"id": 423,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "434:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "426:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 424,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "445:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "496:33:3",
										"statements": [
											{
												"expression": {
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 429,
														"name": "DcoffperBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "503:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32653134",
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "519:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200000000000000_by_1",
															"typeString": "int_const 200000000000000"
														},
														"value": "2e14"
													},
													"src": "503:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "503:20:3"
											}
										]
									},
									"id": 434,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "494:2:3"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:0:3"
									},
									"scope": 523,
									"src": "483:46:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "565:230:3",
										"statements": [
											{
												"assignments": [
													438
												],
												"declarations": [
													{
														"constant": false,
														"id": 438,
														"mutability": "mutable",
														"name": "afterScore",
														"nameLocation": "582:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "574:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 437,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "574:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 440,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "601:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "601:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 439,
														"name": "Score",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "595:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "595:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "574:38:3"
											},
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "GetDCF",
														"nameLocation": "629:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "621:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 444,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "621:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 450,
												"initialValue": {
													"arguments": [
														{
															"id": 448,
															"name": "DcoffperBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "653:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 446,
															"name": "afterScore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "638:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 283,
														"src": "638:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "638:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "621:46:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 454,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "691:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "691:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "GetDCF",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "702:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 451,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "676:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "676:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "676:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "676:33:3"
											},
											{
												"expression": {
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 459,
															"name": "ScoreWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "718:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 462,
														"indexExpression": {
															"expression": {
																"id": 460,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "733:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "733:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "718:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 468,
																"name": "afterScore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "778:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 463,
																	"name": "ScoreWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "747:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 466,
																"indexExpression": {
																	"expression": {
																		"id": 464,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "762:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "762:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "747:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "747:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "747:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "718:71:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "718:71:3"
											}
										]
									},
									"functionSelector": "8bed4778",
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "MineDcoff",
									"nameLocation": "546:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "555:2:3"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:0:3"
									},
									"scope": 523,
									"src": "537:258:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "861:141:3",
										"statements": [
											{
												"assignments": [
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "_Score",
														"nameLocation": "878:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 498,
														"src": "870:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 480,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "870:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "903:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 482,
															"name": "mine",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "887:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDCF_$400",
																"typeString": "contract IDCF"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "BlockScore",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 399,
														"src": "887:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "887:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "870:38:3"
											},
											{
												"assignments": [
													488
												],
												"declarations": [
													{
														"constant": false,
														"id": 488,
														"mutability": "mutable",
														"name": "afterScore",
														"nameLocation": "925:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 498,
														"src": "917:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 487,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "917:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 495,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 491,
																"name": "ScoreWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "949:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 493,
															"indexExpression": {
																"id": 492,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "964:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "949:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 489,
															"name": "_Score",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "938:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "938:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "917:53:3"
											},
											{
												"expression": {
													"id": 496,
													"name": "afterScore",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 488,
													"src": "986:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 479,
												"id": 497,
												"nodeType": "Return",
												"src": "979:17:3"
											}
										]
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Score",
									"nameLocation": "812:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "826:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "818:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:14:3"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "853:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:9:3"
									},
									"scope": 523,
									"src": "803:199:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "1069:124:3",
										"statements": [
											{
												"assignments": [
													507
												],
												"declarations": [
													{
														"constant": false,
														"id": 507,
														"mutability": "mutable",
														"name": "afterScore",
														"nameLocation": "1086:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 521,
														"src": "1078:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 506,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1078:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [
														{
															"id": 509,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "1105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 508,
														"name": "Score",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "1099:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1099:11:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1078:32:3"
											},
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "GetDCF",
														"nameLocation": "1127:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 521,
														"src": "1119:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 512,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1119:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 518,
												"initialValue": {
													"arguments": [
														{
															"id": 516,
															"name": "DcoffperBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "1151:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 514,
															"name": "afterScore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "1136:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 283,
														"src": "1136:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1136:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1119:46:3"
											},
											{
												"expression": {
													"id": 519,
													"name": "GetDCF",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 513,
													"src": "1181:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 505,
												"id": 520,
												"nodeType": "Return",
												"src": "1174:13:3"
											}
										]
									},
									"functionSelector": "33a22571",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mineStatus",
									"nameLocation": "1017:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1036:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "1028:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:14:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "1061:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:9:3"
									},
									"scope": 523,
									"src": "1008:185:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 524,
							"src": "206:1003:3",
							"usedErrors": []
						}
					],
					"src": "33:1176:3"
				},
				"id": 3
			}
		}
	}
}