{
	"id": "43e68f8db9b2f441f685157b443a54c7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"Dcoffer/treasury.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\n\r\n\r\ncontract treasury  {\r\n  using SafeMath for uint;  \r\n\r\n  IERC20 dcoff =  IERC20(0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C);\r\n\r\n  uint256 private K;\r\n\r\n  constructor(uint _k)payable{\r\n    owner = msg.sender;\r\n    K = _k;\r\n  }\r\n\r\n  address owner;\r\n  mapping(address => bool)private RouterAdmin;\r\n\r\n  modifier onlyOwner() {\r\n        require(owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n  }\r\n\r\n\r\n\r\n\r\n  function setRouter(address user, bool power)external onlyOwner{\r\n    RouterAdmin[user] = power;\r\n  }\r\n\r\n\r\n  function subscribe(address subscriber)external payable{\r\n      require(RouterAdmin[msg.sender] == true);\r\n      uint256 dcf_amount = ETH_DCF(msg.value);\r\n      dcoff.transfer(subscriber,dcf_amount);\r\n\r\n  }\r\n\r\n\r\n   function mar(address subscriber)external payable{\r\n      require(RouterAdmin[msg.sender] == true);\r\n      uint256 dcf_amount = ETH_DCF(msg.value);\r\n      dcoff.transfer(subscriber,dcf_amount);\r\n\r\n  }\r\n\r\n\r\n  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){\r\n    uint256 _eth_amount = address(this).balance;\r\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));    \r\n    uint256 Variable_dcf = _dcf_amount.add(dcf_amount);\r\n\r\n    if(Variable_dcf > dcoff.totalSupply()){\r\n      Variable_dcf = dcoff.totalSupply();\r\n    }\r\n\r\n    uint256 Variable_eth = K.div(Variable_dcf);\r\n    uint256 _price = _eth_amount.sub(Variable_eth);\r\n    return _price;\r\n  }\r\n\r\n\r\n  function ETH_DCF(uint256 eth_amount)public view returns(uint256){\r\n    uint256 _eth_amount = address(this).balance;\r\n    uint256 _dcf_amount = dcoff.balanceOf(address(this));\r\n    uint256 Variable_eth = _eth_amount.add(eth_amount);\r\n    uint256 Variable_dcf = K.div(Variable_eth);\r\n    uint256 _price = _dcf_amount.sub(Variable_dcf);\r\n    return _price;\r\n  }\r\n\r\n\r\n\r\n \r\n   \r\n  \r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXP PUSH3 0xF3573C 0xCE KECCAK256 CREATE2 0xEE BALANCE SWAP16 PUSH9 0x43457384F89FC6651C 0xD7 PUSH1 0x81 0x4A PUSH11 0xC6104B4C0E64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 EXP PUSH3 0xF3573C 0xCE KECCAK256 CREATE2 0xEE BALANCE SWAP16 PUSH9 0x43457384F89FC6651C 0xD7 PUSH1 0x81 0x4A PUSH11 0xC6104B4C0E64736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "482:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b10a62f3573cce20f5ee319f6843457384f89fc6651cd760814a6ac6104b4c0e64736f6c634300080e0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Dcoffer/treasury.sol": {
				"treasury": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_k",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dcf_amount",
									"type": "uint256"
								}
							],
							"name": "DCF_ETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "ETH_DCF",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "subscriber",
									"type": "address"
								}
							],
							"name": "mar",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "power",
									"type": "bool"
								}
							],
							"name": "setRouter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "subscriber",
									"type": "address"
								}
							],
							"name": "subscribe",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Dcoffer/treasury.sol\":181:1984  contract treasury  {... */\n  mstore(0x40, 0x80)\n    /* \"Dcoffer/treasury.sol\":260:302  0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C */\n  0xd14ff067355ce838a6e110bdfb672dbec83ca23c\n    /* \"Dcoffer/treasury.sol\":237:303  IERC20 dcoff =  IERC20(0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":334:405  constructor(uint _k)payable{... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"Dcoffer/treasury.sol\":376:386  msg.sender */\n  caller\n    /* \"Dcoffer/treasury.sol\":368:373  owner */\n  0x02\n  0x00\n    /* \"Dcoffer/treasury.sol\":368:386  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":397:399  _k */\n  dup1\n    /* \"Dcoffer/treasury.sol\":393:394  K */\n  0x01\n    /* \"Dcoffer/treasury.sol\":393:399  K = _k */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Dcoffer/treasury.sol\":334:405  constructor(uint _k)payable{... */\n  pop\n    /* \"Dcoffer/treasury.sol\":181:1984  contract treasury  {... */\n  jump(tag_5)\n    /* \"#utility.yul\":88:205   */\ntag_7:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_9:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_10:\n    /* \"#utility.yul\":490:514   */\n  tag_18\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_9\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_19:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_11:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_21\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_2:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_24\n  tag_7\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":781:900   */\ntag_23:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_25\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Dcoffer/treasury.sol\":181:1984  contract treasury  {... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Dcoffer/treasury.sol\":181:1984  contract treasury  {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3a23bf49\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x41a7726a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6f515f3d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x97dedb1d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc3c64674\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Dcoffer/treasury.sol\":1134:1595  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":713:918  function subscribe(address subscriber)external payable{... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"Dcoffer/treasury.sol\":927:1126  function mar(address subscriber)external payable{... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      stop\n        /* \"Dcoffer/treasury.sol\":1603:1961  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Dcoffer/treasury.sol\":605:705  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"Dcoffer/treasury.sol\":1134:1595  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n    tag_11:\n        /* \"Dcoffer/treasury.sol\":1190:1197  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1205:1224  uint256 _eth_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1227:1248  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":1205:1248  uint256 _eth_amount = address(this).balance */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1255:1274  uint256 _dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1277:1282  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1277:1292  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":1301:1305  this */\n      address\n        /* \"Dcoffer/treasury.sol\":1277:1307  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"Dcoffer/treasury.sol\":1255:1307  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1318:1338  uint256 Variable_dcf */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1341:1368  _dcf_amount.add(dcf_amount) */\n      tag_38\n        /* \"Dcoffer/treasury.sol\":1357:1367  dcf_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1341:1352  _dcf_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1341:1356  _dcf_amount.add */\n      tag_39\n      swap1\n        /* \"Dcoffer/treasury.sol\":1341:1368  _dcf_amount.add(dcf_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_38:\n        /* \"Dcoffer/treasury.sol\":1318:1368  uint256 Variable_dcf = _dcf_amount.add(dcf_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1395:1400  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1395:1412  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"Dcoffer/treasury.sol\":1395:1414  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_42:\n        /* \"Dcoffer/treasury.sol\":1380:1392  Variable_dcf */\n      dup2\n        /* \"Dcoffer/treasury.sol\":1380:1414  Variable_dcf > dcoff.totalSupply() */\n      gt\n        /* \"Dcoffer/treasury.sol\":1377:1466  if(Variable_dcf > dcoff.totalSupply()){... */\n      iszero\n      tag_43\n      jumpi\n        /* \"Dcoffer/treasury.sol\":1439:1444  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1439:1456  dcoff.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"Dcoffer/treasury.sol\":1439:1458  dcoff.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_46:\n        /* \"Dcoffer/treasury.sol\":1424:1458  Variable_dcf = dcoff.totalSupply() */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1377:1466  if(Variable_dcf > dcoff.totalSupply()){... */\n    tag_43:\n        /* \"Dcoffer/treasury.sol\":1474:1494  uint256 Variable_eth */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1497:1516  K.div(Variable_dcf) */\n      tag_47\n        /* \"Dcoffer/treasury.sol\":1503:1515  Variable_dcf */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1497:1498  K */\n      sload(0x01)\n        /* \"Dcoffer/treasury.sol\":1497:1502  K.div */\n      tag_48\n      swap1\n        /* \"Dcoffer/treasury.sol\":1497:1516  K.div(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_47:\n        /* \"Dcoffer/treasury.sol\":1474:1516  uint256 Variable_eth = K.div(Variable_dcf) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1523:1537  uint256 _price */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1540:1569  _eth_amount.sub(Variable_eth) */\n      tag_49\n        /* \"Dcoffer/treasury.sol\":1556:1568  Variable_eth */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1540:1551  _eth_amount */\n      dup7\n        /* \"Dcoffer/treasury.sol\":1540:1555  _eth_amount.sub */\n      tag_50\n      swap1\n        /* \"Dcoffer/treasury.sol\":1540:1569  _eth_amount.sub(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_49:\n        /* \"Dcoffer/treasury.sol\":1523:1569  uint256 _price = _eth_amount.sub(Variable_eth) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1583:1589  _price */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1576:1589  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":1134:1595  function DCF_ETH(uint256 dcf_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":713:918  function subscribe(address subscriber)external payable{... */\n    tag_17:\n        /* \"Dcoffer/treasury.sol\":811:815  true */\n      0x01\n        /* \"Dcoffer/treasury.sol\":784:815  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"Dcoffer/treasury.sol\":784:795  RouterAdmin */\n      0x03\n        /* \"Dcoffer/treasury.sol\":784:807  RouterAdmin[msg.sender] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":796:806  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":784:807  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dcoffer/treasury.sol\":784:815  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"Dcoffer/treasury.sol\":776:816  require(RouterAdmin[msg.sender] == true) */\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n        /* \"Dcoffer/treasury.sol\":825:843  uint256 dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":846:864  ETH_DCF(msg.value) */\n      tag_53\n        /* \"Dcoffer/treasury.sol\":854:863  msg.value */\n      callvalue\n        /* \"Dcoffer/treasury.sol\":846:853  ETH_DCF */\n      tag_24\n        /* \"Dcoffer/treasury.sol\":846:864  ETH_DCF(msg.value) */\n      jump\t// in\n    tag_53:\n        /* \"Dcoffer/treasury.sol\":825:864  uint256 dcf_amount = ETH_DCF(msg.value) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":873:878  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":873:887  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Dcoffer/treasury.sol\":888:898  subscriber */\n      dup4\n        /* \"Dcoffer/treasury.sol\":899:909  dcf_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":873:910  dcoff.transfer(subscriber,dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      pop\n        /* \"Dcoffer/treasury.sol\":767:918  {... */\n      pop\n        /* \"Dcoffer/treasury.sol\":713:918  function subscribe(address subscriber)external payable{... */\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":927:1126  function mar(address subscriber)external payable{... */\n    tag_20:\n        /* \"Dcoffer/treasury.sol\":1019:1023  true */\n      0x01\n        /* \"Dcoffer/treasury.sol\":992:1023  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n        /* \"Dcoffer/treasury.sol\":992:1003  RouterAdmin */\n      0x03\n        /* \"Dcoffer/treasury.sol\":992:1015  RouterAdmin[msg.sender] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1004:1014  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":992:1015  RouterAdmin[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Dcoffer/treasury.sol\":992:1023  RouterAdmin[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"Dcoffer/treasury.sol\":984:1024  require(RouterAdmin[msg.sender] == true) */\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n        /* \"Dcoffer/treasury.sol\":1033:1051  uint256 dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1054:1072  ETH_DCF(msg.value) */\n      tag_62\n        /* \"Dcoffer/treasury.sol\":1062:1071  msg.value */\n      callvalue\n        /* \"Dcoffer/treasury.sol\":1054:1061  ETH_DCF */\n      tag_24\n        /* \"Dcoffer/treasury.sol\":1054:1072  ETH_DCF(msg.value) */\n      jump\t// in\n    tag_62:\n        /* \"Dcoffer/treasury.sol\":1033:1072  uint256 dcf_amount = ETH_DCF(msg.value) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1081:1086  dcoff */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1081:1095  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Dcoffer/treasury.sol\":1096:1106  subscriber */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1107:1117  dcf_amount */\n      dup4\n        /* \"Dcoffer/treasury.sol\":1081:1118  dcoff.transfer(subscriber,dcf_amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_63:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_66:\n      pop\n        /* \"Dcoffer/treasury.sol\":975:1126  {... */\n      pop\n        /* \"Dcoffer/treasury.sol\":927:1126  function mar(address subscriber)external payable{... */\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":1603:1961  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n    tag_24:\n        /* \"Dcoffer/treasury.sol\":1659:1666  uint256 */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1674:1693  uint256 _eth_amount */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1696:1717  address(this).balance */\n      selfbalance\n        /* \"Dcoffer/treasury.sol\":1674:1717  uint256 _eth_amount = address(this).balance */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1724:1743  uint256 _dcf_amount */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1746:1751  dcoff */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":1746:1761  dcoff.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Dcoffer/treasury.sol\":1770:1774  this */\n      address\n        /* \"Dcoffer/treasury.sol\":1746:1776  dcoff.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_68:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_71:\n        /* \"Dcoffer/treasury.sol\":1724:1776  uint256 _dcf_amount = dcoff.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1783:1803  uint256 Variable_eth */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1806:1833  _eth_amount.add(eth_amount) */\n      tag_72\n        /* \"Dcoffer/treasury.sol\":1822:1832  eth_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1806:1817  _eth_amount */\n      dup5\n        /* \"Dcoffer/treasury.sol\":1806:1821  _eth_amount.add */\n      tag_39\n      swap1\n        /* \"Dcoffer/treasury.sol\":1806:1833  _eth_amount.add(eth_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"Dcoffer/treasury.sol\":1783:1833  uint256 Variable_eth = _eth_amount.add(eth_amount) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1840:1860  uint256 Variable_dcf */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1863:1882  K.div(Variable_eth) */\n      tag_73\n        /* \"Dcoffer/treasury.sol\":1869:1881  Variable_eth */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1863:1864  K */\n      sload(0x01)\n        /* \"Dcoffer/treasury.sol\":1863:1868  K.div */\n      tag_48\n      swap1\n        /* \"Dcoffer/treasury.sol\":1863:1882  K.div(Variable_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_73:\n        /* \"Dcoffer/treasury.sol\":1840:1882  uint256 Variable_dcf = K.div(Variable_eth) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1889:1903  uint256 _price */\n      0x00\n        /* \"Dcoffer/treasury.sol\":1906:1935  _dcf_amount.sub(Variable_dcf) */\n      tag_74\n        /* \"Dcoffer/treasury.sol\":1922:1934  Variable_dcf */\n      dup3\n        /* \"Dcoffer/treasury.sol\":1906:1917  _dcf_amount */\n      dup6\n        /* \"Dcoffer/treasury.sol\":1906:1921  _dcf_amount.sub */\n      tag_50\n      swap1\n        /* \"Dcoffer/treasury.sol\":1906:1935  _dcf_amount.sub(Variable_dcf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"Dcoffer/treasury.sol\":1889:1935  uint256 _price = _dcf_amount.sub(Variable_dcf) */\n      swap1\n      pop\n        /* \"Dcoffer/treasury.sol\":1949:1955  _price */\n      dup1\n        /* \"Dcoffer/treasury.sol\":1942:1955  return _price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Dcoffer/treasury.sol\":1603:1961  function ETH_DCF(uint256 eth_amount)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Dcoffer/treasury.sol\":605:705  function setRouter(address user, bool power)external onlyOwner{... */\n    tag_30:\n        /* \"Dcoffer/treasury.sol\":528:538  msg.sender */\n      caller\n        /* \"Dcoffer/treasury.sol\":519:538  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":519:524  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Dcoffer/treasury.sol\":519:538  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Dcoffer/treasury.sol\":511:575  require(owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"Dcoffer/treasury.sol\":694:699  power */\n      dup1\n        /* \"Dcoffer/treasury.sol\":674:685  RouterAdmin */\n      0x03\n        /* \"Dcoffer/treasury.sol\":674:691  RouterAdmin[user] */\n      0x00\n        /* \"Dcoffer/treasury.sol\":686:690  user */\n      dup5\n        /* \"Dcoffer/treasury.sol\":674:691  RouterAdmin[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Dcoffer/treasury.sol\":674:699  RouterAdmin[user] = power */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Dcoffer/treasury.sol\":605:705  function setRouter(address user, bool power)external onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_90:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_92:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_93:\n        /* \"#utility.yul\":490:514   */\n      tag_117\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_92\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_118\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_118:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_94:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_120\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_93\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_10:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_123\n      tag_90\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":766:885   */\n    tag_122:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_124\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_94\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_95:\n        /* \"#utility.yul\":1112:1136   */\n      tag_126\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_92\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_13:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_128\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_95\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_96:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_97:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_131\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_96\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_98:\n        /* \"#utility.yul\":1684:1708   */\n      tag_133\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_97\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_134:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_99:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_136\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_98\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_16:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_139\n      tag_90\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1960:2079   */\n    tag_138:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_140\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_99\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2309   */\n    tag_100:\n        /* \"#utility.yul\":2253:2260   */\n      0x00\n        /* \"#utility.yul\":2296:2301   */\n      dup2\n        /* \"#utility.yul\":2289:2302   */\n      iszero\n        /* \"#utility.yul\":2282:2303   */\n      iszero\n        /* \"#utility.yul\":2271:2303   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2315:2431   */\n    tag_101:\n        /* \"#utility.yul\":2385:2406   */\n      tag_143\n        /* \"#utility.yul\":2400:2405   */\n      dup2\n        /* \"#utility.yul\":2385:2406   */\n      tag_100\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2378:2383   */\n      dup2\n        /* \"#utility.yul\":2375:2407   */\n      eq\n        /* \"#utility.yul\":2365:2425   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":2421:2422   */\n      0x00\n        /* \"#utility.yul\":2418:2419   */\n      dup1\n        /* \"#utility.yul\":2411:2423   */\n      revert\n        /* \"#utility.yul\":2365:2425   */\n    tag_144:\n        /* \"#utility.yul\":2315:2431   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2437:2570   */\n    tag_102:\n        /* \"#utility.yul\":2480:2485   */\n      0x00\n        /* \"#utility.yul\":2518:2524   */\n      dup2\n        /* \"#utility.yul\":2505:2525   */\n      calldataload\n        /* \"#utility.yul\":2496:2525   */\n      swap1\n      pop\n        /* \"#utility.yul\":2534:2564   */\n      tag_146\n        /* \"#utility.yul\":2558:2563   */\n      dup2\n        /* \"#utility.yul\":2534:2564   */\n      tag_101\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2437:2570   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2576:3044   */\n    tag_29:\n        /* \"#utility.yul\":2641:2647   */\n      0x00\n        /* \"#utility.yul\":2649:2655   */\n      dup1\n        /* \"#utility.yul\":2698:2700   */\n      0x40\n        /* \"#utility.yul\":2686:2695   */\n      dup4\n        /* \"#utility.yul\":2677:2684   */\n      dup6\n        /* \"#utility.yul\":2673:2696   */\n      sub\n        /* \"#utility.yul\":2669:2701   */\n      slt\n        /* \"#utility.yul\":2666:2785   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":2704:2783   */\n      tag_149\n      tag_90\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2666:2785   */\n    tag_148:\n        /* \"#utility.yul\":2824:2825   */\n      0x00\n        /* \"#utility.yul\":2849:2902   */\n      tag_150\n        /* \"#utility.yul\":2894:2901   */\n      dup6\n        /* \"#utility.yul\":2885:2891   */\n      dup3\n        /* \"#utility.yul\":2874:2883   */\n      dup7\n        /* \"#utility.yul\":2870:2892   */\n      add\n        /* \"#utility.yul\":2849:2902   */\n      tag_99\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2839:2902   */\n      swap3\n      pop\n        /* \"#utility.yul\":2795:2912   */\n      pop\n        /* \"#utility.yul\":2951:2953   */\n      0x20\n        /* \"#utility.yul\":2977:3027   */\n      tag_151\n        /* \"#utility.yul\":3019:3026   */\n      dup6\n        /* \"#utility.yul\":3010:3016   */\n      dup3\n        /* \"#utility.yul\":2999:3008   */\n      dup7\n        /* \"#utility.yul\":2995:3017   */\n      add\n        /* \"#utility.yul\":2977:3027   */\n      tag_102\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2967:3027   */\n      swap2\n      pop\n        /* \"#utility.yul\":2922:3037   */\n      pop\n        /* \"#utility.yul\":2576:3044   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3050:3168   */\n    tag_103:\n        /* \"#utility.yul\":3137:3161   */\n      tag_153\n        /* \"#utility.yul\":3155:3160   */\n      dup2\n        /* \"#utility.yul\":3137:3161   */\n      tag_97\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":3132:3135   */\n      dup3\n        /* \"#utility.yul\":3125:3162   */\n      mstore\n        /* \"#utility.yul\":3050:3168   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3174:3396   */\n    tag_33:\n        /* \"#utility.yul\":3267:3271   */\n      0x00\n        /* \"#utility.yul\":3305:3307   */\n      0x20\n        /* \"#utility.yul\":3294:3303   */\n      dup3\n        /* \"#utility.yul\":3290:3308   */\n      add\n        /* \"#utility.yul\":3282:3308   */\n      swap1\n      pop\n        /* \"#utility.yul\":3318:3389   */\n      tag_155\n        /* \"#utility.yul\":3386:3387   */\n      0x00\n        /* \"#utility.yul\":3375:3384   */\n      dup4\n        /* \"#utility.yul\":3371:3388   */\n      add\n        /* \"#utility.yul\":3362:3368   */\n      dup5\n        /* \"#utility.yul\":3318:3389   */\n      tag_103\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":3174:3396   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3402:3545   */\n    tag_104:\n        /* \"#utility.yul\":3459:3464   */\n      0x00\n        /* \"#utility.yul\":3490:3496   */\n      dup2\n        /* \"#utility.yul\":3484:3497   */\n      mload\n        /* \"#utility.yul\":3475:3497   */\n      swap1\n      pop\n        /* \"#utility.yul\":3506:3539   */\n      tag_157\n        /* \"#utility.yul\":3533:3538   */\n      dup2\n        /* \"#utility.yul\":3506:3539   */\n      tag_93\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":3402:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3902   */\n    tag_37:\n        /* \"#utility.yul\":3621:3627   */\n      0x00\n        /* \"#utility.yul\":3670:3672   */\n      0x20\n        /* \"#utility.yul\":3658:3667   */\n      dup3\n        /* \"#utility.yul\":3649:3656   */\n      dup5\n        /* \"#utility.yul\":3645:3668   */\n      sub\n        /* \"#utility.yul\":3641:3673   */\n      slt\n        /* \"#utility.yul\":3638:3757   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":3676:3755   */\n      tag_160\n      tag_90\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3638:3757   */\n    tag_159:\n        /* \"#utility.yul\":3796:3797   */\n      0x00\n        /* \"#utility.yul\":3821:3885   */\n      tag_161\n        /* \"#utility.yul\":3877:3884   */\n      dup5\n        /* \"#utility.yul\":3868:3874   */\n      dup3\n        /* \"#utility.yul\":3857:3866   */\n      dup6\n        /* \"#utility.yul\":3853:3875   */\n      add\n        /* \"#utility.yul\":3821:3885   */\n      tag_104\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3811:3885   */\n      swap2\n      pop\n        /* \"#utility.yul\":3767:3895   */\n      pop\n        /* \"#utility.yul\":3551:3902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3908:4240   */\n    tag_55:\n        /* \"#utility.yul\":4029:4033   */\n      0x00\n        /* \"#utility.yul\":4067:4069   */\n      0x40\n        /* \"#utility.yul\":4056:4065   */\n      dup3\n        /* \"#utility.yul\":4052:4070   */\n      add\n        /* \"#utility.yul\":4044:4070   */\n      swap1\n      pop\n        /* \"#utility.yul\":4080:4151   */\n      tag_163\n        /* \"#utility.yul\":4148:4149   */\n      0x00\n        /* \"#utility.yul\":4137:4146   */\n      dup4\n        /* \"#utility.yul\":4133:4150   */\n      add\n        /* \"#utility.yul\":4124:4130   */\n      dup6\n        /* \"#utility.yul\":4080:4151   */\n      tag_103\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":4161:4233   */\n      tag_164\n        /* \"#utility.yul\":4229:4231   */\n      0x20\n        /* \"#utility.yul\":4218:4227   */\n      dup4\n        /* \"#utility.yul\":4214:4232   */\n      add\n        /* \"#utility.yul\":4205:4211   */\n      dup5\n        /* \"#utility.yul\":4161:4233   */\n      tag_95\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":3908:4240   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4246:4383   */\n    tag_105:\n        /* \"#utility.yul\":4300:4305   */\n      0x00\n        /* \"#utility.yul\":4331:4337   */\n      dup2\n        /* \"#utility.yul\":4325:4338   */\n      mload\n        /* \"#utility.yul\":4316:4338   */\n      swap1\n      pop\n        /* \"#utility.yul\":4347:4377   */\n      tag_166\n        /* \"#utility.yul\":4371:4376   */\n      dup2\n        /* \"#utility.yul\":4347:4377   */\n      tag_101\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4246:4383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4389:4734   */\n    tag_59:\n        /* \"#utility.yul\":4456:4462   */\n      0x00\n        /* \"#utility.yul\":4505:4507   */\n      0x20\n        /* \"#utility.yul\":4493:4502   */\n      dup3\n        /* \"#utility.yul\":4484:4491   */\n      dup5\n        /* \"#utility.yul\":4480:4503   */\n      sub\n        /* \"#utility.yul\":4476:4508   */\n      slt\n        /* \"#utility.yul\":4473:4592   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":4511:4590   */\n      tag_169\n      tag_90\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4473:4592   */\n    tag_168:\n        /* \"#utility.yul\":4631:4632   */\n      0x00\n        /* \"#utility.yul\":4656:4717   */\n      tag_170\n        /* \"#utility.yul\":4709:4716   */\n      dup5\n        /* \"#utility.yul\":4700:4706   */\n      dup3\n        /* \"#utility.yul\":4689:4698   */\n      dup6\n        /* \"#utility.yul\":4685:4707   */\n      add\n        /* \"#utility.yul\":4656:4717   */\n      tag_105\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4646:4717   */\n      swap2\n      pop\n        /* \"#utility.yul\":4602:4727   */\n      pop\n        /* \"#utility.yul\":4389:4734   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4740:4909   */\n    tag_106:\n        /* \"#utility.yul\":4824:4835   */\n      0x00\n        /* \"#utility.yul\":4858:4864   */\n      dup3\n        /* \"#utility.yul\":4853:4856   */\n      dup3\n        /* \"#utility.yul\":4846:4865   */\n      mstore\n        /* \"#utility.yul\":4898:4902   */\n      0x20\n        /* \"#utility.yul\":4893:4896   */\n      dup3\n        /* \"#utility.yul\":4889:4903   */\n      add\n        /* \"#utility.yul\":4874:4903   */\n      swap1\n      pop\n        /* \"#utility.yul\":4740:4909   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4915:5097   */\n    tag_107:\n        /* \"#utility.yul\":5055:5089   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5043:5049   */\n      dup3\n        /* \"#utility.yul\":5039:5053   */\n      add\n        /* \"#utility.yul\":5032:5090   */\n      mstore\n        /* \"#utility.yul\":4915:5097   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5103:5469   */\n    tag_108:\n        /* \"#utility.yul\":5245:5248   */\n      0x00\n        /* \"#utility.yul\":5266:5333   */\n      tag_174\n        /* \"#utility.yul\":5330:5332   */\n      0x20\n        /* \"#utility.yul\":5325:5328   */\n      dup4\n        /* \"#utility.yul\":5266:5333   */\n      tag_106\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":5259:5333   */\n      swap2\n      pop\n        /* \"#utility.yul\":5342:5435   */\n      tag_175\n        /* \"#utility.yul\":5431:5434   */\n      dup3\n        /* \"#utility.yul\":5342:5435   */\n      tag_107\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":5460:5462   */\n      0x20\n        /* \"#utility.yul\":5455:5458   */\n      dup3\n        /* \"#utility.yul\":5451:5463   */\n      add\n        /* \"#utility.yul\":5444:5463   */\n      swap1\n      pop\n        /* \"#utility.yul\":5103:5469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5475:5894   */\n    tag_78:\n        /* \"#utility.yul\":5641:5645   */\n      0x00\n        /* \"#utility.yul\":5679:5681   */\n      0x20\n        /* \"#utility.yul\":5668:5677   */\n      dup3\n        /* \"#utility.yul\":5664:5682   */\n      add\n        /* \"#utility.yul\":5656:5682   */\n      swap1\n      pop\n        /* \"#utility.yul\":5728:5737   */\n      dup2\n        /* \"#utility.yul\":5722:5726   */\n      dup2\n        /* \"#utility.yul\":5718:5738   */\n      sub\n        /* \"#utility.yul\":5714:5715   */\n      0x00\n        /* \"#utility.yul\":5703:5712   */\n      dup4\n        /* \"#utility.yul\":5699:5716   */\n      add\n        /* \"#utility.yul\":5692:5739   */\n      mstore\n        /* \"#utility.yul\":5756:5887   */\n      tag_177\n        /* \"#utility.yul\":5882:5886   */\n      dup2\n        /* \"#utility.yul\":5756:5887   */\n      tag_108\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5748:5887   */\n      swap1\n      pop\n        /* \"#utility.yul\":5475:5894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5900:6080   */\n    tag_109:\n        /* \"#utility.yul\":5948:6025   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5945:5946   */\n      0x00\n        /* \"#utility.yul\":5938:6026   */\n      mstore\n        /* \"#utility.yul\":6045:6049   */\n      0x11\n        /* \"#utility.yul\":6042:6043   */\n      0x04\n        /* \"#utility.yul\":6035:6050   */\n      mstore\n        /* \"#utility.yul\":6069:6073   */\n      0x24\n        /* \"#utility.yul\":6066:6067   */\n      0x00\n        /* \"#utility.yul\":6059:6074   */\n      revert\n        /* \"#utility.yul\":6086:6391   */\n    tag_82:\n        /* \"#utility.yul\":6126:6129   */\n      0x00\n        /* \"#utility.yul\":6145:6165   */\n      tag_180\n        /* \"#utility.yul\":6163:6164   */\n      dup3\n        /* \"#utility.yul\":6145:6165   */\n      tag_92\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":6140:6165   */\n      swap2\n      pop\n        /* \"#utility.yul\":6179:6199   */\n      tag_181\n        /* \"#utility.yul\":6197:6198   */\n      dup4\n        /* \"#utility.yul\":6179:6199   */\n      tag_92\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":6174:6199   */\n      swap3\n      pop\n        /* \"#utility.yul\":6333:6334   */\n      dup3\n        /* \"#utility.yul\":6265:6331   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6261:6335   */\n      sub\n        /* \"#utility.yul\":6258:6259   */\n      dup3\n        /* \"#utility.yul\":6255:6336   */\n      gt\n        /* \"#utility.yul\":6252:6359   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":6339:6357   */\n      tag_183\n      tag_109\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":6252:6359   */\n    tag_182:\n        /* \"#utility.yul\":6383:6384   */\n      dup3\n        /* \"#utility.yul\":6380:6381   */\n      dup3\n        /* \"#utility.yul\":6376:6385   */\n      add\n        /* \"#utility.yul\":6369:6385   */\n      swap1\n      pop\n        /* \"#utility.yul\":6086:6391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6397:6577   */\n    tag_110:\n        /* \"#utility.yul\":6445:6522   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6442:6443   */\n      0x00\n        /* \"#utility.yul\":6435:6523   */\n      mstore\n        /* \"#utility.yul\":6542:6546   */\n      0x12\n        /* \"#utility.yul\":6539:6540   */\n      0x04\n        /* \"#utility.yul\":6532:6547   */\n      mstore\n        /* \"#utility.yul\":6566:6570   */\n      0x24\n        /* \"#utility.yul\":6563:6564   */\n      0x00\n        /* \"#utility.yul\":6556:6571   */\n      revert\n        /* \"#utility.yul\":6583:6768   */\n    tag_85:\n        /* \"#utility.yul\":6623:6624   */\n      0x00\n        /* \"#utility.yul\":6640:6660   */\n      tag_186\n        /* \"#utility.yul\":6658:6659   */\n      dup3\n        /* \"#utility.yul\":6640:6660   */\n      tag_92\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":6635:6660   */\n      swap2\n      pop\n        /* \"#utility.yul\":6674:6694   */\n      tag_187\n        /* \"#utility.yul\":6692:6693   */\n      dup4\n        /* \"#utility.yul\":6674:6694   */\n      tag_92\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6669:6694   */\n      swap3\n      pop\n        /* \"#utility.yul\":6713:6714   */\n      dup3\n        /* \"#utility.yul\":6703:6738   */\n      tag_188\n      jumpi\n        /* \"#utility.yul\":6718:6736   */\n      tag_189\n      tag_110\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6703:6738   */\n    tag_188:\n        /* \"#utility.yul\":6760:6761   */\n      dup3\n        /* \"#utility.yul\":6757:6758   */\n      dup3\n        /* \"#utility.yul\":6753:6762   */\n      div\n        /* \"#utility.yul\":6748:6762   */\n      swap1\n      pop\n        /* \"#utility.yul\":6583:6768   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6774:6965   */\n    tag_88:\n        /* \"#utility.yul\":6814:6818   */\n      0x00\n        /* \"#utility.yul\":6834:6854   */\n      tag_191\n        /* \"#utility.yul\":6852:6853   */\n      dup3\n        /* \"#utility.yul\":6834:6854   */\n      tag_92\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":6829:6854   */\n      swap2\n      pop\n        /* \"#utility.yul\":6868:6888   */\n      tag_192\n        /* \"#utility.yul\":6886:6887   */\n      dup4\n        /* \"#utility.yul\":6868:6888   */\n      tag_92\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6863:6888   */\n      swap3\n      pop\n        /* \"#utility.yul\":6907:6908   */\n      dup3\n        /* \"#utility.yul\":6904:6905   */\n      dup3\n        /* \"#utility.yul\":6901:6909   */\n      lt\n        /* \"#utility.yul\":6898:6932   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":6912:6930   */\n      tag_194\n      tag_109\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6898:6932   */\n    tag_193:\n        /* \"#utility.yul\":6957:6958   */\n      dup3\n        /* \"#utility.yul\":6954:6955   */\n      dup3\n        /* \"#utility.yul\":6950:6959   */\n      sub\n        /* \"#utility.yul\":6942:6959   */\n      swap1\n      pop\n        /* \"#utility.yul\":6774:6965   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220be6e95c308cba440d1ad55e1625689037eaf3df0ee5b2a571b8fd0f969f94e5c64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_419": {
									"entryPoint": null,
									"id": 419,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1048:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:3",
														"type": ""
													}
												],
												"src": "545:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "771:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "817:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:32:3"
															},
															"nodeType": "YulIf",
															"src": "781:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "910:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "929:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "954:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "741:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "752:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "764:6:3",
														"type": ""
													}
												],
												"src": "694:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405273d14ff067355ce838a6e110bdfb672dbec83ca23c6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051610d01380380610d0183398181016040528101906100799190610102565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001819055505061012f565b600080fd5b6000819050919050565b6100df816100cc565b81146100ea57600080fd5b50565b6000815190506100fc816100d6565b92915050565b600060208284031215610118576101176100c7565b5b6000610126848285016100ed565b91505092915050565b610bc38061013e6000396000f3fe60806040526004361061004a5760003560e01c80633a23bf491461004f57806341a7726a1461008c5780636f515f3d146100a857806397dedb1d146100c4578063c3c6467414610101575b600080fd5b34801561005b57600080fd5b50610076600480360381019061007191906107c6565b61012a565b6040516100839190610802565b60405180910390f35b6100a660048036038101906100a1919061087b565b61034b565b005b6100c260048036038101906100bd919061087b565b610458565b005b3480156100d057600080fd5b506100eb60048036038101906100e691906107c6565b610565565b6040516100f89190610802565b60405180910390f35b34801561010d57600080fd5b50610128600480360381019061012391906108e0565b61065e565b005b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161018c919061092f565b602060405180830381865afa1580156101a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cd919061095f565b905060006101e4858361074990919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610251573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610275919061095f565b81111561030e5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030b919061095f565b90505b60006103258260015461075f90919063ffffffff16565b9050600061033c828661077590919063ffffffff16565b90508095505050505050919050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103a857600080fd5b60006103b334610565565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161041092919061098c565b6020604051808303816000875af115801561042f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045391906109ca565b505050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146104b557600080fd5b60006104c034610565565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161051d92919061098c565b6020604051808303816000875af115801561053c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056091906109ca565b505050565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105c7919061092f565b602060405180830381865afa1580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610608919061095f565b9050600061061f858461074990919063ffffffff16565b905060006106388260015461075f90919063ffffffff16565b9050600061064f828561077590919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e590610a54565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600081836107579190610aa3565b905092915050565b6000818361076d9190610b28565b905092915050565b600081836107839190610b59565b905092915050565b600080fd5b6000819050919050565b6107a381610790565b81146107ae57600080fd5b50565b6000813590506107c08161079a565b92915050565b6000602082840312156107dc576107db61078b565b5b60006107ea848285016107b1565b91505092915050565b6107fc81610790565b82525050565b600060208201905061081760008301846107f3565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108488261081d565b9050919050565b6108588161083d565b811461086357600080fd5b50565b6000813590506108758161084f565b92915050565b6000602082840312156108915761089061078b565b5b600061089f84828501610866565b91505092915050565b60008115159050919050565b6108bd816108a8565b81146108c857600080fd5b50565b6000813590506108da816108b4565b92915050565b600080604083850312156108f7576108f661078b565b5b600061090585828601610866565b9250506020610916858286016108cb565b9150509250929050565b6109298161083d565b82525050565b60006020820190506109446000830184610920565b92915050565b6000815190506109598161079a565b92915050565b6000602082840312156109755761097461078b565b5b60006109838482850161094a565b91505092915050565b60006040820190506109a16000830185610920565b6109ae60208301846107f3565b9392505050565b6000815190506109c4816108b4565b92915050565b6000602082840312156109e0576109df61078b565b5b60006109ee848285016109b5565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a3e6020836109f7565b9150610a4982610a08565b602082019050919050565b60006020820190508181036000830152610a6d81610a31565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aae82610790565b9150610ab983610790565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610aee57610aed610a74565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b3382610790565b9150610b3e83610790565b925082610b4e57610b4d610af9565b5b828204905092915050565b6000610b6482610790565b9150610b6f83610790565b925082821015610b8257610b81610a74565b5b82820390509291505056fea2646970667358221220be6e95c308cba440d1ad55e1625689037eaf3df0ee5b2a571b8fd0f969f94e5c64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xD14FF067355CE838A6E110BDFB672DBEC83CA23C PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0xD01 CODESIZE SUB DUP1 PUSH2 0xD01 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x102 JUMP JUMPDEST CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP PUSH2 0x12F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF DUP2 PUSH2 0xCC JUMP JUMPDEST DUP2 EQ PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFC DUP2 PUSH2 0xD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x118 JUMPI PUSH2 0x117 PUSH2 0xC7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x126 DUP5 DUP3 DUP6 ADD PUSH2 0xED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC3 DUP1 PUSH2 0x13E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3A23BF49 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x41A7726A EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x6F515F3D EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x101 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E4 DUP6 DUP4 PUSH2 0x749 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x251 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x325 DUP3 PUSH1 0x1 SLOAD PUSH2 0x75F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33C DUP3 DUP7 PUSH2 0x775 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B3 CALLVALUE PUSH2 0x565 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x410 SWAP3 SWAP2 SWAP1 PUSH2 0x98C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x42F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4C0 CALLVALUE PUSH2 0x565 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51D SWAP3 SWAP2 SWAP1 PUSH2 0x98C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x53C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x61F DUP6 DUP5 PUSH2 0x749 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x638 DUP3 PUSH1 0x1 SLOAD PUSH2 0x75F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x64F DUP3 DUP6 PUSH2 0x775 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E5 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x757 SWAP2 SWAP1 PUSH2 0xAA3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x76D SWAP2 SWAP1 PUSH2 0xB28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x783 SWAP2 SWAP1 PUSH2 0xB59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A3 DUP2 PUSH2 0x790 JUMP JUMPDEST DUP2 EQ PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C0 DUP2 PUSH2 0x79A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DC JUMPI PUSH2 0x7DB PUSH2 0x78B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP5 DUP3 DUP6 ADD PUSH2 0x7B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7FC DUP2 PUSH2 0x790 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x817 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x848 DUP3 PUSH2 0x81D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x858 DUP2 PUSH2 0x83D JUMP JUMPDEST DUP2 EQ PUSH2 0x863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x875 DUP2 PUSH2 0x84F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x891 JUMPI PUSH2 0x890 PUSH2 0x78B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x89F DUP5 DUP3 DUP6 ADD PUSH2 0x866 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BD DUP2 PUSH2 0x8A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x8C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8DA DUP2 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8F7 JUMPI PUSH2 0x8F6 PUSH2 0x78B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x905 DUP6 DUP3 DUP7 ADD PUSH2 0x866 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x916 DUP6 DUP3 DUP7 ADD PUSH2 0x8CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x929 DUP2 PUSH2 0x83D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x944 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x920 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x959 DUP2 PUSH2 0x79A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x975 JUMPI PUSH2 0x974 PUSH2 0x78B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x983 DUP5 DUP3 DUP6 ADD PUSH2 0x94A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9A1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x9AE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7F3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9C4 DUP2 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E0 JUMPI PUSH2 0x9DF PUSH2 0x78B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9EE DUP5 DUP3 DUP6 ADD PUSH2 0x9B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3E PUSH1 0x20 DUP4 PUSH2 0x9F7 JUMP JUMPDEST SWAP2 POP PUSH2 0xA49 DUP3 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA6D DUP2 PUSH2 0xA31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAAE DUP3 PUSH2 0x790 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB9 DUP4 PUSH2 0x790 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0xA74 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB33 DUP3 PUSH2 0x790 JUMP JUMPDEST SWAP2 POP PUSH2 0xB3E DUP4 PUSH2 0x790 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB4E JUMPI PUSH2 0xB4D PUSH2 0xAF9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB64 DUP3 PUSH2 0x790 JUMP JUMPDEST SWAP2 POP PUSH2 0xB6F DUP4 PUSH2 0x790 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xB82 JUMPI PUSH2 0xB81 PUSH2 0xA74 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH15 0x95C308CBA440D1AD55E1625689037E 0xAF RETURNDATASIZE CREATE 0xEE JUMPDEST 0x2A JUMPI SHL DUP16 0xD0 0xF9 PUSH10 0xF94E5C64736F6C634300 ADDMOD 0xE STOP CALLER ",
							"sourceMap": "181:1803:2:-:0;;;260:42;237:66;;;;;;;;;;;;;;;;;;;;334:71;;;;;;;;;;;;;;;;;;;;;:::i;:::-;376:10;368:5;;:18;;;;;;;;;;;;;;;;;;397:2;393:1;:6;;;;334:71;181:1803;;88:117:3;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;181:1803:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DCF_ETH_573": {
									"entryPoint": 298,
									"id": 573,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ETH_DCF_622": {
									"entryPoint": 1381,
									"id": 622,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@add_253": {
									"entryPoint": 1865,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_298": {
									"entryPoint": 1887,
									"id": 298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mar_511": {
									"entryPoint": 1112,
									"id": 511,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRouter_453": {
									"entryPoint": 1630,
									"id": 453,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_268": {
									"entryPoint": 1909,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@subscribe_482": {
									"entryPoint": 843,
									"id": 482,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 2251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2444,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2676,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2809,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1931,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6968:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:3"
															},
															"nodeType": "YulIf",
															"src": "470:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:3",
														"type": ""
													}
												],
												"src": "417:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:3",
														"type": ""
													}
												],
												"src": "545:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:3"
															},
															"nodeType": "YulIf",
															"src": "766:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:3",
														"type": ""
													}
												],
												"src": "690:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1090:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1078:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1085:3:3",
														"type": ""
													}
												],
												"src": "1025:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1219:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1231:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1242:4:3",
														"type": ""
													}
												],
												"src": "1149:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:3",
														"type": ""
													}
												],
												"src": "1377:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1554:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1564:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1575:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1536:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1546:7:3",
														"type": ""
													}
												],
												"src": "1509:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:3"
															},
															"nodeType": "YulIf",
															"src": "1664:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:3",
														"type": ""
													}
												],
												"src": "1611:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:3",
														"type": ""
													}
												],
												"src": "1739:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1950:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1996:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:32:3"
															},
															"nodeType": "YulIf",
															"src": "1960:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2089:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:3",
														"type": ""
													}
												],
												"src": "1884:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2261:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2271:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2296:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2289:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2289:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2282:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2271:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2243:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2253:7:3",
														"type": ""
													}
												],
												"src": "2219:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2355:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2409:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2418:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2421:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2411:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2411:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2411:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2378:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2400:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2385:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2385:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2375:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2368:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2368:40:3"
															},
															"nodeType": "YulIf",
															"src": "2365:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2348:5:3",
														"type": ""
													}
												],
												"src": "2315:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2486:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2496:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2518:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2505:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2505:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2496:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2558:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2534:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2534:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2534:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2464:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2472:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2480:5:3",
														"type": ""
													}
												],
												"src": "2437:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2656:388:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2702:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2704:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2704:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2704:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2677:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2686:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2673:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2673:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2698:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2669:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2669:32:3"
															},
															"nodeType": "YulIf",
															"src": "2666:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2795:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2810:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2824:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2814:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2839:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2874:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2885:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2870:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2870:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2894:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2849:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2849:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2839:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2922:115:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2937:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2951:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2941:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2967:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2999:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3010:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2995:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2995:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3019:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2977:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2977:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2967:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2618:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2629:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2641:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2649:6:3",
														"type": ""
													}
												],
												"src": "2576:468:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3115:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3132:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3155:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3137:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3125:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3125:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3125:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3103:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3110:3:3",
														"type": ""
													}
												],
												"src": "3050:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3272:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3282:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3294:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3305:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3290:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3282:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3362:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3375:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3386:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3371:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3371:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3318:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3244:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3256:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3267:4:3",
														"type": ""
													}
												],
												"src": "3174:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3465:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3475:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3490:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3484:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3484:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3475:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3533:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3506:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3506:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3443:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3451:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3459:5:3",
														"type": ""
													}
												],
												"src": "3402:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3628:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3674:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3676:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3676:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3676:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3649:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3658:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3645:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3645:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3641:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:32:3"
															},
															"nodeType": "YulIf",
															"src": "3638:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3767:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3782:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3796:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3786:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3811:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3857:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3868:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3853:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3853:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3877:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3821:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3821:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3811:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3598:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3609:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3621:6:3",
														"type": ""
													}
												],
												"src": "3551:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4034:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4044:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4056:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4067:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4052:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4052:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4044:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4124:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4137:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4148:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4133:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4133:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4080:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4080:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4080:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4205:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4218:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4229:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4214:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4214:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4161:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4161:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4161:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3998:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4010:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4018:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4029:4:3",
														"type": ""
													}
												],
												"src": "3908:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4306:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4316:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4331:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4325:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4325:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4316:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4371:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4347:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4347:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4347:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4284:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4292:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4300:5:3",
														"type": ""
													}
												],
												"src": "4246:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4463:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4509:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4511:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4511:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4511:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4484:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4493:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4480:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4480:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4505:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4476:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4476:32:3"
															},
															"nodeType": "YulIf",
															"src": "4473:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4602:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4617:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4621:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4646:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4689:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4700:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4685:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4685:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4709:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4656:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4656:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4646:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4433:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4444:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4456:6:3",
														"type": ""
													}
												],
												"src": "4389:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4836:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4853:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4858:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4846:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4846:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4874:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4893:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4898:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4889:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4889:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4874:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4808:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4813:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4824:11:3",
														"type": ""
													}
												],
												"src": "4740:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5021:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5043:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5051:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5039:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5039:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5055:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5032:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5032:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5013:6:3",
														"type": ""
													}
												],
												"src": "4915:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5249:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5259:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5325:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5330:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5266:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5266:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5259:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5431:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5342:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5342:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5342:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5444:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5455:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5460:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5451:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5444:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5237:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5245:3:3",
														"type": ""
													}
												],
												"src": "5103:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5646:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5656:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5668:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5679:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5664:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5664:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5656:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5703:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5714:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5699:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5699:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5722:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5728:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5718:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5718:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5692:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5692:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5692:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5748:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5882:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5756:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5756:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5748:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5626:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5641:4:3",
														"type": ""
													}
												],
												"src": "5475:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5928:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5945:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5948:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5938:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5938:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5938:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6042:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6045:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6035:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6035:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6035:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6066:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6069:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6059:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6059:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6059:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5900:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6130:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6140:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6163:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6145:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6145:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6140:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6174:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6197:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6179:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6174:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6337:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6339:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6339:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6339:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6258:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6265:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6333:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6261:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6261:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6255:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:81:3"
															},
															"nodeType": "YulIf",
															"src": "6252:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6369:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6380:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6383:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6376:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6376:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6369:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6117:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6120:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6126:3:3",
														"type": ""
													}
												],
												"src": "6086:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6425:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6442:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6445:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6435:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6435:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6435:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6539:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6542:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6532:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6532:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6532:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6563:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6566:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6556:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6556:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6397:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6625:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6635:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6658:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6640:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6640:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6635:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6669:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6692:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6674:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6674:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6669:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6716:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6718:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6718:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6718:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6713:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6706:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6706:9:3"
															},
															"nodeType": "YulIf",
															"src": "6703:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6748:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6757:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6760:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6753:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6753:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6748:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6614:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6617:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6623:1:3",
														"type": ""
													}
												],
												"src": "6583:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6819:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6829:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6852:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6834:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6834:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6829:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6863:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6886:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6868:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6863:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6910:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6912:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6912:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6912:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6904:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6907:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6901:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6901:8:3"
															},
															"nodeType": "YulIf",
															"src": "6898:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6942:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6954:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6957:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6950:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6950:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6942:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6805:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6808:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6814:4:3",
														"type": ""
													}
												],
												"src": "6774:191:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80633a23bf491461004f57806341a7726a1461008c5780636f515f3d146100a857806397dedb1d146100c4578063c3c6467414610101575b600080fd5b34801561005b57600080fd5b50610076600480360381019061007191906107c6565b61012a565b6040516100839190610802565b60405180910390f35b6100a660048036038101906100a1919061087b565b61034b565b005b6100c260048036038101906100bd919061087b565b610458565b005b3480156100d057600080fd5b506100eb60048036038101906100e691906107c6565b610565565b6040516100f89190610802565b60405180910390f35b34801561010d57600080fd5b50610128600480360381019061012391906108e0565b61065e565b005b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161018c919061092f565b602060405180830381865afa1580156101a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cd919061095f565b905060006101e4858361074990919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610251573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610275919061095f565b81111561030e5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030b919061095f565b90505b60006103258260015461075f90919063ffffffff16565b9050600061033c828661077590919063ffffffff16565b90508095505050505050919050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103a857600080fd5b60006103b334610565565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161041092919061098c565b6020604051808303816000875af115801561042f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045391906109ca565b505050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146104b557600080fd5b60006104c034610565565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b815260040161051d92919061098c565b6020604051808303816000875af115801561053c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056091906109ca565b505050565b60008047905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105c7919061092f565b602060405180830381865afa1580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610608919061095f565b9050600061061f858461074990919063ffffffff16565b905060006106388260015461075f90919063ffffffff16565b9050600061064f828561077590919063ffffffff16565b90508095505050505050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e590610a54565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600081836107579190610aa3565b905092915050565b6000818361076d9190610b28565b905092915050565b600081836107839190610b59565b905092915050565b600080fd5b6000819050919050565b6107a381610790565b81146107ae57600080fd5b50565b6000813590506107c08161079a565b92915050565b6000602082840312156107dc576107db61078b565b5b60006107ea848285016107b1565b91505092915050565b6107fc81610790565b82525050565b600060208201905061081760008301846107f3565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108488261081d565b9050919050565b6108588161083d565b811461086357600080fd5b50565b6000813590506108758161084f565b92915050565b6000602082840312156108915761089061078b565b5b600061089f84828501610866565b91505092915050565b60008115159050919050565b6108bd816108a8565b81146108c857600080fd5b50565b6000813590506108da816108b4565b92915050565b600080604083850312156108f7576108f661078b565b5b600061090585828601610866565b9250506020610916858286016108cb565b9150509250929050565b6109298161083d565b82525050565b60006020820190506109446000830184610920565b92915050565b6000815190506109598161079a565b92915050565b6000602082840312156109755761097461078b565b5b60006109838482850161094a565b91505092915050565b60006040820190506109a16000830185610920565b6109ae60208301846107f3565b9392505050565b6000815190506109c4816108b4565b92915050565b6000602082840312156109e0576109df61078b565b5b60006109ee848285016109b5565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610a3e6020836109f7565b9150610a4982610a08565b602082019050919050565b60006020820190508181036000830152610a6d81610a31565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aae82610790565b9150610ab983610790565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610aee57610aed610a74565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b3382610790565b9150610b3e83610790565b925082610b4e57610b4d610af9565b5b828204905092915050565b6000610b6482610790565b9150610b6f83610790565b925082821015610b8257610b81610a74565b5b82820390509291505056fea2646970667358221220be6e95c308cba440d1ad55e1625689037eaf3df0ee5b2a571b8fd0f969f94e5c64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3A23BF49 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x41A7726A EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x6F515F3D EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x97DEDB1D EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0xC3C64674 EQ PUSH2 0x101 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x87B JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E4 DUP6 DUP4 PUSH2 0x749 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x251 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x325 DUP3 PUSH1 0x1 SLOAD PUSH2 0x75F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x33C DUP3 DUP7 PUSH2 0x775 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3B3 CALLVALUE PUSH2 0x565 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x410 SWAP3 SWAP2 SWAP1 PUSH2 0x98C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x42F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4C0 CALLVALUE PUSH2 0x565 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51D SWAP3 SWAP2 SWAP1 PUSH2 0x98C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x53C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x9CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C7 SWAP2 SWAP1 PUSH2 0x92F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x61F DUP6 DUP5 PUSH2 0x749 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x638 DUP3 PUSH1 0x1 SLOAD PUSH2 0x75F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x64F DUP3 DUP6 PUSH2 0x775 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E5 SWAP1 PUSH2 0xA54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x757 SWAP2 SWAP1 PUSH2 0xAA3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x76D SWAP2 SWAP1 PUSH2 0xB28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x783 SWAP2 SWAP1 PUSH2 0xB59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A3 DUP2 PUSH2 0x790 JUMP JUMPDEST DUP2 EQ PUSH2 0x7AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7C0 DUP2 PUSH2 0x79A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DC JUMPI PUSH2 0x7DB PUSH2 0x78B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP5 DUP3 DUP6 ADD PUSH2 0x7B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7FC DUP2 PUSH2 0x790 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x817 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x848 DUP3 PUSH2 0x81D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x858 DUP2 PUSH2 0x83D JUMP JUMPDEST DUP2 EQ PUSH2 0x863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x875 DUP2 PUSH2 0x84F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x891 JUMPI PUSH2 0x890 PUSH2 0x78B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x89F DUP5 DUP3 DUP6 ADD PUSH2 0x866 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BD DUP2 PUSH2 0x8A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x8C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8DA DUP2 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8F7 JUMPI PUSH2 0x8F6 PUSH2 0x78B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x905 DUP6 DUP3 DUP7 ADD PUSH2 0x866 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x916 DUP6 DUP3 DUP7 ADD PUSH2 0x8CB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x929 DUP2 PUSH2 0x83D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x944 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x920 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x959 DUP2 PUSH2 0x79A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x975 JUMPI PUSH2 0x974 PUSH2 0x78B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x983 DUP5 DUP3 DUP6 ADD PUSH2 0x94A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9A1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x9AE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7F3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9C4 DUP2 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E0 JUMPI PUSH2 0x9DF PUSH2 0x78B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9EE DUP5 DUP3 DUP6 ADD PUSH2 0x9B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3E PUSH1 0x20 DUP4 PUSH2 0x9F7 JUMP JUMPDEST SWAP2 POP PUSH2 0xA49 DUP3 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA6D DUP2 PUSH2 0xA31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAAE DUP3 PUSH2 0x790 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB9 DUP4 PUSH2 0x790 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0xA74 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB33 DUP3 PUSH2 0x790 JUMP JUMPDEST SWAP2 POP PUSH2 0xB3E DUP4 PUSH2 0x790 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB4E JUMPI PUSH2 0xB4D PUSH2 0xAF9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB64 DUP3 PUSH2 0x790 JUMP JUMPDEST SWAP2 POP PUSH2 0xB6F DUP4 PUSH2 0x790 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xB82 JUMPI PUSH2 0xB81 PUSH2 0xA74 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH15 0x95C308CBA440D1AD55E1625689037E 0xAF RETURNDATASIZE CREATE 0xEE JUMPDEST 0x2A JUMPI SHL DUP16 0xD0 0xF9 PUSH10 0xF94E5C64736F6C634300 ADDMOD 0xE STOP CALLER ",
							"sourceMap": "181:1803:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1134:461;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;713:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;927:199;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1603:358;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;605:100;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1134:461;1190:7;1205:19;1227:21;1205:43;;1255:19;1277:5;;;;;;;;;;;:15;;;1301:4;1277:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1255:52;;1318:20;1341:27;1357:10;1341:11;:15;;:27;;;;:::i;:::-;1318:50;;1395:5;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1380:12;:34;1377:89;;;1439:5;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1424:34;;1377:89;1474:20;1497:19;1503:12;1497:1;;:5;;:19;;;;:::i;:::-;1474:42;;1523:14;1540:29;1556:12;1540:11;:15;;:29;;;;:::i;:::-;1523:46;;1583:6;1576:13;;;;;;;1134:461;;;:::o;713:205::-;811:4;784:31;;:11;:23;796:10;784:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;776:40;;;;;;825:18;846;854:9;846:7;:18::i;:::-;825:39;;873:5;;;;;;;;;;:14;;;888:10;899;873:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;767:151;713:205;:::o;927:199::-;1019:4;992:31;;:11;:23;1004:10;992:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;984:40;;;;;;1033:18;1054;1062:9;1054:7;:18::i;:::-;1033:39;;1081:5;;;;;;;;;;:14;;;1096:10;1107;1081:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;975:151;927:199;:::o;1603:358::-;1659:7;1674:19;1696:21;1674:43;;1724:19;1746:5;;;;;;;;;;;:15;;;1770:4;1746:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1724:52;;1783:20;1806:27;1822:10;1806:11;:15;;:27;;;;:::i;:::-;1783:50;;1840:20;1863:19;1869:12;1863:1;;:5;;:19;;;;:::i;:::-;1840:42;;1889:14;1906:29;1922:12;1906:11;:15;;:29;;;;:::i;:::-;1889:46;;1949:6;1942:13;;;;;;;1603:358;;;:::o;605:100::-;528:10;519:19;;:5;;;;;;;;;;;:19;;;511:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;694:5:::1;674:11;:17;686:4;674:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;605:100:::0;;:::o;2755:96:1:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:90::-;2253:7;2296:5;2289:13;2282:21;2271:32;;2219:90;;;:::o;2315:116::-;2385:21;2400:5;2385:21;:::i;:::-;2378:5;2375:32;2365:60;;2421:1;2418;2411:12;2365:60;2315:116;:::o;2437:133::-;2480:5;2518:6;2505:20;2496:29;;2534:30;2558:5;2534:30;:::i;:::-;2437:133;;;;:::o;2576:468::-;2641:6;2649;2698:2;2686:9;2677:7;2673:23;2669:32;2666:119;;;2704:79;;:::i;:::-;2666:119;2824:1;2849:53;2894:7;2885:6;2874:9;2870:22;2849:53;:::i;:::-;2839:63;;2795:117;2951:2;2977:50;3019:7;3010:6;2999:9;2995:22;2977:50;:::i;:::-;2967:60;;2922:115;2576:468;;;;;:::o;3050:118::-;3137:24;3155:5;3137:24;:::i;:::-;3132:3;3125:37;3050:118;;:::o;3174:222::-;3267:4;3305:2;3294:9;3290:18;3282:26;;3318:71;3386:1;3375:9;3371:17;3362:6;3318:71;:::i;:::-;3174:222;;;;:::o;3402:143::-;3459:5;3490:6;3484:13;3475:22;;3506:33;3533:5;3506:33;:::i;:::-;3402:143;;;;:::o;3551:351::-;3621:6;3670:2;3658:9;3649:7;3645:23;3641:32;3638:119;;;3676:79;;:::i;:::-;3638:119;3796:1;3821:64;3877:7;3868:6;3857:9;3853:22;3821:64;:::i;:::-;3811:74;;3767:128;3551:351;;;;:::o;3908:332::-;4029:4;4067:2;4056:9;4052:18;4044:26;;4080:71;4148:1;4137:9;4133:17;4124:6;4080:71;:::i;:::-;4161:72;4229:2;4218:9;4214:18;4205:6;4161:72;:::i;:::-;3908:332;;;;;:::o;4246:137::-;4300:5;4331:6;4325:13;4316:22;;4347:30;4371:5;4347:30;:::i;:::-;4246:137;;;;:::o;4389:345::-;4456:6;4505:2;4493:9;4484:7;4480:23;4476:32;4473:119;;;4511:79;;:::i;:::-;4473:119;4631:1;4656:61;4709:7;4700:6;4689:9;4685:22;4656:61;:::i;:::-;4646:71;;4602:125;4389:345;;;;:::o;4740:169::-;4824:11;4858:6;4853:3;4846:19;4898:4;4893:3;4889:14;4874:29;;4740:169;;;;:::o;4915:182::-;5055:34;5051:1;5043:6;5039:14;5032:58;4915:182;:::o;5103:366::-;5245:3;5266:67;5330:2;5325:3;5266:67;:::i;:::-;5259:74;;5342:93;5431:3;5342:93;:::i;:::-;5460:2;5455:3;5451:12;5444:19;;5103:366;;;:::o;5475:419::-;5641:4;5679:2;5668:9;5664:18;5656:26;;5728:9;5722:4;5718:20;5714:1;5703:9;5699:17;5692:47;5756:131;5882:4;5756:131;:::i;:::-;5748:139;;5475:419;;;:::o;5900:180::-;5948:77;5945:1;5938:88;6045:4;6042:1;6035:15;6069:4;6066:1;6059:15;6086:305;6126:3;6145:20;6163:1;6145:20;:::i;:::-;6140:25;;6179:20;6197:1;6179:20;:::i;:::-;6174:25;;6333:1;6265:66;6261:74;6258:1;6255:81;6252:107;;;6339:18;;:::i;:::-;6252:107;6383:1;6380;6376:9;6369:16;;6086:305;;;;:::o;6397:180::-;6445:77;6442:1;6435:88;6542:4;6539:1;6532:15;6566:4;6563:1;6556:15;6583:185;6623:1;6640:20;6658:1;6640:20;:::i;:::-;6635:25;;6674:20;6692:1;6674:20;:::i;:::-;6669:25;;6713:1;6703:35;;6718:18;;:::i;:::-;6703:35;6760:1;6757;6753:9;6748:14;;6583:185;;;;:::o;6774:191::-;6814:4;6834:20;6852:1;6834:20;:::i;:::-;6829:25;;6868:20;6886:1;6868:20;:::i;:::-;6863:25;;6907:1;6904;6901:8;6898:34;;;6912:18;;:::i;:::-;6898:34;6957:1;6954;6950:9;6942:17;;6774:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "602200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DCF_ETH(uint256)": "infinite",
								"ETH_DCF(uint256)": "infinite",
								"mar(address)": "infinite",
								"setRouter(address,bool)": "27227",
								"subscribe(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 1984,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 181,
									"end": 1984,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 181,
									"end": 1984,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 260,
									"end": 302,
									"name": "PUSH",
									"source": 2,
									"value": "D14FF067355CE838A6E110BDFB672DBEC83CA23C"
								},
								{
									"begin": 237,
									"end": 303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 237,
									"end": 303,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 237,
									"end": 303,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 237,
									"end": 303,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 237,
									"end": 303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 237,
									"end": 303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 334,
									"end": 405,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 334,
									"end": 405,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 405,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 334,
									"end": 405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 405,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 376,
									"end": 386,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 368,
									"end": 373,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 368,
									"end": 373,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 368,
									"end": 386,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 368,
									"end": 386,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 368,
									"end": 386,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 368,
									"end": 386,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 368,
									"end": 386,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 397,
									"end": 399,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 393,
									"end": 394,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 393,
									"end": 399,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 393,
									"end": 399,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 393,
									"end": 399,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 393,
									"end": 399,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 405,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1984,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 181,
									"end": 1984,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 181,
									"end": 1984,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 181,
									"end": 1984,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1984,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1984,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1984,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1984,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1984,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 181,
									"end": 1984,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1984,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be6e95c308cba440d1ad55e1625689037eaf3df0ee5b2a571b8fd0f969f94e5c64736f6c634300080e0033",
									".code": [
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH",
											"source": 2,
											"value": "3A23BF49"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH",
											"source": 2,
											"value": "41A7726A"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH",
											"source": 2,
											"value": "6F515F3D"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH",
											"source": 2,
											"value": "97DEDB1D"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH",
											"source": 2,
											"value": "C3C64674"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 181,
											"end": 1984,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1134,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1134,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1134,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 713,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 713,
											"end": 918,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 713,
											"end": 918,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 713,
											"end": 918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 713,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 713,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 713,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 713,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 927,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 927,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1603,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1603,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1603,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 605,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 605,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1197,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1227,
											"end": 1248,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1248,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1255,
											"end": 1274,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1292,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1292,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1292,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1301,
											"end": 1305,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1277,
											"end": 1307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1277,
											"end": 1307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1255,
											"end": 1307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1255,
											"end": 1307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1357,
											"end": 1367,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1352,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1341,
											"end": 1356,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1368,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1368,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1341,
											"end": 1368,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1368,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1341,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1412,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1412,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1412,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1395,
											"end": 1414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1392,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1414,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1466,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1377,
											"end": 1466,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1439,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1424,
											"end": 1458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1424,
											"end": 1458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1466,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1377,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1474,
											"end": 1494,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1503,
											"end": 1515,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1497,
											"end": 1502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1516,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1497,
											"end": 1516,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1516,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1497,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1474,
											"end": 1516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1474,
											"end": 1516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1556,
											"end": 1568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1551,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1540,
											"end": 1555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1569,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1540,
											"end": 1569,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1569,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1540,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1589,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1589,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 713,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 815,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 784,
											"end": 815,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 784,
											"end": 815,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 784,
											"end": 795,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 806,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 784,
											"end": 807,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 784,
											"end": 807,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 784,
											"end": 815,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 784,
											"end": 815,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 784,
											"end": 815,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 776,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 776,
											"end": 816,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 776,
											"end": 816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 776,
											"end": 816,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 776,
											"end": 816,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 776,
											"end": 816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 854,
											"end": 863,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 846,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 846,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 846,
											"end": 864,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 846,
											"end": 864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 825,
											"end": 864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 878,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 878,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 878,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 878,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 873,
											"end": 878,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 878,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 873,
											"end": 878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 873,
											"end": 878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 873,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 873,
											"end": 887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 873,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 888,
											"end": 898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 899,
											"end": 909,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 873,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 873,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 873,
											"end": 910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 873,
											"end": 910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 767,
											"end": 918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 713,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1023,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1003,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1014,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1023,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 984,
											"end": 1024,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 1024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1024,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1024,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 984,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1054,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1062,
											"end": 1071,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1054,
											"end": 1072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1072,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1054,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1033,
											"end": 1072,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1033,
											"end": 1072,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1086,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1086,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1086,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1081,
											"end": 1086,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1086,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1086,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1081,
											"end": 1086,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1095,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1081,
											"end": 1095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1095,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1096,
											"end": 1106,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1117,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1081,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1081,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 975,
											"end": 1126,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1696,
											"end": 1717,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1674,
											"end": 1717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1761,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1770,
											"end": 1774,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1746,
											"end": 1776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1746,
											"end": 1776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1746,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1724,
											"end": 1776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1822,
											"end": 1832,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1806,
											"end": 1821,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1833,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1833,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1806,
											"end": 1833,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1806,
											"end": 1833,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1806,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1869,
											"end": 1881,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1864,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1863,
											"end": 1864,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1863,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 1903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1922,
											"end": 1934,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 1917,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1906,
											"end": 1921,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 1935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 1935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 1935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1603,
											"end": 1961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 605,
											"end": 705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 528,
											"end": 538,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 519,
											"end": 538,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 538,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 519,
											"end": 524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 519,
											"end": 538,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 538,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 519,
											"end": 538,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 511,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 511,
											"end": 575,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 511,
											"end": 575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 694,
											"end": 699,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 674,
											"end": 685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 690,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 674,
											"end": 691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 674,
											"end": 699,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 605,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2289,
											"end": 2302,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2282,
											"end": 2303,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2219,
											"end": 2309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2431,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2315,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2385,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2400,
											"end": 2405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2385,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2385,
											"end": 2406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2385,
											"end": 2406,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2385,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2378,
											"end": 2383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2407,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2365,
											"end": 2425,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2421,
											"end": 2422,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2411,
											"end": 2423,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2425,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2365,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2431,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2570,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2437,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2485,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2505,
											"end": 2525,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2525,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2525,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2534,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2558,
											"end": 2563,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2534,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2534,
											"end": 2564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2534,
											"end": 2564,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2534,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2570,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2570,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3044,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2576,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2641,
											"end": 2647,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2655,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2698,
											"end": 2700,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2695,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2684,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2696,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2669,
											"end": 2701,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2666,
											"end": 2785,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2666,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2666,
											"end": 2785,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2704,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2704,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2704,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2704,
											"end": 2783,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2704,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2666,
											"end": 2785,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2666,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2825,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2894,
											"end": 2901,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2885,
											"end": 2891,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2883,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2870,
											"end": 2892,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2849,
											"end": 2902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2902,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2849,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2902,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 2953,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3026,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3010,
											"end": 3016,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2999,
											"end": 3008,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3017,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2977,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2977,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2977,
											"end": 3027,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2977,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 3027,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2967,
											"end": 3027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 3037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3044,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3044,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3168,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3050,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3155,
											"end": 3160,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3137,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3161,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3137,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3135,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3162,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3396,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3174,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3267,
											"end": 3271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3307,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3303,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3282,
											"end": 3308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3282,
											"end": 3308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3318,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3386,
											"end": 3387,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3384,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3388,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3362,
											"end": 3368,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3318,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3318,
											"end": 3389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3318,
											"end": 3389,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3318,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3396,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3396,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3174,
											"end": 3396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3545,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3402,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3496,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3497,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3533,
											"end": 3538,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3506,
											"end": 3539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3545,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3402,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3902,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3551,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3658,
											"end": 3667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3649,
											"end": 3656,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3668,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3673,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3757,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3638,
											"end": 3757,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3676,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3676,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3757,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3638,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3796,
											"end": 3797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3877,
											"end": 3884,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3868,
											"end": 3874,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3866,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3853,
											"end": 3875,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3821,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3821,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3821,
											"end": 3885,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3821,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3767,
											"end": 3895,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3902,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3902,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3902,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4240,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3908,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4069,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4056,
											"end": 4065,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4044,
											"end": 4070,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4044,
											"end": 4070,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4080,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4148,
											"end": 4149,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4133,
											"end": 4150,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4124,
											"end": 4130,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4080,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4080,
											"end": 4151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4080,
											"end": 4151,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 4080,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4229,
											"end": 4231,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4218,
											"end": 4227,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4205,
											"end": 4211,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4161,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4233,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4161,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4240,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4240,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4240,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 4240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4383,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4246,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4300,
											"end": 4305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 4337,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4325,
											"end": 4338,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4316,
											"end": 4338,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4316,
											"end": 4338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4347,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4371,
											"end": 4376,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4347,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4347,
											"end": 4377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4347,
											"end": 4377,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4347,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4383,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4246,
											"end": 4383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4734,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4389,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4456,
											"end": 4462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4505,
											"end": 4507,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4493,
											"end": 4502,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4484,
											"end": 4491,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4480,
											"end": 4503,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4508,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4473,
											"end": 4592,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4473,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4473,
											"end": 4592,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4511,
											"end": 4590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4511,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4473,
											"end": 4592,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4473,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4656,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4709,
											"end": 4716,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4700,
											"end": 4706,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 4698,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4685,
											"end": 4707,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4656,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4656,
											"end": 4717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4656,
											"end": 4717,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4656,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4646,
											"end": 4717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4646,
											"end": 4717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4602,
											"end": 4727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4734,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4734,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4734,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4734,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4740,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4740,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4824,
											"end": 4835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4856,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4846,
											"end": 4865,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4898,
											"end": 4902,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4893,
											"end": 4896,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4889,
											"end": 4903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 4903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 4903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4740,
											"end": 4909,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4740,
											"end": 4909,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4740,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4740,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4740,
											"end": 4909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4915,
											"end": 5097,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4915,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5055,
											"end": 5089,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5049,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5053,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5032,
											"end": 5090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4915,
											"end": 5097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4915,
											"end": 5097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5469,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5103,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5248,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5266,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5330,
											"end": 5332,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5328,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5266,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5266,
											"end": 5333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5266,
											"end": 5333,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5266,
											"end": 5333,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5333,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5333,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5342,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5431,
											"end": 5434,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5342,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 5342,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5342,
											"end": 5435,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5342,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5460,
											"end": 5462,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5455,
											"end": 5458,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5451,
											"end": 5463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5469,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5103,
											"end": 5469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5894,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5475,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5641,
											"end": 5645,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5681,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5677,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5682,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5728,
											"end": 5737,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5722,
											"end": 5726,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5718,
											"end": 5738,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5714,
											"end": 5715,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5712,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5699,
											"end": 5716,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5692,
											"end": 5739,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5756,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 5882,
											"end": 5886,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5756,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 5756,
											"end": 5887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5756,
											"end": 5887,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 5756,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5887,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5894,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5475,
											"end": 5894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5900,
											"end": 6080,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5900,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5948,
											"end": 6025,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5945,
											"end": 5946,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 6026,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6045,
											"end": 6049,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6042,
											"end": 6043,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6035,
											"end": 6050,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6069,
											"end": 6073,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6066,
											"end": 6067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6059,
											"end": 6074,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6391,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 6086,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6126,
											"end": 6129,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 6163,
											"end": 6164,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 6145,
											"end": 6165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6140,
											"end": 6165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6140,
											"end": 6165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6179,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 6197,
											"end": 6198,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6179,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 6179,
											"end": 6199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6179,
											"end": 6199,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 6179,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6174,
											"end": 6199,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6174,
											"end": 6199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6265,
											"end": 6331,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6261,
											"end": 6335,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6258,
											"end": 6259,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6255,
											"end": 6336,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6252,
											"end": 6359,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6252,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 6252,
											"end": 6359,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 6339,
											"end": 6357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6252,
											"end": 6359,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 6252,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6383,
											"end": 6384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6380,
											"end": 6381,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6385,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6369,
											"end": 6385,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6369,
											"end": 6385,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6391,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6391,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6391,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6397,
											"end": 6577,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6397,
											"end": 6577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6445,
											"end": 6522,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6442,
											"end": 6443,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6435,
											"end": 6523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6542,
											"end": 6546,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 6539,
											"end": 6540,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6532,
											"end": 6547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6570,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6563,
											"end": 6564,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6556,
											"end": 6571,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6583,
											"end": 6768,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6583,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6623,
											"end": 6624,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6640,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 6658,
											"end": 6659,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6640,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 6640,
											"end": 6660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6640,
											"end": 6660,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 6640,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6635,
											"end": 6660,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6635,
											"end": 6660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 6692,
											"end": 6693,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 6674,
											"end": 6694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6694,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 6674,
											"end": 6694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6669,
											"end": 6694,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6669,
											"end": 6694,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6713,
											"end": 6714,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6703,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6703,
											"end": 6738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6718,
											"end": 6736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6703,
											"end": 6738,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6703,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6760,
											"end": 6761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6757,
											"end": 6758,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6753,
											"end": 6762,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 6748,
											"end": 6762,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6748,
											"end": 6762,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6583,
											"end": 6768,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6583,
											"end": 6768,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6583,
											"end": 6768,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6583,
											"end": 6768,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6583,
											"end": 6768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6774,
											"end": 6965,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 6774,
											"end": 6965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 6852,
											"end": 6853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 6834,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6854,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 6834,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6829,
											"end": 6854,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6829,
											"end": 6854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6886,
											"end": 6887,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 6868,
											"end": 6888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6863,
											"end": 6888,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6863,
											"end": 6888,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6907,
											"end": 6908,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6904,
											"end": 6905,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6901,
											"end": 6909,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6898,
											"end": 6932,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6898,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 6898,
											"end": 6932,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 6912,
											"end": 6930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6898,
											"end": 6932,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 6898,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6957,
											"end": 6958,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6954,
											"end": 6955,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6950,
											"end": 6959,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6942,
											"end": 6959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6942,
											"end": 6959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6774,
											"end": 6965,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6774,
											"end": 6965,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6774,
											"end": 6965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6774,
											"end": 6965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6774,
											"end": 6965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Dcoffer/treasury.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DCF_ETH(uint256)": "3a23bf49",
							"ETH_DCF(uint256)": "97dedb1d",
							"mar(address)": "6f515f3d",
							"setRouter(address,bool)": "c3c64674",
							"subscribe(address)": "41a7726a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_k\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dcf_amount\",\"type\":\"uint256\"}],\"name\":\"DCF_ETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"ETH_DCF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"mar\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"power\",\"type\":\"bool\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"subscribe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Dcoffer/treasury.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Dcoffer/treasury.sol\":{\"keccak256\":\"0xb03d4c3e1d7d976b6fe0bf770694463d37b2e888714196becf73f53bbeb6f61d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d64d708097d5f27ecd105ba5a6f9ea360f69d95fbabb7ae201ddc233db320e4f\",\"dweb:/ipfs/QmdGaU1Pcj9Fn5LzN1AdAYkW5hifPfM6P7wRdTn3KXidHA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 402,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "dcoff",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 404,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "K",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 421,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 425,
								"contract": "Dcoffer/treasury.sol:treasury",
								"label": "RouterAdmin",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5084:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5126:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5131:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5134:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5168:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5161:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4981:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5000:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5019:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:1"
									},
									"scope": 389,
									"src": "4959:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5799:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5841:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5848:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5886:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5875:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5696:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5715:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5734:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5790:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:1"
									},
									"scope": 389,
									"src": "5674:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6675:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6717:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6724:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6751:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6572:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6591:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6610:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6666:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:1"
									},
									"scope": 389,
									"src": "6550:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6300:1",
							"usedErrors": []
						}
					],
					"src": "107:6676:1"
				},
				"id": 1
			},
			"Dcoffer/treasury.sol": {
				"ast": {
					"absolutePath": "Dcoffer/treasury.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						],
						"treasury": [
							623
						]
					},
					"id": 624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 78,
							"src": "60:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 390,
							"src": "118:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 623,
							"linearizedBaseContracts": [
								623
							],
							"name": "treasury",
							"nameLocation": "190:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 396,
									"libraryName": {
										"id": 394,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "211:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "205:24:2",
									"typeName": {
										"id": 395,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "224:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 402,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "244:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "237:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 398,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 397,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "237:6:2"
										},
										"referencedDeclaration": 77,
										"src": "237:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307864313466663036373335354365383338413665313130624446623637324462456338336341323343",
												"id": 400,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "260:42:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xd14ff067355Ce838A6e110bDFb672DbEc83cA23C"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 399,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 77,
											"src": "253:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 401,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "253:50:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 404,
									"mutability": "mutable",
									"name": "K",
									"nameLocation": "326:1:2",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "310:17:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 403,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "310:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "361:44:2",
										"statements": [
											{
												"expression": {
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 409,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "368:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 410,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "376:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "376:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "368:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "368:18:2"
											},
											{
												"expression": {
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 414,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "393:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 415,
														"name": "_k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "397:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "393:6:2"
											}
										]
									},
									"id": 419,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "_k",
												"nameLocation": "351:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "346:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "346:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:9:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:0:2"
									},
									"scope": 623,
									"src": "334:71:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 421,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "419:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "411:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 420,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "411:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "RouterAdmin",
									"nameLocation": "461:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 623,
									"src": "429:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 424,
										"keyType": {
											"id": 422,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "437:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "429:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 423,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "448:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "500:93:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 428,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "519:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 429,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "528:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "528:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "519:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "540:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "511:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "511:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "511:64:2"
											},
											{
												"id": 435,
												"nodeType": "PlaceholderStatement",
												"src": "586:1:2"
											}
										]
									},
									"id": 437,
									"name": "onlyOwner",
									"nameLocation": "488:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "497:2:2"
									},
									"src": "479:114:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "667:38:2",
										"statements": [
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 446,
															"name": "RouterAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "674:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 448,
														"indexExpression": {
															"id": 447,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "686:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "674:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 449,
														"name": "power",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "694:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "674:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "674:25:2"
											}
										]
									},
									"functionSelector": "c3c64674",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 444,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 443,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "658:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "658:9:2"
										}
									],
									"name": "setRouter",
									"nameLocation": "614:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "632:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "624:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "power",
												"nameLocation": "643:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "638:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "638:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:26:2"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "667:0:2"
									},
									"scope": 623,
									"src": "605:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "767:151:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 459,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "784:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 462,
																"indexExpression": {
																	"expression": {
																		"id": 460,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "796:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "796:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "784:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "811:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "784:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "776:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "776:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "776:40:2"
											},
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "833:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "825:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 467,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "825:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 470,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "854:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "854:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 469,
														"name": "ETH_DCF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "846:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "846:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "825:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "subscriber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "888:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "899:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 474,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "873:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "873:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "873:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "873:37:2"
											}
										]
									},
									"functionSelector": "41a7726a",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "subscribe",
									"nameLocation": "722:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "subscriber",
												"nameLocation": "740:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "732:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "731:20:2"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "767:0:2"
									},
									"scope": 623,
									"src": "713:205:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "975:151:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 488,
																	"name": "RouterAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "992:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 491,
																"indexExpression": {
																	"expression": {
																		"id": 489,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1004:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1004:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "992:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1019:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "992:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 487,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "984:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "984:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "984:40:2"
											},
											{
												"assignments": [
													497
												],
												"declarations": [
													{
														"constant": false,
														"id": 497,
														"mutability": "mutable",
														"name": "dcf_amount",
														"nameLocation": "1041:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 510,
														"src": "1033:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 496,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1033:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 499,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1062:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1062:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 498,
														"name": "ETH_DCF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "1054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1054:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1033:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 506,
															"name": "subscriber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "1096:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 507,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "1107:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 503,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1081:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1081:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "1081:37:2"
											}
										]
									},
									"functionSelector": "6f515f3d",
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mar",
									"nameLocation": "936:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "subscriber",
												"nameLocation": "948:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "940:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:20:2"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:0:2"
									},
									"scope": 623,
									"src": "927:199:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "1198:397:2",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "1213:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "1205:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1205:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 522,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1235:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_treasury_$623",
																	"typeString": "contract treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_treasury_$623",
																	"typeString": "contract treasury"
																}
															],
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1227:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 520,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1227:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1227:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1227:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1205:43:2"
											},
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "1263:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "1255:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1255:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 532,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1301:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$623",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$623",
																		"typeString": "contract treasury"
																	}
																],
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1293:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 530,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1293:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1293:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 528,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1277:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1277:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1277:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1255:52:2"
											},
											{
												"assignments": [
													537
												],
												"declarations": [
													{
														"constant": false,
														"id": 537,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "1326:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "1318:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 536,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1318:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 542,
												"initialValue": {
													"arguments": [
														{
															"id": 540,
															"name": "dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "1357:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 538,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "1341:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "1341:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1341:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1318:50:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 543,
														"name": "Variable_dcf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "1380:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 544,
																"name": "dcoff",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "1395:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "1395:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1395:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1380:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 555,
												"nodeType": "IfStatement",
												"src": "1377:89:2",
												"trueBody": {
													"id": 554,
													"nodeType": "Block",
													"src": "1415:51:2",
													"statements": [
														{
															"expression": {
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 548,
																	"name": "Variable_dcf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "1424:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 549,
																			"name": "dcoff",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "1439:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 26,
																		"src": "1439:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1439:19:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1424:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 553,
															"nodeType": "ExpressionStatement",
															"src": "1424:34:2"
														}
													]
												}
											},
											{
												"assignments": [
													557
												],
												"declarations": [
													{
														"constant": false,
														"id": 557,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "1482:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "1474:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 556,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1474:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 562,
												"initialValue": {
													"arguments": [
														{
															"id": 560,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "1503:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 558,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "1497:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1497:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1497:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1474:42:2"
											},
											{
												"assignments": [
													564
												],
												"declarations": [
													{
														"constant": false,
														"id": 564,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "1531:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "1523:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1523:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 569,
												"initialValue": {
													"arguments": [
														{
															"id": 567,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "1556:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 565,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "1540:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1540:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1540:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1523:46:2"
											},
											{
												"expression": {
													"id": 570,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 564,
													"src": "1583:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 517,
												"id": 571,
												"nodeType": "Return",
												"src": "1576:13:2"
											}
										]
									},
									"functionSelector": "3a23bf49",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DCF_ETH",
									"nameLocation": "1143:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "dcf_amount",
												"nameLocation": "1159:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "1151:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:20:2"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "1190:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:9:2"
									},
									"scope": 623,
									"src": "1134:461:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "1667:294:2",
										"statements": [
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "_eth_amount",
														"nameLocation": "1682:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "1674:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1674:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 584,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1704:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_treasury_$623",
																	"typeString": "contract treasury"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_treasury_$623",
																	"typeString": "contract treasury"
																}
															],
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1696:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 582,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1696:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1696:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1696:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1674:43:2"
											},
											{
												"assignments": [
													589
												],
												"declarations": [
													{
														"constant": false,
														"id": 589,
														"mutability": "mutable",
														"name": "_dcf_amount",
														"nameLocation": "1732:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "1724:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 588,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1724:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 594,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1770:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_treasury_$623",
																		"typeString": "contract treasury"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_treasury_$623",
																		"typeString": "contract treasury"
																	}
																],
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1762:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 592,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1762:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1762:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 590,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "1746:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "1746:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1724:52:2"
											},
											{
												"assignments": [
													599
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "Variable_eth",
														"nameLocation": "1791:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "1783:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 598,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1783:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 604,
												"initialValue": {
													"arguments": [
														{
															"id": 602,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "1822:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 600,
															"name": "_eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "1806:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 253,
														"src": "1806:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1806:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1783:50:2"
											},
											{
												"assignments": [
													606
												],
												"declarations": [
													{
														"constant": false,
														"id": 606,
														"mutability": "mutable",
														"name": "Variable_dcf",
														"nameLocation": "1848:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "1840:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 605,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"arguments": [
														{
															"id": 609,
															"name": "Variable_eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "1869:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 607,
															"name": "K",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "1863:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "1863:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1863:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1840:42:2"
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "_price",
														"nameLocation": "1897:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "1889:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1889:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 616,
															"name": "Variable_dcf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "1922:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 614,
															"name": "_dcf_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "1906:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "1906:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1906:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1889:46:2"
											},
											{
												"expression": {
													"id": 619,
													"name": "_price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 613,
													"src": "1949:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 579,
												"id": 620,
												"nodeType": "Return",
												"src": "1942:13:2"
											}
										]
									},
									"functionSelector": "97dedb1d",
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ETH_DCF",
									"nameLocation": "1612:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "1628:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1620:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:20:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1659:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1658:9:2"
									},
									"scope": 623,
									"src": "1603:358:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 624,
							"src": "181:1803:2",
							"usedErrors": []
						}
					],
					"src": "33:1951:2"
				},
				"id": 2
			}
		}
	}
}