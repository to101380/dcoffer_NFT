{
	"id": "3948d708ef1224e2e9a9c5a07c2a69c4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"opensea_test_flat.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/math/SafeMath.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: Dcoffer/IDCF/IDCF.sol\n\n\n// ERC721A Contracts v3.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n\n\n/**\n * @dev Interface of an ERC721A compliant contract.\n */\ninterface IDCF  {\n   \n\n    function BlockScore(address user)external view returns(uint);\n\n}\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: Dcoffer/ERC721A/IERC721A.sol\n\n\n// ERC721A Contracts v3.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n\n\n/**\n * @dev Interface of an ERC721A compliant contract.\n */\ninterface IERC721A is IERC721, IERC721Metadata {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * The caller cannot approve to their own address.\n     */\n    error ApproveToCaller();\n\n    /**\n     * The caller cannot approve to the current owner.\n     */\n    error ApprovalToCurrentOwner();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    // Compiler will pack this into a single 256bit word.\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Keeps track of the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n    }\n\n    // Compiler will pack this into a single 256bit word.\n    struct AddressData {\n        // Realistically, 2**64-1 is more than enough.\n        uint64 balance;\n        // Keeps track of mint count with minimal overhead for tokenomics.\n        uint64 numberMinted;\n        // Keeps track of burn count with minimal overhead for tokenomics.\n        uint64 numberBurned;\n        // For miscellaneous variable(s) pertaining to the address\n        // (e.g. number of whitelist mint slots used).\n        // If there are multiple variables, please pack them into a uint64.\n        uint64 aux;\n    }\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     * \n     * Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\n     */\n    function totalSupply() external view returns (uint256);\n}\n// File: Dcoffer/ERC721A/ERC721A.sol\n\n\n// ERC721A Contracts v3.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension. Built to optimize for lower gas during batch mints.\n *\n * Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\n *\n * Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n *\n * Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is Context, ERC165, IERC721A, IDCF {\n    using SafeMath for uint;\n    using Address for address;\n    using Strings for uint256;\n\n    // The tokenId of the next token to be minted.\n    uint256 internal _currentIndex;\n\n    // The number of tokens burned.\n    uint256 internal _burnCounter;    \n  \n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned. See _ownershipOf implementation for details.\n    mapping(uint256 => TokenOwnership) internal _ownerships;\n\n    // Mapping owner address to address data\n    mapping(address => AddressData) private _addressData;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     *[user][1] = last_block\n     *[user][2] = accumulation_block \n    */   \n    mapping(address => mapping(uint256 => uint256))private _BlockScore;\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();           \n    }\n\n  \n\n    function BlockScore(address user)public view returns(uint256){\n        uint256 difference = block.number.sub(_BlockScore[user][1]);\n        uint256 Product = balanceOf(user).mul(difference);\n        uint256 accumulation = _BlockScore[user][2].add(Product);\n        return accumulation;\n    }\n\n    function updateBlockScore(address user)private{\n        uint256 Score = BlockScore(user);       \n        _BlockScore[user][2]=_BlockScore[user][2].add(Score);       \n        _BlockScore[user][1] = block.number;\n       \n    }\n\n   \n\n    /**\n     * To change the starting tokenId, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\n     */\n    function totalSupply() public view override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than _currentIndex - _startTokenId() times\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view returns (uint256) {\n        // Counter underflow is impossible as _currentIndex does not decrement,\n        // and it is initialized to _startTokenId()\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return uint256(_addressData[owner].balance);\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return uint256(_addressData[owner].numberMinted);\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return uint256(_addressData[owner].numberBurned);\n    }\n\n    /**\n     * Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return _addressData[owner].aux;\n    }\n \n    /**\n     * Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal {\n        _addressData[owner].aux = aux;\n    }\n\n    /**\n     * Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around in the collection over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr) if (curr < _currentIndex) {\n                TokenOwnership memory ownership = _ownerships[curr];\n                if (!ownership.burned) {\n                    if (ownership.addr != address(0)) {\n                        return ownership;\n                    }\n                    // Invariant:\n                    // There will always be an ownership that has an address and is not burned\n                    // before an ownership that does not have an address and is not burned.\n                    // Hence, curr will not underflow.\n                    while (true) {\n                        curr--;\n                        ownership = _ownerships[curr];\n                        if (ownership.addr != address(0)) {\n                            return ownership;\n                        }\n                    }\n                }\n            }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view override returns (address) {\n        return _ownershipOf(tokenId).addr;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return 'https://gateway.pinata.cloud/ipfs/QmWuZ6PWJSWppM5Ah4C7tx6dhEGobkhknsLX34FB9WtnhM/';\n        \n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public override {\n        address owner = ERC721A.ownerOf(tokenId);\n        if (to == owner) revert ApprovalToCurrentOwner();\n\n        if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {\n            revert ApprovalCallerNotOwnerNorApproved();\n        }\n\n        _approve(to, tokenId, owner);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        if (operator == _msgSender()) revert ApproveToCaller();\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        _transfer(from, to, tokenId);\n        if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n            revert TransferToNonERC721ReceiverImplementer();\n        }\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     *   (`_mint`),\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned;\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     *   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal {   \n        // require(_currentIndex.add(quantity)>_maxsupply,\"exceeds max supply!\");\n        updateBlockScore(to);\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // balance or numberMinted overflow if current value of either + quantity > 1.8e19 (2**64) - 1\n        // updatedIndex overflows if _currentIndex + quantity > 1.2e77 (2**256) - 1\n        unchecked {\n            _addressData[to].balance += uint64(quantity);\n            _addressData[to].numberMinted += uint64(quantity);\n\n            _ownerships[startTokenId].addr = to;\n            _ownerships[startTokenId].startTimestamp = uint64(block.timestamp);\n\n            uint256 updatedIndex = startTokenId;\n            uint256 end = updatedIndex + quantity;\n\n            if (to.isContract()) {\n                do {\n                    emit Transfer(address(0), to, updatedIndex);\n                    if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (updatedIndex < end);\n                // Reentrancy protection\n                if (_currentIndex != startTokenId) revert();\n            } else {\n                do {\n                    emit Transfer(address(0), to, updatedIndex++);\n                } while (updatedIndex < end);\n            }\n            _currentIndex = updatedIndex;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n   \n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) private {\n        updateBlockScore(from);\n        updateBlockScore(to);\n        TokenOwnership memory prevOwnership = _ownershipOf(tokenId);\n\n        if (prevOwnership.addr != from) revert TransferFromIncorrectOwner();\n\n        bool isApprovedOrOwner = (_msgSender() == from ||\n            isApprovedForAll(from, _msgSender()) ||\n            getApproved(tokenId) == _msgSender());\n\n        if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId, from);\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\n        unchecked {\n            _addressData[from].balance -= 1;\n            _addressData[to].balance += 1;\n\n            TokenOwnership storage currSlot = _ownerships[tokenId];\n            currSlot.addr = to;\n            currSlot.startTimestamp = uint64(block.timestamp);\n\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\n            uint256 nextTokenId = tokenId + 1;\n            TokenOwnership storage nextSlot = _ownerships[nextTokenId];\n            if (nextSlot.addr == address(0)) {\n                // This will suffice for checking _exists(nextTokenId),\n                // as a burned slot cannot contain the zero address.\n                if (nextTokenId != _currentIndex) {\n                    nextSlot.addr = from;\n                    nextSlot.startTimestamp = prevOwnership.startTimestamp;\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        updateBlockScore(msg.sender);\n        TokenOwnership memory prevOwnership = _ownershipOf(tokenId);\n\n        address from = prevOwnership.addr;\n\n        if (approvalCheck) {\n            bool isApprovedOrOwner = (_msgSender() == from ||\n                isApprovedForAll(from, _msgSender()) ||\n                getApproved(tokenId) == _msgSender());\n\n            if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved();\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId, from);\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as tokenId would have to be 2**256.\n        unchecked {\n            AddressData storage addressData = _addressData[from];\n            addressData.balance -= 1;\n            addressData.numberBurned += 1;\n\n            // Keep track of who burned the token, and the timestamp of burning.\n            TokenOwnership storage currSlot = _ownerships[tokenId];\n            currSlot.addr = from;\n            currSlot.startTimestamp = uint64(block.timestamp);\n            currSlot.burned = true;\n\n            // If the ownership slot of tokenId+1 is not explicitly set, that means the burn initiator owns it.\n            // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\n            uint256 nextTokenId = tokenId + 1;\n            TokenOwnership storage nextSlot = _ownerships[nextTokenId];\n            if (nextSlot.addr == address(0)) {\n                // This will suffice for checking _exists(nextTokenId),\n                // as a burned slot cannot contain the zero address.\n                if (nextTokenId != _currentIndex) {\n                    nextSlot.addr = from;\n                    nextSlot.startTimestamp = prevOwnership.startTimestamp;\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        address owner\n    ) private {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n            return retval == IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n     * minting.\n     * And also called after one token has been burned.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n}\n// File: Dcoffer/opensea_test.sol\n\n\npragma solidity ^0.8.4;\n\n\n\n\ncontract Dcoffer is ERC721A {\n  using SafeMath for uint;\n\n\n\n  constructor()ERC721A(\"Dcoffer\", \"Dcoffer\") {\n    \n  }\n\n \n  function mint(uint256 quantity) external { \n    _safeMint(msg.sender, quantity);\n \n  }\n\n\n  \n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"opensea_test_flat.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"opensea_test_flat.sol\":9947:18008  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"opensea_test_flat.sol\":9947:18008  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220026234fe27ce895078f7ff99b4ddeb70c1917dc6882844170cf5e4cc82c183cb64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220026234fe27ce895078f7ff99b4ddeb70c1917dc6882844170cf5e4cc82c183cb64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL PUSH3 0x34FE27 0xCE DUP10 POP PUSH25 0xF7FF99B4DDEB70C1917DC6882844170CF5E4CC82C183CB6473 PUSH16 0x6C634300080E00330000000000000000 ",
							"sourceMap": "9947:8061:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220026234fe27ce895078f7ff99b4ddeb70c1917dc6882844170cf5e4cc82c183cb64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL PUSH3 0x34FE27 0xCE DUP10 POP PUSH25 0xF7FF99B4DDEB70C1917DC6882844170CF5E4CC82C183CB6473 PUSH16 0x6C634300080E00330000000000000000 ",
							"sourceMap": "9947:8061:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9947,
									"end": 18008,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9947,
									"end": 18008,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220026234fe27ce895078f7ff99b4ddeb70c1917dc6882844170cf5e4cc82c183cb64736f6c634300080e0033",
									".code": [
										{
											"begin": 9947,
											"end": 18008,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 9947,
											"end": 18008,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9947,
											"end": 18008,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9947,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9947,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9947,
											"end": 18008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9947,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9947,
											"end": 18008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9947,
											"end": 18008,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"opensea_test_flat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"opensea_test_flat.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"opensea_test_flat.sol\":{\"keccak256\":\"0x31b67d705f29eb4529b89cc0dfe31be3bba37bb6de64ac04ee1a58ead639e427\",\"urls\":[\"bzz-raw://8eadb2193ffb89029106c470c7efbdf5514a4ab03184f5dfd6b649c2810b80fa\",\"dweb:/ipfs/QmTEZbJmBETHbLMieXXjLQeZkJo1SELxCAvxxP1Vai6NGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"opensea_test_flat.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"opensea_test_flat.sol\":{\"keccak256\":\"0x31b67d705f29eb4529b89cc0dfe31be3bba37bb6de64ac04ee1a58ead639e427\",\"urls\":[\"bzz-raw://8eadb2193ffb89029106c470c7efbdf5514a4ab03184f5dfd6b649c2810b80fa\",\"dweb:/ipfs/QmTEZbJmBETHbLMieXXjLQeZkJo1SELxCAvxxP1Vai6NGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Dcoffer": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "BlockScore",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"opensea_test_flat.sol\":50278:50493  contract Dcoffer is ERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"opensea_test_flat.sol\":50340:50393  constructor()ERC721A(\"Dcoffer\", \"Dcoffer\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"opensea_test_flat.sol\":31297:31462  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x44636f6666657200000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x44636f6666657200000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"opensea_test_flat.sol\":31371:31376  name_ */\n  dup2\n    /* \"opensea_test_flat.sol\":31363:31368  _name */\n  0x02\n    /* \"opensea_test_flat.sol\":31363:31376  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_5\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"opensea_test_flat.sol\":31396:31403  symbol_ */\n  dup1\n    /* \"opensea_test_flat.sol\":31386:31393  _symbol */\n  0x03\n    /* \"opensea_test_flat.sol\":31386:31403  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"opensea_test_flat.sol\":31429:31444  _startTokenId() */\n  tag_8\n    /* \"opensea_test_flat.sol\":31429:31442  _startTokenId */\n  shl(0x20, tag_9)\n    /* \"opensea_test_flat.sol\":31429:31444  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"opensea_test_flat.sol\":31413:31426  _currentIndex */\n  0x00\n    /* \"opensea_test_flat.sol\":31413:31444  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"opensea_test_flat.sol\":31297:31462  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"opensea_test_flat.sol\":50278:50493  contract Dcoffer is ERC721A {... */\n  jump(tag_11)\n    /* \"opensea_test_flat.sol\":32090:32180  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_9:\n    /* \"opensea_test_flat.sol\":32146:32153  uint256 */\n  0x00\n    /* \"opensea_test_flat.sol\":32090:32180  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"opensea_test_flat.sol\":50278:50493  contract Dcoffer is ERC721A {... */\ntag_6:\n  dup3\n  dup1\n  sload\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_16\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:187   */\ntag_24:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x22\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"#utility.yul\":193:513   */\ntag_14:\n    /* \"#utility.yul\":237:243   */\n  0x00\n    /* \"#utility.yul\":274:275   */\n  0x02\n    /* \"#utility.yul\":268:272   */\n  dup3\n    /* \"#utility.yul\":264:276   */\n  div\n    /* \"#utility.yul\":254:276   */\n  swap1\n  pop\n    /* \"#utility.yul\":321:322   */\n  0x01\n    /* \"#utility.yul\":315:319   */\n  dup3\n    /* \"#utility.yul\":311:323   */\n  and\n    /* \"#utility.yul\":342:360   */\n  dup1\n    /* \"#utility.yul\":332:413   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":398:402   */\n  0x7f\n    /* \"#utility.yul\":390:396   */\n  dup3\n    /* \"#utility.yul\":386:403   */\n  and\n    /* \"#utility.yul\":376:403   */\n  swap2\n  pop\n    /* \"#utility.yul\":332:413   */\ntag_28:\n    /* \"#utility.yul\":460:462   */\n  0x20\n    /* \"#utility.yul\":452:458   */\n  dup3\n    /* \"#utility.yul\":449:463   */\n  lt\n    /* \"#utility.yul\":429:447   */\n  dup2\n    /* \"#utility.yul\":426:464   */\n  sub\n    /* \"#utility.yul\":423:507   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":479:497   */\n  tag_30\n  tag_24\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":423:507   */\ntag_29:\n    /* \"#utility.yul\":244:513   */\n  pop\n    /* \"#utility.yul\":193:513   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"opensea_test_flat.sol\":50278:50493  contract Dcoffer is ERC721A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"opensea_test_flat.sol\":50278:50493  contract Dcoffer is ERC721A {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x18160ddd\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x325b272a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"opensea_test_flat.sol\":33047:33347  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":36078:36176  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":37625:37825  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":37201:37564  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"opensea_test_flat.sol\":32309:32615  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":38464:38628  function transferFrom(... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"opensea_test_flat.sol\":31472:31763  function BlockScore(address user)public view returns(uint256){... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":38694:38873  function safeTransferFrom(... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"opensea_test_flat.sol\":35893:36016  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":33406:33609  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":36240:36342  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":50399:50485  function mint(uint256 quantity) external { ... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"opensea_test_flat.sol\":37892:38174  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"opensea_test_flat.sol\":38939:39299  function safeTransferFrom(... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"opensea_test_flat.sol\":36408:36721  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":38240:38402  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":33047:33347  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_25:\n        /* \"opensea_test_flat.sol\":33149:33153  bool */\n      0x00\n        /* \"opensea_test_flat.sol\":33199:33224  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"opensea_test_flat.sol\":33184:33224  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"opensea_test_flat.sol\":33184:33195  interfaceId */\n      dup3\n        /* \"opensea_test_flat.sol\":33184:33224  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"opensea_test_flat.sol\":33184:33288  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"opensea_test_flat.sol\":33255:33288  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"opensea_test_flat.sol\":33240:33288  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"opensea_test_flat.sol\":33240:33251  interfaceId */\n      dup3\n        /* \"opensea_test_flat.sol\":33240:33288  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"opensea_test_flat.sol\":33184:33288  interfaceId == type(IERC721).interfaceId ||... */\n    tag_90:\n        /* \"opensea_test_flat.sol\":33184:33340  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"opensea_test_flat.sol\":33304:33340  super.supportsInterface(interfaceId) */\n      tag_92\n        /* \"opensea_test_flat.sol\":33328:33339  interfaceId */\n      dup3\n        /* \"opensea_test_flat.sol\":33304:33327  super.supportsInterface */\n      tag_93\n        /* \"opensea_test_flat.sol\":33304:33340  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_92:\n        /* \"opensea_test_flat.sol\":33184:33340  interfaceId == type(IERC721).interfaceId ||... */\n    tag_91:\n        /* \"opensea_test_flat.sol\":33165:33340  return... */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":33047:33347  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":36078:36176  function name() public view virtual override returns (string memory) {... */\n    tag_29:\n        /* \"opensea_test_flat.sol\":36132:36145  string memory */\n      0x60\n        /* \"opensea_test_flat.sol\":36164:36169  _name */\n      0x02\n        /* \"opensea_test_flat.sol\":36157:36169  return _name */\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_96\n      jump\t// in\n    tag_97:\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_99\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_98)\n    tag_99:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_100:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_100\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":36078:36176  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"opensea_test_flat.sol\":37625:37825  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_35:\n        /* \"opensea_test_flat.sol\":37693:37700  address */\n      0x00\n        /* \"opensea_test_flat.sol\":37717:37733  _exists(tokenId) */\n      tag_102\n        /* \"opensea_test_flat.sol\":37725:37732  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":37717:37724  _exists */\n      tag_103\n        /* \"opensea_test_flat.sol\":37717:37733  _exists(tokenId) */\n      jump\t// in\n    tag_102:\n        /* \"opensea_test_flat.sol\":37712:37776  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_104\n      jumpi\n        /* \"opensea_test_flat.sol\":37742:37776  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":37712:37776  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_104:\n        /* \"opensea_test_flat.sol\":37794:37809  _tokenApprovals */\n      0x06\n        /* \"opensea_test_flat.sol\":37794:37818  _tokenApprovals[tokenId] */\n      0x00\n        /* \"opensea_test_flat.sol\":37810:37817  tokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":37794:37818  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":37787:37818  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":37625:37825  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":37201:37564  function approve(address to, uint256 tokenId) public override {... */\n    tag_41:\n        /* \"opensea_test_flat.sol\":37273:37286  address owner */\n      0x00\n        /* \"opensea_test_flat.sol\":37289:37313  ERC721A.ownerOf(tokenId) */\n      tag_106\n        /* \"opensea_test_flat.sol\":37305:37312  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":37289:37304  ERC721A.ownerOf */\n      tag_60\n        /* \"opensea_test_flat.sol\":37289:37313  ERC721A.ownerOf(tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"opensea_test_flat.sol\":37273:37313  address owner = ERC721A.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":37333:37338  owner */\n      dup1\n        /* \"opensea_test_flat.sol\":37327:37338  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":37327:37329  to */\n      dup4\n        /* \"opensea_test_flat.sol\":37327:37338  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"opensea_test_flat.sol\":37323:37371  if (to == owner) revert ApprovalToCurrentOwner() */\n      tag_107\n      jumpi\n        /* \"opensea_test_flat.sol\":37347:37371  ApprovalToCurrentOwner() */\n      mload(0x40)\n      0x943f7b8c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":37323:37371  if (to == owner) revert ApprovalToCurrentOwner() */\n    tag_107:\n        /* \"opensea_test_flat.sol\":37402:37407  owner */\n      dup1\n        /* \"opensea_test_flat.sol\":37386:37407  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":37386:37398  _msgSender() */\n      tag_108\n        /* \"opensea_test_flat.sol\":37386:37396  _msgSender */\n      tag_109\n        /* \"opensea_test_flat.sol\":37386:37398  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"opensea_test_flat.sol\":37386:37407  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"opensea_test_flat.sol\":37382:37519  if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {... */\n      tag_110\n      jumpi\n        /* \"opensea_test_flat.sol\":37413:37450  isApprovedForAll(owner, _msgSender()) */\n      tag_111\n        /* \"opensea_test_flat.sol\":37430:37435  owner */\n      dup2\n        /* \"opensea_test_flat.sol\":37437:37449  _msgSender() */\n      tag_112\n        /* \"opensea_test_flat.sol\":37437:37447  _msgSender */\n      tag_109\n        /* \"opensea_test_flat.sol\":37437:37449  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"opensea_test_flat.sol\":37413:37429  isApprovedForAll */\n      tag_87\n        /* \"opensea_test_flat.sol\":37413:37450  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_111:\n        /* \"opensea_test_flat.sol\":37409:37519  if(!isApprovedForAll(owner, _msgSender())) {... */\n      tag_113\n      jumpi\n        /* \"opensea_test_flat.sol\":37473:37508  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":37409:37519  if(!isApprovedForAll(owner, _msgSender())) {... */\n    tag_113:\n        /* \"opensea_test_flat.sol\":37382:37519  if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {... */\n    tag_110:\n        /* \"opensea_test_flat.sol\":37529:37557  _approve(to, tokenId, owner) */\n      tag_114\n        /* \"opensea_test_flat.sol\":37538:37540  to */\n      dup4\n        /* \"opensea_test_flat.sol\":37542:37549  tokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":37551:37556  owner */\n      dup4\n        /* \"opensea_test_flat.sol\":37529:37537  _approve */\n      tag_115\n        /* \"opensea_test_flat.sol\":37529:37557  _approve(to, tokenId, owner) */\n      jump\t// in\n    tag_114:\n        /* \"opensea_test_flat.sol\":37263:37564  {... */\n      pop\n        /* \"opensea_test_flat.sol\":37201:37564  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":32309:32615  function totalSupply() public view override returns (uint256) {... */\n    tag_43:\n        /* \"opensea_test_flat.sol\":32362:32369  uint256 */\n      0x00\n        /* \"opensea_test_flat.sol\":32583:32598  _startTokenId() */\n      tag_117\n        /* \"opensea_test_flat.sol\":32583:32596  _startTokenId */\n      tag_118\n        /* \"opensea_test_flat.sol\":32583:32598  _startTokenId() */\n      jump\t// in\n    tag_117:\n        /* \"opensea_test_flat.sol\":32568:32580  _burnCounter */\n      sload(0x01)\n        /* \"opensea_test_flat.sol\":32552:32565  _currentIndex */\n      sload(0x00)\n        /* \"opensea_test_flat.sol\":32552:32580  _currentIndex - _burnCounter */\n      sub\n        /* \"opensea_test_flat.sol\":32552:32598  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"opensea_test_flat.sol\":32545:32598  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":32309:32615  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"opensea_test_flat.sol\":38464:38628  function transferFrom(... */\n    tag_49:\n        /* \"opensea_test_flat.sol\":38593:38621  _transfer(from, to, tokenId) */\n      tag_120\n        /* \"opensea_test_flat.sol\":38603:38607  from */\n      dup4\n        /* \"opensea_test_flat.sol\":38609:38611  to */\n      dup4\n        /* \"opensea_test_flat.sol\":38613:38620  tokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":38593:38602  _transfer */\n      tag_121\n        /* \"opensea_test_flat.sol\":38593:38621  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_120:\n        /* \"opensea_test_flat.sol\":38464:38628  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":31472:31763  function BlockScore(address user)public view returns(uint256){... */\n    tag_53:\n        /* \"opensea_test_flat.sol\":31525:31532  uint256 */\n      0x00\n        /* \"opensea_test_flat.sol\":31543:31561  uint256 difference */\n      dup1\n        /* \"opensea_test_flat.sol\":31564:31602  block.number.sub(_BlockScore[user][1]) */\n      tag_123\n        /* \"opensea_test_flat.sol\":31581:31592  _BlockScore */\n      0x08\n        /* \"opensea_test_flat.sol\":31581:31598  _BlockScore[user] */\n      0x00\n        /* \"opensea_test_flat.sol\":31593:31597  user */\n      dup6\n        /* \"opensea_test_flat.sol\":31581:31598  _BlockScore[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":31581:31601  _BlockScore[user][1] */\n      0x00\n        /* \"opensea_test_flat.sol\":31599:31600  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":31581:31601  _BlockScore[user][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"opensea_test_flat.sol\":31564:31576  block.number */\n      number\n        /* \"opensea_test_flat.sol\":31564:31580  block.number.sub */\n      tag_124\n      swap1\n        /* \"opensea_test_flat.sol\":31564:31602  block.number.sub(_BlockScore[user][1]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_123:\n        /* \"opensea_test_flat.sol\":31543:31602  uint256 difference = block.number.sub(_BlockScore[user][1]) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":31612:31627  uint256 Product */\n      0x00\n        /* \"opensea_test_flat.sol\":31630:31661  balanceOf(user).mul(difference) */\n      tag_125\n        /* \"opensea_test_flat.sol\":31650:31660  difference */\n      dup3\n        /* \"opensea_test_flat.sol\":31630:31645  balanceOf(user) */\n      tag_126\n        /* \"opensea_test_flat.sol\":31640:31644  user */\n      dup7\n        /* \"opensea_test_flat.sol\":31630:31639  balanceOf */\n      tag_64\n        /* \"opensea_test_flat.sol\":31630:31645  balanceOf(user) */\n      jump\t// in\n    tag_126:\n        /* \"opensea_test_flat.sol\":31630:31649  balanceOf(user).mul */\n      tag_127\n      swap1\n        /* \"opensea_test_flat.sol\":31630:31661  balanceOf(user).mul(difference) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"opensea_test_flat.sol\":31612:31661  uint256 Product = balanceOf(user).mul(difference) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":31671:31691  uint256 accumulation */\n      0x00\n        /* \"opensea_test_flat.sol\":31694:31727  _BlockScore[user][2].add(Product) */\n      tag_128\n        /* \"opensea_test_flat.sol\":31719:31726  Product */\n      dup3\n        /* \"opensea_test_flat.sol\":31694:31705  _BlockScore */\n      0x08\n        /* \"opensea_test_flat.sol\":31694:31711  _BlockScore[user] */\n      0x00\n        /* \"opensea_test_flat.sol\":31706:31710  user */\n      dup9\n        /* \"opensea_test_flat.sol\":31694:31711  _BlockScore[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":31694:31714  _BlockScore[user][2] */\n      0x00\n        /* \"opensea_test_flat.sol\":31712:31713  2 */\n      0x02\n        /* \"opensea_test_flat.sol\":31694:31714  _BlockScore[user][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"opensea_test_flat.sol\":31694:31718  _BlockScore[user][2].add */\n      tag_129\n      swap1\n        /* \"opensea_test_flat.sol\":31694:31727  _BlockScore[user][2].add(Product) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_128:\n        /* \"opensea_test_flat.sol\":31671:31727  uint256 accumulation = _BlockScore[user][2].add(Product) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":31744:31756  accumulation */\n      dup1\n        /* \"opensea_test_flat.sol\":31737:31756  return accumulation */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":31472:31763  function BlockScore(address user)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":38694:38873  function safeTransferFrom(... */\n    tag_57:\n        /* \"opensea_test_flat.sol\":38827:38866  safeTransferFrom(from, to, tokenId, '') */\n      tag_131\n        /* \"opensea_test_flat.sol\":38844:38848  from */\n      dup4\n        /* \"opensea_test_flat.sol\":38850:38852  to */\n      dup4\n        /* \"opensea_test_flat.sol\":38854:38861  tokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":38827:38866  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"opensea_test_flat.sol\":38827:38843  safeTransferFrom */\n      tag_79\n        /* \"opensea_test_flat.sol\":38827:38866  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_131:\n        /* \"opensea_test_flat.sol\":38694:38873  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":35893:36016  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_60:\n        /* \"opensea_test_flat.sol\":35957:35964  address */\n      0x00\n        /* \"opensea_test_flat.sol\":35983:36004  _ownershipOf(tokenId) */\n      tag_133\n        /* \"opensea_test_flat.sol\":35996:36003  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":35983:35995  _ownershipOf */\n      tag_134\n        /* \"opensea_test_flat.sol\":35983:36004  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_133:\n        /* \"opensea_test_flat.sol\":35983:36009  _ownershipOf(tokenId).addr */\n      0x00\n      add\n      mload\n        /* \"opensea_test_flat.sol\":35976:36009  return _ownershipOf(tokenId).addr */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":35893:36016  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":33406:33609  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_64:\n        /* \"opensea_test_flat.sol\":33470:33477  uint256 */\n      0x00\n        /* \"opensea_test_flat.sol\":33510:33511  0 */\n      dup1\n        /* \"opensea_test_flat.sol\":33493:33512  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":33493:33498  owner */\n      dup3\n        /* \"opensea_test_flat.sol\":33493:33512  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"opensea_test_flat.sol\":33489:33549  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_136\n      jumpi\n        /* \"opensea_test_flat.sol\":33521:33549  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":33489:33549  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_136:\n        /* \"opensea_test_flat.sol\":33574:33586  _addressData */\n      0x05\n        /* \"opensea_test_flat.sol\":33574:33593  _addressData[owner] */\n      0x00\n        /* \"opensea_test_flat.sol\":33587:33592  owner */\n      dup4\n        /* \"opensea_test_flat.sol\":33574:33593  _addressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":33574:33601  _addressData[owner].balance */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":33566:33602  uint256(_addressData[owner].balance) */\n      0xffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":33559:33602  return uint256(_addressData[owner].balance) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":33406:33609  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":36240:36342  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"opensea_test_flat.sol\":36296:36309  string memory */\n      0x60\n        /* \"opensea_test_flat.sol\":36328:36335  _symbol */\n      0x03\n        /* \"opensea_test_flat.sol\":36321:36335  return _symbol */\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_96\n      jump\t// in\n    tag_138:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_96\n      jump\t// in\n    tag_139:\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_141\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_140)\n    tag_141:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_142:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_142\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":36240:36342  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"opensea_test_flat.sol\":50399:50485  function mint(uint256 quantity) external { ... */\n    tag_71:\n        /* \"opensea_test_flat.sol\":50447:50478  _safeMint(msg.sender, quantity) */\n      tag_144\n        /* \"opensea_test_flat.sol\":50457:50467  msg.sender */\n      caller\n        /* \"opensea_test_flat.sol\":50469:50477  quantity */\n      dup3\n        /* \"opensea_test_flat.sol\":50447:50456  _safeMint */\n      tag_145\n        /* \"opensea_test_flat.sol\":50447:50478  _safeMint(msg.sender, quantity) */\n      jump\t// in\n    tag_144:\n        /* \"opensea_test_flat.sol\":50399:50485  function mint(uint256 quantity) external { ... */\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":37892:38174  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_75:\n        /* \"opensea_test_flat.sol\":38002:38014  _msgSender() */\n      tag_147\n        /* \"opensea_test_flat.sol\":38002:38012  _msgSender */\n      tag_109\n        /* \"opensea_test_flat.sol\":38002:38014  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"opensea_test_flat.sol\":37990:38014  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":37990:37998  operator */\n      dup3\n        /* \"opensea_test_flat.sol\":37990:38014  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"opensea_test_flat.sol\":37986:38040  if (operator == _msgSender()) revert ApproveToCaller() */\n      tag_148\n      jumpi\n        /* \"opensea_test_flat.sol\":38023:38040  ApproveToCaller() */\n      mload(0x40)\n      0xb06307db00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":37986:38040  if (operator == _msgSender()) revert ApproveToCaller() */\n    tag_148:\n        /* \"opensea_test_flat.sol\":38096:38104  approved */\n      dup1\n        /* \"opensea_test_flat.sol\":38051:38069  _operatorApprovals */\n      0x07\n        /* \"opensea_test_flat.sol\":38051:38083  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"opensea_test_flat.sol\":38070:38082  _msgSender() */\n      tag_149\n        /* \"opensea_test_flat.sol\":38070:38080  _msgSender */\n      tag_109\n        /* \"opensea_test_flat.sol\":38070:38082  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"opensea_test_flat.sol\":38051:38083  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":38051:38093  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"opensea_test_flat.sol\":38084:38092  operator */\n      dup5\n        /* \"opensea_test_flat.sol\":38051:38093  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"opensea_test_flat.sol\":38051:38104  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":38148:38156  operator */\n      dup2\n        /* \"opensea_test_flat.sol\":38119:38167  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":38134:38146  _msgSender() */\n      tag_150\n        /* \"opensea_test_flat.sol\":38134:38144  _msgSender */\n      tag_109\n        /* \"opensea_test_flat.sol\":38134:38146  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"opensea_test_flat.sol\":38119:38167  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"opensea_test_flat.sol\":38158:38166  approved */\n      dup4\n        /* \"opensea_test_flat.sol\":38119:38167  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"opensea_test_flat.sol\":37892:38174  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":38939:39299  function safeTransferFrom(... */\n    tag_79:\n        /* \"opensea_test_flat.sol\":39100:39128  _transfer(from, to, tokenId) */\n      tag_153\n        /* \"opensea_test_flat.sol\":39110:39114  from */\n      dup5\n        /* \"opensea_test_flat.sol\":39116:39118  to */\n      dup5\n        /* \"opensea_test_flat.sol\":39120:39127  tokenId */\n      dup5\n        /* \"opensea_test_flat.sol\":39100:39109  _transfer */\n      tag_121\n        /* \"opensea_test_flat.sol\":39100:39128  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_153:\n        /* \"opensea_test_flat.sol\":39142:39157  to.isContract() */\n      tag_154\n        /* \"opensea_test_flat.sol\":39142:39144  to */\n      dup4\n        /* \"opensea_test_flat.sol\":39142:39155  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_155\n        /* \"opensea_test_flat.sol\":39142:39157  to.isContract() */\n      jump\t// in\n    tag_154:\n        /* \"opensea_test_flat.sol\":39138:39293  if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"opensea_test_flat.sol\":39163:39219  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_157\n        /* \"opensea_test_flat.sol\":39194:39198  from */\n      dup5\n        /* \"opensea_test_flat.sol\":39200:39202  to */\n      dup5\n        /* \"opensea_test_flat.sol\":39204:39211  tokenId */\n      dup5\n        /* \"opensea_test_flat.sol\":39213:39218  _data */\n      dup5\n        /* \"opensea_test_flat.sol\":39163:39193  _checkContractOnERC721Received */\n      tag_158\n        /* \"opensea_test_flat.sol\":39163:39219  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_157:\n        /* \"opensea_test_flat.sol\":39159:39293  if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_159\n      jumpi\n        /* \"opensea_test_flat.sol\":39242:39282  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":39159:39293  if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_159:\n        /* \"opensea_test_flat.sol\":39138:39293  if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_156:\n        /* \"opensea_test_flat.sol\":38939:39299  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":36408:36721  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_82:\n        /* \"opensea_test_flat.sol\":36481:36494  string memory */\n      0x60\n        /* \"opensea_test_flat.sol\":36511:36527  _exists(tokenId) */\n      tag_161\n        /* \"opensea_test_flat.sol\":36519:36526  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":36511:36518  _exists */\n      tag_103\n        /* \"opensea_test_flat.sol\":36511:36527  _exists(tokenId) */\n      jump\t// in\n    tag_161:\n        /* \"opensea_test_flat.sol\":36506:36565  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_162\n      jumpi\n        /* \"opensea_test_flat.sol\":36536:36565  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":36506:36565  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_162:\n        /* \"opensea_test_flat.sol\":36576:36597  string memory baseURI */\n      0x00\n        /* \"opensea_test_flat.sol\":36600:36610  _baseURI() */\n      tag_163\n        /* \"opensea_test_flat.sol\":36600:36608  _baseURI */\n      tag_164\n        /* \"opensea_test_flat.sol\":36600:36610  _baseURI() */\n      jump\t// in\n    tag_163:\n        /* \"opensea_test_flat.sol\":36576:36610  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":36652:36653  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":36633:36640  baseURI */\n      dup2\n        /* \"opensea_test_flat.sol\":36627:36648  bytes(baseURI).length */\n      mload\n        /* \"opensea_test_flat.sol\":36627:36653  bytes(baseURI).length != 0 */\n      sub\n        /* \"opensea_test_flat.sol\":36627:36714  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      tag_165\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_166)\n    tag_165:\n        /* \"opensea_test_flat.sol\":36680:36687  baseURI */\n      dup1\n        /* \"opensea_test_flat.sol\":36689:36707  tokenId.toString() */\n      tag_167\n        /* \"opensea_test_flat.sol\":36689:36696  tokenId */\n      dup5\n        /* \"opensea_test_flat.sol\":36689:36705  tokenId.toString */\n      tag_168\n        /* \"opensea_test_flat.sol\":36689:36707  tokenId.toString() */\n      jump\t// in\n    tag_167:\n        /* \"opensea_test_flat.sol\":36663:36708  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_169\n      swap3\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"opensea_test_flat.sol\":36627:36714  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n    tag_166:\n        /* \"opensea_test_flat.sol\":36620:36714  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      swap2\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":36408:36721  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":38240:38402  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_87:\n        /* \"opensea_test_flat.sol\":38337:38341  bool */\n      0x00\n        /* \"opensea_test_flat.sol\":38360:38378  _operatorApprovals */\n      0x07\n        /* \"opensea_test_flat.sol\":38360:38385  _operatorApprovals[owner] */\n      0x00\n        /* \"opensea_test_flat.sol\":38379:38384  owner */\n      dup5\n        /* \"opensea_test_flat.sol\":38360:38385  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":38360:38395  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"opensea_test_flat.sol\":38386:38394  operator */\n      dup4\n        /* \"opensea_test_flat.sol\":38360:38395  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"opensea_test_flat.sol\":38353:38395  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":38240:38402  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":21026:21181  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_93:\n        /* \"opensea_test_flat.sol\":21111:21115  bool */\n      0x00\n        /* \"opensea_test_flat.sol\":21149:21174  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"opensea_test_flat.sol\":21134:21174  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"opensea_test_flat.sol\":21134:21145  interfaceId */\n      dup3\n        /* \"opensea_test_flat.sol\":21134:21174  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"opensea_test_flat.sol\":21127:21174  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":21026:21181  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":39504:39676  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_103:\n        /* \"opensea_test_flat.sol\":39561:39565  bool */\n      0x00\n        /* \"opensea_test_flat.sol\":39603:39610  tokenId */\n      dup2\n        /* \"opensea_test_flat.sol\":39584:39599  _startTokenId() */\n      tag_174\n        /* \"opensea_test_flat.sol\":39584:39597  _startTokenId */\n      tag_118\n        /* \"opensea_test_flat.sol\":39584:39599  _startTokenId() */\n      jump\t// in\n    tag_174:\n        /* \"opensea_test_flat.sol\":39584:39610  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"opensea_test_flat.sol\":39584:39637  _startTokenId() <= tokenId && tokenId < _currentIndex */\n      dup1\n      iszero\n      tag_175\n      jumpi\n      pop\n        /* \"opensea_test_flat.sol\":39624:39637  _currentIndex */\n      sload(0x00)\n        /* \"opensea_test_flat.sol\":39614:39621  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":39614:39637  tokenId < _currentIndex */\n      lt\n        /* \"opensea_test_flat.sol\":39584:39637  _startTokenId() <= tokenId && tokenId < _currentIndex */\n    tag_175:\n        /* \"opensea_test_flat.sol\":39584:39669  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n        /* \"opensea_test_flat.sol\":39642:39653  _ownerships */\n      0x04\n        /* \"opensea_test_flat.sol\":39642:39662  _ownerships[tokenId] */\n      0x00\n        /* \"opensea_test_flat.sol\":39654:39661  tokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":39642:39662  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":39642:39669  _ownerships[tokenId].burned */\n      0x00\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"opensea_test_flat.sol\":39641:39669  !_ownerships[tokenId].burned */\n      iszero\n        /* \"opensea_test_flat.sol\":39584:39669  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n    tag_176:\n        /* \"opensea_test_flat.sol\":39577:39669  return _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":39504:39676  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":9527:9623  function _msgSender() internal view virtual returns (address) {... */\n    tag_109:\n        /* \"opensea_test_flat.sol\":9580:9587  address */\n      0x00\n        /* \"opensea_test_flat.sol\":9606:9616  msg.sender */\n      caller\n        /* \"opensea_test_flat.sol\":9599:9616  return msg.sender */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":9527:9623  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"opensea_test_flat.sol\":47312:47501  function _approve(... */\n    tag_115:\n        /* \"opensea_test_flat.sol\":47449:47451  to */\n      dup3\n        /* \"opensea_test_flat.sol\":47422:47437  _tokenApprovals */\n      0x06\n        /* \"opensea_test_flat.sol\":47422:47446  _tokenApprovals[tokenId] */\n      0x00\n        /* \"opensea_test_flat.sol\":47438:47445  tokenId */\n      dup5\n        /* \"opensea_test_flat.sol\":47422:47446  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"opensea_test_flat.sol\":47422:47451  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":47486:47493  tokenId */\n      dup2\n        /* \"opensea_test_flat.sol\":47482:47484  to */\n      dup4\n        /* \"opensea_test_flat.sol\":47466:47494  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":47475:47480  owner */\n      dup3\n        /* \"opensea_test_flat.sol\":47466:47494  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"opensea_test_flat.sol\":47312:47501  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":32090:32180  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_118:\n        /* \"opensea_test_flat.sol\":32146:32153  uint256 */\n      0x00\n        /* \"opensea_test_flat.sol\":32090:32180  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"opensea_test_flat.sol\":42287:44431  function _transfer(... */\n    tag_121:\n        /* \"opensea_test_flat.sol\":42397:42419  updateBlockScore(from) */\n      tag_181\n        /* \"opensea_test_flat.sol\":42414:42418  from */\n      dup4\n        /* \"opensea_test_flat.sol\":42397:42413  updateBlockScore */\n      tag_182\n        /* \"opensea_test_flat.sol\":42397:42419  updateBlockScore(from) */\n      jump\t// in\n    tag_181:\n        /* \"opensea_test_flat.sol\":42429:42449  updateBlockScore(to) */\n      tag_183\n        /* \"opensea_test_flat.sol\":42446:42448  to */\n      dup3\n        /* \"opensea_test_flat.sol\":42429:42445  updateBlockScore */\n      tag_182\n        /* \"opensea_test_flat.sol\":42429:42449  updateBlockScore(to) */\n      jump\t// in\n    tag_183:\n        /* \"opensea_test_flat.sol\":42459:42494  TokenOwnership memory prevOwnership */\n      0x00\n        /* \"opensea_test_flat.sol\":42497:42518  _ownershipOf(tokenId) */\n      tag_184\n        /* \"opensea_test_flat.sol\":42510:42517  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":42497:42509  _ownershipOf */\n      tag_134\n        /* \"opensea_test_flat.sol\":42497:42518  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_184:\n        /* \"opensea_test_flat.sol\":42459:42518  TokenOwnership memory prevOwnership = _ownershipOf(tokenId) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":42555:42559  from */\n      dup4\n        /* \"opensea_test_flat.sol\":42533:42559  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":42533:42546  prevOwnership */\n      dup2\n        /* \"opensea_test_flat.sol\":42533:42551  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"opensea_test_flat.sol\":42533:42559  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"opensea_test_flat.sol\":42529:42596  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n      tag_185\n      jumpi\n        /* \"opensea_test_flat.sol\":42568:42596  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":42529:42596  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n    tag_185:\n        /* \"opensea_test_flat.sol\":42607:42629  bool isApprovedOrOwner */\n      0x00\n        /* \"opensea_test_flat.sol\":42649:42653  from */\n      dup5\n        /* \"opensea_test_flat.sol\":42633:42653  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":42633:42645  _msgSender() */\n      tag_186\n        /* \"opensea_test_flat.sol\":42633:42643  _msgSender */\n      tag_109\n        /* \"opensea_test_flat.sol\":42633:42645  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"opensea_test_flat.sol\":42633:42653  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"opensea_test_flat.sol\":42633:42705  _msgSender() == from ||... */\n      dup1\n      tag_187\n      jumpi\n      pop\n        /* \"opensea_test_flat.sol\":42669:42705  isApprovedForAll(from, _msgSender()) */\n      tag_188\n        /* \"opensea_test_flat.sol\":42686:42690  from */\n      dup6\n        /* \"opensea_test_flat.sol\":42692:42704  _msgSender() */\n      tag_189\n        /* \"opensea_test_flat.sol\":42692:42702  _msgSender */\n      tag_109\n        /* \"opensea_test_flat.sol\":42692:42704  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"opensea_test_flat.sol\":42669:42685  isApprovedForAll */\n      tag_87\n        /* \"opensea_test_flat.sol\":42669:42705  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_188:\n        /* \"opensea_test_flat.sol\":42633:42705  _msgSender() == from ||... */\n    tag_187:\n        /* \"opensea_test_flat.sol\":42633:42757  _msgSender() == from ||... */\n      dup1\n      tag_190\n      jumpi\n      pop\n        /* \"opensea_test_flat.sol\":42745:42757  _msgSender() */\n      tag_191\n        /* \"opensea_test_flat.sol\":42745:42755  _msgSender */\n      tag_109\n        /* \"opensea_test_flat.sol\":42745:42757  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"opensea_test_flat.sol\":42721:42757  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":42721:42741  getApproved(tokenId) */\n      tag_192\n        /* \"opensea_test_flat.sol\":42733:42740  tokenId */\n      dup5\n        /* \"opensea_test_flat.sol\":42721:42732  getApproved */\n      tag_35\n        /* \"opensea_test_flat.sol\":42721:42741  getApproved(tokenId) */\n      jump\t// in\n    tag_192:\n        /* \"opensea_test_flat.sol\":42721:42757  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"opensea_test_flat.sol\":42633:42757  _msgSender() == from ||... */\n    tag_190:\n        /* \"opensea_test_flat.sol\":42607:42758  bool isApprovedOrOwner = (_msgSender() == from ||... */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":42774:42791  isApprovedOrOwner */\n      dup1\n        /* \"opensea_test_flat.sol\":42769:42835  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n      tag_193\n      jumpi\n        /* \"opensea_test_flat.sol\":42800:42835  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":42769:42835  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n    tag_193:\n        /* \"opensea_test_flat.sol\":42863:42864  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":42849:42865  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":42849:42851  to */\n      dup5\n        /* \"opensea_test_flat.sol\":42849:42865  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"opensea_test_flat.sol\":42845:42897  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_194\n      jumpi\n        /* \"opensea_test_flat.sol\":42874:42897  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":42845:42897  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_194:\n        /* \"opensea_test_flat.sol\":42908:42951  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_195\n        /* \"opensea_test_flat.sol\":42930:42934  from */\n      dup6\n        /* \"opensea_test_flat.sol\":42936:42938  to */\n      dup6\n        /* \"opensea_test_flat.sol\":42940:42947  tokenId */\n      dup6\n        /* \"opensea_test_flat.sol\":42949:42950  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":42908:42929  _beforeTokenTransfers */\n      tag_196\n        /* \"opensea_test_flat.sol\":42908:42951  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_195:\n        /* \"opensea_test_flat.sol\":43013:43048  _approve(address(0), tokenId, from) */\n      tag_197\n        /* \"opensea_test_flat.sol\":43030:43031  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":43034:43041  tokenId */\n      dup5\n        /* \"opensea_test_flat.sol\":43043:43047  from */\n      dup8\n        /* \"opensea_test_flat.sol\":43013:43021  _approve */\n      tag_115\n        /* \"opensea_test_flat.sol\":43013:43048  _approve(address(0), tokenId, from) */\n      jump\t// in\n    tag_197:\n        /* \"opensea_test_flat.sol\":43368:43369  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":43338:43350  _addressData */\n      0x05\n        /* \"opensea_test_flat.sol\":43338:43356  _addressData[from] */\n      0x00\n        /* \"opensea_test_flat.sol\":43351:43355  from */\n      dup8\n        /* \"opensea_test_flat.sol\":43338:43356  _addressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":43338:43364  _addressData[from].balance */\n      0x00\n      add\n      0x00\n        /* \"opensea_test_flat.sol\":43338:43369  _addressData[from].balance -= 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      sub\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":43411:43412  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":43383:43395  _addressData */\n      0x05\n        /* \"opensea_test_flat.sol\":43383:43399  _addressData[to] */\n      0x00\n        /* \"opensea_test_flat.sol\":43396:43398  to */\n      dup7\n        /* \"opensea_test_flat.sol\":43383:43399  _addressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":43383:43407  _addressData[to].balance */\n      0x00\n      add\n      0x00\n        /* \"opensea_test_flat.sol\":43383:43412  _addressData[to].balance += 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      add\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":43427:43458  TokenOwnership storage currSlot */\n      0x00\n        /* \"opensea_test_flat.sol\":43461:43472  _ownerships */\n      0x04\n        /* \"opensea_test_flat.sol\":43461:43481  _ownerships[tokenId] */\n      0x00\n        /* \"opensea_test_flat.sol\":43473:43480  tokenId */\n      dup6\n        /* \"opensea_test_flat.sol\":43461:43481  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":43427:43481  TokenOwnership storage currSlot = _ownerships[tokenId] */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":43511:43513  to */\n      dup5\n        /* \"opensea_test_flat.sol\":43495:43503  currSlot */\n      dup2\n        /* \"opensea_test_flat.sol\":43495:43508  currSlot.addr */\n      0x00\n      add\n      0x00\n        /* \"opensea_test_flat.sol\":43495:43513  currSlot.addr = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":43560:43575  block.timestamp */\n      timestamp\n        /* \"opensea_test_flat.sol\":43527:43535  currSlot */\n      dup2\n        /* \"opensea_test_flat.sol\":43527:43550  currSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"opensea_test_flat.sol\":43527:43576  currSlot.startTimestamp = uint64(block.timestamp) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":43824:43843  uint256 nextTokenId */\n      0x00\n        /* \"opensea_test_flat.sol\":43856:43857  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":43846:43853  tokenId */\n      dup6\n        /* \"opensea_test_flat.sol\":43846:43857  tokenId + 1 */\n      add\n        /* \"opensea_test_flat.sol\":43824:43857  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":43871:43902  TokenOwnership storage nextSlot */\n      0x00\n        /* \"opensea_test_flat.sol\":43905:43916  _ownerships */\n      0x04\n        /* \"opensea_test_flat.sol\":43905:43929  _ownerships[nextTokenId] */\n      0x00\n        /* \"opensea_test_flat.sol\":43917:43928  nextTokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":43905:43929  _ownerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":43871:43929  TokenOwnership storage nextSlot = _ownerships[nextTokenId] */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":43972:43973  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":43947:43974  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":43947:43955  nextSlot */\n      dup2\n        /* \"opensea_test_flat.sol\":43947:43960  nextSlot.addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":43947:43974  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"opensea_test_flat.sol\":43943:44320  if (nextSlot.addr == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"opensea_test_flat.sol\":44154:44167  _currentIndex */\n      sload(0x00)\n        /* \"opensea_test_flat.sol\":44139:44150  nextTokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":44139:44167  nextTokenId != _currentIndex */\n      eq\n        /* \"opensea_test_flat.sol\":44135:44306  if (nextTokenId != _currentIndex) {... */\n      tag_199\n      jumpi\n        /* \"opensea_test_flat.sol\":44207:44211  from */\n      dup8\n        /* \"opensea_test_flat.sol\":44191:44199  nextSlot */\n      dup2\n        /* \"opensea_test_flat.sol\":44191:44204  nextSlot.addr */\n      0x00\n      add\n      0x00\n        /* \"opensea_test_flat.sol\":44191:44211  nextSlot.addr = from */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":44259:44272  prevOwnership */\n      dup5\n        /* \"opensea_test_flat.sol\":44259:44287  prevOwnership.startTimestamp */\n      0x20\n      add\n      mload\n        /* \"opensea_test_flat.sol\":44233:44241  nextSlot */\n      dup2\n        /* \"opensea_test_flat.sol\":44233:44256  nextSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"opensea_test_flat.sol\":44233:44287  nextSlot.startTimestamp = prevOwnership.startTimestamp */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":44135:44306  if (nextTokenId != _currentIndex) {... */\n    tag_199:\n        /* \"opensea_test_flat.sol\":43943:44320  if (nextSlot.addr == address(0)) {... */\n    tag_198:\n        /* \"opensea_test_flat.sol\":43314:44330  unchecked {... */\n      pop\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":44364:44371  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":44360:44362  to */\n      dup5\n        /* \"opensea_test_flat.sol\":44345:44372  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":44354:44358  from */\n      dup7\n        /* \"opensea_test_flat.sol\":44345:44372  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"opensea_test_flat.sol\":44382:44424  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_200\n        /* \"opensea_test_flat.sol\":44403:44407  from */\n      dup6\n        /* \"opensea_test_flat.sol\":44409:44411  to */\n      dup6\n        /* \"opensea_test_flat.sol\":44413:44420  tokenId */\n      dup6\n        /* \"opensea_test_flat.sol\":44422:44423  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":44382:44402  _afterTokenTransfers */\n      tag_201\n        /* \"opensea_test_flat.sol\":44382:44424  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_200:\n        /* \"opensea_test_flat.sol\":42387:44431  {... */\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":42287:44431  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":3150:3246  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_124:\n        /* \"opensea_test_flat.sol\":3208:3215  uint256 */\n      0x00\n        /* \"opensea_test_flat.sol\":3238:3239  b */\n      dup2\n        /* \"opensea_test_flat.sol\":3234:3235  a */\n      dup4\n        /* \"opensea_test_flat.sol\":3234:3239  a - b */\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"opensea_test_flat.sol\":3227:3239  return a - b */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":3150:3246  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":3493:3589  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_127:\n        /* \"opensea_test_flat.sol\":3551:3558  uint256 */\n      0x00\n        /* \"opensea_test_flat.sol\":3581:3582  b */\n      dup2\n        /* \"opensea_test_flat.sol\":3577:3578  a */\n      dup4\n        /* \"opensea_test_flat.sol\":3577:3582  a * b */\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"opensea_test_flat.sol\":3570:3582  return a * b */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":3493:3589  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":2783:2879  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_129:\n        /* \"opensea_test_flat.sol\":2841:2848  uint256 */\n      0x00\n        /* \"opensea_test_flat.sol\":2871:2872  b */\n      dup2\n        /* \"opensea_test_flat.sol\":2867:2868  a */\n      dup4\n        /* \"opensea_test_flat.sol\":2867:2872  a + b */\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"opensea_test_flat.sol\":2860:2872  return a + b */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":2783:2879  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":34750:35836  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_134:\n        /* \"opensea_test_flat.sol\":34812:34833  TokenOwnership memory */\n      tag_211\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"opensea_test_flat.sol\":34845:34857  uint256 curr */\n      0x00\n        /* \"opensea_test_flat.sol\":34860:34867  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":34845:34867  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":34925:34929  curr */\n      dup1\n        /* \"opensea_test_flat.sol\":34906:34921  _startTokenId() */\n      tag_214\n        /* \"opensea_test_flat.sol\":34906:34919  _startTokenId */\n      tag_118\n        /* \"opensea_test_flat.sol\":34906:34921  _startTokenId() */\n      jump\t// in\n    tag_214:\n        /* \"opensea_test_flat.sol\":34906:34929  _startTokenId() <= curr */\n      gt\n        /* \"opensea_test_flat.sol\":34902:35772  if (_startTokenId() <= curr) if (curr < _currentIndex) {... */\n      tag_215\n      jumpi\n        /* \"opensea_test_flat.sol\":34942:34955  _currentIndex */\n      sload(0x00)\n        /* \"opensea_test_flat.sol\":34935:34939  curr */\n      dup2\n        /* \"opensea_test_flat.sol\":34935:34955  curr < _currentIndex */\n      lt\n        /* \"opensea_test_flat.sol\":34931:35772  if (curr < _currentIndex) {... */\n      iszero\n      tag_216\n      jumpi\n        /* \"opensea_test_flat.sol\":34975:35006  TokenOwnership memory ownership */\n      0x00\n        /* \"opensea_test_flat.sol\":35009:35020  _ownerships */\n      0x04\n        /* \"opensea_test_flat.sol\":35009:35026  _ownerships[curr] */\n      0x00\n        /* \"opensea_test_flat.sol\":35021:35025  curr */\n      dup4\n        /* \"opensea_test_flat.sol\":35009:35026  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":34975:35026  TokenOwnership memory ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":35049:35058  ownership */\n      dup1\n        /* \"opensea_test_flat.sol\":35049:35065  ownership.burned */\n      0x40\n      add\n      mload\n        /* \"opensea_test_flat.sol\":35044:35758  if (!ownership.burned) {... */\n      tag_217\n      jumpi\n        /* \"opensea_test_flat.sol\":35119:35120  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":35093:35121  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":35093:35102  ownership */\n      dup2\n        /* \"opensea_test_flat.sol\":35093:35107  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"opensea_test_flat.sol\":35093:35121  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"opensea_test_flat.sol\":35089:35188  if (ownership.addr != address(0)) {... */\n      tag_218\n      jumpi\n        /* \"opensea_test_flat.sol\":35156:35165  ownership */\n      dup1\n        /* \"opensea_test_flat.sol\":35149:35165  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_213)\n        /* \"opensea_test_flat.sol\":35089:35188  if (ownership.addr != address(0)) {... */\n    tag_218:\n        /* \"opensea_test_flat.sol\":35485:35740  while (true) {... */\n    tag_219:\n        /* \"opensea_test_flat.sol\":35492:35496  true */\n      0x01\n        /* \"opensea_test_flat.sol\":35485:35740  while (true) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"opensea_test_flat.sol\":35524:35530  curr-- */\n      dup2\n      dup1\n      0x01\n      swap1\n      sub\n      swap3\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":35568:35579  _ownerships */\n      0x04\n        /* \"opensea_test_flat.sol\":35568:35585  _ownerships[curr] */\n      0x00\n        /* \"opensea_test_flat.sol\":35580:35584  curr */\n      dup4\n        /* \"opensea_test_flat.sol\":35568:35585  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":35556:35585  ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":35641:35642  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":35615:35643  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":35615:35624  ownership */\n      dup2\n        /* \"opensea_test_flat.sol\":35615:35629  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"opensea_test_flat.sol\":35615:35643  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"opensea_test_flat.sol\":35611:35718  if (ownership.addr != address(0)) {... */\n      tag_221\n      jumpi\n        /* \"opensea_test_flat.sol\":35682:35691  ownership */\n      dup1\n        /* \"opensea_test_flat.sol\":35675:35691  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_213)\n        /* \"opensea_test_flat.sol\":35611:35718  if (ownership.addr != address(0)) {... */\n    tag_221:\n        /* \"opensea_test_flat.sol\":35485:35740  while (true) {... */\n      jump(tag_219)\n    tag_220:\n        /* \"opensea_test_flat.sol\":35044:35758  if (!ownership.burned) {... */\n    tag_217:\n        /* \"opensea_test_flat.sol\":34957:35772  {... */\n      pop\n        /* \"opensea_test_flat.sol\":34931:35772  if (curr < _currentIndex) {... */\n    tag_216:\n        /* \"opensea_test_flat.sol\":34902:35772  if (_startTokenId() <= curr) if (curr < _currentIndex) {... */\n    tag_215:\n        /* \"opensea_test_flat.sol\":35798:35829  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":34750:35836  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_213:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":39755:39857  function _safeMint(address to, uint256 quantity) internal {... */\n    tag_145:\n        /* \"opensea_test_flat.sol\":39823:39850  _safeMint(to, quantity, '') */\n      tag_223\n        /* \"opensea_test_flat.sol\":39833:39835  to */\n      dup3\n        /* \"opensea_test_flat.sol\":39837:39845  quantity */\n      dup3\n        /* \"opensea_test_flat.sol\":39823:39850  _safeMint(to, quantity, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"opensea_test_flat.sol\":39823:39832  _safeMint */\n      tag_224\n        /* \"opensea_test_flat.sol\":39823:39850  _safeMint(to, quantity, '') */\n      jump\t// in\n    tag_223:\n        /* \"opensea_test_flat.sol\":39755:39857  function _safeMint(address to, uint256 quantity) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":10928:11248  function isContract(address account) internal view returns (bool) {... */\n    tag_155:\n        /* \"opensea_test_flat.sol\":10988:10992  bool */\n      0x00\n        /* \"opensea_test_flat.sol\":11240:11241  0 */\n      dup1\n        /* \"opensea_test_flat.sol\":11218:11225  account */\n      dup3\n        /* \"opensea_test_flat.sol\":11218:11237  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"opensea_test_flat.sol\":11218:11241  account.code.length > 0 */\n      gt\n        /* \"opensea_test_flat.sol\":11211:11241  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":10928:11248  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":47982:48632  function _checkContractOnERC721Received(... */\n    tag_158:\n        /* \"opensea_test_flat.sol\":48140:48144  bool */\n      0x00\n        /* \"opensea_test_flat.sol\":48176:48178  to */\n      dup4\n        /* \"opensea_test_flat.sol\":48160:48196  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"opensea_test_flat.sol\":48197:48209  _msgSender() */\n      tag_227\n        /* \"opensea_test_flat.sol\":48197:48207  _msgSender */\n      tag_109\n        /* \"opensea_test_flat.sol\":48197:48209  _msgSender() */\n      jump\t// in\n    tag_227:\n        /* \"opensea_test_flat.sol\":48211:48215  from */\n      dup8\n        /* \"opensea_test_flat.sol\":48217:48224  tokenId */\n      dup7\n        /* \"opensea_test_flat.sol\":48226:48231  _data */\n      dup7\n        /* \"opensea_test_flat.sol\":48160:48232  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_230\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_231\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      0x01\n    tag_230:\n        /* \"opensea_test_flat.sol\":48156:48626  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_233\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_238\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_237)\n    tag_238:\n      0x60\n      swap2\n      pop\n    tag_237:\n      pop\n        /* \"opensea_test_flat.sol\":48408:48409  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":48391:48397  reason */\n      dup2\n        /* \"opensea_test_flat.sol\":48391:48404  reason.length */\n      mload\n        /* \"opensea_test_flat.sol\":48391:48409  reason.length == 0 */\n      sub\n        /* \"opensea_test_flat.sol\":48387:48616  if (reason.length == 0) {... */\n      tag_239\n      jumpi\n        /* \"opensea_test_flat.sol\":48436:48476  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":48387:48616  if (reason.length == 0) {... */\n    tag_239:\n        /* \"opensea_test_flat.sol\":48576:48582  reason */\n      dup1\n        /* \"opensea_test_flat.sol\":48570:48583  mload(reason) */\n      mload\n        /* \"opensea_test_flat.sol\":48561:48567  reason */\n      dup2\n        /* \"opensea_test_flat.sol\":48557:48559  32 */\n      0x20\n        /* \"opensea_test_flat.sol\":48553:48568  add(32, reason) */\n      add\n        /* \"opensea_test_flat.sol\":48546:48584  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"opensea_test_flat.sol\":48156:48626  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_233:\n        /* \"opensea_test_flat.sol\":48288:48333  IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"opensea_test_flat.sol\":48278:48333  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"opensea_test_flat.sol\":48278:48284  retval */\n      dup2\n        /* \"opensea_test_flat.sol\":48278:48333  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"opensea_test_flat.sol\":48271:48333  return retval == IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":47982:48632  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":36962:37144  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_164:\n        /* \"opensea_test_flat.sol\":37013:37026  string memory */\n      0x60\n        /* \"opensea_test_flat.sol\":37038:37128  return 'https://gateway.pinata.cloud/ipfs/QmWuZ6PWJSWppM5Ah4C7tx6dhEGobkhknsLX34FB9WtnhM/' */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x51\n      dup2\n      mstore\n      0x20\n      add\n      data_873fd5f964b13e1038074dfa7bf985864a803be90f361e484b606b70d53e1173\n      0x51\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":36962:37144  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"opensea_test_flat.sol\":7161:7864  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_168:\n        /* \"opensea_test_flat.sol\":7217:7230  string memory */\n      0x60\n        /* \"opensea_test_flat.sol\":7443:7444  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":7434:7439  value */\n      dup3\n        /* \"opensea_test_flat.sol\":7434:7444  value == 0 */\n      sub\n        /* \"opensea_test_flat.sol\":7430:7481  if (value == 0) {... */\n      tag_244\n      jumpi\n        /* \"opensea_test_flat.sol\":7460:7470  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_243)\n        /* \"opensea_test_flat.sol\":7430:7481  if (value == 0) {... */\n    tag_244:\n        /* \"opensea_test_flat.sol\":7490:7502  uint256 temp */\n      0x00\n        /* \"opensea_test_flat.sol\":7505:7510  value */\n      dup3\n        /* \"opensea_test_flat.sol\":7490:7510  uint256 temp = value */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":7520:7534  uint256 digits */\n      0x00\n        /* \"opensea_test_flat.sol\":7544:7619  while (temp != 0) {... */\n    tag_245:\n        /* \"opensea_test_flat.sol\":7559:7560  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":7551:7555  temp */\n      dup3\n        /* \"opensea_test_flat.sol\":7551:7560  temp != 0 */\n      eq\n        /* \"opensea_test_flat.sol\":7544:7619  while (temp != 0) {... */\n      tag_246\n      jumpi\n        /* \"opensea_test_flat.sol\":7576:7584  digits++ */\n      dup1\n      dup1\n      tag_247\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      swap2\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":7606:7608  10 */\n      0x0a\n        /* \"opensea_test_flat.sol\":7598:7608  temp /= 10 */\n      dup3\n      tag_249\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      swap2\n      pop\n        /* \"opensea_test_flat.sol\":7544:7619  while (temp != 0) {... */\n      jump(tag_245)\n    tag_246:\n        /* \"opensea_test_flat.sol\":7628:7647  bytes memory buffer */\n      0x00\n        /* \"opensea_test_flat.sol\":7660:7666  digits */\n      dup2\n        /* \"opensea_test_flat.sol\":7650:7667  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_251\n      jumpi\n      tag_252\n      tag_253\n      jump\t// in\n    tag_252:\n    tag_251:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_254\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_254:\n      pop\n        /* \"opensea_test_flat.sol\":7628:7667  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":7677:7827  while (value != 0) {... */\n    tag_255:\n        /* \"opensea_test_flat.sol\":7693:7694  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":7684:7689  value */\n      dup6\n        /* \"opensea_test_flat.sol\":7684:7694  value != 0 */\n      eq\n        /* \"opensea_test_flat.sol\":7677:7827  while (value != 0) {... */\n      tag_256\n      jumpi\n        /* \"opensea_test_flat.sol\":7720:7721  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":7710:7721  digits -= 1 */\n      dup3\n      tag_257\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_257:\n      swap2\n      pop\n        /* \"opensea_test_flat.sol\":7786:7788  10 */\n      0x0a\n        /* \"opensea_test_flat.sol\":7778:7783  value */\n      dup6\n        /* \"opensea_test_flat.sol\":7778:7788  value % 10 */\n      tag_258\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"opensea_test_flat.sol\":7765:7767  48 */\n      0x30\n        /* \"opensea_test_flat.sol\":7765:7789  48 + uint256(value % 10) */\n      tag_260\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_260:\n        /* \"opensea_test_flat.sol\":7752:7791  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"opensea_test_flat.sol\":7735:7741  buffer */\n      dup2\n        /* \"opensea_test_flat.sol\":7742:7748  digits */\n      dup4\n        /* \"opensea_test_flat.sol\":7735:7749  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_261\n      jumpi\n      tag_262\n      tag_263\n      jump\t// in\n    tag_262:\n    tag_261:\n      0x20\n      add\n      add\n        /* \"opensea_test_flat.sol\":7735:7791  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"opensea_test_flat.sol\":7814:7816  10 */\n      0x0a\n        /* \"opensea_test_flat.sol\":7805:7816  value /= 10 */\n      dup6\n      tag_264\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_264:\n      swap5\n      pop\n        /* \"opensea_test_flat.sol\":7677:7827  while (value != 0) {... */\n      jump(tag_255)\n    tag_256:\n        /* \"opensea_test_flat.sol\":7850:7856  buffer */\n      dup1\n        /* \"opensea_test_flat.sol\":7836:7857  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":7161:7864  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_243:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":31769:31993  function updateBlockScore(address user)private{... */\n    tag_182:\n        /* \"opensea_test_flat.sol\":31825:31838  uint256 Score */\n      0x00\n        /* \"opensea_test_flat.sol\":31841:31857  BlockScore(user) */\n      tag_266\n        /* \"opensea_test_flat.sol\":31852:31856  user */\n      dup3\n        /* \"opensea_test_flat.sol\":31841:31851  BlockScore */\n      tag_53\n        /* \"opensea_test_flat.sol\":31841:31857  BlockScore(user) */\n      jump\t// in\n    tag_266:\n        /* \"opensea_test_flat.sol\":31825:31857  uint256 Score = BlockScore(user) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":31895:31926  _BlockScore[user][2].add(Score) */\n      tag_267\n        /* \"opensea_test_flat.sol\":31920:31925  Score */\n      dup2\n        /* \"opensea_test_flat.sol\":31895:31906  _BlockScore */\n      0x08\n        /* \"opensea_test_flat.sol\":31895:31912  _BlockScore[user] */\n      0x00\n        /* \"opensea_test_flat.sol\":31907:31911  user */\n      dup6\n        /* \"opensea_test_flat.sol\":31895:31912  _BlockScore[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":31895:31915  _BlockScore[user][2] */\n      0x00\n        /* \"opensea_test_flat.sol\":31913:31914  2 */\n      0x02\n        /* \"opensea_test_flat.sol\":31895:31915  _BlockScore[user][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"opensea_test_flat.sol\":31895:31919  _BlockScore[user][2].add */\n      tag_129\n      swap1\n        /* \"opensea_test_flat.sol\":31895:31926  _BlockScore[user][2].add(Score) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_267:\n        /* \"opensea_test_flat.sol\":31874:31885  _BlockScore */\n      0x08\n        /* \"opensea_test_flat.sol\":31874:31891  _BlockScore[user] */\n      0x00\n        /* \"opensea_test_flat.sol\":31886:31890  user */\n      dup5\n        /* \"opensea_test_flat.sol\":31874:31891  _BlockScore[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":31874:31894  _BlockScore[user][2] */\n      0x00\n        /* \"opensea_test_flat.sol\":31892:31893  2 */\n      0x02\n        /* \"opensea_test_flat.sol\":31874:31894  _BlockScore[user][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":31874:31926  _BlockScore[user][2]=_BlockScore[user][2].add(Score) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":31966:31978  block.number */\n      number\n        /* \"opensea_test_flat.sol\":31943:31954  _BlockScore */\n      0x08\n        /* \"opensea_test_flat.sol\":31943:31960  _BlockScore[user] */\n      0x00\n        /* \"opensea_test_flat.sol\":31955:31959  user */\n      dup5\n        /* \"opensea_test_flat.sol\":31943:31960  _BlockScore[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":31943:31963  _BlockScore[user][1] */\n      0x00\n        /* \"opensea_test_flat.sol\":31961:31962  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":31943:31963  _BlockScore[user][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":31943:31978  _BlockScore[user][1] = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":31815:31993  {... */\n      pop\n        /* \"opensea_test_flat.sol\":31769:31993  function updateBlockScore(address user)private{... */\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":49263:49417  function _beforeTokenTransfers(... */\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":50058:50211  function _afterTokenTransfers(... */\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":40217:42040  function _safeMint(... */\n    tag_224:\n        /* \"opensea_test_flat.sol\":40420:40440  updateBlockScore(to) */\n      tag_271\n        /* \"opensea_test_flat.sol\":40437:40439  to */\n      dup4\n        /* \"opensea_test_flat.sol\":40420:40436  updateBlockScore */\n      tag_182\n        /* \"opensea_test_flat.sol\":40420:40440  updateBlockScore(to) */\n      jump\t// in\n    tag_271:\n        /* \"opensea_test_flat.sol\":40450:40470  uint256 startTokenId */\n      0x00\n        /* \"opensea_test_flat.sol\":40473:40486  _currentIndex */\n      dup1\n      sload\n        /* \"opensea_test_flat.sol\":40450:40486  uint256 startTokenId = _currentIndex */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":40514:40515  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":40500:40516  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":40500:40502  to */\n      dup5\n        /* \"opensea_test_flat.sol\":40500:40516  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"opensea_test_flat.sol\":40496:40544  if (to == address(0)) revert MintToZeroAddress() */\n      tag_272\n      jumpi\n        /* \"opensea_test_flat.sol\":40525:40544  MintToZeroAddress() */\n      mload(0x40)\n      0x2e07630000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":40496:40544  if (to == address(0)) revert MintToZeroAddress() */\n    tag_272:\n        /* \"opensea_test_flat.sol\":40570:40571  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":40558:40566  quantity */\n      dup4\n        /* \"opensea_test_flat.sol\":40558:40571  quantity == 0 */\n      sub\n        /* \"opensea_test_flat.sol\":40554:40598  if (quantity == 0) revert MintZeroQuantity() */\n      tag_273\n      jumpi\n        /* \"opensea_test_flat.sol\":40580:40598  MintZeroQuantity() */\n      mload(0x40)\n      0xb562e8dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":40554:40598  if (quantity == 0) revert MintZeroQuantity() */\n    tag_273:\n        /* \"opensea_test_flat.sol\":40609:40670  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_274\n        /* \"opensea_test_flat.sol\":40639:40640  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":40643:40645  to */\n      dup6\n        /* \"opensea_test_flat.sol\":40647:40659  startTokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":40661:40669  quantity */\n      dup7\n        /* \"opensea_test_flat.sol\":40609:40630  _beforeTokenTransfers */\n      tag_196\n        /* \"opensea_test_flat.sol\":40609:40670  _beforeTokenTransfers(address(0), to, startTokenId, quantity) */\n      jump\t// in\n    tag_274:\n        /* \"opensea_test_flat.sol\":40976:40984  quantity */\n      dup3\n        /* \"opensea_test_flat.sol\":40941:40953  _addressData */\n      0x05\n        /* \"opensea_test_flat.sol\":40941:40957  _addressData[to] */\n      0x00\n        /* \"opensea_test_flat.sol\":40954:40956  to */\n      dup7\n        /* \"opensea_test_flat.sol\":40941:40957  _addressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":40941:40965  _addressData[to].balance */\n      0x00\n      add\n      0x00\n        /* \"opensea_test_flat.sol\":40941:40985  _addressData[to].balance += uint64(quantity) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      add\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":41039:41047  quantity */\n      dup3\n        /* \"opensea_test_flat.sol\":40999:41011  _addressData */\n      0x05\n        /* \"opensea_test_flat.sol\":40999:41015  _addressData[to] */\n      0x00\n        /* \"opensea_test_flat.sol\":41012:41014  to */\n      dup7\n        /* \"opensea_test_flat.sol\":40999:41015  _addressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":40999:41028  _addressData[to].numberMinted */\n      0x00\n      add\n      0x08\n        /* \"opensea_test_flat.sol\":40999:41048  _addressData[to].numberMinted += uint64(quantity) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      add\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":41096:41098  to */\n      dup4\n        /* \"opensea_test_flat.sol\":41063:41074  _ownerships */\n      0x04\n        /* \"opensea_test_flat.sol\":41063:41088  _ownerships[startTokenId] */\n      0x00\n        /* \"opensea_test_flat.sol\":41075:41087  startTokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":41063:41088  _ownerships[startTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":41063:41093  _ownerships[startTokenId].addr */\n      0x00\n      add\n      0x00\n        /* \"opensea_test_flat.sol\":41063:41098  _ownerships[startTokenId].addr = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":41162:41177  block.timestamp */\n      timestamp\n        /* \"opensea_test_flat.sol\":41112:41123  _ownerships */\n      0x04\n        /* \"opensea_test_flat.sol\":41112:41137  _ownerships[startTokenId] */\n      0x00\n        /* \"opensea_test_flat.sol\":41124:41136  startTokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":41112:41137  _ownerships[startTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":41112:41152  _ownerships[startTokenId].startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"opensea_test_flat.sol\":41112:41178  _ownerships[startTokenId].startTimestamp = uint64(block.timestamp) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":41193:41213  uint256 updatedIndex */\n      0x00\n        /* \"opensea_test_flat.sol\":41216:41228  startTokenId */\n      dup2\n        /* \"opensea_test_flat.sol\":41193:41228  uint256 updatedIndex = startTokenId */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":41242:41253  uint256 end */\n      0x00\n        /* \"opensea_test_flat.sol\":41271:41279  quantity */\n      dup5\n        /* \"opensea_test_flat.sol\":41256:41268  updatedIndex */\n      dup3\n        /* \"opensea_test_flat.sol\":41256:41279  updatedIndex + quantity */\n      add\n        /* \"opensea_test_flat.sol\":41242:41279  uint256 end = updatedIndex + quantity */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":41298:41313  to.isContract() */\n      tag_275\n        /* \"opensea_test_flat.sol\":41298:41300  to */\n      dup7\n        /* \"opensea_test_flat.sol\":41298:41311  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_155\n        /* \"opensea_test_flat.sol\":41298:41313  to.isContract() */\n      jump\t// in\n    tag_275:\n        /* \"opensea_test_flat.sol\":41294:41912  if (to.isContract()) {... */\n      iszero\n      tag_276\n      jumpi\n        /* \"opensea_test_flat.sol\":41333:41641  do {... */\n    tag_277:\n        /* \"opensea_test_flat.sol\":41388:41400  updatedIndex */\n      dup2\n        /* \"opensea_test_flat.sol\":41384:41386  to */\n      dup7\n        /* \"opensea_test_flat.sol\":41363:41401  Transfer(address(0), to, updatedIndex) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":41380:41381  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":41363:41401  Transfer(address(0), to, updatedIndex) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"opensea_test_flat.sol\":41428:41497  _checkContractOnERC721Received(address(0), to, updatedIndex++, _data) */\n      tag_280\n        /* \"opensea_test_flat.sol\":41467:41468  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":41471:41473  to */\n      dup8\n        /* \"opensea_test_flat.sol\":41475:41489  updatedIndex++ */\n      dup5\n      dup1\n      0x01\n      add\n      swap6\n      pop\n        /* \"opensea_test_flat.sol\":41491:41496  _data */\n      dup8\n        /* \"opensea_test_flat.sol\":41428:41458  _checkContractOnERC721Received */\n      tag_158\n        /* \"opensea_test_flat.sol\":41428:41497  _checkContractOnERC721Received(address(0), to, updatedIndex++, _data) */\n      jump\t// in\n    tag_280:\n        /* \"opensea_test_flat.sol\":41423:41595  if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {... */\n      tag_281\n      jumpi\n        /* \"opensea_test_flat.sol\":41532:41572  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":41423:41595  if (!_checkContractOnERC721Received(address(0), to, updatedIndex++, _data)) {... */\n    tag_281:\n        /* \"opensea_test_flat.sol\":41636:41639  end */\n      dup1\n        /* \"opensea_test_flat.sol\":41621:41633  updatedIndex */\n      dup3\n        /* \"opensea_test_flat.sol\":41621:41639  updatedIndex < end */\n      lt\n        /* \"opensea_test_flat.sol\":41333:41641  do {... */\n      tag_277\n      jumpi\n        /* \"opensea_test_flat.sol\":41720:41732  startTokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":41703:41716  _currentIndex */\n      sload(0x00)\n        /* \"opensea_test_flat.sol\":41703:41732  _currentIndex != startTokenId */\n      eq\n        /* \"opensea_test_flat.sol\":41699:41742  if (_currentIndex != startTokenId) revert() */\n      tag_282\n      jumpi\n        /* \"opensea_test_flat.sol\":41734:41742  revert() */\n      0x00\n      dup1\n      revert\n        /* \"opensea_test_flat.sol\":41699:41742  if (_currentIndex != startTokenId) revert() */\n    tag_282:\n        /* \"opensea_test_flat.sol\":41294:41912  if (to.isContract()) {... */\n      jump(tag_283)\n    tag_276:\n        /* \"opensea_test_flat.sol\":41781:41898  do {... */\n    tag_284:\n        /* \"opensea_test_flat.sol\":41836:41850  updatedIndex++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n        /* \"opensea_test_flat.sol\":41832:41834  to */\n      dup7\n        /* \"opensea_test_flat.sol\":41811:41851  Transfer(address(0), to, updatedIndex++) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":41828:41829  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":41811:41851  Transfer(address(0), to, updatedIndex++) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"opensea_test_flat.sol\":41893:41896  end */\n      dup1\n        /* \"opensea_test_flat.sol\":41878:41890  updatedIndex */\n      dup3\n        /* \"opensea_test_flat.sol\":41878:41896  updatedIndex < end */\n      lt\n        /* \"opensea_test_flat.sol\":41781:41898  do {... */\n      tag_284\n      jumpi\n        /* \"opensea_test_flat.sol\":41294:41912  if (to.isContract()) {... */\n    tag_283:\n        /* \"opensea_test_flat.sol\":41941:41953  updatedIndex */\n      dup2\n        /* \"opensea_test_flat.sol\":41925:41938  _currentIndex */\n      0x00\n        /* \"opensea_test_flat.sol\":41925:41953  _currentIndex = updatedIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":40917:41964  unchecked {... */\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":41973:42033  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      tag_287\n        /* \"opensea_test_flat.sol\":42002:42003  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":42006:42008  to */\n      dup6\n        /* \"opensea_test_flat.sol\":42010:42022  startTokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":42024:42032  quantity */\n      dup7\n        /* \"opensea_test_flat.sol\":41973:41993  _afterTokenTransfers */\n      tag_201\n        /* \"opensea_test_flat.sol\":41973:42033  _afterTokenTransfers(address(0), to, startTokenId, quantity) */\n      jump\t// in\n    tag_287:\n        /* \"opensea_test_flat.sol\":40325:42040  {   ... */\n      pop\n        /* \"opensea_test_flat.sol\":40217:42040  function _safeMint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_212:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_288:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_289:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_290:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_291:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_292:\n        /* \"#utility.yul\":561:584   */\n      tag_335\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_291\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_336:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_293:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_338\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_292\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_24:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_341\n      tag_289\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":833:952   */\n    tag_340:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_342\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_293\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_294:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_295:\n        /* \"#utility.yul\":1268:1289   */\n      tag_345\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_294\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_27:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_347\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_295\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_296:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_297:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2105   */\n    tag_298:\n        /* \"#utility.yul\":1866:1867   */\n      0x00\n        /* \"#utility.yul\":1876:1989   */\n    tag_351:\n        /* \"#utility.yul\":1890:1896   */\n      dup4\n        /* \"#utility.yul\":1887:1888   */\n      dup2\n        /* \"#utility.yul\":1884:1897   */\n      lt\n        /* \"#utility.yul\":1876:1989   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":1975:1976   */\n      dup1\n        /* \"#utility.yul\":1970:1973   */\n      dup3\n        /* \"#utility.yul\":1966:1977   */\n      add\n        /* \"#utility.yul\":1960:1978   */\n      mload\n        /* \"#utility.yul\":1956:1957   */\n      dup2\n        /* \"#utility.yul\":1951:1954   */\n      dup5\n        /* \"#utility.yul\":1947:1958   */\n      add\n        /* \"#utility.yul\":1940:1979   */\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1909:1910   */\n      dup2\n        /* \"#utility.yul\":1905:1915   */\n      add\n        /* \"#utility.yul\":1900:1915   */\n      swap1\n      pop\n        /* \"#utility.yul\":1876:1989   */\n      jump(tag_351)\n    tag_353:\n        /* \"#utility.yul\":2007:2013   */\n      dup4\n        /* \"#utility.yul\":2004:2005   */\n      dup2\n        /* \"#utility.yul\":2001:2014   */\n      gt\n        /* \"#utility.yul\":1998:2099   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2078:2084   */\n      dup5\n        /* \"#utility.yul\":2073:2076   */\n      dup5\n        /* \"#utility.yul\":2069:2085   */\n      add\n        /* \"#utility.yul\":2062:2089   */\n      mstore\n        /* \"#utility.yul\":1998:2099   */\n    tag_354:\n        /* \"#utility.yul\":1847:2105   */\n      pop\n        /* \"#utility.yul\":1798:2105   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2111:2213   */\n    tag_299:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2203:2205   */\n      0x1f\n        /* \"#utility.yul\":2199:2206   */\n      not\n        /* \"#utility.yul\":2194:2196   */\n      0x1f\n        /* \"#utility.yul\":2187:2192   */\n      dup4\n        /* \"#utility.yul\":2183:2197   */\n      add\n        /* \"#utility.yul\":2179:2207   */\n      and\n        /* \"#utility.yul\":2169:2207   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2583   */\n    tag_300:\n        /* \"#utility.yul\":2307:2310   */\n      0x00\n        /* \"#utility.yul\":2335:2374   */\n      tag_357\n        /* \"#utility.yul\":2368:2373   */\n      dup3\n        /* \"#utility.yul\":2335:2374   */\n      tag_296\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2390:2461   */\n      tag_358\n        /* \"#utility.yul\":2454:2460   */\n      dup2\n        /* \"#utility.yul\":2449:2452   */\n      dup6\n        /* \"#utility.yul\":2390:2461   */\n      tag_297\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":2383:2461   */\n      swap4\n      pop\n        /* \"#utility.yul\":2470:2522   */\n      tag_359\n        /* \"#utility.yul\":2515:2521   */\n      dup2\n        /* \"#utility.yul\":2510:2513   */\n      dup6\n        /* \"#utility.yul\":2503:2507   */\n      0x20\n        /* \"#utility.yul\":2496:2501   */\n      dup7\n        /* \"#utility.yul\":2492:2508   */\n      add\n        /* \"#utility.yul\":2470:2522   */\n      tag_298\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":2547:2576   */\n      tag_360\n        /* \"#utility.yul\":2569:2575   */\n      dup2\n        /* \"#utility.yul\":2547:2576   */\n      tag_299\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":2542:2545   */\n      dup5\n        /* \"#utility.yul\":2538:2577   */\n      add\n        /* \"#utility.yul\":2531:2577   */\n      swap2\n      pop\n        /* \"#utility.yul\":2311:2583   */\n      pop\n        /* \"#utility.yul\":2219:2583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:2902   */\n    tag_31:\n        /* \"#utility.yul\":2702:2706   */\n      0x00\n        /* \"#utility.yul\":2740:2742   */\n      0x20\n        /* \"#utility.yul\":2729:2738   */\n      dup3\n        /* \"#utility.yul\":2725:2743   */\n      add\n        /* \"#utility.yul\":2717:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2789:2798   */\n      dup2\n        /* \"#utility.yul\":2783:2787   */\n      dup2\n        /* \"#utility.yul\":2779:2799   */\n      sub\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2753:2800   */\n      mstore\n        /* \"#utility.yul\":2817:2895   */\n      tag_362\n        /* \"#utility.yul\":2890:2894   */\n      dup2\n        /* \"#utility.yul\":2881:2887   */\n      dup5\n        /* \"#utility.yul\":2817:2895   */\n      tag_300\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":2809:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2589:2902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2908:2985   */\n    tag_301:\n        /* \"#utility.yul\":2945:2952   */\n      0x00\n        /* \"#utility.yul\":2974:2979   */\n      dup2\n        /* \"#utility.yul\":2963:2979   */\n      swap1\n      pop\n        /* \"#utility.yul\":2908:2985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2991:3113   */\n    tag_302:\n        /* \"#utility.yul\":3064:3088   */\n      tag_365\n        /* \"#utility.yul\":3082:3087   */\n      dup2\n        /* \"#utility.yul\":3064:3088   */\n      tag_301\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":3057:3062   */\n      dup2\n        /* \"#utility.yul\":3054:3089   */\n      eq\n        /* \"#utility.yul\":3044:3107   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":3103:3104   */\n      0x00\n        /* \"#utility.yul\":3100:3101   */\n      dup1\n        /* \"#utility.yul\":3093:3105   */\n      revert\n        /* \"#utility.yul\":3044:3107   */\n    tag_366:\n        /* \"#utility.yul\":2991:3113   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3258   */\n    tag_303:\n        /* \"#utility.yul\":3165:3170   */\n      0x00\n        /* \"#utility.yul\":3203:3209   */\n      dup2\n        /* \"#utility.yul\":3190:3210   */\n      calldataload\n        /* \"#utility.yul\":3181:3210   */\n      swap1\n      pop\n        /* \"#utility.yul\":3219:3252   */\n      tag_368\n        /* \"#utility.yul\":3246:3251   */\n      dup2\n        /* \"#utility.yul\":3219:3252   */\n      tag_302\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":3119:3258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3593   */\n    tag_34:\n        /* \"#utility.yul\":3323:3329   */\n      0x00\n        /* \"#utility.yul\":3372:3374   */\n      0x20\n        /* \"#utility.yul\":3360:3369   */\n      dup3\n        /* \"#utility.yul\":3351:3358   */\n      dup5\n        /* \"#utility.yul\":3347:3370   */\n      sub\n        /* \"#utility.yul\":3343:3375   */\n      slt\n        /* \"#utility.yul\":3340:3459   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":3378:3457   */\n      tag_371\n      tag_289\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3340:3459   */\n    tag_370:\n        /* \"#utility.yul\":3498:3499   */\n      0x00\n        /* \"#utility.yul\":3523:3576   */\n      tag_372\n        /* \"#utility.yul\":3568:3575   */\n      dup5\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3548:3557   */\n      dup6\n        /* \"#utility.yul\":3544:3566   */\n      add\n        /* \"#utility.yul\":3523:3576   */\n      tag_303\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":3513:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3469:3586   */\n      pop\n        /* \"#utility.yul\":3264:3593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3599:3725   */\n    tag_304:\n        /* \"#utility.yul\":3636:3643   */\n      0x00\n        /* \"#utility.yul\":3676:3718   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3669:3674   */\n      dup3\n        /* \"#utility.yul\":3665:3719   */\n      and\n        /* \"#utility.yul\":3654:3719   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3731:3827   */\n    tag_305:\n        /* \"#utility.yul\":3768:3775   */\n      0x00\n        /* \"#utility.yul\":3797:3821   */\n      tag_375\n        /* \"#utility.yul\":3815:3820   */\n      dup3\n        /* \"#utility.yul\":3797:3821   */\n      tag_304\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":3786:3821   */\n      swap1\n      pop\n        /* \"#utility.yul\":3731:3827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3833:3951   */\n    tag_306:\n        /* \"#utility.yul\":3920:3944   */\n      tag_377\n        /* \"#utility.yul\":3938:3943   */\n      dup2\n        /* \"#utility.yul\":3920:3944   */\n      tag_305\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":3915:3918   */\n      dup3\n        /* \"#utility.yul\":3908:3945   */\n      mstore\n        /* \"#utility.yul\":3833:3951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3957:4179   */\n    tag_37:\n        /* \"#utility.yul\":4050:4054   */\n      0x00\n        /* \"#utility.yul\":4088:4090   */\n      0x20\n        /* \"#utility.yul\":4077:4086   */\n      dup3\n        /* \"#utility.yul\":4073:4091   */\n      add\n        /* \"#utility.yul\":4065:4091   */\n      swap1\n      pop\n        /* \"#utility.yul\":4101:4172   */\n      tag_379\n        /* \"#utility.yul\":4169:4170   */\n      0x00\n        /* \"#utility.yul\":4158:4167   */\n      dup4\n        /* \"#utility.yul\":4154:4171   */\n      add\n        /* \"#utility.yul\":4145:4151   */\n      dup5\n        /* \"#utility.yul\":4101:4172   */\n      tag_306\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":3957:4179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4185:4307   */\n    tag_307:\n        /* \"#utility.yul\":4258:4282   */\n      tag_381\n        /* \"#utility.yul\":4276:4281   */\n      dup2\n        /* \"#utility.yul\":4258:4282   */\n      tag_305\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":4251:4256   */\n      dup2\n        /* \"#utility.yul\":4248:4283   */\n      eq\n        /* \"#utility.yul\":4238:4301   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4294:4295   */\n      dup1\n        /* \"#utility.yul\":4287:4299   */\n      revert\n        /* \"#utility.yul\":4238:4301   */\n    tag_382:\n        /* \"#utility.yul\":4185:4307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4313:4452   */\n    tag_308:\n        /* \"#utility.yul\":4359:4364   */\n      0x00\n        /* \"#utility.yul\":4397:4403   */\n      dup2\n        /* \"#utility.yul\":4384:4404   */\n      calldataload\n        /* \"#utility.yul\":4375:4404   */\n      swap1\n      pop\n        /* \"#utility.yul\":4413:4446   */\n      tag_384\n        /* \"#utility.yul\":4440:4445   */\n      dup2\n        /* \"#utility.yul\":4413:4446   */\n      tag_307\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":4313:4452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4458:4932   */\n    tag_40:\n        /* \"#utility.yul\":4526:4532   */\n      0x00\n        /* \"#utility.yul\":4534:4540   */\n      dup1\n        /* \"#utility.yul\":4583:4585   */\n      0x40\n        /* \"#utility.yul\":4571:4580   */\n      dup4\n        /* \"#utility.yul\":4562:4569   */\n      dup6\n        /* \"#utility.yul\":4558:4581   */\n      sub\n        /* \"#utility.yul\":4554:4586   */\n      slt\n        /* \"#utility.yul\":4551:4670   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":4589:4668   */\n      tag_387\n      tag_289\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":4551:4670   */\n    tag_386:\n        /* \"#utility.yul\":4709:4710   */\n      0x00\n        /* \"#utility.yul\":4734:4787   */\n      tag_388\n        /* \"#utility.yul\":4779:4786   */\n      dup6\n        /* \"#utility.yul\":4770:4776   */\n      dup3\n        /* \"#utility.yul\":4759:4768   */\n      dup7\n        /* \"#utility.yul\":4755:4777   */\n      add\n        /* \"#utility.yul\":4734:4787   */\n      tag_308\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4724:4787   */\n      swap3\n      pop\n        /* \"#utility.yul\":4680:4797   */\n      pop\n        /* \"#utility.yul\":4836:4838   */\n      0x20\n        /* \"#utility.yul\":4862:4915   */\n      tag_389\n        /* \"#utility.yul\":4907:4914   */\n      dup6\n        /* \"#utility.yul\":4898:4904   */\n      dup3\n        /* \"#utility.yul\":4887:4896   */\n      dup7\n        /* \"#utility.yul\":4883:4905   */\n      add\n        /* \"#utility.yul\":4862:4915   */\n      tag_303\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":4852:4915   */\n      swap2\n      pop\n        /* \"#utility.yul\":4807:4925   */\n      pop\n        /* \"#utility.yul\":4458:4932   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5056   */\n    tag_309:\n        /* \"#utility.yul\":5025:5049   */\n      tag_391\n        /* \"#utility.yul\":5043:5048   */\n      dup2\n        /* \"#utility.yul\":5025:5049   */\n      tag_301\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":5020:5023   */\n      dup3\n        /* \"#utility.yul\":5013:5050   */\n      mstore\n        /* \"#utility.yul\":4938:5056   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5062:5284   */\n    tag_45:\n        /* \"#utility.yul\":5155:5159   */\n      0x00\n        /* \"#utility.yul\":5193:5195   */\n      0x20\n        /* \"#utility.yul\":5182:5191   */\n      dup3\n        /* \"#utility.yul\":5178:5196   */\n      add\n        /* \"#utility.yul\":5170:5196   */\n      swap1\n      pop\n        /* \"#utility.yul\":5206:5277   */\n      tag_393\n        /* \"#utility.yul\":5274:5275   */\n      0x00\n        /* \"#utility.yul\":5263:5272   */\n      dup4\n        /* \"#utility.yul\":5259:5276   */\n      add\n        /* \"#utility.yul\":5250:5256   */\n      dup5\n        /* \"#utility.yul\":5206:5277   */\n      tag_309\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5062:5284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5290:5909   */\n    tag_48:\n        /* \"#utility.yul\":5367:5373   */\n      0x00\n        /* \"#utility.yul\":5375:5381   */\n      dup1\n        /* \"#utility.yul\":5383:5389   */\n      0x00\n        /* \"#utility.yul\":5432:5434   */\n      0x60\n        /* \"#utility.yul\":5420:5429   */\n      dup5\n        /* \"#utility.yul\":5411:5418   */\n      dup7\n        /* \"#utility.yul\":5407:5430   */\n      sub\n        /* \"#utility.yul\":5403:5435   */\n      slt\n        /* \"#utility.yul\":5400:5519   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":5438:5517   */\n      tag_396\n      tag_289\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5400:5519   */\n    tag_395:\n        /* \"#utility.yul\":5558:5559   */\n      0x00\n        /* \"#utility.yul\":5583:5636   */\n      tag_397\n        /* \"#utility.yul\":5628:5635   */\n      dup7\n        /* \"#utility.yul\":5619:5625   */\n      dup3\n        /* \"#utility.yul\":5608:5617   */\n      dup8\n        /* \"#utility.yul\":5604:5626   */\n      add\n        /* \"#utility.yul\":5583:5636   */\n      tag_308\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":5573:5636   */\n      swap4\n      pop\n        /* \"#utility.yul\":5529:5646   */\n      pop\n        /* \"#utility.yul\":5685:5687   */\n      0x20\n        /* \"#utility.yul\":5711:5764   */\n      tag_398\n        /* \"#utility.yul\":5756:5763   */\n      dup7\n        /* \"#utility.yul\":5747:5753   */\n      dup3\n        /* \"#utility.yul\":5736:5745   */\n      dup8\n        /* \"#utility.yul\":5732:5754   */\n      add\n        /* \"#utility.yul\":5711:5764   */\n      tag_308\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":5701:5764   */\n      swap3\n      pop\n        /* \"#utility.yul\":5656:5774   */\n      pop\n        /* \"#utility.yul\":5813:5815   */\n      0x40\n        /* \"#utility.yul\":5839:5892   */\n      tag_399\n        /* \"#utility.yul\":5884:5891   */\n      dup7\n        /* \"#utility.yul\":5875:5881   */\n      dup3\n        /* \"#utility.yul\":5864:5873   */\n      dup8\n        /* \"#utility.yul\":5860:5882   */\n      add\n        /* \"#utility.yul\":5839:5892   */\n      tag_303\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":5829:5892   */\n      swap2\n      pop\n        /* \"#utility.yul\":5784:5902   */\n      pop\n        /* \"#utility.yul\":5290:5909   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5915:6244   */\n    tag_52:\n        /* \"#utility.yul\":5974:5980   */\n      0x00\n        /* \"#utility.yul\":6023:6025   */\n      0x20\n        /* \"#utility.yul\":6011:6020   */\n      dup3\n        /* \"#utility.yul\":6002:6009   */\n      dup5\n        /* \"#utility.yul\":5998:6021   */\n      sub\n        /* \"#utility.yul\":5994:6026   */\n      slt\n        /* \"#utility.yul\":5991:6110   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":6029:6108   */\n      tag_402\n      tag_289\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5991:6110   */\n    tag_401:\n        /* \"#utility.yul\":6149:6150   */\n      0x00\n        /* \"#utility.yul\":6174:6227   */\n      tag_403\n        /* \"#utility.yul\":6219:6226   */\n      dup5\n        /* \"#utility.yul\":6210:6216   */\n      dup3\n        /* \"#utility.yul\":6199:6208   */\n      dup6\n        /* \"#utility.yul\":6195:6217   */\n      add\n        /* \"#utility.yul\":6174:6227   */\n      tag_308\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":6164:6227   */\n      swap2\n      pop\n        /* \"#utility.yul\":6120:6237   */\n      pop\n        /* \"#utility.yul\":5915:6244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6250:6366   */\n    tag_310:\n        /* \"#utility.yul\":6320:6341   */\n      tag_405\n        /* \"#utility.yul\":6335:6340   */\n      dup2\n        /* \"#utility.yul\":6320:6341   */\n      tag_294\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":6313:6318   */\n      dup2\n        /* \"#utility.yul\":6310:6342   */\n      eq\n        /* \"#utility.yul\":6300:6360   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":6356:6357   */\n      0x00\n        /* \"#utility.yul\":6353:6354   */\n      dup1\n        /* \"#utility.yul\":6346:6358   */\n      revert\n        /* \"#utility.yul\":6300:6360   */\n    tag_406:\n        /* \"#utility.yul\":6250:6366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6372:6505   */\n    tag_311:\n        /* \"#utility.yul\":6415:6420   */\n      0x00\n        /* \"#utility.yul\":6453:6459   */\n      dup2\n        /* \"#utility.yul\":6440:6460   */\n      calldataload\n        /* \"#utility.yul\":6431:6460   */\n      swap1\n      pop\n        /* \"#utility.yul\":6469:6499   */\n      tag_408\n        /* \"#utility.yul\":6493:6498   */\n      dup2\n        /* \"#utility.yul\":6469:6499   */\n      tag_310\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":6372:6505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6511:6979   */\n    tag_74:\n        /* \"#utility.yul\":6576:6582   */\n      0x00\n        /* \"#utility.yul\":6584:6590   */\n      dup1\n        /* \"#utility.yul\":6633:6635   */\n      0x40\n        /* \"#utility.yul\":6621:6630   */\n      dup4\n        /* \"#utility.yul\":6612:6619   */\n      dup6\n        /* \"#utility.yul\":6608:6631   */\n      sub\n        /* \"#utility.yul\":6604:6636   */\n      slt\n        /* \"#utility.yul\":6601:6720   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":6639:6718   */\n      tag_411\n      tag_289\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":6601:6720   */\n    tag_410:\n        /* \"#utility.yul\":6759:6760   */\n      0x00\n        /* \"#utility.yul\":6784:6837   */\n      tag_412\n        /* \"#utility.yul\":6829:6836   */\n      dup6\n        /* \"#utility.yul\":6820:6826   */\n      dup3\n        /* \"#utility.yul\":6809:6818   */\n      dup7\n        /* \"#utility.yul\":6805:6827   */\n      add\n        /* \"#utility.yul\":6784:6837   */\n      tag_308\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":6774:6837   */\n      swap3\n      pop\n        /* \"#utility.yul\":6730:6847   */\n      pop\n        /* \"#utility.yul\":6886:6888   */\n      0x20\n        /* \"#utility.yul\":6912:6962   */\n      tag_413\n        /* \"#utility.yul\":6954:6961   */\n      dup6\n        /* \"#utility.yul\":6945:6951   */\n      dup3\n        /* \"#utility.yul\":6934:6943   */\n      dup7\n        /* \"#utility.yul\":6930:6952   */\n      add\n        /* \"#utility.yul\":6912:6962   */\n      tag_311\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":6902:6962   */\n      swap2\n      pop\n        /* \"#utility.yul\":6857:6972   */\n      pop\n        /* \"#utility.yul\":6511:6979   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6985:7102   */\n    tag_312:\n        /* \"#utility.yul\":7094:7095   */\n      0x00\n        /* \"#utility.yul\":7091:7092   */\n      dup1\n        /* \"#utility.yul\":7084:7096   */\n      revert\n        /* \"#utility.yul\":7108:7225   */\n    tag_313:\n        /* \"#utility.yul\":7217:7218   */\n      0x00\n        /* \"#utility.yul\":7214:7215   */\n      dup1\n        /* \"#utility.yul\":7207:7219   */\n      revert\n        /* \"#utility.yul\":7231:7411   */\n    tag_253:\n        /* \"#utility.yul\":7279:7356   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7269:7357   */\n      mstore\n        /* \"#utility.yul\":7376:7380   */\n      0x41\n        /* \"#utility.yul\":7373:7374   */\n      0x04\n        /* \"#utility.yul\":7366:7381   */\n      mstore\n        /* \"#utility.yul\":7400:7404   */\n      0x24\n        /* \"#utility.yul\":7397:7398   */\n      0x00\n        /* \"#utility.yul\":7390:7405   */\n      revert\n        /* \"#utility.yul\":7417:7698   */\n    tag_314:\n        /* \"#utility.yul\":7500:7527   */\n      tag_418\n        /* \"#utility.yul\":7522:7526   */\n      dup3\n        /* \"#utility.yul\":7500:7527   */\n      tag_299\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":7492:7498   */\n      dup2\n        /* \"#utility.yul\":7488:7528   */\n      add\n        /* \"#utility.yul\":7630:7636   */\n      dup2\n        /* \"#utility.yul\":7618:7628   */\n      dup2\n        /* \"#utility.yul\":7615:7637   */\n      lt\n        /* \"#utility.yul\":7594:7612   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7582:7592   */\n      dup3\n        /* \"#utility.yul\":7579:7613   */\n      gt\n        /* \"#utility.yul\":7576:7638   */\n      or\n        /* \"#utility.yul\":7573:7661   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":7641:7659   */\n      tag_420\n      tag_253\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":7573:7661   */\n    tag_419:\n        /* \"#utility.yul\":7681:7691   */\n      dup1\n        /* \"#utility.yul\":7677:7679   */\n      0x40\n        /* \"#utility.yul\":7670:7692   */\n      mstore\n        /* \"#utility.yul\":7460:7698   */\n      pop\n        /* \"#utility.yul\":7417:7698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7704:7833   */\n    tag_315:\n        /* \"#utility.yul\":7738:7744   */\n      0x00\n        /* \"#utility.yul\":7765:7785   */\n      tag_422\n      tag_288\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":7755:7785   */\n      swap1\n      pop\n        /* \"#utility.yul\":7794:7827   */\n      tag_423\n        /* \"#utility.yul\":7822:7826   */\n      dup3\n        /* \"#utility.yul\":7814:7820   */\n      dup3\n        /* \"#utility.yul\":7794:7827   */\n      tag_314\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":7704:7833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7839:8146   */\n    tag_316:\n        /* \"#utility.yul\":7900:7904   */\n      0x00\n        /* \"#utility.yul\":7990:8008   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7982:7988   */\n      dup3\n        /* \"#utility.yul\":7979:8009   */\n      gt\n        /* \"#utility.yul\":7976:8032   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":8012:8030   */\n      tag_426\n      tag_253\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":7976:8032   */\n    tag_425:\n        /* \"#utility.yul\":8050:8079   */\n      tag_427\n        /* \"#utility.yul\":8072:8078   */\n      dup3\n        /* \"#utility.yul\":8050:8079   */\n      tag_299\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":8042:8079   */\n      swap1\n      pop\n        /* \"#utility.yul\":8134:8138   */\n      0x20\n        /* \"#utility.yul\":8128:8132   */\n      dup2\n        /* \"#utility.yul\":8124:8139   */\n      add\n        /* \"#utility.yul\":8116:8139   */\n      swap1\n      pop\n        /* \"#utility.yul\":7839:8146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8152:8306   */\n    tag_317:\n        /* \"#utility.yul\":8236:8242   */\n      dup3\n        /* \"#utility.yul\":8231:8234   */\n      dup2\n        /* \"#utility.yul\":8226:8229   */\n      dup4\n        /* \"#utility.yul\":8213:8243   */\n      calldatacopy\n        /* \"#utility.yul\":8298:8299   */\n      0x00\n        /* \"#utility.yul\":8289:8295   */\n      dup4\n        /* \"#utility.yul\":8284:8287   */\n      dup4\n        /* \"#utility.yul\":8280:8296   */\n      add\n        /* \"#utility.yul\":8273:8300   */\n      mstore\n        /* \"#utility.yul\":8152:8306   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8312:8722   */\n    tag_318:\n        /* \"#utility.yul\":8389:8394   */\n      0x00\n        /* \"#utility.yul\":8414:8479   */\n      tag_430\n        /* \"#utility.yul\":8430:8478   */\n      tag_431\n        /* \"#utility.yul\":8471:8477   */\n      dup5\n        /* \"#utility.yul\":8430:8478   */\n      tag_316\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":8414:8479   */\n      tag_315\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":8405:8479   */\n      swap1\n      pop\n        /* \"#utility.yul\":8502:8508   */\n      dup3\n        /* \"#utility.yul\":8495:8500   */\n      dup2\n        /* \"#utility.yul\":8488:8509   */\n      mstore\n        /* \"#utility.yul\":8540:8544   */\n      0x20\n        /* \"#utility.yul\":8533:8538   */\n      dup2\n        /* \"#utility.yul\":8529:8545   */\n      add\n        /* \"#utility.yul\":8578:8581   */\n      dup5\n        /* \"#utility.yul\":8569:8575   */\n      dup5\n        /* \"#utility.yul\":8564:8567   */\n      dup5\n        /* \"#utility.yul\":8560:8576   */\n      add\n        /* \"#utility.yul\":8557:8582   */\n      gt\n        /* \"#utility.yul\":8554:8666   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":8585:8664   */\n      tag_433\n      tag_313\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":8554:8666   */\n    tag_432:\n        /* \"#utility.yul\":8675:8716   */\n      tag_434\n        /* \"#utility.yul\":8709:8715   */\n      dup5\n        /* \"#utility.yul\":8704:8707   */\n      dup3\n        /* \"#utility.yul\":8699:8702   */\n      dup6\n        /* \"#utility.yul\":8675:8716   */\n      tag_317\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":8395:8722   */\n      pop\n        /* \"#utility.yul\":8312:8722   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8741:9079   */\n    tag_319:\n        /* \"#utility.yul\":8796:8801   */\n      0x00\n        /* \"#utility.yul\":8845:8848   */\n      dup3\n        /* \"#utility.yul\":8838:8842   */\n      0x1f\n        /* \"#utility.yul\":8830:8836   */\n      dup4\n        /* \"#utility.yul\":8826:8843   */\n      add\n        /* \"#utility.yul\":8822:8849   */\n      slt\n        /* \"#utility.yul\":8812:8934   */\n      tag_436\n      jumpi\n        /* \"#utility.yul\":8853:8932   */\n      tag_437\n      tag_312\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8812:8934   */\n    tag_436:\n        /* \"#utility.yul\":8970:8976   */\n      dup2\n        /* \"#utility.yul\":8957:8977   */\n      calldataload\n        /* \"#utility.yul\":8995:9073   */\n      tag_438\n        /* \"#utility.yul\":9069:9072   */\n      dup5\n        /* \"#utility.yul\":9061:9067   */\n      dup3\n        /* \"#utility.yul\":9054:9058   */\n      0x20\n        /* \"#utility.yul\":9046:9052   */\n      dup7\n        /* \"#utility.yul\":9042:9059   */\n      add\n        /* \"#utility.yul\":8995:9073   */\n      tag_318\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":8986:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":8802:9079   */\n      pop\n        /* \"#utility.yul\":8741:9079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9085:10028   */\n    tag_78:\n        /* \"#utility.yul\":9180:9186   */\n      0x00\n        /* \"#utility.yul\":9188:9194   */\n      dup1\n        /* \"#utility.yul\":9196:9202   */\n      0x00\n        /* \"#utility.yul\":9204:9210   */\n      dup1\n        /* \"#utility.yul\":9253:9256   */\n      0x80\n        /* \"#utility.yul\":9241:9250   */\n      dup6\n        /* \"#utility.yul\":9232:9239   */\n      dup8\n        /* \"#utility.yul\":9228:9251   */\n      sub\n        /* \"#utility.yul\":9224:9257   */\n      slt\n        /* \"#utility.yul\":9221:9341   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":9260:9339   */\n      tag_441\n      tag_289\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":9221:9341   */\n    tag_440:\n        /* \"#utility.yul\":9380:9381   */\n      0x00\n        /* \"#utility.yul\":9405:9458   */\n      tag_442\n        /* \"#utility.yul\":9450:9457   */\n      dup8\n        /* \"#utility.yul\":9441:9447   */\n      dup3\n        /* \"#utility.yul\":9430:9439   */\n      dup9\n        /* \"#utility.yul\":9426:9448   */\n      add\n        /* \"#utility.yul\":9405:9458   */\n      tag_308\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":9395:9458   */\n      swap5\n      pop\n        /* \"#utility.yul\":9351:9468   */\n      pop\n        /* \"#utility.yul\":9507:9509   */\n      0x20\n        /* \"#utility.yul\":9533:9586   */\n      tag_443\n        /* \"#utility.yul\":9578:9585   */\n      dup8\n        /* \"#utility.yul\":9569:9575   */\n      dup3\n        /* \"#utility.yul\":9558:9567   */\n      dup9\n        /* \"#utility.yul\":9554:9576   */\n      add\n        /* \"#utility.yul\":9533:9586   */\n      tag_308\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":9523:9586   */\n      swap4\n      pop\n        /* \"#utility.yul\":9478:9596   */\n      pop\n        /* \"#utility.yul\":9635:9637   */\n      0x40\n        /* \"#utility.yul\":9661:9714   */\n      tag_444\n        /* \"#utility.yul\":9706:9713   */\n      dup8\n        /* \"#utility.yul\":9697:9703   */\n      dup3\n        /* \"#utility.yul\":9686:9695   */\n      dup9\n        /* \"#utility.yul\":9682:9704   */\n      add\n        /* \"#utility.yul\":9661:9714   */\n      tag_303\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":9651:9714   */\n      swap3\n      pop\n        /* \"#utility.yul\":9606:9724   */\n      pop\n        /* \"#utility.yul\":9791:9793   */\n      0x60\n        /* \"#utility.yul\":9780:9789   */\n      dup6\n        /* \"#utility.yul\":9776:9794   */\n      add\n        /* \"#utility.yul\":9763:9795   */\n      calldataload\n        /* \"#utility.yul\":9822:9840   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9814:9820   */\n      dup2\n        /* \"#utility.yul\":9811:9841   */\n      gt\n        /* \"#utility.yul\":9808:9925   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":9844:9923   */\n      tag_446\n      tag_290\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":9808:9925   */\n    tag_445:\n        /* \"#utility.yul\":9949:10011   */\n      tag_447\n        /* \"#utility.yul\":10003:10010   */\n      dup8\n        /* \"#utility.yul\":9994:10000   */\n      dup3\n        /* \"#utility.yul\":9983:9992   */\n      dup9\n        /* \"#utility.yul\":9979:10001   */\n      add\n        /* \"#utility.yul\":9949:10011   */\n      tag_319\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":9939:10011   */\n      swap2\n      pop\n        /* \"#utility.yul\":9734:10021   */\n      pop\n        /* \"#utility.yul\":9085:10028   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10034:10508   */\n    tag_86:\n        /* \"#utility.yul\":10102:10108   */\n      0x00\n        /* \"#utility.yul\":10110:10116   */\n      dup1\n        /* \"#utility.yul\":10159:10161   */\n      0x40\n        /* \"#utility.yul\":10147:10156   */\n      dup4\n        /* \"#utility.yul\":10138:10145   */\n      dup6\n        /* \"#utility.yul\":10134:10157   */\n      sub\n        /* \"#utility.yul\":10130:10162   */\n      slt\n        /* \"#utility.yul\":10127:10246   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":10165:10244   */\n      tag_450\n      tag_289\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":10127:10246   */\n    tag_449:\n        /* \"#utility.yul\":10285:10286   */\n      0x00\n        /* \"#utility.yul\":10310:10363   */\n      tag_451\n        /* \"#utility.yul\":10355:10362   */\n      dup6\n        /* \"#utility.yul\":10346:10352   */\n      dup3\n        /* \"#utility.yul\":10335:10344   */\n      dup7\n        /* \"#utility.yul\":10331:10353   */\n      add\n        /* \"#utility.yul\":10310:10363   */\n      tag_308\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":10300:10363   */\n      swap3\n      pop\n        /* \"#utility.yul\":10256:10373   */\n      pop\n        /* \"#utility.yul\":10412:10414   */\n      0x20\n        /* \"#utility.yul\":10438:10491   */\n      tag_452\n        /* \"#utility.yul\":10483:10490   */\n      dup6\n        /* \"#utility.yul\":10474:10480   */\n      dup3\n        /* \"#utility.yul\":10463:10472   */\n      dup7\n        /* \"#utility.yul\":10459:10481   */\n      add\n        /* \"#utility.yul\":10438:10491   */\n      tag_308\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":10428:10491   */\n      swap2\n      pop\n        /* \"#utility.yul\":10383:10501   */\n      pop\n        /* \"#utility.yul\":10034:10508   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10514:10694   */\n    tag_320:\n        /* \"#utility.yul\":10562:10639   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10559:10560   */\n      0x00\n        /* \"#utility.yul\":10552:10640   */\n      mstore\n        /* \"#utility.yul\":10659:10663   */\n      0x22\n        /* \"#utility.yul\":10656:10657   */\n      0x04\n        /* \"#utility.yul\":10649:10664   */\n      mstore\n        /* \"#utility.yul\":10683:10687   */\n      0x24\n        /* \"#utility.yul\":10680:10681   */\n      0x00\n        /* \"#utility.yul\":10673:10688   */\n      revert\n        /* \"#utility.yul\":10700:11020   */\n    tag_96:\n        /* \"#utility.yul\":10744:10750   */\n      0x00\n        /* \"#utility.yul\":10781:10782   */\n      0x02\n        /* \"#utility.yul\":10775:10779   */\n      dup3\n        /* \"#utility.yul\":10771:10783   */\n      div\n        /* \"#utility.yul\":10761:10783   */\n      swap1\n      pop\n        /* \"#utility.yul\":10828:10829   */\n      0x01\n        /* \"#utility.yul\":10822:10826   */\n      dup3\n        /* \"#utility.yul\":10818:10830   */\n      and\n        /* \"#utility.yul\":10849:10867   */\n      dup1\n        /* \"#utility.yul\":10839:10920   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":10905:10909   */\n      0x7f\n        /* \"#utility.yul\":10897:10903   */\n      dup3\n        /* \"#utility.yul\":10893:10910   */\n      and\n        /* \"#utility.yul\":10883:10910   */\n      swap2\n      pop\n        /* \"#utility.yul\":10839:10920   */\n    tag_455:\n        /* \"#utility.yul\":10967:10969   */\n      0x20\n        /* \"#utility.yul\":10959:10965   */\n      dup3\n        /* \"#utility.yul\":10956:10970   */\n      lt\n        /* \"#utility.yul\":10936:10954   */\n      dup2\n        /* \"#utility.yul\":10933:10971   */\n      sub\n        /* \"#utility.yul\":10930:11014   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":10986:11004   */\n      tag_457\n      tag_320\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":10930:11014   */\n    tag_456:\n        /* \"#utility.yul\":10751:11020   */\n      pop\n        /* \"#utility.yul\":10700:11020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11026:11174   */\n    tag_321:\n        /* \"#utility.yul\":11128:11139   */\n      0x00\n        /* \"#utility.yul\":11165:11168   */\n      dup2\n        /* \"#utility.yul\":11150:11168   */\n      swap1\n      pop\n        /* \"#utility.yul\":11026:11174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11180:11557   */\n    tag_322:\n        /* \"#utility.yul\":11286:11289   */\n      0x00\n        /* \"#utility.yul\":11314:11353   */\n      tag_460\n        /* \"#utility.yul\":11347:11352   */\n      dup3\n        /* \"#utility.yul\":11314:11353   */\n      tag_296\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":11369:11458   */\n      tag_461\n        /* \"#utility.yul\":11451:11457   */\n      dup2\n        /* \"#utility.yul\":11446:11449   */\n      dup6\n        /* \"#utility.yul\":11369:11458   */\n      tag_321\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":11362:11458   */\n      swap4\n      pop\n        /* \"#utility.yul\":11467:11519   */\n      tag_462\n        /* \"#utility.yul\":11512:11518   */\n      dup2\n        /* \"#utility.yul\":11507:11510   */\n      dup6\n        /* \"#utility.yul\":11500:11504   */\n      0x20\n        /* \"#utility.yul\":11493:11498   */\n      dup7\n        /* \"#utility.yul\":11489:11505   */\n      add\n        /* \"#utility.yul\":11467:11519   */\n      tag_298\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":11544:11550   */\n      dup1\n        /* \"#utility.yul\":11539:11542   */\n      dup5\n        /* \"#utility.yul\":11535:11551   */\n      add\n        /* \"#utility.yul\":11528:11551   */\n      swap2\n      pop\n        /* \"#utility.yul\":11290:11557   */\n      pop\n        /* \"#utility.yul\":11180:11557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11563:11998   */\n    tag_170:\n        /* \"#utility.yul\":11743:11746   */\n      0x00\n        /* \"#utility.yul\":11765:11860   */\n      tag_464\n        /* \"#utility.yul\":11856:11859   */\n      dup3\n        /* \"#utility.yul\":11847:11853   */\n      dup6\n        /* \"#utility.yul\":11765:11860   */\n      tag_322\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":11758:11860   */\n      swap2\n      pop\n        /* \"#utility.yul\":11877:11972   */\n      tag_465\n        /* \"#utility.yul\":11968:11971   */\n      dup3\n        /* \"#utility.yul\":11959:11965   */\n      dup5\n        /* \"#utility.yul\":11877:11972   */\n      tag_322\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":11870:11972   */\n      swap2\n      pop\n        /* \"#utility.yul\":11989:11992   */\n      dup2\n        /* \"#utility.yul\":11982:11992   */\n      swap1\n      pop\n        /* \"#utility.yul\":11563:11998   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12004:12184   */\n    tag_323:\n        /* \"#utility.yul\":12052:12129   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12049:12050   */\n      0x00\n        /* \"#utility.yul\":12042:12130   */\n      mstore\n        /* \"#utility.yul\":12149:12153   */\n      0x11\n        /* \"#utility.yul\":12146:12147   */\n      0x04\n        /* \"#utility.yul\":12139:12154   */\n      mstore\n        /* \"#utility.yul\":12173:12177   */\n      0x24\n        /* \"#utility.yul\":12170:12171   */\n      0x00\n        /* \"#utility.yul\":12163:12178   */\n      revert\n        /* \"#utility.yul\":12190:12381   */\n    tag_204:\n        /* \"#utility.yul\":12230:12234   */\n      0x00\n        /* \"#utility.yul\":12250:12270   */\n      tag_468\n        /* \"#utility.yul\":12268:12269   */\n      dup3\n        /* \"#utility.yul\":12250:12270   */\n      tag_301\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":12245:12270   */\n      swap2\n      pop\n        /* \"#utility.yul\":12284:12304   */\n      tag_469\n        /* \"#utility.yul\":12302:12303   */\n      dup4\n        /* \"#utility.yul\":12284:12304   */\n      tag_301\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":12279:12304   */\n      swap3\n      pop\n        /* \"#utility.yul\":12323:12324   */\n      dup3\n        /* \"#utility.yul\":12320:12321   */\n      dup3\n        /* \"#utility.yul\":12317:12325   */\n      lt\n        /* \"#utility.yul\":12314:12348   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":12328:12346   */\n      tag_471\n      tag_323\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":12314:12348   */\n    tag_470:\n        /* \"#utility.yul\":12373:12374   */\n      dup3\n        /* \"#utility.yul\":12370:12371   */\n      dup3\n        /* \"#utility.yul\":12366:12375   */\n      sub\n        /* \"#utility.yul\":12358:12375   */\n      swap1\n      pop\n        /* \"#utility.yul\":12190:12381   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12387:12735   */\n    tag_207:\n        /* \"#utility.yul\":12427:12434   */\n      0x00\n        /* \"#utility.yul\":12450:12470   */\n      tag_473\n        /* \"#utility.yul\":12468:12469   */\n      dup3\n        /* \"#utility.yul\":12450:12470   */\n      tag_301\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":12445:12470   */\n      swap2\n      pop\n        /* \"#utility.yul\":12484:12504   */\n      tag_474\n        /* \"#utility.yul\":12502:12503   */\n      dup4\n        /* \"#utility.yul\":12484:12504   */\n      tag_301\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":12479:12504   */\n      swap3\n      pop\n        /* \"#utility.yul\":12672:12673   */\n      dup2\n        /* \"#utility.yul\":12604:12670   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12600:12674   */\n      div\n        /* \"#utility.yul\":12597:12598   */\n      dup4\n        /* \"#utility.yul\":12594:12675   */\n      gt\n        /* \"#utility.yul\":12589:12590   */\n      dup3\n        /* \"#utility.yul\":12582:12591   */\n      iszero\n        /* \"#utility.yul\":12575:12592   */\n      iszero\n        /* \"#utility.yul\":12571:12676   */\n      and\n        /* \"#utility.yul\":12568:12699   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":12679:12697   */\n      tag_476\n      tag_323\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":12568:12699   */\n    tag_475:\n        /* \"#utility.yul\":12727:12728   */\n      dup3\n        /* \"#utility.yul\":12724:12725   */\n      dup3\n        /* \"#utility.yul\":12720:12729   */\n      mul\n        /* \"#utility.yul\":12709:12729   */\n      swap1\n      pop\n        /* \"#utility.yul\":12387:12735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12741:13046   */\n    tag_210:\n        /* \"#utility.yul\":12781:12784   */\n      0x00\n        /* \"#utility.yul\":12800:12820   */\n      tag_478\n        /* \"#utility.yul\":12818:12819   */\n      dup3\n        /* \"#utility.yul\":12800:12820   */\n      tag_301\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":12795:12820   */\n      swap2\n      pop\n        /* \"#utility.yul\":12834:12854   */\n      tag_479\n        /* \"#utility.yul\":12852:12853   */\n      dup4\n        /* \"#utility.yul\":12834:12854   */\n      tag_301\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":12829:12854   */\n      swap3\n      pop\n        /* \"#utility.yul\":12988:12989   */\n      dup3\n        /* \"#utility.yul\":12920:12986   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12916:12990   */\n      sub\n        /* \"#utility.yul\":12913:12914   */\n      dup3\n        /* \"#utility.yul\":12910:12991   */\n      gt\n        /* \"#utility.yul\":12907:13014   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":12994:13012   */\n      tag_481\n      tag_323\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":12907:13014   */\n    tag_480:\n        /* \"#utility.yul\":13038:13039   */\n      dup3\n        /* \"#utility.yul\":13035:13036   */\n      dup3\n        /* \"#utility.yul\":13031:13040   */\n      add\n        /* \"#utility.yul\":13024:13040   */\n      swap1\n      pop\n        /* \"#utility.yul\":12741:13046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13052:13150   */\n    tag_324:\n        /* \"#utility.yul\":13103:13109   */\n      0x00\n        /* \"#utility.yul\":13137:13142   */\n      dup2\n        /* \"#utility.yul\":13131:13143   */\n      mload\n        /* \"#utility.yul\":13121:13143   */\n      swap1\n      pop\n        /* \"#utility.yul\":13052:13150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13156:13324   */\n    tag_325:\n        /* \"#utility.yul\":13239:13250   */\n      0x00\n        /* \"#utility.yul\":13273:13279   */\n      dup3\n        /* \"#utility.yul\":13268:13271   */\n      dup3\n        /* \"#utility.yul\":13261:13280   */\n      mstore\n        /* \"#utility.yul\":13313:13317   */\n      0x20\n        /* \"#utility.yul\":13308:13311   */\n      dup3\n        /* \"#utility.yul\":13304:13318   */\n      add\n        /* \"#utility.yul\":13289:13318   */\n      swap1\n      pop\n        /* \"#utility.yul\":13156:13324   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13330:13690   */\n    tag_326:\n        /* \"#utility.yul\":13416:13419   */\n      0x00\n        /* \"#utility.yul\":13444:13482   */\n      tag_485\n        /* \"#utility.yul\":13476:13481   */\n      dup3\n        /* \"#utility.yul\":13444:13482   */\n      tag_324\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":13498:13568   */\n      tag_486\n        /* \"#utility.yul\":13561:13567   */\n      dup2\n        /* \"#utility.yul\":13556:13559   */\n      dup6\n        /* \"#utility.yul\":13498:13568   */\n      tag_325\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":13491:13568   */\n      swap4\n      pop\n        /* \"#utility.yul\":13577:13629   */\n      tag_487\n        /* \"#utility.yul\":13622:13628   */\n      dup2\n        /* \"#utility.yul\":13617:13620   */\n      dup6\n        /* \"#utility.yul\":13610:13614   */\n      0x20\n        /* \"#utility.yul\":13603:13608   */\n      dup7\n        /* \"#utility.yul\":13599:13615   */\n      add\n        /* \"#utility.yul\":13577:13629   */\n      tag_298\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":13654:13683   */\n      tag_488\n        /* \"#utility.yul\":13676:13682   */\n      dup2\n        /* \"#utility.yul\":13654:13683   */\n      tag_299\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":13649:13652   */\n      dup5\n        /* \"#utility.yul\":13645:13684   */\n      add\n        /* \"#utility.yul\":13638:13684   */\n      swap2\n      pop\n        /* \"#utility.yul\":13420:13690   */\n      pop\n        /* \"#utility.yul\":13330:13690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13696:14336   */\n    tag_229:\n        /* \"#utility.yul\":13891:13895   */\n      0x00\n        /* \"#utility.yul\":13929:13932   */\n      0x80\n        /* \"#utility.yul\":13918:13927   */\n      dup3\n        /* \"#utility.yul\":13914:13933   */\n      add\n        /* \"#utility.yul\":13906:13933   */\n      swap1\n      pop\n        /* \"#utility.yul\":13943:14014   */\n      tag_490\n        /* \"#utility.yul\":14011:14012   */\n      0x00\n        /* \"#utility.yul\":14000:14009   */\n      dup4\n        /* \"#utility.yul\":13996:14013   */\n      add\n        /* \"#utility.yul\":13987:13993   */\n      dup8\n        /* \"#utility.yul\":13943:14014   */\n      tag_306\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":14024:14096   */\n      tag_491\n        /* \"#utility.yul\":14092:14094   */\n      0x20\n        /* \"#utility.yul\":14081:14090   */\n      dup4\n        /* \"#utility.yul\":14077:14095   */\n      add\n        /* \"#utility.yul\":14068:14074   */\n      dup7\n        /* \"#utility.yul\":14024:14096   */\n      tag_306\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":14106:14178   */\n      tag_492\n        /* \"#utility.yul\":14174:14176   */\n      0x40\n        /* \"#utility.yul\":14163:14172   */\n      dup4\n        /* \"#utility.yul\":14159:14177   */\n      add\n        /* \"#utility.yul\":14150:14156   */\n      dup6\n        /* \"#utility.yul\":14106:14178   */\n      tag_309\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":14225:14234   */\n      dup2\n        /* \"#utility.yul\":14219:14223   */\n      dup2\n        /* \"#utility.yul\":14215:14235   */\n      sub\n        /* \"#utility.yul\":14210:14212   */\n      0x60\n        /* \"#utility.yul\":14199:14208   */\n      dup4\n        /* \"#utility.yul\":14195:14213   */\n      add\n        /* \"#utility.yul\":14188:14236   */\n      mstore\n        /* \"#utility.yul\":14253:14329   */\n      tag_493\n        /* \"#utility.yul\":14324:14328   */\n      dup2\n        /* \"#utility.yul\":14315:14321   */\n      dup5\n        /* \"#utility.yul\":14253:14329   */\n      tag_326\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":14245:14329   */\n      swap1\n      pop\n        /* \"#utility.yul\":13696:14336   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14342:14483   */\n    tag_327:\n        /* \"#utility.yul\":14398:14403   */\n      0x00\n        /* \"#utility.yul\":14429:14435   */\n      dup2\n        /* \"#utility.yul\":14423:14436   */\n      mload\n        /* \"#utility.yul\":14414:14436   */\n      swap1\n      pop\n        /* \"#utility.yul\":14445:14477   */\n      tag_495\n        /* \"#utility.yul\":14471:14476   */\n      dup2\n        /* \"#utility.yul\":14445:14477   */\n      tag_292\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":14342:14483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14489:14838   */\n    tag_232:\n        /* \"#utility.yul\":14558:14564   */\n      0x00\n        /* \"#utility.yul\":14607:14609   */\n      0x20\n        /* \"#utility.yul\":14595:14604   */\n      dup3\n        /* \"#utility.yul\":14586:14593   */\n      dup5\n        /* \"#utility.yul\":14582:14605   */\n      sub\n        /* \"#utility.yul\":14578:14610   */\n      slt\n        /* \"#utility.yul\":14575:14694   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":14613:14692   */\n      tag_498\n      tag_289\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":14575:14694   */\n    tag_497:\n        /* \"#utility.yul\":14733:14734   */\n      0x00\n        /* \"#utility.yul\":14758:14821   */\n      tag_499\n        /* \"#utility.yul\":14813:14820   */\n      dup5\n        /* \"#utility.yul\":14804:14810   */\n      dup3\n        /* \"#utility.yul\":14793:14802   */\n      dup6\n        /* \"#utility.yul\":14789:14811   */\n      add\n        /* \"#utility.yul\":14758:14821   */\n      tag_327\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":14748:14821   */\n      swap2\n      pop\n        /* \"#utility.yul\":14704:14831   */\n      pop\n        /* \"#utility.yul\":14489:14838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14844:15077   */\n    tag_248:\n        /* \"#utility.yul\":14883:14886   */\n      0x00\n        /* \"#utility.yul\":14906:14930   */\n      tag_501\n        /* \"#utility.yul\":14924:14929   */\n      dup3\n        /* \"#utility.yul\":14906:14930   */\n      tag_301\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":14897:14930   */\n      swap2\n      pop\n        /* \"#utility.yul\":14952:15018   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14945:14950   */\n      dup3\n        /* \"#utility.yul\":14942:15019   */\n      sub\n        /* \"#utility.yul\":14939:15042   */\n      tag_502\n      jumpi\n        /* \"#utility.yul\":15022:15040   */\n      tag_503\n      tag_323\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":14939:15042   */\n    tag_502:\n        /* \"#utility.yul\":15069:15070   */\n      0x01\n        /* \"#utility.yul\":15062:15067   */\n      dup3\n        /* \"#utility.yul\":15058:15071   */\n      add\n        /* \"#utility.yul\":15051:15071   */\n      swap1\n      pop\n        /* \"#utility.yul\":14844:15077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15083:15263   */\n    tag_328:\n        /* \"#utility.yul\":15131:15208   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15128:15129   */\n      0x00\n        /* \"#utility.yul\":15121:15209   */\n      mstore\n        /* \"#utility.yul\":15228:15232   */\n      0x12\n        /* \"#utility.yul\":15225:15226   */\n      0x04\n        /* \"#utility.yul\":15218:15233   */\n      mstore\n        /* \"#utility.yul\":15252:15256   */\n      0x24\n        /* \"#utility.yul\":15249:15250   */\n      0x00\n        /* \"#utility.yul\":15242:15257   */\n      revert\n        /* \"#utility.yul\":15269:15454   */\n    tag_250:\n        /* \"#utility.yul\":15309:15310   */\n      0x00\n        /* \"#utility.yul\":15326:15346   */\n      tag_506\n        /* \"#utility.yul\":15344:15345   */\n      dup3\n        /* \"#utility.yul\":15326:15346   */\n      tag_301\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":15321:15346   */\n      swap2\n      pop\n        /* \"#utility.yul\":15360:15380   */\n      tag_507\n        /* \"#utility.yul\":15378:15379   */\n      dup4\n        /* \"#utility.yul\":15360:15380   */\n      tag_301\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":15355:15380   */\n      swap3\n      pop\n        /* \"#utility.yul\":15399:15400   */\n      dup3\n        /* \"#utility.yul\":15389:15424   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":15404:15422   */\n      tag_509\n      tag_328\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":15389:15424   */\n    tag_508:\n        /* \"#utility.yul\":15446:15447   */\n      dup3\n        /* \"#utility.yul\":15443:15444   */\n      dup3\n        /* \"#utility.yul\":15439:15448   */\n      div\n        /* \"#utility.yul\":15434:15448   */\n      swap1\n      pop\n        /* \"#utility.yul\":15269:15454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15460:15636   */\n    tag_259:\n        /* \"#utility.yul\":15492:15493   */\n      0x00\n        /* \"#utility.yul\":15509:15529   */\n      tag_511\n        /* \"#utility.yul\":15527:15528   */\n      dup3\n        /* \"#utility.yul\":15509:15529   */\n      tag_301\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":15504:15529   */\n      swap2\n      pop\n        /* \"#utility.yul\":15543:15563   */\n      tag_512\n        /* \"#utility.yul\":15561:15562   */\n      dup4\n        /* \"#utility.yul\":15543:15563   */\n      tag_301\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":15538:15563   */\n      swap3\n      pop\n        /* \"#utility.yul\":15582:15583   */\n      dup3\n        /* \"#utility.yul\":15572:15607   */\n      tag_513\n      jumpi\n        /* \"#utility.yul\":15587:15605   */\n      tag_514\n      tag_328\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":15572:15607   */\n    tag_513:\n        /* \"#utility.yul\":15628:15629   */\n      dup3\n        /* \"#utility.yul\":15625:15626   */\n      dup3\n        /* \"#utility.yul\":15621:15630   */\n      mod\n        /* \"#utility.yul\":15616:15630   */\n      swap1\n      pop\n        /* \"#utility.yul\":15460:15636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15642:15822   */\n    tag_263:\n        /* \"#utility.yul\":15690:15767   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15687:15688   */\n      0x00\n        /* \"#utility.yul\":15680:15768   */\n      mstore\n        /* \"#utility.yul\":15787:15791   */\n      0x32\n        /* \"#utility.yul\":15784:15785   */\n      0x04\n        /* \"#utility.yul\":15777:15792   */\n      mstore\n        /* \"#utility.yul\":15811:15815   */\n      0x24\n        /* \"#utility.yul\":15808:15809   */\n      0x00\n        /* \"#utility.yul\":15801:15816   */\n      revert\n    stop\n    data_873fd5f964b13e1038074dfa7bf985864a803be90f361e484b606b70d53e1173 68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d57755a3650574a535770704d354168344337747836646845476f626b686b6e734c58333446423957746e684d2f\n\n    auxdata: 0xa2646970667358221220e6a6040facf68b816f9d4c8ddc065bbed089c36ab6eb7aa068ecec29c980ad4364736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1170": {
									"entryPoint": null,
									"id": 1170,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2465": {
									"entryPoint": null,
									"id": 2465,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_startTokenId_1257": {
									"entryPoint": 206,
									"id": 1257,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:516:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "244:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "254:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "268:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "274:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "264:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "264:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "254:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "285:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "315:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "311:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "311:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "289:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "362:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "376:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "390:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "398:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "386:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "386:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "376:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "342:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:26:1"
															},
															"nodeType": "YulIf",
															"src": "332:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "465:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "479:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "479:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "479:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "429:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "452:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "460:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "449:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "449:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "426:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "426:38:1"
															},
															"nodeType": "YulIf",
															"src": "423:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "228:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "237:6:1",
														"type": ""
													}
												],
												"src": "193:320:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600781526020017f44636f66666572000000000000000000000000000000000000000000000000008152506040518060400160405280600781526020017f44636f6666657200000000000000000000000000000000000000000000000000815250816002908051906020019062000096929190620000d3565b508060039080519060200190620000af929190620000d3565b50620000c0620000ce60201b60201c565b6000819055505050620001e7565b600090565b828054620000e190620001b2565b90600052602060002090601f01602090048101928262000105576000855562000151565b82601f106200012057805160ff191683800117855562000151565b8280016001018555821562000151579182015b828111156200015057825182559160200191906001019062000133565b5b50905062000160919062000164565b5090565b5b808211156200017f57600081600090555060010162000165565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001cb57607f821691505b602082108103620001e157620001e062000183565b5b50919050565b61278d80620001f76000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb465146102bf578063b88d4fde146102db578063c87b56dd146102f7578063e985e9c51461032757610100565b80636352211e1461022557806370a082311461025557806395d89b4114610285578063a0712d68146102a357610100565b806318160ddd116100d357806318160ddd1461019f57806323b872dd146101bd578063325b272a146101d957806342842e0e1461020957610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a9190611df1565b610357565b60405161012c9190611e39565b60405180910390f35b61013d610439565b60405161014a9190611eed565b60405180910390f35b61016d60048036038101906101689190611f45565b6104cb565b60405161017a9190611fb3565b60405180910390f35b61019d60048036038101906101989190611ffa565b610547565b005b6101a761064b565b6040516101b49190612049565b60405180910390f35b6101d760048036038101906101d29190612064565b610662565b005b6101f360048036038101906101ee91906120b7565b610672565b6040516102009190612049565b60405180910390f35b610223600480360381019061021e9190612064565b61076d565b005b61023f600480360381019061023a9190611f45565b61078d565b60405161024c9190611fb3565b60405180910390f35b61026f600480360381019061026a91906120b7565b6107a3565b60405161027c9190612049565b60405180910390f35b61028d610872565b60405161029a9190611eed565b60405180910390f35b6102bd60048036038101906102b89190611f45565b610904565b005b6102d960048036038101906102d49190612110565b610911565b005b6102f560048036038101906102f09190612285565b610a88565b005b610311600480360381019061030c9190611f45565b610b00565b60405161031e9190611eed565b60405180910390f35b610341600480360381019061033c9190612308565b610b9e565b60405161034e9190611e39565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610432575061043182610c32565b5b9050919050565b60606002805461044890612377565b80601f016020809104026020016040519081016040528092919081815260200182805461047490612377565b80156104c15780601f10610496576101008083540402835291602001916104c1565b820191906000526020600020905b8154815290600101906020018083116104a457829003601f168201915b5050505050905090565b60006104d682610c9c565b61050c576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105528261078d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105b9576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105d8610cea565b73ffffffffffffffffffffffffffffffffffffffff161461063b57610604816105ff610cea565b610b9e565b61063a576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610646838383610cf2565b505050565b6000610655610da4565b6001546000540303905090565b61066d838383610da9565b505050565b6000806106d9600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020544361126f90919063ffffffff16565b905060006106f8826106ea866107a3565b61128590919063ffffffff16565b9050600061076082600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000205461129b90919063ffffffff16565b9050809350505050919050565b61078883838360405180602001604052806000815250610a88565b505050565b6000610798826112b1565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361080a576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b60606003805461088190612377565b80601f01602080910402602001604051908101604052809291908181526020018280546108ad90612377565b80156108fa5780601f106108cf576101008083540402835291602001916108fa565b820191906000526020600020905b8154815290600101906020018083116108dd57829003601f168201915b5050505050905090565b61090e338261153c565b50565b610919610cea565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361097d576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806007600061098a610cea565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610a37610cea565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a7c9190611e39565b60405180910390a35050565b610a93848484610da9565b610ab28373ffffffffffffffffffffffffffffffffffffffff1661155a565b15610afa57610ac38484848461157d565b610af9576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610b0b82610c9c565b610b41576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610b4b6116cd565b90506000815103610b6b5760405180602001604052806000815250610b96565b80610b75846116ed565b604051602001610b869291906123e4565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600081610ca7610da4565b11158015610cb6575060005482105b8015610ce3575060046000838152602001908152602001600020600001601c9054906101000a900460ff16155b9050919050565b600033905090565b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600090565b610db28361184d565b610dbb8261184d565b6000610dc6826112b1565b90508373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614610e31576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16610e52610cea565b73ffffffffffffffffffffffffffffffffffffffff161480610e815750610e8085610e7b610cea565b610b9e565b5b80610ec65750610e8f610cea565b73ffffffffffffffffffffffffffffffffffffffff16610eae846104cb565b73ffffffffffffffffffffffffffffffffffffffff16145b905080610eff576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f65576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f72858585600161196d565b610f7e60008487610cf2565b6001600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600460008581526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006001850190506000600460008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036111fd5760005482146111fc57878160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084602001518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b505050828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46112688585856001611973565b5050505050565b6000818361127d9190612437565b905092915050565b60008183611293919061246b565b905092915050565b600081836112a991906124c5565b905092915050565b6112b9611d42565b6000829050806112c7610da4565b1161150557600054811015611504576000600460008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050806040015161150257600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146113e6578092505050611537565b5b60011561150157818060019003925050600460008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146114fc578092505050611537565b6113e7565b5b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b611556828260405180602001604052806000815250611979565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026115a3610cea565b8786866040518563ffffffff1660e01b81526004016115c59493929190612570565b6020604051808303816000875af192505050801561160157506040513d601f19601f820116820180604052508101906115fe91906125d1565b60015b61167a573d8060008114611631576040519150601f19603f3d011682016040523d82523d6000602084013e611636565b606091505b506000815103611672576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180608001604052806051815260200161270760519139905090565b606060008203611734576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611848565b600082905060005b6000821461176657808061174f906125fe565b915050600a8261175f9190612675565b915061173c565b60008167ffffffffffffffff8111156117825761178161215a565b5b6040519080825280601f01601f1916602001820160405280156117b45781602001600182028036833780820191505090505b5090505b60008514611841576001826117cd9190612437565b9150600a856117dc91906126a6565b60306117e891906124c5565b60f81b8183815181106117fe576117fd6126d7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561183a9190612675565b94506117b8565b8093505050505b919050565b600061185882610672565b90506118be81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000205461129b90919063ffffffff16565b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000208190555043600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020819055505050565b50505050565b50505050565b6119828361184d565b600080549050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036119ee576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008303611a28576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a35600085838661196d565b82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555082600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160088282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550836004600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426004600083815260200190815260200160002060000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550600081905060008482019050611bf68673ffffffffffffffffffffffffffffffffffffffff1661155a565b15611cbb575b818673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611c6b600087848060010195508761157d565b611ca1576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808210611bfc578260005414611cb657600080fd5b611d26565b5b818060010192508673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4808210611cbc575b816000819055505050611d3c6000858386611973565b50505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611dce81611d99565b8114611dd957600080fd5b50565b600081359050611deb81611dc5565b92915050565b600060208284031215611e0757611e06611d8f565b5b6000611e1584828501611ddc565b91505092915050565b60008115159050919050565b611e3381611e1e565b82525050565b6000602082019050611e4e6000830184611e2a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e8e578082015181840152602081019050611e73565b83811115611e9d576000848401525b50505050565b6000601f19601f8301169050919050565b6000611ebf82611e54565b611ec98185611e5f565b9350611ed9818560208601611e70565b611ee281611ea3565b840191505092915050565b60006020820190508181036000830152611f078184611eb4565b905092915050565b6000819050919050565b611f2281611f0f565b8114611f2d57600080fd5b50565b600081359050611f3f81611f19565b92915050565b600060208284031215611f5b57611f5a611d8f565b5b6000611f6984828501611f30565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f9d82611f72565b9050919050565b611fad81611f92565b82525050565b6000602082019050611fc86000830184611fa4565b92915050565b611fd781611f92565b8114611fe257600080fd5b50565b600081359050611ff481611fce565b92915050565b6000806040838503121561201157612010611d8f565b5b600061201f85828601611fe5565b925050602061203085828601611f30565b9150509250929050565b61204381611f0f565b82525050565b600060208201905061205e600083018461203a565b92915050565b60008060006060848603121561207d5761207c611d8f565b5b600061208b86828701611fe5565b935050602061209c86828701611fe5565b92505060406120ad86828701611f30565b9150509250925092565b6000602082840312156120cd576120cc611d8f565b5b60006120db84828501611fe5565b91505092915050565b6120ed81611e1e565b81146120f857600080fd5b50565b60008135905061210a816120e4565b92915050565b6000806040838503121561212757612126611d8f565b5b600061213585828601611fe5565b9250506020612146858286016120fb565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61219282611ea3565b810181811067ffffffffffffffff821117156121b1576121b061215a565b5b80604052505050565b60006121c4611d85565b90506121d08282612189565b919050565b600067ffffffffffffffff8211156121f0576121ef61215a565b5b6121f982611ea3565b9050602081019050919050565b82818337600083830152505050565b6000612228612223846121d5565b6121ba565b90508281526020810184848401111561224457612243612155565b5b61224f848285612206565b509392505050565b600082601f83011261226c5761226b612150565b5b813561227c848260208601612215565b91505092915050565b6000806000806080858703121561229f5761229e611d8f565b5b60006122ad87828801611fe5565b94505060206122be87828801611fe5565b93505060406122cf87828801611f30565b925050606085013567ffffffffffffffff8111156122f0576122ef611d94565b5b6122fc87828801612257565b91505092959194509250565b6000806040838503121561231f5761231e611d8f565b5b600061232d85828601611fe5565b925050602061233e85828601611fe5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061238f57607f821691505b6020821081036123a2576123a1612348565b5b50919050565b600081905092915050565b60006123be82611e54565b6123c881856123a8565b93506123d8818560208601611e70565b80840191505092915050565b60006123f082856123b3565b91506123fc82846123b3565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061244282611f0f565b915061244d83611f0f565b9250828210156124605761245f612408565b5b828203905092915050565b600061247682611f0f565b915061248183611f0f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156124ba576124b9612408565b5b828202905092915050565b60006124d082611f0f565b91506124db83611f0f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156125105761250f612408565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b60006125428261251b565b61254c8185612526565b935061255c818560208601611e70565b61256581611ea3565b840191505092915050565b60006080820190506125856000830187611fa4565b6125926020830186611fa4565b61259f604083018561203a565b81810360608301526125b18184612537565b905095945050505050565b6000815190506125cb81611dc5565b92915050565b6000602082840312156125e7576125e6611d8f565b5b60006125f5848285016125bc565b91505092915050565b600061260982611f0f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361263b5761263a612408565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061268082611f0f565b915061268b83611f0f565b92508261269b5761269a612646565b5b828204905092915050565b60006126b182611f0f565b91506126bc83611f0f565b9250826126cc576126cb612646565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d57755a3650574a535770704d354168344337747836646845476f626b686b6e734c58333446423957746e684d2fa2646970667358221220e6a6040facf68b816f9d4c8ddc065bbed089c36ab6eb7aa068ecec29c980ad4364736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44636F6666657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44636F6666657200000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0xD3 JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0xD3 JUMP JUMPDEST POP PUSH3 0xC0 PUSH3 0xCE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x1E7 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xE1 SWAP1 PUSH3 0x1B2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x105 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x151 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x120 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x151 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x151 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x150 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x133 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x160 SWAP2 SWAP1 PUSH3 0x164 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x17F JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x165 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1CB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1E1 JUMPI PUSH3 0x1E0 PUSH3 0x183 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x278D DUP1 PUSH3 0x1F7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x327 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2A3 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x325B272A EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x209 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1EED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1FFA JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A7 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1EED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x911 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1EED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x2308 JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x422 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x432 JUMPI POP PUSH2 0x431 DUP3 PUSH2 0xC32 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x448 SWAP1 PUSH2 0x2377 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x2377 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x496 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D6 DUP3 PUSH2 0xC9C JUMP JUMPDEST PUSH2 0x50C JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x552 DUP3 PUSH2 0x78D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D8 PUSH2 0xCEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x63B JUMPI PUSH2 0x604 DUP2 PUSH2 0x5FF PUSH2 0xCEA JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x646 DUP4 DUP4 DUP4 PUSH2 0xCF2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x66D DUP4 DUP4 DUP4 PUSH2 0xDA9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6D9 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD NUMBER PUSH2 0x126F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6F8 DUP3 PUSH2 0x6EA DUP7 PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x1285 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x760 DUP3 PUSH1 0x8 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x129B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x788 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA88 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x798 DUP3 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x80A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x881 SWAP1 PUSH2 0x2377 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8AD SWAP1 PUSH2 0x2377 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x90E CALLER DUP3 PUSH2 0x153C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x919 PUSH2 0xCEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x97D JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x98A PUSH2 0xCEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA37 PUSH2 0xCEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA7C SWAP2 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA93 DUP5 DUP5 DUP5 PUSH2 0xDA9 JUMP JUMPDEST PUSH2 0xAB2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x155A JUMP JUMPDEST ISZERO PUSH2 0xAFA JUMPI PUSH2 0xAC3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x157D JUMP JUMPDEST PUSH2 0xAF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB0B DUP3 PUSH2 0xC9C JUMP JUMPDEST PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB4B PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xB6B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB96 JUMP JUMPDEST DUP1 PUSH2 0xB75 DUP5 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB86 SWAP3 SWAP2 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xCA7 PUSH2 0xDA4 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xCB6 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xCE3 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xDB2 DUP4 PUSH2 0x184D JUMP JUMPDEST PUSH2 0xDBB DUP3 PUSH2 0x184D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC6 DUP3 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE52 PUSH2 0xCEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xE81 JUMPI POP PUSH2 0xE80 DUP6 PUSH2 0xE7B PUSH2 0xCEA JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xEC6 JUMPI POP PUSH2 0xE8F PUSH2 0xCEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEAE DUP5 PUSH2 0x4CB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF65 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF72 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x196D JUMP JUMPDEST PUSH2 0xF7E PUSH1 0x0 DUP5 DUP8 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FD JUMPI PUSH1 0x0 SLOAD DUP3 EQ PUSH2 0x11FC JUMPI DUP8 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1268 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1973 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x127D SWAP2 SWAP1 PUSH2 0x2437 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1293 SWAP2 SWAP1 PUSH2 0x246B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12A9 SWAP2 SWAP1 PUSH2 0x24C5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12B9 PUSH2 0x1D42 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x12C7 PUSH2 0xDA4 JUMP JUMPDEST GT PUSH2 0x1505 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x1504 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x1502 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13E6 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1537 JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1501 JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14FC JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1537 JUMP JUMPDEST PUSH2 0x13E7 JUMP JUMPDEST JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1556 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1979 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x15A3 PUSH2 0xCEA JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2570 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1601 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15FE SWAP2 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x167A JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1631 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1672 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x51 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2707 PUSH1 0x51 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1734 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1766 JUMPI DUP1 DUP1 PUSH2 0x174F SWAP1 PUSH2 0x25FE JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x175F SWAP2 SWAP1 PUSH2 0x2675 JUMP JUMPDEST SWAP2 POP PUSH2 0x173C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1782 JUMPI PUSH2 0x1781 PUSH2 0x215A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17B4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1841 JUMPI PUSH1 0x1 DUP3 PUSH2 0x17CD SWAP2 SWAP1 PUSH2 0x2437 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x17DC SWAP2 SWAP1 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x17E8 SWAP2 SWAP1 PUSH2 0x24C5 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x17FE JUMPI PUSH2 0x17FD PUSH2 0x26D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x183A SWAP2 SWAP1 PUSH2 0x2675 JUMP JUMPDEST SWAP5 POP PUSH2 0x17B8 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1858 DUP3 PUSH2 0x672 JUMP JUMPDEST SWAP1 POP PUSH2 0x18BE DUP2 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x129B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1982 DUP4 PUSH2 0x184D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SUB PUSH2 0x1A28 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A35 PUSH1 0x0 DUP6 DUP4 DUP7 PUSH2 0x196D JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP5 DUP3 ADD SWAP1 POP PUSH2 0x1BF6 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x155A JUMP JUMPDEST ISZERO PUSH2 0x1CBB JUMPI JUMPDEST DUP2 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1C6B PUSH1 0x0 DUP8 DUP5 DUP1 PUSH1 0x1 ADD SWAP6 POP DUP8 PUSH2 0x157D JUMP JUMPDEST PUSH2 0x1CA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 LT PUSH2 0x1BFC JUMPI DUP3 PUSH1 0x0 SLOAD EQ PUSH2 0x1CB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D26 JUMP JUMPDEST JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 DUP3 LT PUSH2 0x1CBC JUMPI JUMPDEST DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1D3C PUSH1 0x0 DUP6 DUP4 DUP7 PUSH2 0x1973 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DCE DUP2 PUSH2 0x1D99 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DEB DUP2 PUSH2 0x1DC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E07 JUMPI PUSH2 0x1E06 PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E15 DUP5 DUP3 DUP6 ADD PUSH2 0x1DDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E33 DUP2 PUSH2 0x1E1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E4E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E8E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E73 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E9D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EBF DUP3 PUSH2 0x1E54 JUMP JUMPDEST PUSH2 0x1EC9 DUP2 DUP6 PUSH2 0x1E5F JUMP JUMPDEST SWAP4 POP PUSH2 0x1ED9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x1EE2 DUP2 PUSH2 0x1EA3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F07 DUP2 DUP5 PUSH2 0x1EB4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F22 DUP2 PUSH2 0x1F0F JUMP JUMPDEST DUP2 EQ PUSH2 0x1F2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3F DUP2 PUSH2 0x1F19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F5B JUMPI PUSH2 0x1F5A PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F69 DUP5 DUP3 DUP6 ADD PUSH2 0x1F30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9D DUP3 PUSH2 0x1F72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FAD DUP2 PUSH2 0x1F92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FC8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FD7 DUP2 PUSH2 0x1F92 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FF4 DUP2 PUSH2 0x1FCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2011 JUMPI PUSH2 0x2010 PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x201F DUP6 DUP3 DUP7 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2030 DUP6 DUP3 DUP7 ADD PUSH2 0x1F30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2043 DUP2 PUSH2 0x1F0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x205E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x203A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x207D JUMPI PUSH2 0x207C PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x208B DUP7 DUP3 DUP8 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x209C DUP7 DUP3 DUP8 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20AD DUP7 DUP3 DUP8 ADD PUSH2 0x1F30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20CD JUMPI PUSH2 0x20CC PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20DB DUP5 DUP3 DUP6 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20ED DUP2 PUSH2 0x1E1E JUMP JUMPDEST DUP2 EQ PUSH2 0x20F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x210A DUP2 PUSH2 0x20E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2135 DUP6 DUP3 DUP7 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2146 DUP6 DUP3 DUP7 ADD PUSH2 0x20FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2192 DUP3 PUSH2 0x1EA3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21B1 JUMPI PUSH2 0x21B0 PUSH2 0x215A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C4 PUSH2 0x1D85 JUMP JUMPDEST SWAP1 POP PUSH2 0x21D0 DUP3 DUP3 PUSH2 0x2189 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21F0 JUMPI PUSH2 0x21EF PUSH2 0x215A JUMP JUMPDEST JUMPDEST PUSH2 0x21F9 DUP3 PUSH2 0x1EA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2228 PUSH2 0x2223 DUP5 PUSH2 0x21D5 JUMP JUMPDEST PUSH2 0x21BA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2244 JUMPI PUSH2 0x2243 PUSH2 0x2155 JUMP JUMPDEST JUMPDEST PUSH2 0x224F DUP5 DUP3 DUP6 PUSH2 0x2206 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x226C JUMPI PUSH2 0x226B PUSH2 0x2150 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x227C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2215 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x229F JUMPI PUSH2 0x229E PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22AD DUP8 DUP3 DUP9 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x22BE DUP8 DUP3 DUP9 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x22CF DUP8 DUP3 DUP9 ADD PUSH2 0x1F30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22F0 JUMPI PUSH2 0x22EF PUSH2 0x1D94 JUMP JUMPDEST JUMPDEST PUSH2 0x22FC DUP8 DUP3 DUP9 ADD PUSH2 0x2257 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x231F JUMPI PUSH2 0x231E PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x232D DUP6 DUP3 DUP7 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x233E DUP6 DUP3 DUP7 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x238F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x23A2 JUMPI PUSH2 0x23A1 PUSH2 0x2348 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23BE DUP3 PUSH2 0x1E54 JUMP JUMPDEST PUSH2 0x23C8 DUP2 DUP6 PUSH2 0x23A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x23D8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E70 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F0 DUP3 DUP6 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x23FC DUP3 DUP5 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2442 DUP3 PUSH2 0x1F0F JUMP JUMPDEST SWAP2 POP PUSH2 0x244D DUP4 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2460 JUMPI PUSH2 0x245F PUSH2 0x2408 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2476 DUP3 PUSH2 0x1F0F JUMP JUMPDEST SWAP2 POP PUSH2 0x2481 DUP4 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x24BA JUMPI PUSH2 0x24B9 PUSH2 0x2408 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D0 DUP3 PUSH2 0x1F0F JUMP JUMPDEST SWAP2 POP PUSH2 0x24DB DUP4 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2510 JUMPI PUSH2 0x250F PUSH2 0x2408 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2542 DUP3 PUSH2 0x251B JUMP JUMPDEST PUSH2 0x254C DUP2 DUP6 PUSH2 0x2526 JUMP JUMPDEST SWAP4 POP PUSH2 0x255C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x2565 DUP2 PUSH2 0x1EA3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2585 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1FA4 JUMP JUMPDEST PUSH2 0x2592 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1FA4 JUMP JUMPDEST PUSH2 0x259F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x203A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x25B1 DUP2 DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25CB DUP2 PUSH2 0x1DC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25E7 JUMPI PUSH2 0x25E6 PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25F5 DUP5 DUP3 DUP6 ADD PUSH2 0x25BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2609 DUP3 PUSH2 0x1F0F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x263B JUMPI PUSH2 0x263A PUSH2 0x2408 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2680 DUP3 PUSH2 0x1F0F JUMP JUMPDEST SWAP2 POP PUSH2 0x268B DUP4 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x269B JUMPI PUSH2 0x269A PUSH2 0x2646 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B1 DUP3 PUSH2 0x1F0F JUMP JUMPDEST SWAP2 POP PUSH2 0x26BC DUP4 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x26CC JUMPI PUSH2 0x26CB PUSH2 0x2646 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2F516D57755A3650574A535770704D3541683443 CALLDATACOPY PUSH21 0x7836646845476F626B686B6E734C58333446423957 PUSH21 0x6E684D2FA2646970667358221220E6A6040FACF68B DUP2 PUSH16 0x9D4C8DDC065BBED089C36AB6EB7AA068 0xEC 0xEC 0x29 0xC9 DUP1 0xAD NUMBER PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "50278:215:0:-:0;;;50340:53;;;;;;;;;;31297:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31371:5;31363;:13;;;;;;;;;;;;:::i;:::-;;31396:7;31386;:17;;;;;;;;;;;;:::i;:::-;;31429:15;:13;;;:15;;:::i;:::-;31413:13;:31;;;;31297:165;;50278:215;;32090:90;32146:7;32090:90;:::o;50278:215::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:320;237:6;274:1;268:4;264:12;254:22;;321:1;315:4;311:12;342:18;332:81;;398:4;390:6;386:17;376:27;;332:81;460:2;452:6;449:14;429:18;426:38;423:84;;479:18;;:::i;:::-;423:84;244:269;193:320;;;:::o;50278:215:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BlockScore_1212": {
									"entryPoint": 1650,
									"id": 1212,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_afterTokenTransfers_2450": {
									"entryPoint": 6515,
									"id": 2450,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2369": {
									"entryPoint": 3314,
									"id": 2369,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_1570": {
									"entryPoint": 5837,
									"id": 1570,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_2437": {
									"entryPoint": 6509,
									"id": 2437,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_2424": {
									"entryPoint": 5501,
									"id": 2424,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1787": {
									"entryPoint": 3228,
									"id": 1787,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_524": {
									"entryPoint": 3306,
									"id": 524,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownershipOf_1483": {
									"entryPoint": 4785,
									"id": 1483,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_1802": {
									"entryPoint": 5436,
									"id": 1802,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_1969": {
									"entryPoint": 6521,
									"id": 1969,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_startTokenId_1257": {
									"entryPoint": 3492,
									"id": 1257,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_2147": {
									"entryPoint": 3497,
									"id": 2147,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_175": {
									"entryPoint": 4763,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1616": {
									"entryPoint": 1351,
									"id": 1616,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1345": {
									"entryPoint": 1955,
									"id": 1345,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1638": {
									"entryPoint": 1227,
									"id": 1638,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1690": {
									"entryPoint": 2974,
									"id": 1690,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_551": {
									"entryPoint": 5466,
									"id": 551,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_2477": {
									"entryPoint": 2308,
									"id": 2477,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mul_205": {
									"entryPoint": 4741,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1508": {
									"entryPoint": 1081,
									"id": 1508,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1498": {
									"entryPoint": 1933,
									"id": 1498,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1727": {
									"entryPoint": 1901,
									"id": 1727,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1763": {
									"entryPoint": 2696,
									"id": 1763,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1672": {
									"entryPoint": 2321,
									"id": 1672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 4719,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supportsInterface_1317": {
									"entryPoint": 855,
									"id": 1317,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_887": {
									"entryPoint": 3122,
									"id": 887,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1518": {
									"entryPoint": 2162,
									"id": 1518,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_395": {
									"entryPoint": 5869,
									"id": 395,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1561": {
									"entryPoint": 2816,
									"id": 1561,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1273": {
									"entryPoint": 1611,
									"id": 1273,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1708": {
									"entryPoint": 1634,
									"id": 1708,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@updateBlockScore_1248": {
									"entryPoint": 6221,
									"id": 1248,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8725,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9188,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9584,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7557,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 8710,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 7792,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 9726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 9894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9224,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9798,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9032,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9943,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8538,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8528,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8533,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7567,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 8142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15825:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:1",
														"type": ""
													}
												],
												"src": "1518:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:1",
														"type": ""
													}
												],
												"src": "1623:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1857:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1866:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1861:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1926:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1951:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1956:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1947:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1947:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1970:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1975:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1966:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1966:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1960:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1940:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1887:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1884:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1898:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1900:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1909:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1905:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1905:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1900:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1880:3:1",
																"statements": []
															},
															"src": "1876:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2023:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2073:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2078:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2069:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2069:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2087:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2062:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2062:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2062:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2004:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2007:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2001:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:13:1"
															},
															"nodeType": "YulIf",
															"src": "1998:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1829:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1834:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1839:6:1",
														"type": ""
													}
												],
												"src": "1798:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2159:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2169:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2187:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2194:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2199:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2199:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2142:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2152:6:1",
														"type": ""
													}
												],
												"src": "2111:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2311:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2321:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2368:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2335:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2325:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2383:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2449:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2454:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2390:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2496:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2503:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2492:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2492:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2510:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2515:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2470:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2470:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2531:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2569:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2547:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2547:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2538:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2292:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2299:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2307:3:1",
														"type": ""
													}
												],
												"src": "2219:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2717:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2729:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2740:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2725:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2717:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2783:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2789:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2779:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2753:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2809:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2881:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2890:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2817:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2809:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2679:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2691:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2702:4:1",
														"type": ""
													}
												],
												"src": "2589:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2974:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2963:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2935:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2945:7:1",
														"type": ""
													}
												],
												"src": "2908:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3091:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3100:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3103:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3093:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3093:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3093:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3057:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3082:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3064:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3064:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3054:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:43:1"
															},
															"nodeType": "YulIf",
															"src": "3044:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3027:5:1",
														"type": ""
													}
												],
												"src": "2991:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3171:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3181:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3203:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3190:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3181:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3246:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3219:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3219:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3149:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3157:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3165:5:1",
														"type": ""
													}
												],
												"src": "3119:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3330:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3376:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3378:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3378:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3378:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3351:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3372:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3343:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:32:1"
															},
															"nodeType": "YulIf",
															"src": "3340:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3469:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3484:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3488:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3513:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3523:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3523:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3300:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3311:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3323:6:1",
														"type": ""
													}
												],
												"src": "3264:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3644:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3654:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3669:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3676:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3665:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3665:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3654:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3626:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3636:7:1",
														"type": ""
													}
												],
												"src": "3599:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3776:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3786:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3815:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3797:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3786:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3758:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3768:7:1",
														"type": ""
													}
												],
												"src": "3731:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3915:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3938:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3920:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3920:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3908:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3908:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3908:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3886:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3893:3:1",
														"type": ""
													}
												],
												"src": "3833:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4055:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4065:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4077:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4088:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4073:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4065:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4145:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4158:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4169:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4154:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4154:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4101:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4101:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4101:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4027:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4039:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4050:4:1",
														"type": ""
													}
												],
												"src": "3957:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4228:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4285:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4294:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4297:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4287:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4287:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4251:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4276:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4258:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4258:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4248:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4248:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:43:1"
															},
															"nodeType": "YulIf",
															"src": "4238:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4221:5:1",
														"type": ""
													}
												],
												"src": "4185:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4375:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4397:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4384:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4384:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4375:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4440:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4413:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4413:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4343:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4351:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4359:5:1",
														"type": ""
													}
												],
												"src": "4313:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4541:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4587:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4589:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4589:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4589:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4562:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4571:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4558:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4583:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4554:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4554:32:1"
															},
															"nodeType": "YulIf",
															"src": "4551:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4680:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4695:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4699:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4724:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4759:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4770:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4755:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4755:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4779:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4734:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4734:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4724:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4807:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4822:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4836:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4826:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4852:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4887:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4898:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4883:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4883:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4907:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4862:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4862:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4852:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4503:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4514:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4526:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4534:6:1",
														"type": ""
													}
												],
												"src": "4458:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5003:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5020:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5043:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5025:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5025:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5013:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5013:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5013:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4991:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4998:3:1",
														"type": ""
													}
												],
												"src": "4938:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5160:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5170:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5182:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5193:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5178:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5178:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5170:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5250:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5263:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5274:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5259:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5259:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5206:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5206:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5206:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5132:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5144:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5155:4:1",
														"type": ""
													}
												],
												"src": "5062:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5390:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5436:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5438:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5438:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5438:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5411:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5407:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5407:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5432:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5403:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5403:32:1"
															},
															"nodeType": "YulIf",
															"src": "5400:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5529:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5544:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5558:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5548:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5573:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5608:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5619:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5604:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5604:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5628:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5583:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5583:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5573:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5656:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5671:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5685:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5675:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5701:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5736:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5747:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5732:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5732:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5756:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5711:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5711:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5701:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5784:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5799:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5803:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5829:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5864:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5875:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5860:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5860:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5884:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5839:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5839:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5829:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5344:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5355:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5367:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5375:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5383:6:1",
														"type": ""
													}
												],
												"src": "5290:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5981:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6027:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6029:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6029:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6029:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6002:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6011:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5998:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5998:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6023:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5994:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:32:1"
															},
															"nodeType": "YulIf",
															"src": "5991:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6120:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6135:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6149:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6139:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6164:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6199:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6210:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6195:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6195:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6219:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6174:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6174:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6164:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5951:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5962:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5974:6:1",
														"type": ""
													}
												],
												"src": "5915:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6290:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6344:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6353:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6356:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6346:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6346:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6346:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6313:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6335:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6320:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6320:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6310:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6310:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6303:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:40:1"
															},
															"nodeType": "YulIf",
															"src": "6300:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6283:5:1",
														"type": ""
													}
												],
												"src": "6250:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6421:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6431:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6453:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6440:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6431:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6493:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6469:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6469:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6469:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6399:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6407:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6415:5:1",
														"type": ""
													}
												],
												"src": "6372:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6591:388:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6637:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6639:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6639:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6639:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6612:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6621:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6608:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6633:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6604:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:32:1"
															},
															"nodeType": "YulIf",
															"src": "6601:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6730:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6745:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6759:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6749:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6774:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6809:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6820:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6805:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6805:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6829:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6784:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6784:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6774:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6857:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6872:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6886:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6876:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6902:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6934:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6945:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6930:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6930:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6954:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6912:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6912:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6902:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6553:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6564:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6576:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6584:6:1",
														"type": ""
													}
												],
												"src": "6511:468:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7074:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7091:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7094:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6985:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7197:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7214:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7217:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7207:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7108:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7259:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7279:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7269:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7269:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7269:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7373:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7376:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7366:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7397:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7400:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7390:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7231:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7460:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7470:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7492:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7522:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7500:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7500:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7488:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7474:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7641:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7594:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7579:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7579:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7618:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7630:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7615:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7576:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7576:62:1"
															},
															"nodeType": "YulIf",
															"src": "7573:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7677:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7681:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7446:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7454:4:1",
														"type": ""
													}
												],
												"src": "7417:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7745:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7755:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7765:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7765:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7814:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7822:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7794:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7794:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7729:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7738:6:1",
														"type": ""
													}
												],
												"src": "7704:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7905:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8010:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8012:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8012:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8012:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7982:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7990:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7979:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7979:30:1"
															},
															"nodeType": "YulIf",
															"src": "7976:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8072:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8050:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8050:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8042:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8116:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8128:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8134:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8124:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8116:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7889:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7900:4:1",
														"type": ""
													}
												],
												"src": "7839:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8203:103:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8231:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8236:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8213:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8213:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8213:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8284:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8289:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8280:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8298:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8273:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8273:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8185:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8190:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8195:6:1",
														"type": ""
													}
												],
												"src": "8152:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8395:327:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8405:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8471:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8430:40:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8430:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8414:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8405:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8495:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8502:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8488:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8488:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8518:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8533:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8540:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8529:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8529:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8522:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8583:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8585:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8585:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8585:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8564:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8569:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8560:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8578:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8557:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8557:25:1"
															},
															"nodeType": "YulIf",
															"src": "8554:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8699:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8704:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8709:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8675:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8675:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8675:41:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8368:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8373:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8381:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8389:5:1",
														"type": ""
													}
												],
												"src": "8312:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8802:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8851:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8853:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8853:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8853:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8830:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8838:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8826:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8826:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8845:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8822:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8822:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8815:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8815:35:1"
															},
															"nodeType": "YulIf",
															"src": "8812:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8943:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8970:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8957:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8957:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8947:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8986:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9046:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9054:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9042:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9042:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9061:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9069:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8995:46:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8995:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8986:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8780:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8788:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8796:5:1",
														"type": ""
													}
												],
												"src": "8741:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9211:817:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9258:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9260:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9260:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9260:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9232:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9241:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9228:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9253:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9224:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:33:1"
															},
															"nodeType": "YulIf",
															"src": "9221:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9351:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9366:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9380:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9370:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9395:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9430:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9441:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9426:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9426:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9450:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9405:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9405:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9395:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9478:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9493:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9507:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9497:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9523:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9558:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9569:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9554:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9554:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9578:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9533:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9533:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9523:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9606:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9621:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9635:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9625:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9651:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9686:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9697:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9682:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9682:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9706:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9661:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9661:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9651:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9734:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9749:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9780:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9791:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9776:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9776:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9763:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9763:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9753:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9842:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9844:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9844:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9844:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9814:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9822:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9811:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9811:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "9808:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9939:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9983:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9994:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9979:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9979:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10003:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9949:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9949:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9157:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9168:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9180:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9188:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9196:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9204:6:1",
														"type": ""
													}
												],
												"src": "9085:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10163:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10165:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10165:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10138:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10147:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10134:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10159:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10130:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10130:32:1"
															},
															"nodeType": "YulIf",
															"src": "10127:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "10256:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10271:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10285:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10275:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10300:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10335:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10346:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10331:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10331:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10355:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10310:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10310:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10300:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10383:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10398:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10412:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10402:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10428:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10463:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10474:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10459:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10459:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10483:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10438:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10438:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10428:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10079:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10090:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10102:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10110:6:1",
														"type": ""
													}
												],
												"src": "10034:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10542:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10559:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10562:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10552:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10552:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10552:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10656:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10659:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10649:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10683:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10673:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10673:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10673:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10514:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10751:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10761:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10775:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10781:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10771:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10771:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10761:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10792:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10822:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10828:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10818:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10818:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10796:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10869:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10883:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10897:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10905:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10893:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10893:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10883:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10849:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10842:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10842:26:1"
															},
															"nodeType": "YulIf",
															"src": "10839:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10972:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10986:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10986:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10986:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10936:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10959:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10967:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10956:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10956:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10933:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10933:38:1"
															},
															"nodeType": "YulIf",
															"src": "10930:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10735:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10744:6:1",
														"type": ""
													}
												],
												"src": "10700:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11140:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11150:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11165:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11150:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11112:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11117:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11128:11:1",
														"type": ""
													}
												],
												"src": "11026:148:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11290:267:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11300:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11347:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11314:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11314:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11304:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11362:96:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11446:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11451:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11369:76:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11369:89:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11362:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11493:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11500:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11489:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11489:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11507:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11512:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11467:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11467:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11467:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11528:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11539:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11544:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11535:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11535:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11528:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11271:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11278:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11286:3:1",
														"type": ""
													}
												],
												"src": "11180:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11747:251:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11758:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11847:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11856:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11765:81:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11765:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11758:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11870:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11959:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11968:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11877:81:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11877:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11870:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11982:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11989:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11982:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11718:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11724:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11732:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11743:3:1",
														"type": ""
													}
												],
												"src": "11563:435:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12049:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12052:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12042:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12042:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12042:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12146:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12149:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12139:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12139:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12139:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12170:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12173:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12163:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12163:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12163:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12004:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12235:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12245:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12268:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12250:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12250:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12245:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12279:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12302:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12284:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12284:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12279:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12326:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12328:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12328:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12328:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12320:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12323:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12317:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12317:8:1"
															},
															"nodeType": "YulIf",
															"src": "12314:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12358:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12370:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12373:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12366:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12366:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12358:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12221:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12224:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12230:4:1",
														"type": ""
													}
												],
												"src": "12190:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12435:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12445:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12468:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12450:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12450:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12445:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12479:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12502:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12484:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12484:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12479:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12677:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12679:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12679:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12679:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12589:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12582:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12582:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12575:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12575:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12597:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12604:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12672:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12600:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12600:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12594:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12594:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12571:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12571:105:1"
															},
															"nodeType": "YulIf",
															"src": "12568:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12709:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12724:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12727:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12720:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12720:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12709:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12418:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12421:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12427:7:1",
														"type": ""
													}
												],
												"src": "12387:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12785:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12795:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12818:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12800:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12800:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12795:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12829:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12852:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12834:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12834:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12829:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12992:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12994:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12994:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12994:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12913:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12920:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12988:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12916:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12916:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12910:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12910:81:1"
															},
															"nodeType": "YulIf",
															"src": "12907:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13024:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13035:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13038:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13031:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13031:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13024:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12772:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12775:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12781:3:1",
														"type": ""
													}
												],
												"src": "12741:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13110:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13121:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13137:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13131:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13131:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13121:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13093:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13103:6:1",
														"type": ""
													}
												],
												"src": "13052:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13251:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13268:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13273:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13261:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13261:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13261:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13289:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13308:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13313:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13304:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13304:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13289:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13223:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13228:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13239:11:1",
														"type": ""
													}
												],
												"src": "13156:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13420:270:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13430:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13476:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13444:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13444:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13434:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13491:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13556:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13561:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13498:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13498:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13491:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13603:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13610:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13599:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13599:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13617:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13622:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "13577:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13577:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13577:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13638:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13649:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13676:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "13654:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13654:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13645:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13645:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13638:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13401:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13408:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13416:3:1",
														"type": ""
													}
												],
												"src": "13330:360:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13896:440:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13906:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13918:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13929:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13914:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13914:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13906:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13987:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14000:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14011:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13996:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13996:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13943:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13943:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13943:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14068:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14081:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14092:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14077:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14077:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14024:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14024:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14024:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14150:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14163:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14174:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14159:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14159:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14106:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14106:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14106:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14199:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14210:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14195:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14195:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14219:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14225:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14215:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14215:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14188:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14188:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14188:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14245:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14315:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14324:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14253:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14253:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14245:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13844:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13856:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13864:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13872:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13880:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13891:4:1",
														"type": ""
													}
												],
												"src": "13696:640:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14404:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14414:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14429:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14423:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14423:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14414:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14471:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14445:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14445:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14445:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14382:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14390:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14398:5:1",
														"type": ""
													}
												],
												"src": "14342:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14565:273:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14611:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14613:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14613:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14613:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14586:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14595:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14582:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14582:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14607:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14578:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14578:32:1"
															},
															"nodeType": "YulIf",
															"src": "14575:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "14704:127:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14719:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14723:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14748:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14793:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14804:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14789:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14789:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14813:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14758:30:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14758:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14748:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14535:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14546:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14558:6:1",
														"type": ""
													}
												],
												"src": "14489:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14887:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14897:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14924:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14906:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14906:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14897:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15020:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15022:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15022:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15022:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14945:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14952:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14942:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14942:77:1"
															},
															"nodeType": "YulIf",
															"src": "14939:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15051:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15062:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15069:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15058:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15058:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15051:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14873:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14883:3:1",
														"type": ""
													}
												],
												"src": "14844:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15111:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15128:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15131:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15121:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15121:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15121:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15225:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15228:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15218:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15218:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15249:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15252:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15242:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15242:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15242:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "15083:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15311:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15321:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15344:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15326:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15326:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15321:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15355:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15378:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15360:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15360:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15355:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15402:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15404:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15404:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15404:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15399:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15392:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15392:9:1"
															},
															"nodeType": "YulIf",
															"src": "15389:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15434:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15443:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15446:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15439:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15439:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15434:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15300:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15303:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15309:1:1",
														"type": ""
													}
												],
												"src": "15269:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15494:142:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15504:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15527:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15509:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15509:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15504:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15538:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15561:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15543:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15543:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15538:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15585:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15587:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15587:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15587:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15582:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15575:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15575:9:1"
															},
															"nodeType": "YulIf",
															"src": "15572:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15616:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15625:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15628:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "15621:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15621:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15616:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15483:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15486:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15492:1:1",
														"type": ""
													}
												],
												"src": "15460:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15670:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15687:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15690:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15680:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15680:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15680:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15784:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15787:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15777:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15777:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15777:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15808:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15811:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15801:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15801:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15801:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15642:180:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb465146102bf578063b88d4fde146102db578063c87b56dd146102f7578063e985e9c51461032757610100565b80636352211e1461022557806370a082311461025557806395d89b4114610285578063a0712d68146102a357610100565b806318160ddd116100d357806318160ddd1461019f57806323b872dd146101bd578063325b272a146101d957806342842e0e1461020957610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a9190611df1565b610357565b60405161012c9190611e39565b60405180910390f35b61013d610439565b60405161014a9190611eed565b60405180910390f35b61016d60048036038101906101689190611f45565b6104cb565b60405161017a9190611fb3565b60405180910390f35b61019d60048036038101906101989190611ffa565b610547565b005b6101a761064b565b6040516101b49190612049565b60405180910390f35b6101d760048036038101906101d29190612064565b610662565b005b6101f360048036038101906101ee91906120b7565b610672565b6040516102009190612049565b60405180910390f35b610223600480360381019061021e9190612064565b61076d565b005b61023f600480360381019061023a9190611f45565b61078d565b60405161024c9190611fb3565b60405180910390f35b61026f600480360381019061026a91906120b7565b6107a3565b60405161027c9190612049565b60405180910390f35b61028d610872565b60405161029a9190611eed565b60405180910390f35b6102bd60048036038101906102b89190611f45565b610904565b005b6102d960048036038101906102d49190612110565b610911565b005b6102f560048036038101906102f09190612285565b610a88565b005b610311600480360381019061030c9190611f45565b610b00565b60405161031e9190611eed565b60405180910390f35b610341600480360381019061033c9190612308565b610b9e565b60405161034e9190611e39565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610432575061043182610c32565b5b9050919050565b60606002805461044890612377565b80601f016020809104026020016040519081016040528092919081815260200182805461047490612377565b80156104c15780601f10610496576101008083540402835291602001916104c1565b820191906000526020600020905b8154815290600101906020018083116104a457829003601f168201915b5050505050905090565b60006104d682610c9c565b61050c576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006105528261078d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105b9576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105d8610cea565b73ffffffffffffffffffffffffffffffffffffffff161461063b57610604816105ff610cea565b610b9e565b61063a576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b610646838383610cf2565b505050565b6000610655610da4565b6001546000540303905090565b61066d838383610da9565b505050565b6000806106d9600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020544361126f90919063ffffffff16565b905060006106f8826106ea866107a3565b61128590919063ffffffff16565b9050600061076082600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000205461129b90919063ffffffff16565b9050809350505050919050565b61078883838360405180602001604052806000815250610a88565b505050565b6000610798826112b1565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361080a576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b60606003805461088190612377565b80601f01602080910402602001604051908101604052809291908181526020018280546108ad90612377565b80156108fa5780601f106108cf576101008083540402835291602001916108fa565b820191906000526020600020905b8154815290600101906020018083116108dd57829003601f168201915b5050505050905090565b61090e338261153c565b50565b610919610cea565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361097d576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806007600061098a610cea565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610a37610cea565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a7c9190611e39565b60405180910390a35050565b610a93848484610da9565b610ab28373ffffffffffffffffffffffffffffffffffffffff1661155a565b15610afa57610ac38484848461157d565b610af9576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610b0b82610c9c565b610b41576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610b4b6116cd565b90506000815103610b6b5760405180602001604052806000815250610b96565b80610b75846116ed565b604051602001610b869291906123e4565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600081610ca7610da4565b11158015610cb6575060005482105b8015610ce3575060046000838152602001908152602001600020600001601c9054906101000a900460ff16155b9050919050565b600033905090565b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600090565b610db28361184d565b610dbb8261184d565b6000610dc6826112b1565b90508373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614610e31576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16610e52610cea565b73ffffffffffffffffffffffffffffffffffffffff161480610e815750610e8085610e7b610cea565b610b9e565b5b80610ec65750610e8f610cea565b73ffffffffffffffffffffffffffffffffffffffff16610eae846104cb565b73ffffffffffffffffffffffffffffffffffffffff16145b905080610eff576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f65576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f72858585600161196d565b610f7e60008487610cf2565b6001600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600460008581526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006001850190506000600460008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036111fd5760005482146111fc57878160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084602001518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b505050828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46112688585856001611973565b5050505050565b6000818361127d9190612437565b905092915050565b60008183611293919061246b565b905092915050565b600081836112a991906124c5565b905092915050565b6112b9611d42565b6000829050806112c7610da4565b1161150557600054811015611504576000600460008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050806040015161150257600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146113e6578092505050611537565b5b60011561150157818060019003925050600460008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146114fc578092505050611537565b6113e7565b5b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b611556828260405180602001604052806000815250611979565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026115a3610cea565b8786866040518563ffffffff1660e01b81526004016115c59493929190612570565b6020604051808303816000875af192505050801561160157506040513d601f19601f820116820180604052508101906115fe91906125d1565b60015b61167a573d8060008114611631576040519150601f19603f3d011682016040523d82523d6000602084013e611636565b606091505b506000815103611672576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180608001604052806051815260200161270760519139905090565b606060008203611734576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611848565b600082905060005b6000821461176657808061174f906125fe565b915050600a8261175f9190612675565b915061173c565b60008167ffffffffffffffff8111156117825761178161215a565b5b6040519080825280601f01601f1916602001820160405280156117b45781602001600182028036833780820191505090505b5090505b60008514611841576001826117cd9190612437565b9150600a856117dc91906126a6565b60306117e891906124c5565b60f81b8183815181106117fe576117fd6126d7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561183a9190612675565b94506117b8565b8093505050505b919050565b600061185882610672565b90506118be81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000205461129b90919063ffffffff16565b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000208190555043600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020819055505050565b50505050565b50505050565b6119828361184d565b600080549050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036119ee576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008303611a28576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611a35600085838661196d565b82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555082600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160088282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550836004600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426004600083815260200190815260200160002060000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550600081905060008482019050611bf68673ffffffffffffffffffffffffffffffffffffffff1661155a565b15611cbb575b818673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611c6b600087848060010195508761157d565b611ca1576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808210611bfc578260005414611cb657600080fd5b611d26565b5b818060010192508673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4808210611cbc575b816000819055505050611d3c6000858386611973565b50505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611dce81611d99565b8114611dd957600080fd5b50565b600081359050611deb81611dc5565b92915050565b600060208284031215611e0757611e06611d8f565b5b6000611e1584828501611ddc565b91505092915050565b60008115159050919050565b611e3381611e1e565b82525050565b6000602082019050611e4e6000830184611e2a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e8e578082015181840152602081019050611e73565b83811115611e9d576000848401525b50505050565b6000601f19601f8301169050919050565b6000611ebf82611e54565b611ec98185611e5f565b9350611ed9818560208601611e70565b611ee281611ea3565b840191505092915050565b60006020820190508181036000830152611f078184611eb4565b905092915050565b6000819050919050565b611f2281611f0f565b8114611f2d57600080fd5b50565b600081359050611f3f81611f19565b92915050565b600060208284031215611f5b57611f5a611d8f565b5b6000611f6984828501611f30565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f9d82611f72565b9050919050565b611fad81611f92565b82525050565b6000602082019050611fc86000830184611fa4565b92915050565b611fd781611f92565b8114611fe257600080fd5b50565b600081359050611ff481611fce565b92915050565b6000806040838503121561201157612010611d8f565b5b600061201f85828601611fe5565b925050602061203085828601611f30565b9150509250929050565b61204381611f0f565b82525050565b600060208201905061205e600083018461203a565b92915050565b60008060006060848603121561207d5761207c611d8f565b5b600061208b86828701611fe5565b935050602061209c86828701611fe5565b92505060406120ad86828701611f30565b9150509250925092565b6000602082840312156120cd576120cc611d8f565b5b60006120db84828501611fe5565b91505092915050565b6120ed81611e1e565b81146120f857600080fd5b50565b60008135905061210a816120e4565b92915050565b6000806040838503121561212757612126611d8f565b5b600061213585828601611fe5565b9250506020612146858286016120fb565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61219282611ea3565b810181811067ffffffffffffffff821117156121b1576121b061215a565b5b80604052505050565b60006121c4611d85565b90506121d08282612189565b919050565b600067ffffffffffffffff8211156121f0576121ef61215a565b5b6121f982611ea3565b9050602081019050919050565b82818337600083830152505050565b6000612228612223846121d5565b6121ba565b90508281526020810184848401111561224457612243612155565b5b61224f848285612206565b509392505050565b600082601f83011261226c5761226b612150565b5b813561227c848260208601612215565b91505092915050565b6000806000806080858703121561229f5761229e611d8f565b5b60006122ad87828801611fe5565b94505060206122be87828801611fe5565b93505060406122cf87828801611f30565b925050606085013567ffffffffffffffff8111156122f0576122ef611d94565b5b6122fc87828801612257565b91505092959194509250565b6000806040838503121561231f5761231e611d8f565b5b600061232d85828601611fe5565b925050602061233e85828601611fe5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061238f57607f821691505b6020821081036123a2576123a1612348565b5b50919050565b600081905092915050565b60006123be82611e54565b6123c881856123a8565b93506123d8818560208601611e70565b80840191505092915050565b60006123f082856123b3565b91506123fc82846123b3565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061244282611f0f565b915061244d83611f0f565b9250828210156124605761245f612408565b5b828203905092915050565b600061247682611f0f565b915061248183611f0f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156124ba576124b9612408565b5b828202905092915050565b60006124d082611f0f565b91506124db83611f0f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156125105761250f612408565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b60006125428261251b565b61254c8185612526565b935061255c818560208601611e70565b61256581611ea3565b840191505092915050565b60006080820190506125856000830187611fa4565b6125926020830186611fa4565b61259f604083018561203a565b81810360608301526125b18184612537565b905095945050505050565b6000815190506125cb81611dc5565b92915050565b6000602082840312156125e7576125e6611d8f565b5b60006125f5848285016125bc565b91505092915050565b600061260982611f0f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361263b5761263a612408565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061268082611f0f565b915061268b83611f0f565b92508261269b5761269a612646565b5b828204905092915050565b60006126b182611f0f565b91506126bc83611f0f565b9250826126cc576126cb612646565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d57755a3650574a535770704d354168344337747836646845476f626b686b6e734c58333446423957746e684d2fa2646970667358221220e6a6040facf68b816f9d4c8ddc065bbed089c36ab6eb7aa068ecec29c980ad4364736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x327 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2A3 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x325B272A EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x209 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1EED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1FFA JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A7 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x2064 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x20B7 JUMP JUMPDEST PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1EED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x904 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH2 0x911 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x2285 JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1EED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x2308 JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x422 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x432 JUMPI POP PUSH2 0x431 DUP3 PUSH2 0xC32 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x448 SWAP1 PUSH2 0x2377 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x2377 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x496 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D6 DUP3 PUSH2 0xC9C JUMP JUMPDEST PUSH2 0x50C JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x552 DUP3 PUSH2 0x78D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D8 PUSH2 0xCEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x63B JUMPI PUSH2 0x604 DUP2 PUSH2 0x5FF PUSH2 0xCEA JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x646 DUP4 DUP4 DUP4 PUSH2 0xCF2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x655 PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x66D DUP4 DUP4 DUP4 PUSH2 0xDA9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6D9 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD NUMBER PUSH2 0x126F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6F8 DUP3 PUSH2 0x6EA DUP7 PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x1285 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x760 DUP3 PUSH1 0x8 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x129B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x788 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA88 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x798 DUP3 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x80A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x881 SWAP1 PUSH2 0x2377 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8AD SWAP1 PUSH2 0x2377 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x90E CALLER DUP3 PUSH2 0x153C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x919 PUSH2 0xCEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x97D JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x98A PUSH2 0xCEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA37 PUSH2 0xCEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA7C SWAP2 SWAP1 PUSH2 0x1E39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA93 DUP5 DUP5 DUP5 PUSH2 0xDA9 JUMP JUMPDEST PUSH2 0xAB2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x155A JUMP JUMPDEST ISZERO PUSH2 0xAFA JUMPI PUSH2 0xAC3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x157D JUMP JUMPDEST PUSH2 0xAF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB0B DUP3 PUSH2 0xC9C JUMP JUMPDEST PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB4B PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xB6B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB96 JUMP JUMPDEST DUP1 PUSH2 0xB75 DUP5 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB86 SWAP3 SWAP2 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xCA7 PUSH2 0xDA4 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xCB6 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xCE3 JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xDB2 DUP4 PUSH2 0x184D JUMP JUMPDEST PUSH2 0xDBB DUP3 PUSH2 0x184D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC6 DUP3 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE52 PUSH2 0xCEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xE81 JUMPI POP PUSH2 0xE80 DUP6 PUSH2 0xE7B PUSH2 0xCEA JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xEC6 JUMPI POP PUSH2 0xE8F PUSH2 0xCEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEAE DUP5 PUSH2 0x4CB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF65 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF72 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x196D JUMP JUMPDEST PUSH2 0xF7E PUSH1 0x0 DUP5 DUP8 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FD JUMPI PUSH1 0x0 SLOAD DUP3 EQ PUSH2 0x11FC JUMPI DUP8 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1268 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1973 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x127D SWAP2 SWAP1 PUSH2 0x2437 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1293 SWAP2 SWAP1 PUSH2 0x246B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x12A9 SWAP2 SWAP1 PUSH2 0x24C5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12B9 PUSH2 0x1D42 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x12C7 PUSH2 0xDA4 JUMP JUMPDEST GT PUSH2 0x1505 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x1504 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x1502 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13E6 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1537 JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1501 JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14FC JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1537 JUMP JUMPDEST PUSH2 0x13E7 JUMP JUMPDEST JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1556 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1979 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x15A3 PUSH2 0xCEA JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2570 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1601 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15FE SWAP2 SWAP1 PUSH2 0x25D1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x167A JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1631 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1672 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x51 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2707 PUSH1 0x51 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x1734 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1848 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1766 JUMPI DUP1 DUP1 PUSH2 0x174F SWAP1 PUSH2 0x25FE JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x175F SWAP2 SWAP1 PUSH2 0x2675 JUMP JUMPDEST SWAP2 POP PUSH2 0x173C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1782 JUMPI PUSH2 0x1781 PUSH2 0x215A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17B4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1841 JUMPI PUSH1 0x1 DUP3 PUSH2 0x17CD SWAP2 SWAP1 PUSH2 0x2437 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x17DC SWAP2 SWAP1 PUSH2 0x26A6 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x17E8 SWAP2 SWAP1 PUSH2 0x24C5 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x17FE JUMPI PUSH2 0x17FD PUSH2 0x26D7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x183A SWAP2 SWAP1 PUSH2 0x2675 JUMP JUMPDEST SWAP5 POP PUSH2 0x17B8 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1858 DUP3 PUSH2 0x672 JUMP JUMPDEST SWAP1 POP PUSH2 0x18BE DUP2 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x129B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1982 DUP4 PUSH2 0x184D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SUB PUSH2 0x1A28 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A35 PUSH1 0x0 DUP6 DUP4 DUP7 PUSH2 0x196D JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP5 DUP3 ADD SWAP1 POP PUSH2 0x1BF6 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x155A JUMP JUMPDEST ISZERO PUSH2 0x1CBB JUMPI JUMPDEST DUP2 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1C6B PUSH1 0x0 DUP8 DUP5 DUP1 PUSH1 0x1 ADD SWAP6 POP DUP8 PUSH2 0x157D JUMP JUMPDEST PUSH2 0x1CA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 LT PUSH2 0x1BFC JUMPI DUP3 PUSH1 0x0 SLOAD EQ PUSH2 0x1CB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D26 JUMP JUMPDEST JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 DUP3 LT PUSH2 0x1CBC JUMPI JUMPDEST DUP2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1D3C PUSH1 0x0 DUP6 DUP4 DUP7 PUSH2 0x1973 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DCE DUP2 PUSH2 0x1D99 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DEB DUP2 PUSH2 0x1DC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E07 JUMPI PUSH2 0x1E06 PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E15 DUP5 DUP3 DUP6 ADD PUSH2 0x1DDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E33 DUP2 PUSH2 0x1E1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E4E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E8E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E73 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E9D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EBF DUP3 PUSH2 0x1E54 JUMP JUMPDEST PUSH2 0x1EC9 DUP2 DUP6 PUSH2 0x1E5F JUMP JUMPDEST SWAP4 POP PUSH2 0x1ED9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x1EE2 DUP2 PUSH2 0x1EA3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F07 DUP2 DUP5 PUSH2 0x1EB4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F22 DUP2 PUSH2 0x1F0F JUMP JUMPDEST DUP2 EQ PUSH2 0x1F2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F3F DUP2 PUSH2 0x1F19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F5B JUMPI PUSH2 0x1F5A PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F69 DUP5 DUP3 DUP6 ADD PUSH2 0x1F30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9D DUP3 PUSH2 0x1F72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FAD DUP2 PUSH2 0x1F92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FC8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FD7 DUP2 PUSH2 0x1F92 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FF4 DUP2 PUSH2 0x1FCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2011 JUMPI PUSH2 0x2010 PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x201F DUP6 DUP3 DUP7 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2030 DUP6 DUP3 DUP7 ADD PUSH2 0x1F30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2043 DUP2 PUSH2 0x1F0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x205E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x203A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x207D JUMPI PUSH2 0x207C PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x208B DUP7 DUP3 DUP8 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x209C DUP7 DUP3 DUP8 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x20AD DUP7 DUP3 DUP8 ADD PUSH2 0x1F30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20CD JUMPI PUSH2 0x20CC PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20DB DUP5 DUP3 DUP6 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20ED DUP2 PUSH2 0x1E1E JUMP JUMPDEST DUP2 EQ PUSH2 0x20F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x210A DUP2 PUSH2 0x20E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2135 DUP6 DUP3 DUP7 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2146 DUP6 DUP3 DUP7 ADD PUSH2 0x20FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2192 DUP3 PUSH2 0x1EA3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21B1 JUMPI PUSH2 0x21B0 PUSH2 0x215A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C4 PUSH2 0x1D85 JUMP JUMPDEST SWAP1 POP PUSH2 0x21D0 DUP3 DUP3 PUSH2 0x2189 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21F0 JUMPI PUSH2 0x21EF PUSH2 0x215A JUMP JUMPDEST JUMPDEST PUSH2 0x21F9 DUP3 PUSH2 0x1EA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2228 PUSH2 0x2223 DUP5 PUSH2 0x21D5 JUMP JUMPDEST PUSH2 0x21BA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2244 JUMPI PUSH2 0x2243 PUSH2 0x2155 JUMP JUMPDEST JUMPDEST PUSH2 0x224F DUP5 DUP3 DUP6 PUSH2 0x2206 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x226C JUMPI PUSH2 0x226B PUSH2 0x2150 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x227C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2215 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x229F JUMPI PUSH2 0x229E PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22AD DUP8 DUP3 DUP9 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x22BE DUP8 DUP3 DUP9 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x22CF DUP8 DUP3 DUP9 ADD PUSH2 0x1F30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22F0 JUMPI PUSH2 0x22EF PUSH2 0x1D94 JUMP JUMPDEST JUMPDEST PUSH2 0x22FC DUP8 DUP3 DUP9 ADD PUSH2 0x2257 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x231F JUMPI PUSH2 0x231E PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x232D DUP6 DUP3 DUP7 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x233E DUP6 DUP3 DUP7 ADD PUSH2 0x1FE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x238F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x23A2 JUMPI PUSH2 0x23A1 PUSH2 0x2348 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23BE DUP3 PUSH2 0x1E54 JUMP JUMPDEST PUSH2 0x23C8 DUP2 DUP6 PUSH2 0x23A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x23D8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E70 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F0 DUP3 DUP6 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP PUSH2 0x23FC DUP3 DUP5 PUSH2 0x23B3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2442 DUP3 PUSH2 0x1F0F JUMP JUMPDEST SWAP2 POP PUSH2 0x244D DUP4 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2460 JUMPI PUSH2 0x245F PUSH2 0x2408 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2476 DUP3 PUSH2 0x1F0F JUMP JUMPDEST SWAP2 POP PUSH2 0x2481 DUP4 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x24BA JUMPI PUSH2 0x24B9 PUSH2 0x2408 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D0 DUP3 PUSH2 0x1F0F JUMP JUMPDEST SWAP2 POP PUSH2 0x24DB DUP4 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2510 JUMPI PUSH2 0x250F PUSH2 0x2408 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2542 DUP3 PUSH2 0x251B JUMP JUMPDEST PUSH2 0x254C DUP2 DUP6 PUSH2 0x2526 JUMP JUMPDEST SWAP4 POP PUSH2 0x255C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x2565 DUP2 PUSH2 0x1EA3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2585 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1FA4 JUMP JUMPDEST PUSH2 0x2592 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1FA4 JUMP JUMPDEST PUSH2 0x259F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x203A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x25B1 DUP2 DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x25CB DUP2 PUSH2 0x1DC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25E7 JUMPI PUSH2 0x25E6 PUSH2 0x1D8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25F5 DUP5 DUP3 DUP6 ADD PUSH2 0x25BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2609 DUP3 PUSH2 0x1F0F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x263B JUMPI PUSH2 0x263A PUSH2 0x2408 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2680 DUP3 PUSH2 0x1F0F JUMP JUMPDEST SWAP2 POP PUSH2 0x268B DUP4 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x269B JUMPI PUSH2 0x269A PUSH2 0x2646 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B1 DUP3 PUSH2 0x1F0F JUMP JUMPDEST SWAP2 POP PUSH2 0x26BC DUP4 PUSH2 0x1F0F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x26CC JUMPI PUSH2 0x26CB PUSH2 0x2646 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2F516D57755A3650574A535770704D3541683443 CALLDATACOPY PUSH21 0x7836646845476F626B686B6E734C58333446423957 PUSH21 0x6E684D2FA2646970667358221220E6A6040FACF68B DUP2 PUSH16 0x9D4C8DDC065BBED089C36AB6EB7AA068 0xEC 0xEC 0x29 0xC9 DUP1 0xAD NUMBER PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "50278:215:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33047:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;36078:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37625:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37201:363;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;32309:306;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38464:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31472:291;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38694:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;35893:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33406:203;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;36240:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;50399:86;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;37892:282;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;38939:360;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;36408:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38240:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33047:300;33149:4;33199:25;33184:40;;;:11;:40;;;;:104;;;;33255:33;33240:48;;;:11;:48;;;;33184:104;:156;;;;33304:36;33328:11;33304:23;:36::i;:::-;33184:156;33165:175;;33047:300;;;:::o;36078:98::-;36132:13;36164:5;36157:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36078:98;:::o;37625:200::-;37693:7;37717:16;37725:7;37717;:16::i;:::-;37712:64;;37742:34;;;;;;;;;;;;;;37712:64;37794:15;:24;37810:7;37794:24;;;;;;;;;;;;;;;;;;;;;37787:31;;37625:200;;;:::o;37201:363::-;37273:13;37289:24;37305:7;37289:15;:24::i;:::-;37273:40;;37333:5;37327:11;;:2;:11;;;37323:48;;37347:24;;;;;;;;;;;;;;37323:48;37402:5;37386:21;;:12;:10;:12::i;:::-;:21;;;37382:137;;37413:37;37430:5;37437:12;:10;:12::i;:::-;37413:16;:37::i;:::-;37409:110;;37473:35;;;;;;;;;;;;;;37409:110;37382:137;37529:28;37538:2;37542:7;37551:5;37529:8;:28::i;:::-;37263:301;37201:363;;:::o;32309:306::-;32362:7;32583:15;:13;:15::i;:::-;32568:12;;32552:13;;:28;:46;32545:53;;32309:306;:::o;38464:164::-;38593:28;38603:4;38609:2;38613:7;38593:9;:28::i;:::-;38464:164;;;:::o;31472:291::-;31525:7;31543:18;31564:38;31581:11;:17;31593:4;31581:17;;;;;;;;;;;;;;;:20;31599:1;31581:20;;;;;;;;;;;;31564:12;:16;;:38;;;;:::i;:::-;31543:59;;31612:15;31630:31;31650:10;31630:15;31640:4;31630:9;:15::i;:::-;:19;;:31;;;;:::i;:::-;31612:49;;31671:20;31694:33;31719:7;31694:11;:17;31706:4;31694:17;;;;;;;;;;;;;;;:20;31712:1;31694:20;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;31671:56;;31744:12;31737:19;;;;;31472:291;;;:::o;38694:179::-;38827:39;38844:4;38850:2;38854:7;38827:39;;;;;;;;;;;;:16;:39::i;:::-;38694:179;;;:::o;35893:123::-;35957:7;35983:21;35996:7;35983:12;:21::i;:::-;:26;;;35976:33;;35893:123;;;:::o;33406:203::-;33470:7;33510:1;33493:19;;:5;:19;;;33489:60;;33521:28;;;;;;;;;;;;;;33489:60;33574:12;:19;33587:5;33574:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;33566:36;;33559:43;;33406:203;;;:::o;36240:102::-;36296:13;36328:7;36321:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36240:102;:::o;50399:86::-;50447:31;50457:10;50469:8;50447:9;:31::i;:::-;50399:86;:::o;37892:282::-;38002:12;:10;:12::i;:::-;37990:24;;:8;:24;;;37986:54;;38023:17;;;;;;;;;;;;;;37986:54;38096:8;38051:18;:32;38070:12;:10;:12::i;:::-;38051:32;;;;;;;;;;;;;;;:42;38084:8;38051:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;38148:8;38119:48;;38134:12;:10;:12::i;:::-;38119:48;;;38158:8;38119:48;;;;;;:::i;:::-;;;;;;;;37892:282;;:::o;38939:360::-;39100:28;39110:4;39116:2;39120:7;39100:9;:28::i;:::-;39142:15;:2;:13;;;:15::i;:::-;39138:155;;;39163:56;39194:4;39200:2;39204:7;39213:5;39163:30;:56::i;:::-;39159:134;;39242:40;;;;;;;;;;;;;;39159:134;39138:155;38939:360;;;;:::o;36408:313::-;36481:13;36511:16;36519:7;36511;:16::i;:::-;36506:59;;36536:29;;;;;;;;;;;;;;36506:59;36576:21;36600:10;:8;:10::i;:::-;36576:34;;36652:1;36633:7;36627:21;:26;:87;;;;;;;;;;;;;;;;;36680:7;36689:18;:7;:16;:18::i;:::-;36663:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;36627:87;36620:94;;;36408:313;;;:::o;38240:162::-;38337:4;38360:18;:25;38379:5;38360:25;;;;;;;;;;;;;;;:35;38386:8;38360:35;;;;;;;;;;;;;;;;;;;;;;;;;38353:42;;38240:162;;;;:::o;21026:155::-;21111:4;21149:25;21134:40;;;:11;:40;;;;21127:47;;21026:155;;;:::o;39504:172::-;39561:4;39603:7;39584:15;:13;:15::i;:::-;:26;;:53;;;;;39624:13;;39614:7;:23;39584:53;:85;;;;;39642:11;:20;39654:7;39642:20;;;;;;;;;;;:27;;;;;;;;;;;;39641:28;39584:85;39577:92;;39504:172;;;:::o;9527:96::-;9580:7;9606:10;9599:17;;9527:96;:::o;47312:189::-;47449:2;47422:15;:24;47438:7;47422:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;47486:7;47482:2;47466:28;;47475:5;47466:28;;;;;;;;;;;;47312:189;;;:::o;32090:90::-;32146:7;32090:90;:::o;42287:2144::-;42397:22;42414:4;42397:16;:22::i;:::-;42429:20;42446:2;42429:16;:20::i;:::-;42459:35;42497:21;42510:7;42497:12;:21::i;:::-;42459:59;;42555:4;42533:26;;:13;:18;;;:26;;;42529:67;;42568:28;;;;;;;;;;;;;;42529:67;42607:22;42649:4;42633:20;;:12;:10;:12::i;:::-;:20;;;:72;;;;42669:36;42686:4;42692:12;:10;:12::i;:::-;42669:16;:36::i;:::-;42633:72;:124;;;;42745:12;:10;:12::i;:::-;42721:36;;:20;42733:7;42721:11;:20::i;:::-;:36;;;42633:124;42607:151;;42774:17;42769:66;;42800:35;;;;;;;;;;;;;;42769:66;42863:1;42849:16;;:2;:16;;;42845:52;;42874:23;;;;;;;;;;;;;;42845:52;42908:43;42930:4;42936:2;42940:7;42949:1;42908:21;:43::i;:::-;43013:35;43030:1;43034:7;43043:4;43013:8;:35::i;:::-;43368:1;43338:12;:18;43351:4;43338:18;;;;;;;;;;;;;;;:26;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43411:1;43383:12;:16;43396:2;43383:16;;;;;;;;;;;;;;;:24;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43427:31;43461:11;:20;43473:7;43461:20;;;;;;;;;;;43427:54;;43511:2;43495:8;:13;;;:18;;;;;;;;;;;;;;;;;;43560:15;43527:8;:23;;;:49;;;;;;;;;;;;;;;;;;43824:19;43856:1;43846:7;:11;43824:33;;43871:31;43905:11;:24;43917:11;43905:24;;;;;;;;;;;43871:58;;43972:1;43947:27;;:8;:13;;;;;;;;;;;;:27;;;43943:377;;44154:13;;44139:11;:28;44135:171;;44207:4;44191:8;:13;;;:20;;;;;;;;;;;;;;;;;;44259:13;:28;;;44233:8;:23;;;:54;;;;;;;;;;;;;;;;;;44135:171;43943:377;43314:1016;;;44364:7;44360:2;44345:27;;44354:4;44345:27;;;;;;;;;;;;44382:42;44403:4;44409:2;44413:7;44422:1;44382:20;:42::i;:::-;42387:2044;;42287:2144;;;:::o;3150:96::-;3208:7;3238:1;3234;:5;;;;:::i;:::-;3227:12;;3150:96;;;;:::o;3493:::-;3551:7;3581:1;3577;:5;;;;:::i;:::-;3570:12;;3493:96;;;;:::o;2783:::-;2841:7;2871:1;2867;:5;;;;:::i;:::-;2860:12;;2783:96;;;;:::o;34750:1086::-;34812:21;;:::i;:::-;34845:12;34860:7;34845:22;;34925:4;34906:15;:13;:15::i;:::-;:23;34902:870;;34942:13;;34935:4;:20;34931:841;;;34975:31;35009:11;:17;35021:4;35009:17;;;;;;;;;;;34975:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35049:9;:16;;;35044:714;;35119:1;35093:28;;:9;:14;;;:28;;;35089:99;;35156:9;35149:16;;;;;;35089:99;35485:255;35492:4;35485:255;;;35524:6;;;;;;;;35568:11;:17;35580:4;35568:17;;;;;;;;;;;35556:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35641:1;35615:28;;:9;:14;;;:28;;;35611:107;;35682:9;35675:16;;;;;;35611:107;35485:255;;;35044:714;34957:815;34931:841;34902:870;35798:31;;;;;;;;;;;;;;34750:1086;;;;:::o;39755:102::-;39823:27;39833:2;39837:8;39823:27;;;;;;;;;;;;:9;:27::i;:::-;39755:102;;:::o;10928:320::-;10988:4;11240:1;11218:7;:19;;;:23;11211:30;;10928:320;;;:::o;47982:650::-;48140:4;48176:2;48160:36;;;48197:12;:10;:12::i;:::-;48211:4;48217:7;48226:5;48160:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;48156:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48408:1;48391:6;:13;:18;48387:229;;48436:40;;;;;;;;;;;;;;48387:229;48576:6;48570:13;48561:6;48557:2;48553:15;48546:38;48156:470;48288:45;;;48278:55;;;:6;:55;;;;48271:62;;;47982:650;;;;;;:::o;36962:182::-;37013:13;37038:90;;;;;;;;;;;;;;;;;;;36962:182;:::o;7161:703::-;7217:13;7443:1;7434:5;:10;7430:51;;7460:10;;;;;;;;;;;;;;;;;;;;;7430:51;7490:12;7505:5;7490:20;;7520:14;7544:75;7559:1;7551:4;:9;7544:75;;7576:8;;;;;:::i;:::-;;;;7606:2;7598:10;;;;;:::i;:::-;;;7544:75;;;7628:19;7660:6;7650:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7628:39;;7677:150;7693:1;7684:5;:10;7677:150;;7720:1;7710:11;;;;;:::i;:::-;;;7786:2;7778:5;:10;;;;:::i;:::-;7765:2;:24;;;;:::i;:::-;7752:39;;7735:6;7742;7735:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;7814:2;7805:11;;;;;:::i;:::-;;;7677:150;;;7850:6;7836:21;;;;;7161:703;;;;:::o;31769:224::-;31825:13;31841:16;31852:4;31841:10;:16::i;:::-;31825:32;;31895:31;31920:5;31895:11;:17;31907:4;31895:17;;;;;;;;;;;;;;;:20;31913:1;31895:20;;;;;;;;;;;;:24;;:31;;;;:::i;:::-;31874:11;:17;31886:4;31874:17;;;;;;;;;;;;;;;:20;31892:1;31874:20;;;;;;;;;;;:52;;;;31966:12;31943:11;:17;31955:4;31943:17;;;;;;;;;;;;;;;:20;31961:1;31943:20;;;;;;;;;;;:35;;;;31815:178;31769:224;:::o;49263:154::-;;;;;:::o;50058:153::-;;;;;:::o;40217:1823::-;40420:20;40437:2;40420:16;:20::i;:::-;40450;40473:13;;40450:36;;40514:1;40500:16;;:2;:16;;;40496:48;;40525:19;;;;;;;;;;;;;;40496:48;40570:1;40558:8;:13;40554:44;;40580:18;;;;;;;;;;;;;;40554:44;40609:61;40639:1;40643:2;40647:12;40661:8;40609:21;:61::i;:::-;40976:8;40941:12;:16;40954:2;40941:16;;;;;;;;;;;;;;;:24;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41039:8;40999:12;:16;41012:2;40999:16;;;;;;;;;;;;;;;:29;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41096:2;41063:11;:25;41075:12;41063:25;;;;;;;;;;;:30;;;:35;;;;;;;;;;;;;;;;;;41162:15;41112:11;:25;41124:12;41112:25;;;;;;;;;;;:40;;;:66;;;;;;;;;;;;;;;;;;41193:20;41216:12;41193:35;;41242:11;41271:8;41256:12;:23;41242:37;;41298:15;:2;:13;;;:15::i;:::-;41294:618;;;41333:308;41388:12;41384:2;41363:38;;41380:1;41363:38;;;;;;;;;;;;41428:69;41467:1;41471:2;41475:14;;;;;;41491:5;41428:30;:69::i;:::-;41423:172;;41532:40;;;;;;;;;;;;;;41423:172;41636:3;41621:12;:18;41333:308;;41720:12;41703:13;;:29;41699:43;;41734:8;;;41699:43;41294:618;;;41781:117;41836:14;;;;;;41832:2;41811:40;;41828:1;41811:40;;;;;;;;;;;;41893:3;41878:12;:18;41781:117;;41294:618;41941:12;41925:13;:28;;;;40917:1047;;41973:60;42002:1;42006:2;42010:12;42024:8;41973:20;:60::i;:::-;40325:1715;40217:1823;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:118::-;5025:24;5043:5;5025:24;:::i;:::-;5020:3;5013:37;4938:118;;:::o;5062:222::-;5155:4;5193:2;5182:9;5178:18;5170:26;;5206:71;5274:1;5263:9;5259:17;5250:6;5206:71;:::i;:::-;5062:222;;;;:::o;5290:619::-;5367:6;5375;5383;5432:2;5420:9;5411:7;5407:23;5403:32;5400:119;;;5438:79;;:::i;:::-;5400:119;5558:1;5583:53;5628:7;5619:6;5608:9;5604:22;5583:53;:::i;:::-;5573:63;;5529:117;5685:2;5711:53;5756:7;5747:6;5736:9;5732:22;5711:53;:::i;:::-;5701:63;;5656:118;5813:2;5839:53;5884:7;5875:6;5864:9;5860:22;5839:53;:::i;:::-;5829:63;;5784:118;5290:619;;;;;:::o;5915:329::-;5974:6;6023:2;6011:9;6002:7;5998:23;5994:32;5991:119;;;6029:79;;:::i;:::-;5991:119;6149:1;6174:53;6219:7;6210:6;6199:9;6195:22;6174:53;:::i;:::-;6164:63;;6120:117;5915:329;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:148::-;11128:11;11165:3;11150:18;;11026:148;;;;:::o;11180:377::-;11286:3;11314:39;11347:5;11314:39;:::i;:::-;11369:89;11451:6;11446:3;11369:89;:::i;:::-;11362:96;;11467:52;11512:6;11507:3;11500:4;11493:5;11489:16;11467:52;:::i;:::-;11544:6;11539:3;11535:16;11528:23;;11290:267;11180:377;;;;:::o;11563:435::-;11743:3;11765:95;11856:3;11847:6;11765:95;:::i;:::-;11758:102;;11877:95;11968:3;11959:6;11877:95;:::i;:::-;11870:102;;11989:3;11982:10;;11563:435;;;;;:::o;12004:180::-;12052:77;12049:1;12042:88;12149:4;12146:1;12139:15;12173:4;12170:1;12163:15;12190:191;12230:4;12250:20;12268:1;12250:20;:::i;:::-;12245:25;;12284:20;12302:1;12284:20;:::i;:::-;12279:25;;12323:1;12320;12317:8;12314:34;;;12328:18;;:::i;:::-;12314:34;12373:1;12370;12366:9;12358:17;;12190:191;;;;:::o;12387:348::-;12427:7;12450:20;12468:1;12450:20;:::i;:::-;12445:25;;12484:20;12502:1;12484:20;:::i;:::-;12479:25;;12672:1;12604:66;12600:74;12597:1;12594:81;12589:1;12582:9;12575:17;12571:105;12568:131;;;12679:18;;:::i;:::-;12568:131;12727:1;12724;12720:9;12709:20;;12387:348;;;;:::o;12741:305::-;12781:3;12800:20;12818:1;12800:20;:::i;:::-;12795:25;;12834:20;12852:1;12834:20;:::i;:::-;12829:25;;12988:1;12920:66;12916:74;12913:1;12910:81;12907:107;;;12994:18;;:::i;:::-;12907:107;13038:1;13035;13031:9;13024:16;;12741:305;;;;:::o;13052:98::-;13103:6;13137:5;13131:12;13121:22;;13052:98;;;:::o;13156:168::-;13239:11;13273:6;13268:3;13261:19;13313:4;13308:3;13304:14;13289:29;;13156:168;;;;:::o;13330:360::-;13416:3;13444:38;13476:5;13444:38;:::i;:::-;13498:70;13561:6;13556:3;13498:70;:::i;:::-;13491:77;;13577:52;13622:6;13617:3;13610:4;13603:5;13599:16;13577:52;:::i;:::-;13654:29;13676:6;13654:29;:::i;:::-;13649:3;13645:39;13638:46;;13420:270;13330:360;;;;:::o;13696:640::-;13891:4;13929:3;13918:9;13914:19;13906:27;;13943:71;14011:1;14000:9;13996:17;13987:6;13943:71;:::i;:::-;14024:72;14092:2;14081:9;14077:18;14068:6;14024:72;:::i;:::-;14106;14174:2;14163:9;14159:18;14150:6;14106:72;:::i;:::-;14225:9;14219:4;14215:20;14210:2;14199:9;14195:18;14188:48;14253:76;14324:4;14315:6;14253:76;:::i;:::-;14245:84;;13696:640;;;;;;;:::o;14342:141::-;14398:5;14429:6;14423:13;14414:22;;14445:32;14471:5;14445:32;:::i;:::-;14342:141;;;;:::o;14489:349::-;14558:6;14607:2;14595:9;14586:7;14582:23;14578:32;14575:119;;;14613:79;;:::i;:::-;14575:119;14733:1;14758:63;14813:7;14804:6;14793:9;14789:22;14758:63;:::i;:::-;14748:73;;14704:127;14489:349;;;;:::o;14844:233::-;14883:3;14906:24;14924:5;14906:24;:::i;:::-;14897:33;;14952:66;14945:5;14942:77;14939:103;;15022:18;;:::i;:::-;14939:103;15069:1;15062:5;15058:13;15051:20;;14844:233;;;:::o;15083:180::-;15131:77;15128:1;15121:88;15228:4;15225:1;15218:15;15252:4;15249:1;15242:15;15269:185;15309:1;15326:20;15344:1;15326:20;:::i;:::-;15321:25;;15360:20;15378:1;15360:20;:::i;:::-;15355:25;;15399:1;15389:35;;15404:18;;:::i;:::-;15389:35;15446:1;15443;15439:9;15434:14;;15269:185;;;;:::o;15460:176::-;15492:1;15509:20;15527:1;15509:20;:::i;:::-;15504:25;;15543:20;15561:1;15543:20;:::i;:::-;15538:25;;15582:1;15572:35;;15587:18;;:::i;:::-;15572:35;15628:1;15625;15621:9;15616:14;;15460:176;;;;:::o;15642:180::-;15690:77;15687:1;15680:88;15787:4;15784:1;15777:15;15811:4;15808:1;15801:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2025000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BlockScore(address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2969",
								"getApproved(uint256)": "7458",
								"isApprovedForAll(address,address)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "797",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4599",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50340,
									"end": 50393,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 50340,
									"end": 50393,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50340,
									"end": 50393,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50340,
									"end": 50393,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50340,
									"end": 50393,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50340,
									"end": 50393,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50340,
									"end": 50393,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50340,
									"end": 50393,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 50340,
									"end": 50393,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50340,
									"end": 50393,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50340,
									"end": 50393,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH",
									"source": 0,
									"value": "44636F6666657200000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH",
									"source": 0,
									"value": "44636F6666657200000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31371,
									"end": 31376,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31368,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 31363,
									"end": 31376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31396,
									"end": 31403,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31393,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 31386,
									"end": 31403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31429,
									"end": 31444,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 31429,
									"end": 31442,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 31429,
									"end": 31442,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31429,
									"end": 31442,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 31429,
									"end": 31444,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31429,
									"end": 31444,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 31429,
									"end": 31444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31429,
									"end": 31444,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 31429,
									"end": 31444,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31413,
									"end": 31426,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31413,
									"end": 31444,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31413,
									"end": 31444,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31413,
									"end": 31444,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31413,
									"end": 31444,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 32090,
									"end": 32180,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 32090,
									"end": 32180,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32146,
									"end": 32153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32090,
									"end": 32180,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 32090,
									"end": 32180,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 50278,
									"end": 50493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 50278,
									"end": 50493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 193,
									"end": 513,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 193,
									"end": 513,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 237,
									"end": 243,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 274,
									"end": 275,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 268,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 264,
									"end": 276,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 254,
									"end": 276,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 254,
									"end": 276,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 321,
									"end": 322,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 315,
									"end": 319,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 311,
									"end": 323,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 342,
									"end": 360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 332,
									"end": 413,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 332,
									"end": 413,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 398,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 390,
									"end": 396,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 386,
									"end": 403,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 376,
									"end": 403,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 376,
									"end": 403,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 332,
									"end": 413,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 332,
									"end": 413,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 460,
									"end": 462,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 452,
									"end": 458,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 449,
									"end": 463,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 429,
									"end": 447,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 426,
									"end": 464,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 423,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 423,
									"end": 507,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 479,
									"end": 497,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 479,
									"end": 497,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 479,
									"end": 497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 479,
									"end": 497,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 479,
									"end": 497,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 423,
									"end": 507,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 423,
									"end": 507,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 244,
									"end": 513,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 193,
									"end": 513,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 193,
									"end": 513,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 193,
									"end": 513,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 193,
									"end": 513,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50278,
									"end": 50493,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e6a6040facf68b816f9d4c8ddc065bbed089c36ab6eb7aa068ecec29c980ad4364736f6c634300080e0033",
									".code": [
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "325B272A"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50278,
											"end": 50493,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 33047,
											"end": 33347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 33047,
											"end": 33347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 33047,
											"end": 33347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 36078,
											"end": 36176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 36078,
											"end": 36176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 37625,
											"end": 37825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 37625,
											"end": 37825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 37625,
											"end": 37825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37201,
											"end": 37564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 37201,
											"end": 37564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 32309,
											"end": 32615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 32309,
											"end": 32615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 38464,
											"end": 38628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 38464,
											"end": 38628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 31472,
											"end": 31763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 31472,
											"end": 31763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 31472,
											"end": 31763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 38694,
											"end": 38873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 38694,
											"end": 38873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 35893,
											"end": 36016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35893,
											"end": 36016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 35893,
											"end": 36016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 33406,
											"end": 33609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 33406,
											"end": 33609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 33406,
											"end": 33609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 36240,
											"end": 36342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 36240,
											"end": 36342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 50399,
											"end": 50485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 50399,
											"end": 50485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 37892,
											"end": 38174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 37892,
											"end": 38174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 38939,
											"end": 39299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 38939,
											"end": 39299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 36408,
											"end": 36721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 36408,
											"end": 36721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 36408,
											"end": 36721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 38240,
											"end": 38402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 38240,
											"end": 38402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 38240,
											"end": 38402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33149,
											"end": 33153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33199,
											"end": 33224,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33184,
											"end": 33224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33184,
											"end": 33224,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33184,
											"end": 33224,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33224,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 33184,
											"end": 33288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33255,
											"end": 33288,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33240,
											"end": 33288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33240,
											"end": 33288,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33240,
											"end": 33288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33240,
											"end": 33251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33240,
											"end": 33288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33240,
											"end": 33288,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33240,
											"end": 33288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33240,
											"end": 33288,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33288,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 33184,
											"end": 33288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 33184,
											"end": 33340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 33304,
											"end": 33340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33340,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 33304,
											"end": 33340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33340,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 33184,
											"end": 33340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33165,
											"end": 33340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33165,
											"end": 33340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36132,
											"end": 36145,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36164,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 36157,
											"end": 36169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 36157,
											"end": 36169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37717,
											"end": 37733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 37725,
											"end": 37732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37717,
											"end": 37724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 37717,
											"end": 37733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37717,
											"end": 37733,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 37717,
											"end": 37733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 37712,
											"end": 37776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "PUSH",
											"source": 0,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37776,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 37712,
											"end": 37776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37809,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37810,
											"end": 37817,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37787,
											"end": 37818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37787,
											"end": 37818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37273,
											"end": 37286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37289,
											"end": 37313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 37305,
											"end": 37312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37289,
											"end": 37304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37289,
											"end": 37313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37289,
											"end": 37313,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 37289,
											"end": 37313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37273,
											"end": 37313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37273,
											"end": 37313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37333,
											"end": 37338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37327,
											"end": 37338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37327,
											"end": 37338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37327,
											"end": 37329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37327,
											"end": 37338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37327,
											"end": 37338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37327,
											"end": 37338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 37323,
											"end": 37371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "PUSH",
											"source": 0,
											"value": "943F7B8C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37371,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 37323,
											"end": 37371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37402,
											"end": 37407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37386,
											"end": 37407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 37386,
											"end": 37396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 37386,
											"end": 37398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37398,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 37386,
											"end": 37398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37386,
											"end": 37407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37407,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37382,
											"end": 37519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 37382,
											"end": 37519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37413,
											"end": 37450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 37430,
											"end": 37435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37437,
											"end": 37449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 37437,
											"end": 37447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 37437,
											"end": 37449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37437,
											"end": 37449,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 37437,
											"end": 37449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37413,
											"end": 37429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 37413,
											"end": 37450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37413,
											"end": 37450,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 37413,
											"end": 37450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37409,
											"end": 37519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 37409,
											"end": 37519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "PUSH",
											"source": 0,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37409,
											"end": 37519,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 37409,
											"end": 37519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37382,
											"end": 37519,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 37382,
											"end": 37519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37529,
											"end": 37557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 37538,
											"end": 37540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37542,
											"end": 37549,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37551,
											"end": 37556,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37529,
											"end": 37537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 37529,
											"end": 37557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37529,
											"end": 37557,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 37529,
											"end": 37557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37263,
											"end": 37564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32362,
											"end": 32369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32583,
											"end": 32598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 32583,
											"end": 32596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 32583,
											"end": 32598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32583,
											"end": 32598,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 32583,
											"end": 32598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32568,
											"end": 32580,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32568,
											"end": 32580,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32552,
											"end": 32565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32552,
											"end": 32565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32552,
											"end": 32580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32552,
											"end": 32598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38593,
											"end": 38621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 38603,
											"end": 38607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38609,
											"end": 38611,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38613,
											"end": 38620,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38593,
											"end": 38602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 38593,
											"end": 38621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38593,
											"end": 38621,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 38593,
											"end": 38621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31525,
											"end": 31532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31543,
											"end": 31561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 31581,
											"end": 31592,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31593,
											"end": 31597,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31599,
											"end": 31600,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31576,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 31564,
											"end": 31580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31564,
											"end": 31602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31602,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 31564,
											"end": 31602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31543,
											"end": 31602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31543,
											"end": 31602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31612,
											"end": 31627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31630,
											"end": 31661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 31650,
											"end": 31660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 31640,
											"end": 31644,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 31630,
											"end": 31645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31645,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 31630,
											"end": 31645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31630,
											"end": 31649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31630,
											"end": 31661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31661,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 31630,
											"end": 31661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31612,
											"end": 31661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31612,
											"end": 31661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31694,
											"end": 31727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31719,
											"end": 31726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31705,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31706,
											"end": 31710,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31712,
											"end": 31713,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 31694,
											"end": 31718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31727,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31694,
											"end": 31727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31727,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31694,
											"end": 31727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31744,
											"end": 31756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31737,
											"end": 31756,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31737,
											"end": 31756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31737,
											"end": 31756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31737,
											"end": 31756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31737,
											"end": 31756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 38844,
											"end": 38848,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38850,
											"end": 38852,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38854,
											"end": 38861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 38827,
											"end": 38866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35957,
											"end": 35964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35983,
											"end": 36004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 35996,
											"end": 36003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35983,
											"end": 35995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 35983,
											"end": 36004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35983,
											"end": 36004,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 35983,
											"end": 36004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35983,
											"end": 36009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35983,
											"end": 36009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35983,
											"end": 36009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35976,
											"end": 36009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35976,
											"end": 36009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33470,
											"end": 33477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33510,
											"end": 33511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33493,
											"end": 33512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33493,
											"end": 33512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33493,
											"end": 33498,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33493,
											"end": 33512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33493,
											"end": 33512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33493,
											"end": 33512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 33489,
											"end": 33549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "PUSH",
											"source": 0,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33549,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 33489,
											"end": 33549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33586,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33587,
											"end": 33592,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33566,
											"end": 33602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33566,
											"end": 33602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33559,
											"end": 33602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33559,
											"end": 33602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36296,
											"end": 36309,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36328,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 36321,
											"end": 36335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 36321,
											"end": 36335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50447,
											"end": 50478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 50457,
											"end": 50467,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 50469,
											"end": 50477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50447,
											"end": 50456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 50447,
											"end": 50478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50447,
											"end": 50478,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 50447,
											"end": 50478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50399,
											"end": 50485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38002,
											"end": 38014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 38002,
											"end": 38012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38002,
											"end": 38014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38002,
											"end": 38014,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 38002,
											"end": 38014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37990,
											"end": 38014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37990,
											"end": 38014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37990,
											"end": 37998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37990,
											"end": 38014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37990,
											"end": 38014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37990,
											"end": 38014,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37986,
											"end": 38040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 37986,
											"end": 38040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "PUSH",
											"source": 0,
											"value": "B06307DB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37986,
											"end": 38040,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 37986,
											"end": 38040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38096,
											"end": 38104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38069,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38070,
											"end": 38082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 38070,
											"end": 38080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38070,
											"end": 38082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38070,
											"end": 38082,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 38070,
											"end": 38082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38084,
											"end": 38092,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38134,
											"end": 38146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 38134,
											"end": 38144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38134,
											"end": 38146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38134,
											"end": 38146,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 38134,
											"end": 38146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 38158,
											"end": 38166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 38119,
											"end": 38167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39100,
											"end": 39128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 39110,
											"end": 39114,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39120,
											"end": 39127,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39100,
											"end": 39109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 39100,
											"end": 39128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39100,
											"end": 39128,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 39100,
											"end": 39128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39142,
											"end": 39157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 39142,
											"end": 39144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39142,
											"end": 39155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39142,
											"end": 39155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39142,
											"end": 39155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 39142,
											"end": 39157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39142,
											"end": 39157,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 39142,
											"end": 39157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39138,
											"end": 39293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39138,
											"end": 39293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 39138,
											"end": 39293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39163,
											"end": 39219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 39194,
											"end": 39198,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39200,
											"end": 39202,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39204,
											"end": 39211,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39213,
											"end": 39218,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39163,
											"end": 39193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 39163,
											"end": 39219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39163,
											"end": 39219,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 39163,
											"end": 39219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39159,
											"end": 39293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 39159,
											"end": 39293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39159,
											"end": 39293,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 39159,
											"end": 39293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39138,
											"end": 39293,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 39138,
											"end": 39293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36481,
											"end": 36494,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36511,
											"end": 36527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 36519,
											"end": 36526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36511,
											"end": 36518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 36511,
											"end": 36527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36511,
											"end": 36527,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 36511,
											"end": 36527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36506,
											"end": 36565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 36506,
											"end": 36565,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "PUSH",
											"source": 0,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36506,
											"end": 36565,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 36506,
											"end": 36565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36576,
											"end": 36597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36600,
											"end": 36610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 36600,
											"end": 36608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 36600,
											"end": 36610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36600,
											"end": 36610,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 36600,
											"end": 36610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36576,
											"end": 36610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36576,
											"end": 36610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36652,
											"end": 36653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36633,
											"end": 36640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36680,
											"end": 36687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36689,
											"end": 36707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 36689,
											"end": 36696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36689,
											"end": 36705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 36689,
											"end": 36707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36689,
											"end": 36707,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 36689,
											"end": 36707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 36663,
											"end": 36708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38337,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38360,
											"end": 38378,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38379,
											"end": 38384,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38386,
											"end": 38394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21181,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 21026,
											"end": 21181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21111,
											"end": 21115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21149,
											"end": 21174,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21134,
											"end": 21174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21134,
											"end": 21174,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21134,
											"end": 21174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21134,
											"end": 21145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21134,
											"end": 21174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21134,
											"end": 21174,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21134,
											"end": 21174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21134,
											"end": 21174,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39504,
											"end": 39676,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 39504,
											"end": 39676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39561,
											"end": 39565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39603,
											"end": 39610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 39584,
											"end": 39597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 39584,
											"end": 39599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39599,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 39584,
											"end": 39599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39610,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 39584,
											"end": 39637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39624,
											"end": 39637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39624,
											"end": 39637,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39614,
											"end": 39621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39614,
											"end": 39637,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39637,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 39584,
											"end": 39637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 39584,
											"end": 39669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39654,
											"end": 39661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39641,
											"end": 39669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39669,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 39584,
											"end": 39669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39577,
											"end": 39669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39577,
											"end": 39669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39504,
											"end": 39676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39504,
											"end": 39676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39504,
											"end": 39676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39504,
											"end": 39676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9623,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9527,
											"end": 9623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9606,
											"end": 9616,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47312,
											"end": 47501,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 47312,
											"end": 47501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47449,
											"end": 47451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47437,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47438,
											"end": 47445,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47486,
											"end": 47493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47482,
											"end": 47484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47475,
											"end": 47480,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 47312,
											"end": 47501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47312,
											"end": 47501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47312,
											"end": 47501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47312,
											"end": 47501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32090,
											"end": 32180,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 32090,
											"end": 32180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32090,
											"end": 32180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32090,
											"end": 32180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42287,
											"end": 44431,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 42287,
											"end": 44431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42397,
											"end": 42419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 42414,
											"end": 42418,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42397,
											"end": 42413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 42397,
											"end": 42419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42397,
											"end": 42419,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 42397,
											"end": 42419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42429,
											"end": 42449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 42446,
											"end": 42448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42429,
											"end": 42445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 42429,
											"end": 42449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42429,
											"end": 42449,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 42429,
											"end": 42449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42459,
											"end": 42494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42497,
											"end": 42518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 42510,
											"end": 42517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42497,
											"end": 42509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 42497,
											"end": 42518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42497,
											"end": 42518,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 42497,
											"end": 42518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42459,
											"end": 42518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42459,
											"end": 42518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42555,
											"end": 42559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42533,
											"end": 42559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42533,
											"end": 42551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42533,
											"end": 42559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 42596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 42529,
											"end": 42596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "PUSH",
											"source": 0,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 42596,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 42529,
											"end": 42596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42607,
											"end": 42629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42649,
											"end": 42653,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42633,
											"end": 42653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 42633,
											"end": 42643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 42633,
											"end": 42645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42645,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 42633,
											"end": 42645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42633,
											"end": 42653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42653,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 42633,
											"end": 42705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42669,
											"end": 42705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 42686,
											"end": 42690,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42692,
											"end": 42704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 42692,
											"end": 42702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 42692,
											"end": 42704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42692,
											"end": 42704,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 42692,
											"end": 42704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42669,
											"end": 42685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 42669,
											"end": 42705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42669,
											"end": 42705,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 42669,
											"end": 42705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42705,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 42633,
											"end": 42705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 42633,
											"end": 42757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42745,
											"end": 42757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 42745,
											"end": 42755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 42745,
											"end": 42757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42745,
											"end": 42757,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 42745,
											"end": 42757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42721,
											"end": 42757,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42721,
											"end": 42757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42721,
											"end": 42741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 42733,
											"end": 42740,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42721,
											"end": 42732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 42721,
											"end": 42741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42721,
											"end": 42741,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 42721,
											"end": 42741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42721,
											"end": 42757,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42721,
											"end": 42757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42721,
											"end": 42757,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42757,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 42633,
											"end": 42757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42607,
											"end": 42758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42607,
											"end": 42758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42774,
											"end": 42791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42769,
											"end": 42835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 42769,
											"end": 42835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "PUSH",
											"source": 0,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42769,
											"end": 42835,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 42769,
											"end": 42835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42863,
											"end": 42864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42849,
											"end": 42865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42849,
											"end": 42865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42849,
											"end": 42851,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42849,
											"end": 42865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42849,
											"end": 42865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42849,
											"end": 42865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42845,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 42845,
											"end": 42897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42845,
											"end": 42897,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 42845,
											"end": 42897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42908,
											"end": 42951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 42930,
											"end": 42934,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42936,
											"end": 42938,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42940,
											"end": 42947,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42950,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42908,
											"end": 42929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 42908,
											"end": 42951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42908,
											"end": 42951,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 42908,
											"end": 42951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43013,
											"end": 43048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 43030,
											"end": 43031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43034,
											"end": 43041,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43043,
											"end": 43047,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43013,
											"end": 43021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 43013,
											"end": 43048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43013,
											"end": 43048,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 43013,
											"end": 43048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43368,
											"end": 43369,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43338,
											"end": 43350,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43351,
											"end": 43355,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43338,
											"end": 43364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43412,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43383,
											"end": 43395,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43396,
											"end": 43398,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43383,
											"end": 43407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43427,
											"end": 43458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43461,
											"end": 43472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43473,
											"end": 43480,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43427,
											"end": 43481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43427,
											"end": 43481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43511,
											"end": 43513,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43495,
											"end": 43508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 43575,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43527,
											"end": 43550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43550,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43824,
											"end": 43843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43856,
											"end": 43857,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43846,
											"end": 43853,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43846,
											"end": 43857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43824,
											"end": 43857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43824,
											"end": 43857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43871,
											"end": 43902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43905,
											"end": 43916,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43917,
											"end": 43928,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43871,
											"end": 43929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43871,
											"end": 43929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43972,
											"end": 43973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43947,
											"end": 43974,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43947,
											"end": 43974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43974,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43947,
											"end": 43974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43974,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43943,
											"end": 44320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 43943,
											"end": 44320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44154,
											"end": 44167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44154,
											"end": 44167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44139,
											"end": 44150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44139,
											"end": 44167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44135,
											"end": 44306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 44135,
											"end": 44306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44207,
											"end": 44211,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44191,
											"end": 44204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44259,
											"end": 44272,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44259,
											"end": 44287,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44259,
											"end": 44287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44259,
											"end": 44287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44233,
											"end": 44256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44256,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44135,
											"end": 44306,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 44135,
											"end": 44306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43943,
											"end": 44320,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 43943,
											"end": 44320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43314,
											"end": 44330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43314,
											"end": 44330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43314,
											"end": 44330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44364,
											"end": 44371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44360,
											"end": 44362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44354,
											"end": 44358,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 44382,
											"end": 44424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 44403,
											"end": 44407,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44409,
											"end": 44411,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44413,
											"end": 44420,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44422,
											"end": 44423,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44382,
											"end": 44402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 44382,
											"end": 44424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44382,
											"end": 44424,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 44382,
											"end": 44424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42387,
											"end": 44431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42387,
											"end": 44431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42287,
											"end": 44431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42287,
											"end": 44431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42287,
											"end": 44431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42287,
											"end": 44431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3246,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3150,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3238,
											"end": 3239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 3234,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3246,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3589,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3493,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 3577,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3589,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2879,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2783,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2871,
											"end": 2872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2867,
											"end": 2872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2860,
											"end": 2872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2860,
											"end": 2872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 35836,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 34750,
											"end": 35836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34812,
											"end": 34833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 34812,
											"end": 34833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 34812,
											"end": 34833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34812,
											"end": 34833,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 34812,
											"end": 34833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34845,
											"end": 34857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34860,
											"end": 34867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34845,
											"end": 34867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34845,
											"end": 34867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34925,
											"end": 34929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34906,
											"end": 34921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 34906,
											"end": 34919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 34906,
											"end": 34921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34906,
											"end": 34921,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 34906,
											"end": 34921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34906,
											"end": 34929,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34902,
											"end": 35772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 34902,
											"end": 35772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34942,
											"end": 34955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34935,
											"end": 34939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34935,
											"end": 34955,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34931,
											"end": 35772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34931,
											"end": 35772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 34931,
											"end": 35772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35009,
											"end": 35020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35021,
											"end": 35025,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35049,
											"end": 35065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35044,
											"end": 35758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 35044,
											"end": 35758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35119,
											"end": 35120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35093,
											"end": 35121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35093,
											"end": 35121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35093,
											"end": 35102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35093,
											"end": 35107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35093,
											"end": 35107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35093,
											"end": 35107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35093,
											"end": 35121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35093,
											"end": 35121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35093,
											"end": 35121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 35089,
											"end": 35188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35156,
											"end": 35165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35149,
											"end": 35165,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35149,
											"end": 35165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35149,
											"end": 35165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35149,
											"end": 35165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35149,
											"end": 35165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 35149,
											"end": 35165,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35188,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 35089,
											"end": 35188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35492,
											"end": 35496,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35580,
											"end": 35584,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35615,
											"end": 35643,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35615,
											"end": 35643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35615,
											"end": 35629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35643,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35615,
											"end": 35643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35643,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 35611,
											"end": 35718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35682,
											"end": 35691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35675,
											"end": 35691,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35675,
											"end": 35691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35675,
											"end": 35691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35675,
											"end": 35691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35675,
											"end": 35691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 35675,
											"end": 35691,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35718,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 35611,
											"end": 35718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35044,
											"end": 35758,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 35044,
											"end": 35758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34957,
											"end": 35772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34931,
											"end": 35772,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 34931,
											"end": 35772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34902,
											"end": 35772,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 34902,
											"end": 35772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "PUSH",
											"source": 0,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 35836,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 34750,
											"end": 35836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 35836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 35836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 35836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 35836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39755,
											"end": 39857,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 39755,
											"end": 39857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39823,
											"end": 39850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 39833,
											"end": 39835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39837,
											"end": 39845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39823,
											"end": 39850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39823,
											"end": 39850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39823,
											"end": 39850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39823,
											"end": 39850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39823,
											"end": 39850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39823,
											"end": 39850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39823,
											"end": 39850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39823,
											"end": 39850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39823,
											"end": 39850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39823,
											"end": 39850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39823,
											"end": 39850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39823,
											"end": 39850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39823,
											"end": 39832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 39823,
											"end": 39850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39823,
											"end": 39850,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 39823,
											"end": 39850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39755,
											"end": 39857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39755,
											"end": 39857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39755,
											"end": 39857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10928,
											"end": 11248,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 10928,
											"end": 11248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10988,
											"end": 10992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11218,
											"end": 11225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11218,
											"end": 11237,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11218,
											"end": 11237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11218,
											"end": 11237,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11218,
											"end": 11241,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11211,
											"end": 11241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11211,
											"end": 11241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10928,
											"end": 11248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10928,
											"end": 11248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10928,
											"end": 11248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10928,
											"end": 11248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48140,
											"end": 48144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48176,
											"end": 48178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48160,
											"end": 48196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48196,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 48197,
											"end": 48209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 48197,
											"end": 48207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 48197,
											"end": 48209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48197,
											"end": 48209,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 48197,
											"end": 48209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48211,
											"end": 48215,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48217,
											"end": 48224,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48226,
											"end": 48231,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 48160,
											"end": 48232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 48160,
											"end": 48232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48391,
											"end": 48397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48391,
											"end": 48404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48391,
											"end": 48409,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48387,
											"end": 48616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 48387,
											"end": 48616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48387,
											"end": 48616,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 48387,
											"end": 48616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48576,
											"end": 48582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48570,
											"end": 48583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48561,
											"end": 48567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48557,
											"end": 48559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48553,
											"end": 48568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48546,
											"end": 48584,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48288,
											"end": 48333,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 48288,
											"end": 48333,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 48288,
											"end": 48333,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 48278,
											"end": 48333,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48278,
											"end": 48333,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 48278,
											"end": 48333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48278,
											"end": 48284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48278,
											"end": 48333,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48278,
											"end": 48333,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 48278,
											"end": 48333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48278,
											"end": 48333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48271,
											"end": 48333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48271,
											"end": 48333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48271,
											"end": 48333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36962,
											"end": 37144,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 36962,
											"end": 37144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37013,
											"end": 37026,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "PUSH",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "PUSH data",
											"source": 0,
											"value": "873FD5F964B13E1038074DFA7BF985864A803BE90F361E484B606B70D53E1173"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "PUSH",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36962,
											"end": 37144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36962,
											"end": 37144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7864,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7161,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7217,
											"end": 7230,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7443,
											"end": 7444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7434,
											"end": 7439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7434,
											"end": 7444,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 7430,
											"end": 7481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7481,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 7430,
											"end": 7481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7505,
											"end": 7510,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7551,
											"end": 7555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7551,
											"end": 7560,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 7576,
											"end": 7584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7608,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 7598,
											"end": 7608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7660,
											"end": 7666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 7650,
											"end": 7667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7689,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7694,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7720,
											"end": 7721,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 7710,
											"end": 7721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7788,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7778,
											"end": 7783,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 7778,
											"end": 7788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 7778,
											"end": 7788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7788,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 7778,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7767,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7765,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 7765,
											"end": 7789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 7765,
											"end": 7789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7789,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 7765,
											"end": 7789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7752,
											"end": 7791,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 7752,
											"end": 7791,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 7735,
											"end": 7749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7814,
											"end": 7816,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 7805,
											"end": 7816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7857,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7864,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 7161,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31993,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 31769,
											"end": 31993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31841,
											"end": 31857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 31852,
											"end": 31856,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31841,
											"end": 31851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 31841,
											"end": 31857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31841,
											"end": 31857,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 31841,
											"end": 31857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 31920,
											"end": 31925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31906,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31907,
											"end": 31911,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31913,
											"end": 31914,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 31895,
											"end": 31919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31926,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31895,
											"end": 31926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31926,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 31895,
											"end": 31926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31885,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31886,
											"end": 31890,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31892,
											"end": 31893,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31926,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31966,
											"end": 31978,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31954,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31955,
											"end": 31959,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31961,
											"end": 31962,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31978,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31815,
											"end": 31993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49263,
											"end": 49417,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 49263,
											"end": 49417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49263,
											"end": 49417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49263,
											"end": 49417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49263,
											"end": 49417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49263,
											"end": 49417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49263,
											"end": 49417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50058,
											"end": 50211,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 50058,
											"end": 50211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50058,
											"end": 50211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50058,
											"end": 50211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50058,
											"end": 50211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50058,
											"end": 50211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50058,
											"end": 50211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40217,
											"end": 42040,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 40217,
											"end": 42040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40420,
											"end": 40440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 40437,
											"end": 40439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40420,
											"end": 40436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 40420,
											"end": 40440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40420,
											"end": 40440,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 40420,
											"end": 40440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40450,
											"end": 40470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40473,
											"end": 40486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40473,
											"end": 40486,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40450,
											"end": 40486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40450,
											"end": 40486,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40514,
											"end": 40515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40500,
											"end": 40516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40500,
											"end": 40516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40500,
											"end": 40502,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40500,
											"end": 40516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40500,
											"end": 40516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40500,
											"end": 40516,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40496,
											"end": 40544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 40496,
											"end": 40544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40525,
											"end": 40544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40525,
											"end": 40544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40525,
											"end": 40544,
											"name": "PUSH",
											"source": 0,
											"value": "2E07630000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 40525,
											"end": 40544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40525,
											"end": 40544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40525,
											"end": 40544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40525,
											"end": 40544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40525,
											"end": 40544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40525,
											"end": 40544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40525,
											"end": 40544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40525,
											"end": 40544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40525,
											"end": 40544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40525,
											"end": 40544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40525,
											"end": 40544,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40496,
											"end": 40544,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 40496,
											"end": 40544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40570,
											"end": 40571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40558,
											"end": 40566,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40558,
											"end": 40571,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40554,
											"end": 40598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 40554,
											"end": 40598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40580,
											"end": 40598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40580,
											"end": 40598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40580,
											"end": 40598,
											"name": "PUSH",
											"source": 0,
											"value": "B562E8DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 40580,
											"end": 40598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40580,
											"end": 40598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40580,
											"end": 40598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40580,
											"end": 40598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40580,
											"end": 40598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40580,
											"end": 40598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40580,
											"end": 40598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40580,
											"end": 40598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40580,
											"end": 40598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40580,
											"end": 40598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40580,
											"end": 40598,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40554,
											"end": 40598,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 40554,
											"end": 40598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40609,
											"end": 40670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 40639,
											"end": 40640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40643,
											"end": 40645,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40647,
											"end": 40659,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40661,
											"end": 40669,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40609,
											"end": 40630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 40609,
											"end": 40670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40609,
											"end": 40670,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 40609,
											"end": 40670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40976,
											"end": 40984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40953,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40954,
											"end": 40956,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40941,
											"end": 40957,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40941,
											"end": 40965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40941,
											"end": 40985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41039,
											"end": 41047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41011,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41012,
											"end": 41014,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40999,
											"end": 41015,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40999,
											"end": 41028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41028,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40999,
											"end": 41048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41096,
											"end": 41098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41063,
											"end": 41088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41075,
											"end": 41087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41063,
											"end": 41088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41063,
											"end": 41088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41063,
											"end": 41088,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41063,
											"end": 41093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41063,
											"end": 41098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41162,
											"end": 41177,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41112,
											"end": 41137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41124,
											"end": 41136,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41137,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41112,
											"end": 41137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41137,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41112,
											"end": 41137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41112,
											"end": 41137,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41112,
											"end": 41152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41152,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41112,
											"end": 41178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41193,
											"end": 41213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41216,
											"end": 41228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41193,
											"end": 41228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41193,
											"end": 41228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41242,
											"end": 41253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41271,
											"end": 41279,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41256,
											"end": 41268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41256,
											"end": 41279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41242,
											"end": 41279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41242,
											"end": 41279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41298,
											"end": 41313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 41298,
											"end": 41300,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 41298,
											"end": 41311,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41298,
											"end": 41311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41298,
											"end": 41311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 41298,
											"end": 41313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41298,
											"end": 41313,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 41298,
											"end": 41313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41294,
											"end": 41912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41294,
											"end": 41912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 41294,
											"end": 41912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41333,
											"end": 41641,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 41333,
											"end": 41641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41388,
											"end": 41400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41384,
											"end": 41386,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 41363,
											"end": 41401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41363,
											"end": 41401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41380,
											"end": 41381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41363,
											"end": 41401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41363,
											"end": 41401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41363,
											"end": 41401,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 41363,
											"end": 41401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41363,
											"end": 41401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41363,
											"end": 41401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41363,
											"end": 41401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41363,
											"end": 41401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41363,
											"end": 41401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41363,
											"end": 41401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41363,
											"end": 41401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41363,
											"end": 41401,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 41428,
											"end": 41497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 41467,
											"end": 41468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41471,
											"end": 41473,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41475,
											"end": 41489,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41475,
											"end": 41489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41475,
											"end": 41489,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41475,
											"end": 41489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41475,
											"end": 41489,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 41475,
											"end": 41489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41491,
											"end": 41496,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41428,
											"end": 41458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 41428,
											"end": 41497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41428,
											"end": 41497,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 41428,
											"end": 41497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41423,
											"end": 41595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 41423,
											"end": 41595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41532,
											"end": 41572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41532,
											"end": 41572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41532,
											"end": 41572,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41532,
											"end": 41572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41532,
											"end": 41572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41532,
											"end": 41572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41532,
											"end": 41572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41532,
											"end": 41572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41532,
											"end": 41572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41532,
											"end": 41572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41532,
											"end": 41572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41532,
											"end": 41572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41532,
											"end": 41572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41532,
											"end": 41572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41423,
											"end": 41595,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 41423,
											"end": 41595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41636,
											"end": 41639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41621,
											"end": 41633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41621,
											"end": 41639,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41333,
											"end": 41641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 41333,
											"end": 41641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 41732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41703,
											"end": 41716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41703,
											"end": 41716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41703,
											"end": 41732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 41699,
											"end": 41742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41734,
											"end": 41742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41734,
											"end": 41742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41734,
											"end": 41742,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41742,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 41699,
											"end": 41742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41294,
											"end": 41912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 41294,
											"end": 41912,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41294,
											"end": 41912,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 41294,
											"end": 41912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41781,
											"end": 41898,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 41781,
											"end": 41898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41836,
											"end": 41850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41836,
											"end": 41850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41836,
											"end": 41850,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41836,
											"end": 41850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41836,
											"end": 41850,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41836,
											"end": 41850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41832,
											"end": 41834,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 41811,
											"end": 41851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41811,
											"end": 41851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41828,
											"end": 41829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41811,
											"end": 41851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41811,
											"end": 41851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41811,
											"end": 41851,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 41811,
											"end": 41851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41811,
											"end": 41851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41811,
											"end": 41851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41811,
											"end": 41851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41811,
											"end": 41851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41811,
											"end": 41851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41811,
											"end": 41851,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41811,
											"end": 41851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41811,
											"end": 41851,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 41893,
											"end": 41896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41878,
											"end": 41890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41878,
											"end": 41896,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41781,
											"end": 41898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 41781,
											"end": 41898,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41294,
											"end": 41912,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 41294,
											"end": 41912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41941,
											"end": 41953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41925,
											"end": 41938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41925,
											"end": 41953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41925,
											"end": 41953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41925,
											"end": 41953,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41925,
											"end": 41953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40917,
											"end": 41964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40917,
											"end": 41964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41973,
											"end": 42033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 42002,
											"end": 42003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42006,
											"end": 42008,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42010,
											"end": 42022,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42024,
											"end": 42032,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 41973,
											"end": 41993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 41973,
											"end": 42033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41973,
											"end": 42033,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 41973,
											"end": 42033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40325,
											"end": 42040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40217,
											"end": 42040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40217,
											"end": 42040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40217,
											"end": 42040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40217,
											"end": 42040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "212"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1966,
											"end": 1977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2014,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2076,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 2105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2187,
											"end": 2192,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2207,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 2368,
											"end": 2373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2335,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2449,
											"end": 2452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2390,
											"end": 2461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2501,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 2470,
											"end": 2522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 2547,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2738,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2799,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2817,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 3064,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3089,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3210,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 3246,
											"end": 3251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3219,
											"end": 3252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 3369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3358,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 3378,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 3523,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3469,
											"end": 3586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3815,
											"end": 3820,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 3797,
											"end": 3821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 3920,
											"end": 3944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4077,
											"end": 4086,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4151,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4101,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 4179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 4276,
											"end": 4281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4258,
											"end": 4282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4283,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4287,
											"end": 4299,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4359,
											"end": 4364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4404,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 4440,
											"end": 4445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 4413,
											"end": 4446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4581,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4554,
											"end": 4586,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 4589,
											"end": 4668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4779,
											"end": 4786,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4755,
											"end": 4777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 4734,
											"end": 4787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 4907,
											"end": 4914,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4896,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4883,
											"end": 4905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4862,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 4925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 5043,
											"end": 5048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 5025,
											"end": 5049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5050,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 5056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5182,
											"end": 5191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5178,
											"end": 5196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 5274,
											"end": 5275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5256,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 5206,
											"end": 5277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5375,
											"end": 5381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5434,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5420,
											"end": 5429,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5411,
											"end": 5418,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5430,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5403,
											"end": 5435,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5438,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 5628,
											"end": 5635,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5608,
											"end": 5617,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5583,
											"end": 5636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5636,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5687,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 5756,
											"end": 5763,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5745,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5732,
											"end": 5754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5711,
											"end": 5764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 5884,
											"end": 5891,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 5881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 5839,
											"end": 5892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5829,
											"end": 5892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5829,
											"end": 5892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 5980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6025,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6011,
											"end": 6020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5998,
											"end": 6021,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6026,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6029,
											"end": 6108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6208,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6195,
											"end": 6217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6174,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 6244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 6320,
											"end": 6341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6313,
											"end": 6318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6310,
											"end": 6342,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6358,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6415,
											"end": 6420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6460,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 6493,
											"end": 6498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 6469,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6621,
											"end": 6630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6619,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6604,
											"end": 6636,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6639,
											"end": 6718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6759,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 6829,
											"end": 6836,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6818,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6784,
											"end": 6837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 6847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 6954,
											"end": 6961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6951,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6943,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6952,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6912,
											"end": 6962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6972,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7096,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7217,
											"end": 7218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7207,
											"end": 7219,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7279,
											"end": 7356,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7376,
											"end": 7380,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7366,
											"end": 7381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7397,
											"end": 7398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7390,
											"end": 7405,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 7500,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7492,
											"end": 7498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7488,
											"end": 7528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7637,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7594,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7613,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7576,
											"end": 7638,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7641,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7738,
											"end": 7744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 7765,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 7822,
											"end": 7826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 7794,
											"end": 7827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7979,
											"end": 8009,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 8012,
											"end": 8030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8050,
											"end": 8079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8128,
											"end": 8132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8124,
											"end": 8139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 8146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8231,
											"end": 8234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8229,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8213,
											"end": 8243,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 8298,
											"end": 8299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8284,
											"end": 8287,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8280,
											"end": 8296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8300,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8152,
											"end": 8306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 8471,
											"end": 8477,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 8430,
											"end": 8478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 8414,
											"end": 8479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8502,
											"end": 8508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8488,
											"end": 8509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8533,
											"end": 8538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8581,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8564,
											"end": 8567,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8557,
											"end": 8582,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 8585,
											"end": 8664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 8709,
											"end": 8715,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8704,
											"end": 8707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8699,
											"end": 8702,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8675,
											"end": 8716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8395,
											"end": 8722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8796,
											"end": 8801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 8842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8830,
											"end": 8836,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 8843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8822,
											"end": 8849,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 8853,
											"end": 8932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8970,
											"end": 8976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8957,
											"end": 8977,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 9069,
											"end": 9072,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9061,
											"end": 9067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9054,
											"end": 9058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 8995,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 9079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 9079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9180,
											"end": 9186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9256,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9241,
											"end": 9250,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9239,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9251,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9224,
											"end": 9257,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 9260,
											"end": 9339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9380,
											"end": 9381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 9450,
											"end": 9457,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9430,
											"end": 9439,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 9405,
											"end": 9458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9351,
											"end": 9468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 9578,
											"end": 9585,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9569,
											"end": 9575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9567,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9554,
											"end": 9576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 9533,
											"end": 9586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9637,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 9706,
											"end": 9713,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9686,
											"end": 9695,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 9704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 9661,
											"end": 9714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9606,
											"end": 9724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9791,
											"end": 9793,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9780,
											"end": 9789,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9763,
											"end": 9795,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9814,
											"end": 9820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9841,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 9844,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 10003,
											"end": 10010,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 10001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 9949,
											"end": 10011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 10021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10102,
											"end": 10108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10147,
											"end": 10156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10134,
											"end": 10157,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10130,
											"end": 10162,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 10165,
											"end": 10244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10285,
											"end": 10286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 10355,
											"end": 10362,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10346,
											"end": 10352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10335,
											"end": 10344,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10331,
											"end": 10353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10310,
											"end": 10363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10256,
											"end": 10373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10412,
											"end": 10414,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 10483,
											"end": 10490,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10474,
											"end": 10480,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10463,
											"end": 10472,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10438,
											"end": 10491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10383,
											"end": 10501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10562,
											"end": 10639,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10559,
											"end": 10560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10552,
											"end": 10640,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10659,
											"end": 10663,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10656,
											"end": 10657,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10649,
											"end": 10664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10673,
											"end": 10688,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10744,
											"end": 10750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10782,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10775,
											"end": 10779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10771,
											"end": 10783,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10829,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10822,
											"end": 10826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10818,
											"end": 10830,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10905,
											"end": 10909,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 10897,
											"end": 10903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10893,
											"end": 10910,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10967,
											"end": 10969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10959,
											"end": 10965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 10970,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10933,
											"end": 10971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 10986,
											"end": 11004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 11020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 11020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11128,
											"end": 11139,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11165,
											"end": 11168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11286,
											"end": 11289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 11347,
											"end": 11352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 11314,
											"end": 11353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11446,
											"end": 11449,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 11369,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11362,
											"end": 11458,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11362,
											"end": 11458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 11512,
											"end": 11518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11507,
											"end": 11510,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11500,
											"end": 11504,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11493,
											"end": 11498,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11489,
											"end": 11505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 11467,
											"end": 11519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11544,
											"end": 11550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11542,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11535,
											"end": 11551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11290,
											"end": 11557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11180,
											"end": 11557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11743,
											"end": 11746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 11856,
											"end": 11859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11847,
											"end": 11853,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 11765,
											"end": 11860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11758,
											"end": 11860,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11758,
											"end": 11860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 11968,
											"end": 11971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11959,
											"end": 11965,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 11877,
											"end": 11972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 11972,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 11972,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11989,
											"end": 11992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 11992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 11992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12004,
											"end": 12184,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 12004,
											"end": 12184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12052,
											"end": 12129,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12049,
											"end": 12050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12042,
											"end": 12130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12149,
											"end": 12153,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 12146,
											"end": 12147,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12139,
											"end": 12154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12177,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12170,
											"end": 12171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12381,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 12190,
											"end": 12381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12230,
											"end": 12234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12250,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 12268,
											"end": 12269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12250,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 12250,
											"end": 12270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12250,
											"end": 12270,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 12250,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12245,
											"end": 12270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12245,
											"end": 12270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12284,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 12302,
											"end": 12303,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12284,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 12284,
											"end": 12304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12284,
											"end": 12304,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 12284,
											"end": 12304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12279,
											"end": 12304,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12279,
											"end": 12304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12323,
											"end": 12324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12320,
											"end": 12321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12317,
											"end": 12325,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12348,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 12314,
											"end": 12348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12328,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 12328,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 12328,
											"end": 12346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12328,
											"end": 12346,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 12328,
											"end": 12346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12348,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 12314,
											"end": 12348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12373,
											"end": 12374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12370,
											"end": 12371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12366,
											"end": 12375,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12358,
											"end": 12375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12358,
											"end": 12375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12381,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12735,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 12387,
											"end": 12735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12427,
											"end": 12434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12450,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 12468,
											"end": 12469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12450,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 12450,
											"end": 12470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12450,
											"end": 12470,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 12450,
											"end": 12470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12445,
											"end": 12470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12445,
											"end": 12470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12484,
											"end": 12504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 12502,
											"end": 12503,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12484,
											"end": 12504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 12484,
											"end": 12504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12484,
											"end": 12504,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 12484,
											"end": 12504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12479,
											"end": 12504,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12479,
											"end": 12504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12672,
											"end": 12673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12604,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12600,
											"end": 12674,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12597,
											"end": 12598,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12594,
											"end": 12675,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12589,
											"end": 12590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12582,
											"end": 12591,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12575,
											"end": 12592,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12571,
											"end": 12676,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12568,
											"end": 12699,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12568,
											"end": 12699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 12568,
											"end": 12699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12679,
											"end": 12697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 12679,
											"end": 12697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 12679,
											"end": 12697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12679,
											"end": 12697,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 12679,
											"end": 12697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12568,
											"end": 12699,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 12568,
											"end": 12699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12727,
											"end": 12728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12724,
											"end": 12725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12720,
											"end": 12729,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12709,
											"end": 12729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12709,
											"end": 12729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12735,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12741,
											"end": 13046,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 12741,
											"end": 13046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12781,
											"end": 12784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12800,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 12818,
											"end": 12819,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 12800,
											"end": 12820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 12820,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 12800,
											"end": 12820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12795,
											"end": 12820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12795,
											"end": 12820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12834,
											"end": 12854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 12852,
											"end": 12853,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12834,
											"end": 12854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 12834,
											"end": 12854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12834,
											"end": 12854,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 12834,
											"end": 12854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12829,
											"end": 12854,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12829,
											"end": 12854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12988,
											"end": 12989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12920,
											"end": 12986,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12916,
											"end": 12990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12913,
											"end": 12914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12910,
											"end": 12991,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12907,
											"end": 13014,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12907,
											"end": 13014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 12907,
											"end": 13014,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12994,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 12994,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 12994,
											"end": 13012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12994,
											"end": 13012,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 12994,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12907,
											"end": 13014,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 12907,
											"end": 13014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13038,
											"end": 13039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13035,
											"end": 13036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13031,
											"end": 13040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13024,
											"end": 13040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13024,
											"end": 13040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12741,
											"end": 13046,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12741,
											"end": 13046,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12741,
											"end": 13046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12741,
											"end": 13046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12741,
											"end": 13046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13052,
											"end": 13150,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 13052,
											"end": 13150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13103,
											"end": 13109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13137,
											"end": 13142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13131,
											"end": 13143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13121,
											"end": 13143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13121,
											"end": 13143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13052,
											"end": 13150,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13052,
											"end": 13150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13052,
											"end": 13150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13052,
											"end": 13150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13324,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 13156,
											"end": 13324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13239,
											"end": 13250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13273,
											"end": 13279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13261,
											"end": 13280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13308,
											"end": 13311,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13304,
											"end": 13318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13289,
											"end": 13318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13289,
											"end": 13318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13324,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13330,
											"end": 13690,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 13330,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13416,
											"end": 13419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13444,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 13476,
											"end": 13481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 13444,
											"end": 13482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13482,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 13444,
											"end": 13482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13498,
											"end": 13568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 13561,
											"end": 13567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13559,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13498,
											"end": 13568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 13498,
											"end": 13568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13498,
											"end": 13568,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 13498,
											"end": 13568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13491,
											"end": 13568,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13491,
											"end": 13568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13577,
											"end": 13629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 13622,
											"end": 13628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13617,
											"end": 13620,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13610,
											"end": 13614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13603,
											"end": 13608,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13599,
											"end": 13615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13577,
											"end": 13629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 13577,
											"end": 13629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13577,
											"end": 13629,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 13577,
											"end": 13629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13654,
											"end": 13683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 13676,
											"end": 13682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13654,
											"end": 13683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 13654,
											"end": 13683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13654,
											"end": 13683,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 13654,
											"end": 13683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13649,
											"end": 13652,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13645,
											"end": 13684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13638,
											"end": 13684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13638,
											"end": 13684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13330,
											"end": 13690,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13330,
											"end": 13690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13330,
											"end": 13690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13330,
											"end": 13690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13330,
											"end": 13690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13891,
											"end": 13895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13929,
											"end": 13932,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13918,
											"end": 13927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13914,
											"end": 13933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13906,
											"end": 13933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13906,
											"end": 13933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 14011,
											"end": 14012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14000,
											"end": 14009,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13996,
											"end": 14013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13987,
											"end": 13993,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 13943,
											"end": 14014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14014,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 13943,
											"end": 14014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14024,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 14092,
											"end": 14094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14081,
											"end": 14090,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14077,
											"end": 14095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14068,
											"end": 14074,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14024,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 14024,
											"end": 14096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14024,
											"end": 14096,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 14024,
											"end": 14096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14106,
											"end": 14178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 14174,
											"end": 14176,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14163,
											"end": 14172,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14159,
											"end": 14177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14150,
											"end": 14156,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14106,
											"end": 14178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 14106,
											"end": 14178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14106,
											"end": 14178,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 14106,
											"end": 14178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14225,
											"end": 14234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14219,
											"end": 14223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14215,
											"end": 14235,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14210,
											"end": 14212,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14199,
											"end": 14208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14195,
											"end": 14213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14188,
											"end": 14236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14253,
											"end": 14329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 14324,
											"end": 14328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14321,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14253,
											"end": 14329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 14253,
											"end": 14329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14253,
											"end": 14329,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 14253,
											"end": 14329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14245,
											"end": 14329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14245,
											"end": 14329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14342,
											"end": 14483,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 14342,
											"end": 14483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14398,
											"end": 14403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14429,
											"end": 14435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14414,
											"end": 14436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14414,
											"end": 14436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14445,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 14471,
											"end": 14476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14445,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 14445,
											"end": 14477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14445,
											"end": 14477,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 14445,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14342,
											"end": 14483,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14342,
											"end": 14483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14342,
											"end": 14483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14342,
											"end": 14483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14342,
											"end": 14483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14489,
											"end": 14838,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 14489,
											"end": 14838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14558,
											"end": 14564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14607,
											"end": 14609,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14595,
											"end": 14604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14586,
											"end": 14593,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14582,
											"end": 14605,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14578,
											"end": 14610,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 14575,
											"end": 14694,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14575,
											"end": 14694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 14575,
											"end": 14694,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14613,
											"end": 14692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 14613,
											"end": 14692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 14613,
											"end": 14692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14613,
											"end": 14692,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 14613,
											"end": 14692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14575,
											"end": 14694,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 14575,
											"end": 14694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14733,
											"end": 14734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14758,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 14813,
											"end": 14820,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14804,
											"end": 14810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14793,
											"end": 14802,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14789,
											"end": 14811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14758,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 14758,
											"end": 14821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14758,
											"end": 14821,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 14758,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14748,
											"end": 14821,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14748,
											"end": 14821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14704,
											"end": 14831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14489,
											"end": 14838,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14489,
											"end": 14838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14489,
											"end": 14838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14489,
											"end": 14838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14489,
											"end": 14838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14844,
											"end": 15077,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 14844,
											"end": 15077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14906,
											"end": 14930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 14924,
											"end": 14929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14906,
											"end": 14930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 14906,
											"end": 14930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14906,
											"end": 14930,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 14906,
											"end": 14930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14897,
											"end": 14930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14897,
											"end": 14930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14952,
											"end": 15018,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14945,
											"end": 14950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14942,
											"end": 15019,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14939,
											"end": 15042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 14939,
											"end": 15042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15022,
											"end": 15040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 15022,
											"end": 15040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 15022,
											"end": 15040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15022,
											"end": 15040,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 15022,
											"end": 15040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14939,
											"end": 15042,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 14939,
											"end": 15042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15069,
											"end": 15070,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15062,
											"end": 15067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15058,
											"end": 15071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15051,
											"end": 15071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15051,
											"end": 15071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14844,
											"end": 15077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14844,
											"end": 15077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14844,
											"end": 15077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14844,
											"end": 15077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15083,
											"end": 15263,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 15083,
											"end": 15263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15131,
											"end": 15208,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15128,
											"end": 15129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15121,
											"end": 15209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15228,
											"end": 15232,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 15225,
											"end": 15226,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15218,
											"end": 15233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15252,
											"end": 15256,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15249,
											"end": 15250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15242,
											"end": 15257,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15269,
											"end": 15454,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 15269,
											"end": 15454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15309,
											"end": 15310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15326,
											"end": 15346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 15344,
											"end": 15345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15326,
											"end": 15346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 15326,
											"end": 15346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15326,
											"end": 15346,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 15326,
											"end": 15346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15321,
											"end": 15346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15321,
											"end": 15346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15360,
											"end": 15380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 15378,
											"end": 15379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15360,
											"end": 15380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 15360,
											"end": 15380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15360,
											"end": 15380,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 15360,
											"end": 15380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15355,
											"end": 15380,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15355,
											"end": 15380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15399,
											"end": 15400,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15389,
											"end": 15424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 15389,
											"end": 15424,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 15404,
											"end": 15422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15389,
											"end": 15424,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 15389,
											"end": 15424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15446,
											"end": 15447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15443,
											"end": 15444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15439,
											"end": 15448,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15434,
											"end": 15448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15434,
											"end": 15448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15269,
											"end": 15454,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15269,
											"end": 15454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15269,
											"end": 15454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15269,
											"end": 15454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15269,
											"end": 15454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15636,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 15460,
											"end": 15636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15492,
											"end": 15493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15509,
											"end": 15529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 15527,
											"end": 15528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15509,
											"end": 15529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 15509,
											"end": 15529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15509,
											"end": 15529,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 15509,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15504,
											"end": 15529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15504,
											"end": 15529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15543,
											"end": 15563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 15561,
											"end": 15562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15543,
											"end": 15563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 15543,
											"end": 15563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15543,
											"end": 15563,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 15543,
											"end": 15563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15538,
											"end": 15563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15538,
											"end": 15563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15582,
											"end": 15583,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15572,
											"end": 15607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 15572,
											"end": 15607,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15587,
											"end": 15605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 15587,
											"end": 15605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 15587,
											"end": 15605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15587,
											"end": 15605,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 15587,
											"end": 15605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15572,
											"end": 15607,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 15572,
											"end": 15607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15628,
											"end": 15629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15625,
											"end": 15626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15621,
											"end": 15630,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 15630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 15630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15636,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15642,
											"end": 15822,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 15642,
											"end": 15822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15690,
											"end": 15767,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15687,
											"end": 15688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15680,
											"end": 15768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15787,
											"end": 15791,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 15784,
											"end": 15785,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15777,
											"end": 15792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15811,
											"end": 15815,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15808,
											"end": 15809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15801,
											"end": 15816,
											"name": "REVERT",
											"source": 1
										}
									],
									".data": {
										"873FD5F964B13E1038074DFA7BF985864A803BE90F361E484B606B70D53E1173": "68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d57755a3650574a535770704d354168344337747836646845476f626b686b6e734c58333446423957746e684d2f"
									}
								}
							},
							"sourceList": [
								"opensea_test_flat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BlockScore(address)": "325b272a",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"BlockScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"opensea_test_flat.sol\":\"Dcoffer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"opensea_test_flat.sol\":{\"keccak256\":\"0x31b67d705f29eb4529b89cc0dfe31be3bba37bb6de64ac04ee1a58ead639e427\",\"urls\":[\"bzz-raw://8eadb2193ffb89029106c470c7efbdf5514a4ab03184f5dfd6b649c2810b80fa\",\"dweb:/ipfs/QmTEZbJmBETHbLMieXXjLQeZkJo1SELxCAvxxP1Vai6NGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1116,
								"contract": "opensea_test_flat.sol:Dcoffer",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1118,
								"contract": "opensea_test_flat.sol:Dcoffer",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1120,
								"contract": "opensea_test_flat.sol:Dcoffer",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1122,
								"contract": "opensea_test_flat.sol:Dcoffer",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1127,
								"contract": "opensea_test_flat.sol:Dcoffer",
								"label": "_ownerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(TokenOwnership)1079_storage)"
							},
							{
								"astId": 1132,
								"contract": "opensea_test_flat.sol:Dcoffer",
								"label": "_addressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(AddressData)1088_storage)"
							},
							{
								"astId": 1136,
								"contract": "opensea_test_flat.sol:Dcoffer",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1142,
								"contract": "opensea_test_flat.sol:Dcoffer",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1149,
								"contract": "opensea_test_flat.sol:Dcoffer",
								"label": "_BlockScore",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_struct(AddressData)1088_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IERC721A.AddressData)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressData)1088_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenOwnership)1079_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IERC721A.TokenOwnership)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenOwnership)1079_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressData)1088_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.AddressData",
								"members": [
									{
										"astId": 1081,
										"contract": "opensea_test_flat.sol:Dcoffer",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1083,
										"contract": "opensea_test_flat.sol:Dcoffer",
										"label": "numberMinted",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1085,
										"contract": "opensea_test_flat.sol:Dcoffer",
										"label": "numberBurned",
										"offset": 16,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1087,
										"contract": "opensea_test_flat.sol:Dcoffer",
										"label": "aux",
										"offset": 24,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenOwnership)1079_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.TokenOwnership",
								"members": [
									{
										"astId": 1074,
										"contract": "opensea_test_flat.sol:Dcoffer",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1076,
										"contract": "opensea_test_flat.sol:Dcoffer",
										"label": "startTimestamp",
										"offset": 20,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1078,
										"contract": "opensea_test_flat.sol:Dcoffer",
										"label": "burned",
										"offset": 28,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApprovalToCurrentOwner()": [
								{
									"notice": "The caller cannot approve to the current owner."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"opensea_test_flat.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"opensea_test_flat.sol\":{\"keccak256\":\"0x31b67d705f29eb4529b89cc0dfe31be3bba37bb6de64ac04ee1a58ead639e427\",\"urls\":[\"bzz-raw://8eadb2193ffb89029106c470c7efbdf5514a4ab03184f5dfd6b649c2810b80fa\",\"dweb:/ipfs/QmTEZbJmBETHbLMieXXjLQeZkJo1SELxCAvxxP1Vai6NGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "BlockScore",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"opensea_test_flat.sol\":30158:50213  contract ERC721A is Context, ERC165, IERC721A, IDCF {... */\n  mstore(0x40, 0x80)\n    /* \"opensea_test_flat.sol\":31297:31462  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"opensea_test_flat.sol\":31371:31376  name_ */\n  dup2\n    /* \"opensea_test_flat.sol\":31363:31368  _name */\n  0x02\n    /* \"opensea_test_flat.sol\":31363:31376  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"opensea_test_flat.sol\":31396:31403  symbol_ */\n  dup1\n    /* \"opensea_test_flat.sol\":31386:31393  _symbol */\n  0x03\n    /* \"opensea_test_flat.sol\":31386:31403  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"opensea_test_flat.sol\":31429:31444  _startTokenId() */\n  tag_9\n    /* \"opensea_test_flat.sol\":31429:31442  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"opensea_test_flat.sol\":31429:31444  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"opensea_test_flat.sol\":31413:31426  _currentIndex */\n  0x00\n    /* \"opensea_test_flat.sol\":31413:31444  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"opensea_test_flat.sol\":31297:31462  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"opensea_test_flat.sol\":30158:50213  contract ERC721A is Context, ERC165, IERC721A, IDCF {... */\n  jump(tag_11)\n    /* \"opensea_test_flat.sol\":32090:32180  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"opensea_test_flat.sol\":32146:32153  uint256 */\n  0x00\n    /* \"opensea_test_flat.sol\":32090:32180  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"opensea_test_flat.sol\":30158:50213  contract ERC721A is Context, ERC165, IERC721A, IDCF {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_16\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_24:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_25:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_26:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_27:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_28:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_29:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_30:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_31:\n    /* \"#utility.yul\":957:984   */\n  tag_47\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_29\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_49\n  tag_30\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1030:1118   */\ntag_48:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_32:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_51\n  tag_24\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_52\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_31\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_33:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_55\n  tag_30\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1434:1490   */\ntag_54:\n    /* \"#utility.yul\":1508:1537   */\n  tag_56\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_29\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1917   */\ntag_34:\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1688:1801   */\ntag_58:\n    /* \"#utility.yul\":1702:1708   */\n  dup4\n    /* \"#utility.yul\":1699:1700   */\n  dup2\n    /* \"#utility.yul\":1696:1709   */\n  lt\n    /* \"#utility.yul\":1688:1801   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1787:1788   */\n  dup1\n    /* \"#utility.yul\":1782:1785   */\n  dup3\n    /* \"#utility.yul\":1778:1789   */\n  add\n    /* \"#utility.yul\":1772:1790   */\n  mload\n    /* \"#utility.yul\":1768:1769   */\n  dup2\n    /* \"#utility.yul\":1763:1766   */\n  dup5\n    /* \"#utility.yul\":1759:1770   */\n  add\n    /* \"#utility.yul\":1752:1791   */\n  mstore\n    /* \"#utility.yul\":1724:1726   */\n  0x20\n    /* \"#utility.yul\":1721:1722   */\n  dup2\n    /* \"#utility.yul\":1717:1727   */\n  add\n    /* \"#utility.yul\":1712:1727   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1801   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":1819:1825   */\n  dup4\n    /* \"#utility.yul\":1816:1817   */\n  dup2\n    /* \"#utility.yul\":1813:1826   */\n  gt\n    /* \"#utility.yul\":1810:1911   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1890:1896   */\n  dup5\n    /* \"#utility.yul\":1885:1888   */\n  dup5\n    /* \"#utility.yul\":1881:1897   */\n  add\n    /* \"#utility.yul\":1874:1901   */\n  mstore\n    /* \"#utility.yul\":1810:1911   */\ntag_61:\n    /* \"#utility.yul\":1659:1917   */\n  pop\n    /* \"#utility.yul\":1610:1917   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2344   */\ntag_35:\n    /* \"#utility.yul\":2012:2017   */\n  0x00\n    /* \"#utility.yul\":2037:2103   */\n  tag_63\n    /* \"#utility.yul\":2053:2102   */\n  tag_64\n    /* \"#utility.yul\":2095:2101   */\n  dup5\n    /* \"#utility.yul\":2053:2102   */\n  tag_33\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2037:2103   */\n  tag_32\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2028:2103   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2119:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2133   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x20\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  add\n    /* \"#utility.yul\":2202:2205   */\n  dup5\n    /* \"#utility.yul\":2193:2199   */\n  dup5\n    /* \"#utility.yul\":2188:2191   */\n  dup5\n    /* \"#utility.yul\":2184:2200   */\n  add\n    /* \"#utility.yul\":2181:2206   */\n  gt\n    /* \"#utility.yul\":2178:2290   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2209:2288   */\n  tag_66\n  tag_28\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2178:2290   */\ntag_65:\n    /* \"#utility.yul\":2299:2338   */\n  tag_67\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2326:2329   */\n  dup3\n    /* \"#utility.yul\":2321:2324   */\n  dup6\n    /* \"#utility.yul\":2299:2338   */\n  tag_34\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2018:2344   */\n  pop\n    /* \"#utility.yul\":1923:2344   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2719   */\ntag_36:\n    /* \"#utility.yul\":2431:2436   */\n  0x00\n    /* \"#utility.yul\":2480:2483   */\n  dup3\n    /* \"#utility.yul\":2473:2477   */\n  0x1f\n    /* \"#utility.yul\":2465:2471   */\n  dup4\n    /* \"#utility.yul\":2461:2478   */\n  add\n    /* \"#utility.yul\":2457:2484   */\n  slt\n    /* \"#utility.yul\":2447:2569   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2488:2567   */\n  tag_70\n  tag_27\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2447:2569   */\ntag_69:\n    /* \"#utility.yul\":2598:2604   */\n  dup2\n    /* \"#utility.yul\":2592:2605   */\n  mload\n    /* \"#utility.yul\":2623:2713   */\n  tag_71\n    /* \"#utility.yul\":2709:2712   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup3\n    /* \"#utility.yul\":2694:2698   */\n  0x20\n    /* \"#utility.yul\":2686:2692   */\n  dup7\n    /* \"#utility.yul\":2682:2699   */\n  add\n    /* \"#utility.yul\":2623:2713   */\n  tag_35\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2614:2713   */\n  swap2\n  pop\n    /* \"#utility.yul\":2437:2719   */\n  pop\n    /* \"#utility.yul\":2364:2719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2725:3578   */\ntag_3:\n    /* \"#utility.yul\":2824:2830   */\n  0x00\n    /* \"#utility.yul\":2832:2838   */\n  dup1\n    /* \"#utility.yul\":2881:2883   */\n  0x40\n    /* \"#utility.yul\":2869:2878   */\n  dup4\n    /* \"#utility.yul\":2860:2867   */\n  dup6\n    /* \"#utility.yul\":2856:2879   */\n  sub\n    /* \"#utility.yul\":2852:2884   */\n  slt\n    /* \"#utility.yul\":2849:2968   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2887:2966   */\n  tag_74\n  tag_25\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2849:2968   */\ntag_73:\n    /* \"#utility.yul\":3028:3029   */\n  0x00\n    /* \"#utility.yul\":3017:3026   */\n  dup4\n    /* \"#utility.yul\":3013:3030   */\n  add\n    /* \"#utility.yul\":3007:3031   */\n  mload\n    /* \"#utility.yul\":3058:3076   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3047:3077   */\n  gt\n    /* \"#utility.yul\":3044:3161   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":3080:3159   */\n  tag_76\n  tag_26\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3044:3161   */\ntag_75:\n    /* \"#utility.yul\":3185:3259   */\n  tag_77\n    /* \"#utility.yul\":3251:3258   */\n  dup6\n    /* \"#utility.yul\":3242:3248   */\n  dup3\n    /* \"#utility.yul\":3231:3240   */\n  dup7\n    /* \"#utility.yul\":3227:3249   */\n  add\n    /* \"#utility.yul\":3185:3259   */\n  tag_36\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3175:3259   */\n  swap3\n  pop\n    /* \"#utility.yul\":2978:3269   */\n  pop\n    /* \"#utility.yul\":3329:3331   */\n  0x20\n    /* \"#utility.yul\":3318:3327   */\n  dup4\n    /* \"#utility.yul\":3314:3332   */\n  add\n    /* \"#utility.yul\":3308:3333   */\n  mload\n    /* \"#utility.yul\":3360:3378   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3352:3358   */\n  dup2\n    /* \"#utility.yul\":3349:3379   */\n  gt\n    /* \"#utility.yul\":3346:3463   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3382:3461   */\n  tag_79\n  tag_26\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3346:3463   */\ntag_78:\n    /* \"#utility.yul\":3487:3561   */\n  tag_80\n    /* \"#utility.yul\":3553:3560   */\n  dup6\n    /* \"#utility.yul\":3544:3550   */\n  dup3\n    /* \"#utility.yul\":3533:3542   */\n  dup7\n    /* \"#utility.yul\":3529:3551   */\n  add\n    /* \"#utility.yul\":3487:3561   */\n  tag_36\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3477:3561   */\n  swap2\n  pop\n    /* \"#utility.yul\":3279:3571   */\n  pop\n    /* \"#utility.yul\":2725:3578   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3584:3764   */\ntag_37:\n    /* \"#utility.yul\":3632:3709   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3629:3630   */\n  0x00\n    /* \"#utility.yul\":3622:3710   */\n  mstore\n    /* \"#utility.yul\":3729:3733   */\n  0x22\n    /* \"#utility.yul\":3726:3727   */\n  0x04\n    /* \"#utility.yul\":3719:3734   */\n  mstore\n    /* \"#utility.yul\":3753:3757   */\n  0x24\n    /* \"#utility.yul\":3750:3751   */\n  0x00\n    /* \"#utility.yul\":3743:3758   */\n  revert\n    /* \"#utility.yul\":3770:4090   */\ntag_14:\n    /* \"#utility.yul\":3814:3820   */\n  0x00\n    /* \"#utility.yul\":3851:3852   */\n  0x02\n    /* \"#utility.yul\":3845:3849   */\n  dup3\n    /* \"#utility.yul\":3841:3853   */\n  div\n    /* \"#utility.yul\":3831:3853   */\n  swap1\n  pop\n    /* \"#utility.yul\":3898:3899   */\n  0x01\n    /* \"#utility.yul\":3892:3896   */\n  dup3\n    /* \"#utility.yul\":3888:3900   */\n  and\n    /* \"#utility.yul\":3919:3937   */\n  dup1\n    /* \"#utility.yul\":3909:3990   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3975:3979   */\n  0x7f\n    /* \"#utility.yul\":3967:3973   */\n  dup3\n    /* \"#utility.yul\":3963:3980   */\n  and\n    /* \"#utility.yul\":3953:3980   */\n  swap2\n  pop\n    /* \"#utility.yul\":3909:3990   */\ntag_83:\n    /* \"#utility.yul\":4037:4039   */\n  0x20\n    /* \"#utility.yul\":4029:4035   */\n  dup3\n    /* \"#utility.yul\":4026:4040   */\n  lt\n    /* \"#utility.yul\":4006:4024   */\n  dup2\n    /* \"#utility.yul\":4003:4041   */\n  sub\n    /* \"#utility.yul\":4000:4084   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":4056:4074   */\n  tag_85\n  tag_37\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":4000:4084   */\ntag_84:\n    /* \"#utility.yul\":3821:4090   */\n  pop\n    /* \"#utility.yul\":3770:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"opensea_test_flat.sol\":30158:50213  contract ERC721A is Context, ERC165, IERC721A, IDCF {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"opensea_test_flat.sol\":30158:50213  contract ERC721A is Context, ERC165, IERC721A, IDCF {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42842e0e\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x095ea7b3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x325b272a\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"opensea_test_flat.sol\":33047:33347  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":36078:36176  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":37625:37825  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":37201:37564  function approve(address to, uint256 tokenId) public override {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"opensea_test_flat.sol\":32309:32615  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":38464:38628  function transferFrom(... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"opensea_test_flat.sol\":31472:31763  function BlockScore(address user)public view returns(uint256){... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":38694:38873  function safeTransferFrom(... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"opensea_test_flat.sol\":35893:36016  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":33406:33609  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":36240:36342  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":37892:38174  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"opensea_test_flat.sol\":38939:39299  function safeTransferFrom(... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"opensea_test_flat.sol\":36408:36721  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":38240:38402  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"opensea_test_flat.sol\":33047:33347  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_24:\n        /* \"opensea_test_flat.sol\":33149:33153  bool */\n      0x00\n        /* \"opensea_test_flat.sol\":33199:33224  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"opensea_test_flat.sol\":33184:33224  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"opensea_test_flat.sol\":33184:33195  interfaceId */\n      dup3\n        /* \"opensea_test_flat.sol\":33184:33224  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"opensea_test_flat.sol\":33184:33288  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_86\n      jumpi\n      pop\n        /* \"opensea_test_flat.sol\":33255:33288  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"opensea_test_flat.sol\":33240:33288  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"opensea_test_flat.sol\":33240:33251  interfaceId */\n      dup3\n        /* \"opensea_test_flat.sol\":33240:33288  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"opensea_test_flat.sol\":33184:33288  interfaceId == type(IERC721).interfaceId ||... */\n    tag_86:\n        /* \"opensea_test_flat.sol\":33184:33340  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_87\n      jumpi\n      pop\n        /* \"opensea_test_flat.sol\":33304:33340  super.supportsInterface(interfaceId) */\n      tag_88\n        /* \"opensea_test_flat.sol\":33328:33339  interfaceId */\n      dup3\n        /* \"opensea_test_flat.sol\":33304:33327  super.supportsInterface */\n      tag_89\n        /* \"opensea_test_flat.sol\":33304:33340  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_88:\n        /* \"opensea_test_flat.sol\":33184:33340  interfaceId == type(IERC721).interfaceId ||... */\n    tag_87:\n        /* \"opensea_test_flat.sol\":33165:33340  return... */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":33047:33347  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":36078:36176  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"opensea_test_flat.sol\":36132:36145  string memory */\n      0x60\n        /* \"opensea_test_flat.sol\":36164:36169  _name */\n      0x02\n        /* \"opensea_test_flat.sol\":36157:36169  return _name */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":36078:36176  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"opensea_test_flat.sol\":37625:37825  function getApproved(uint256 tokenId) public view override returns (address) {... */\n    tag_34:\n        /* \"opensea_test_flat.sol\":37693:37700  address */\n      0x00\n        /* \"opensea_test_flat.sol\":37717:37733  _exists(tokenId) */\n      tag_98\n        /* \"opensea_test_flat.sol\":37725:37732  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":37717:37724  _exists */\n      tag_99\n        /* \"opensea_test_flat.sol\":37717:37733  _exists(tokenId) */\n      jump\t// in\n    tag_98:\n        /* \"opensea_test_flat.sol\":37712:37776  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_100\n      jumpi\n        /* \"opensea_test_flat.sol\":37742:37776  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":37712:37776  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_100:\n        /* \"opensea_test_flat.sol\":37794:37809  _tokenApprovals */\n      0x06\n        /* \"opensea_test_flat.sol\":37794:37818  _tokenApprovals[tokenId] */\n      0x00\n        /* \"opensea_test_flat.sol\":37810:37817  tokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":37794:37818  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":37787:37818  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":37625:37825  function getApproved(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":37201:37564  function approve(address to, uint256 tokenId) public override {... */\n    tag_40:\n        /* \"opensea_test_flat.sol\":37273:37286  address owner */\n      0x00\n        /* \"opensea_test_flat.sol\":37289:37313  ERC721A.ownerOf(tokenId) */\n      tag_102\n        /* \"opensea_test_flat.sol\":37305:37312  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":37289:37304  ERC721A.ownerOf */\n      tag_59\n        /* \"opensea_test_flat.sol\":37289:37313  ERC721A.ownerOf(tokenId) */\n      jump\t// in\n    tag_102:\n        /* \"opensea_test_flat.sol\":37273:37313  address owner = ERC721A.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":37333:37338  owner */\n      dup1\n        /* \"opensea_test_flat.sol\":37327:37338  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":37327:37329  to */\n      dup4\n        /* \"opensea_test_flat.sol\":37327:37338  to == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"opensea_test_flat.sol\":37323:37371  if (to == owner) revert ApprovalToCurrentOwner() */\n      tag_103\n      jumpi\n        /* \"opensea_test_flat.sol\":37347:37371  ApprovalToCurrentOwner() */\n      mload(0x40)\n      0x943f7b8c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":37323:37371  if (to == owner) revert ApprovalToCurrentOwner() */\n    tag_103:\n        /* \"opensea_test_flat.sol\":37402:37407  owner */\n      dup1\n        /* \"opensea_test_flat.sol\":37386:37407  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":37386:37398  _msgSender() */\n      tag_104\n        /* \"opensea_test_flat.sol\":37386:37396  _msgSender */\n      tag_105\n        /* \"opensea_test_flat.sol\":37386:37398  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"opensea_test_flat.sol\":37386:37407  _msgSender() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"opensea_test_flat.sol\":37382:37519  if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {... */\n      tag_106\n      jumpi\n        /* \"opensea_test_flat.sol\":37413:37450  isApprovedForAll(owner, _msgSender()) */\n      tag_107\n        /* \"opensea_test_flat.sol\":37430:37435  owner */\n      dup2\n        /* \"opensea_test_flat.sol\":37437:37449  _msgSender() */\n      tag_108\n        /* \"opensea_test_flat.sol\":37437:37447  _msgSender */\n      tag_105\n        /* \"opensea_test_flat.sol\":37437:37449  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"opensea_test_flat.sol\":37413:37429  isApprovedForAll */\n      tag_83\n        /* \"opensea_test_flat.sol\":37413:37450  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_107:\n        /* \"opensea_test_flat.sol\":37409:37519  if(!isApprovedForAll(owner, _msgSender())) {... */\n      tag_109\n      jumpi\n        /* \"opensea_test_flat.sol\":37473:37508  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":37409:37519  if(!isApprovedForAll(owner, _msgSender())) {... */\n    tag_109:\n        /* \"opensea_test_flat.sol\":37382:37519  if (_msgSender() != owner) if(!isApprovedForAll(owner, _msgSender())) {... */\n    tag_106:\n        /* \"opensea_test_flat.sol\":37529:37557  _approve(to, tokenId, owner) */\n      tag_110\n        /* \"opensea_test_flat.sol\":37538:37540  to */\n      dup4\n        /* \"opensea_test_flat.sol\":37542:37549  tokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":37551:37556  owner */\n      dup4\n        /* \"opensea_test_flat.sol\":37529:37537  _approve */\n      tag_111\n        /* \"opensea_test_flat.sol\":37529:37557  _approve(to, tokenId, owner) */\n      jump\t// in\n    tag_110:\n        /* \"opensea_test_flat.sol\":37263:37564  {... */\n      pop\n        /* \"opensea_test_flat.sol\":37201:37564  function approve(address to, uint256 tokenId) public override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":32309:32615  function totalSupply() public view override returns (uint256) {... */\n    tag_42:\n        /* \"opensea_test_flat.sol\":32362:32369  uint256 */\n      0x00\n        /* \"opensea_test_flat.sol\":32583:32598  _startTokenId() */\n      tag_113\n        /* \"opensea_test_flat.sol\":32583:32596  _startTokenId */\n      tag_114\n        /* \"opensea_test_flat.sol\":32583:32598  _startTokenId() */\n      jump\t// in\n    tag_113:\n        /* \"opensea_test_flat.sol\":32568:32580  _burnCounter */\n      sload(0x01)\n        /* \"opensea_test_flat.sol\":32552:32565  _currentIndex */\n      sload(0x00)\n        /* \"opensea_test_flat.sol\":32552:32580  _currentIndex - _burnCounter */\n      sub\n        /* \"opensea_test_flat.sol\":32552:32598  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"opensea_test_flat.sol\":32545:32598  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":32309:32615  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"opensea_test_flat.sol\":38464:38628  function transferFrom(... */\n    tag_48:\n        /* \"opensea_test_flat.sol\":38593:38621  _transfer(from, to, tokenId) */\n      tag_116\n        /* \"opensea_test_flat.sol\":38603:38607  from */\n      dup4\n        /* \"opensea_test_flat.sol\":38609:38611  to */\n      dup4\n        /* \"opensea_test_flat.sol\":38613:38620  tokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":38593:38602  _transfer */\n      tag_117\n        /* \"opensea_test_flat.sol\":38593:38621  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_116:\n        /* \"opensea_test_flat.sol\":38464:38628  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":31472:31763  function BlockScore(address user)public view returns(uint256){... */\n    tag_52:\n        /* \"opensea_test_flat.sol\":31525:31532  uint256 */\n      0x00\n        /* \"opensea_test_flat.sol\":31543:31561  uint256 difference */\n      dup1\n        /* \"opensea_test_flat.sol\":31564:31602  block.number.sub(_BlockScore[user][1]) */\n      tag_119\n        /* \"opensea_test_flat.sol\":31581:31592  _BlockScore */\n      0x08\n        /* \"opensea_test_flat.sol\":31581:31598  _BlockScore[user] */\n      0x00\n        /* \"opensea_test_flat.sol\":31593:31597  user */\n      dup6\n        /* \"opensea_test_flat.sol\":31581:31598  _BlockScore[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":31581:31601  _BlockScore[user][1] */\n      0x00\n        /* \"opensea_test_flat.sol\":31599:31600  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":31581:31601  _BlockScore[user][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"opensea_test_flat.sol\":31564:31576  block.number */\n      number\n        /* \"opensea_test_flat.sol\":31564:31580  block.number.sub */\n      tag_120\n      swap1\n        /* \"opensea_test_flat.sol\":31564:31602  block.number.sub(_BlockScore[user][1]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"opensea_test_flat.sol\":31543:31602  uint256 difference = block.number.sub(_BlockScore[user][1]) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":31612:31627  uint256 Product */\n      0x00\n        /* \"opensea_test_flat.sol\":31630:31661  balanceOf(user).mul(difference) */\n      tag_121\n        /* \"opensea_test_flat.sol\":31650:31660  difference */\n      dup3\n        /* \"opensea_test_flat.sol\":31630:31645  balanceOf(user) */\n      tag_122\n        /* \"opensea_test_flat.sol\":31640:31644  user */\n      dup7\n        /* \"opensea_test_flat.sol\":31630:31639  balanceOf */\n      tag_63\n        /* \"opensea_test_flat.sol\":31630:31645  balanceOf(user) */\n      jump\t// in\n    tag_122:\n        /* \"opensea_test_flat.sol\":31630:31649  balanceOf(user).mul */\n      tag_123\n      swap1\n        /* \"opensea_test_flat.sol\":31630:31661  balanceOf(user).mul(difference) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"opensea_test_flat.sol\":31612:31661  uint256 Product = balanceOf(user).mul(difference) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":31671:31691  uint256 accumulation */\n      0x00\n        /* \"opensea_test_flat.sol\":31694:31727  _BlockScore[user][2].add(Product) */\n      tag_124\n        /* \"opensea_test_flat.sol\":31719:31726  Product */\n      dup3\n        /* \"opensea_test_flat.sol\":31694:31705  _BlockScore */\n      0x08\n        /* \"opensea_test_flat.sol\":31694:31711  _BlockScore[user] */\n      0x00\n        /* \"opensea_test_flat.sol\":31706:31710  user */\n      dup9\n        /* \"opensea_test_flat.sol\":31694:31711  _BlockScore[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":31694:31714  _BlockScore[user][2] */\n      0x00\n        /* \"opensea_test_flat.sol\":31712:31713  2 */\n      0x02\n        /* \"opensea_test_flat.sol\":31694:31714  _BlockScore[user][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"opensea_test_flat.sol\":31694:31718  _BlockScore[user][2].add */\n      tag_125\n      swap1\n        /* \"opensea_test_flat.sol\":31694:31727  _BlockScore[user][2].add(Product) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"opensea_test_flat.sol\":31671:31727  uint256 accumulation = _BlockScore[user][2].add(Product) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":31744:31756  accumulation */\n      dup1\n        /* \"opensea_test_flat.sol\":31737:31756  return accumulation */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":31472:31763  function BlockScore(address user)public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":38694:38873  function safeTransferFrom(... */\n    tag_56:\n        /* \"opensea_test_flat.sol\":38827:38866  safeTransferFrom(from, to, tokenId, '') */\n      tag_127\n        /* \"opensea_test_flat.sol\":38844:38848  from */\n      dup4\n        /* \"opensea_test_flat.sol\":38850:38852  to */\n      dup4\n        /* \"opensea_test_flat.sol\":38854:38861  tokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":38827:38866  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"opensea_test_flat.sol\":38827:38843  safeTransferFrom */\n      tag_75\n        /* \"opensea_test_flat.sol\":38827:38866  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_127:\n        /* \"opensea_test_flat.sol\":38694:38873  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":35893:36016  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n    tag_59:\n        /* \"opensea_test_flat.sol\":35957:35964  address */\n      0x00\n        /* \"opensea_test_flat.sol\":35983:36004  _ownershipOf(tokenId) */\n      tag_129\n        /* \"opensea_test_flat.sol\":35996:36003  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":35983:35995  _ownershipOf */\n      tag_130\n        /* \"opensea_test_flat.sol\":35983:36004  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_129:\n        /* \"opensea_test_flat.sol\":35983:36009  _ownershipOf(tokenId).addr */\n      0x00\n      add\n      mload\n        /* \"opensea_test_flat.sol\":35976:36009  return _ownershipOf(tokenId).addr */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":35893:36016  function ownerOf(uint256 tokenId) public view override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":33406:33609  function balanceOf(address owner) public view override returns (uint256) {... */\n    tag_63:\n        /* \"opensea_test_flat.sol\":33470:33477  uint256 */\n      0x00\n        /* \"opensea_test_flat.sol\":33510:33511  0 */\n      dup1\n        /* \"opensea_test_flat.sol\":33493:33512  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":33493:33498  owner */\n      dup3\n        /* \"opensea_test_flat.sol\":33493:33512  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"opensea_test_flat.sol\":33489:33549  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_132\n      jumpi\n        /* \"opensea_test_flat.sol\":33521:33549  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":33489:33549  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_132:\n        /* \"opensea_test_flat.sol\":33574:33586  _addressData */\n      0x05\n        /* \"opensea_test_flat.sol\":33574:33593  _addressData[owner] */\n      0x00\n        /* \"opensea_test_flat.sol\":33587:33592  owner */\n      dup4\n        /* \"opensea_test_flat.sol\":33574:33593  _addressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":33574:33601  _addressData[owner].balance */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":33566:33602  uint256(_addressData[owner].balance) */\n      0xffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":33559:33602  return uint256(_addressData[owner].balance) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":33406:33609  function balanceOf(address owner) public view override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":36240:36342  function symbol() public view virtual override returns (string memory) {... */\n    tag_66:\n        /* \"opensea_test_flat.sol\":36296:36309  string memory */\n      0x60\n        /* \"opensea_test_flat.sol\":36328:36335  _symbol */\n      0x03\n        /* \"opensea_test_flat.sol\":36321:36335  return _symbol */\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_92\n      jump\t// in\n    tag_134:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_92\n      jump\t// in\n    tag_135:\n      dup1\n      iszero\n      tag_136\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_137\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_136)\n    tag_137:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_138:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_138\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":36240:36342  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"opensea_test_flat.sol\":37892:38174  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_71:\n        /* \"opensea_test_flat.sol\":38002:38014  _msgSender() */\n      tag_140\n        /* \"opensea_test_flat.sol\":38002:38012  _msgSender */\n      tag_105\n        /* \"opensea_test_flat.sol\":38002:38014  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"opensea_test_flat.sol\":37990:38014  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":37990:37998  operator */\n      dup3\n        /* \"opensea_test_flat.sol\":37990:38014  operator == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"opensea_test_flat.sol\":37986:38040  if (operator == _msgSender()) revert ApproveToCaller() */\n      tag_141\n      jumpi\n        /* \"opensea_test_flat.sol\":38023:38040  ApproveToCaller() */\n      mload(0x40)\n      0xb06307db00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":37986:38040  if (operator == _msgSender()) revert ApproveToCaller() */\n    tag_141:\n        /* \"opensea_test_flat.sol\":38096:38104  approved */\n      dup1\n        /* \"opensea_test_flat.sol\":38051:38069  _operatorApprovals */\n      0x07\n        /* \"opensea_test_flat.sol\":38051:38083  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"opensea_test_flat.sol\":38070:38082  _msgSender() */\n      tag_142\n        /* \"opensea_test_flat.sol\":38070:38080  _msgSender */\n      tag_105\n        /* \"opensea_test_flat.sol\":38070:38082  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"opensea_test_flat.sol\":38051:38083  _operatorApprovals[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":38051:38093  _operatorApprovals[_msgSender()][operator] */\n      0x00\n        /* \"opensea_test_flat.sol\":38084:38092  operator */\n      dup5\n        /* \"opensea_test_flat.sol\":38051:38093  _operatorApprovals[_msgSender()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"opensea_test_flat.sol\":38051:38104  _operatorApprovals[_msgSender()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":38148:38156  operator */\n      dup2\n        /* \"opensea_test_flat.sol\":38119:38167  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":38134:38146  _msgSender() */\n      tag_143\n        /* \"opensea_test_flat.sol\":38134:38144  _msgSender */\n      tag_105\n        /* \"opensea_test_flat.sol\":38134:38146  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"opensea_test_flat.sol\":38119:38167  ApprovalForAll(_msgSender(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"opensea_test_flat.sol\":38158:38166  approved */\n      dup4\n        /* \"opensea_test_flat.sol\":38119:38167  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"opensea_test_flat.sol\":37892:38174  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":38939:39299  function safeTransferFrom(... */\n    tag_75:\n        /* \"opensea_test_flat.sol\":39100:39128  _transfer(from, to, tokenId) */\n      tag_146\n        /* \"opensea_test_flat.sol\":39110:39114  from */\n      dup5\n        /* \"opensea_test_flat.sol\":39116:39118  to */\n      dup5\n        /* \"opensea_test_flat.sol\":39120:39127  tokenId */\n      dup5\n        /* \"opensea_test_flat.sol\":39100:39109  _transfer */\n      tag_117\n        /* \"opensea_test_flat.sol\":39100:39128  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_146:\n        /* \"opensea_test_flat.sol\":39142:39157  to.isContract() */\n      tag_147\n        /* \"opensea_test_flat.sol\":39142:39144  to */\n      dup4\n        /* \"opensea_test_flat.sol\":39142:39155  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_148\n        /* \"opensea_test_flat.sol\":39142:39157  to.isContract() */\n      jump\t// in\n    tag_147:\n        /* \"opensea_test_flat.sol\":39138:39293  if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"opensea_test_flat.sol\":39163:39219  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_150\n        /* \"opensea_test_flat.sol\":39194:39198  from */\n      dup5\n        /* \"opensea_test_flat.sol\":39200:39202  to */\n      dup5\n        /* \"opensea_test_flat.sol\":39204:39211  tokenId */\n      dup5\n        /* \"opensea_test_flat.sol\":39213:39218  _data */\n      dup5\n        /* \"opensea_test_flat.sol\":39163:39193  _checkContractOnERC721Received */\n      tag_151\n        /* \"opensea_test_flat.sol\":39163:39219  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_150:\n        /* \"opensea_test_flat.sol\":39159:39293  if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_152\n      jumpi\n        /* \"opensea_test_flat.sol\":39242:39282  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":39159:39293  if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_152:\n        /* \"opensea_test_flat.sol\":39138:39293  if (to.isContract()) if(!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_149:\n        /* \"opensea_test_flat.sol\":38939:39299  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":36408:36721  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_78:\n        /* \"opensea_test_flat.sol\":36481:36494  string memory */\n      0x60\n        /* \"opensea_test_flat.sol\":36511:36527  _exists(tokenId) */\n      tag_154\n        /* \"opensea_test_flat.sol\":36519:36526  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":36511:36518  _exists */\n      tag_99\n        /* \"opensea_test_flat.sol\":36511:36527  _exists(tokenId) */\n      jump\t// in\n    tag_154:\n        /* \"opensea_test_flat.sol\":36506:36565  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_155\n      jumpi\n        /* \"opensea_test_flat.sol\":36536:36565  URIQueryForNonexistentToken() */\n      mload(0x40)\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":36506:36565  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_155:\n        /* \"opensea_test_flat.sol\":36576:36597  string memory baseURI */\n      0x00\n        /* \"opensea_test_flat.sol\":36600:36610  _baseURI() */\n      tag_156\n        /* \"opensea_test_flat.sol\":36600:36608  _baseURI */\n      tag_157\n        /* \"opensea_test_flat.sol\":36600:36610  _baseURI() */\n      jump\t// in\n    tag_156:\n        /* \"opensea_test_flat.sol\":36576:36610  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":36652:36653  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":36633:36640  baseURI */\n      dup2\n        /* \"opensea_test_flat.sol\":36627:36648  bytes(baseURI).length */\n      mload\n        /* \"opensea_test_flat.sol\":36627:36653  bytes(baseURI).length != 0 */\n      sub\n        /* \"opensea_test_flat.sol\":36627:36714  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      tag_158\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_159)\n    tag_158:\n        /* \"opensea_test_flat.sol\":36680:36687  baseURI */\n      dup1\n        /* \"opensea_test_flat.sol\":36689:36707  tokenId.toString() */\n      tag_160\n        /* \"opensea_test_flat.sol\":36689:36696  tokenId */\n      dup5\n        /* \"opensea_test_flat.sol\":36689:36705  tokenId.toString */\n      tag_161\n        /* \"opensea_test_flat.sol\":36689:36707  tokenId.toString() */\n      jump\t// in\n    tag_160:\n        /* \"opensea_test_flat.sol\":36663:36708  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_162\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"opensea_test_flat.sol\":36627:36714  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n    tag_159:\n        /* \"opensea_test_flat.sol\":36620:36714  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '' */\n      swap2\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":36408:36721  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":38240:38402  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_83:\n        /* \"opensea_test_flat.sol\":38337:38341  bool */\n      0x00\n        /* \"opensea_test_flat.sol\":38360:38378  _operatorApprovals */\n      0x07\n        /* \"opensea_test_flat.sol\":38360:38385  _operatorApprovals[owner] */\n      0x00\n        /* \"opensea_test_flat.sol\":38379:38384  owner */\n      dup5\n        /* \"opensea_test_flat.sol\":38360:38385  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":38360:38395  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"opensea_test_flat.sol\":38386:38394  operator */\n      dup4\n        /* \"opensea_test_flat.sol\":38360:38395  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"opensea_test_flat.sol\":38353:38395  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":38240:38402  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":21026:21181  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_89:\n        /* \"opensea_test_flat.sol\":21111:21115  bool */\n      0x00\n        /* \"opensea_test_flat.sol\":21149:21174  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"opensea_test_flat.sol\":21134:21174  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"opensea_test_flat.sol\":21134:21145  interfaceId */\n      dup3\n        /* \"opensea_test_flat.sol\":21134:21174  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"opensea_test_flat.sol\":21127:21174  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":21026:21181  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":39504:39676  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_99:\n        /* \"opensea_test_flat.sol\":39561:39565  bool */\n      0x00\n        /* \"opensea_test_flat.sol\":39603:39610  tokenId */\n      dup2\n        /* \"opensea_test_flat.sol\":39584:39599  _startTokenId() */\n      tag_167\n        /* \"opensea_test_flat.sol\":39584:39597  _startTokenId */\n      tag_114\n        /* \"opensea_test_flat.sol\":39584:39599  _startTokenId() */\n      jump\t// in\n    tag_167:\n        /* \"opensea_test_flat.sol\":39584:39610  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"opensea_test_flat.sol\":39584:39637  _startTokenId() <= tokenId && tokenId < _currentIndex */\n      dup1\n      iszero\n      tag_168\n      jumpi\n      pop\n        /* \"opensea_test_flat.sol\":39624:39637  _currentIndex */\n      sload(0x00)\n        /* \"opensea_test_flat.sol\":39614:39621  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":39614:39637  tokenId < _currentIndex */\n      lt\n        /* \"opensea_test_flat.sol\":39584:39637  _startTokenId() <= tokenId && tokenId < _currentIndex */\n    tag_168:\n        /* \"opensea_test_flat.sol\":39584:39669  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      dup1\n      iszero\n      tag_169\n      jumpi\n      pop\n        /* \"opensea_test_flat.sol\":39642:39653  _ownerships */\n      0x04\n        /* \"opensea_test_flat.sol\":39642:39662  _ownerships[tokenId] */\n      0x00\n        /* \"opensea_test_flat.sol\":39654:39661  tokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":39642:39662  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":39642:39669  _ownerships[tokenId].burned */\n      0x00\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"opensea_test_flat.sol\":39641:39669  !_ownerships[tokenId].burned */\n      iszero\n        /* \"opensea_test_flat.sol\":39584:39669  _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n    tag_169:\n        /* \"opensea_test_flat.sol\":39577:39669  return _startTokenId() <= tokenId && tokenId < _currentIndex && !_ownerships[tokenId].burned */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":39504:39676  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":9527:9623  function _msgSender() internal view virtual returns (address) {... */\n    tag_105:\n        /* \"opensea_test_flat.sol\":9580:9587  address */\n      0x00\n        /* \"opensea_test_flat.sol\":9606:9616  msg.sender */\n      caller\n        /* \"opensea_test_flat.sol\":9599:9616  return msg.sender */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":9527:9623  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"opensea_test_flat.sol\":47312:47501  function _approve(... */\n    tag_111:\n        /* \"opensea_test_flat.sol\":47449:47451  to */\n      dup3\n        /* \"opensea_test_flat.sol\":47422:47437  _tokenApprovals */\n      0x06\n        /* \"opensea_test_flat.sol\":47422:47446  _tokenApprovals[tokenId] */\n      0x00\n        /* \"opensea_test_flat.sol\":47438:47445  tokenId */\n      dup5\n        /* \"opensea_test_flat.sol\":47422:47446  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"opensea_test_flat.sol\":47422:47451  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":47486:47493  tokenId */\n      dup2\n        /* \"opensea_test_flat.sol\":47482:47484  to */\n      dup4\n        /* \"opensea_test_flat.sol\":47466:47494  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":47475:47480  owner */\n      dup3\n        /* \"opensea_test_flat.sol\":47466:47494  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"opensea_test_flat.sol\":47312:47501  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":32090:32180  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_114:\n        /* \"opensea_test_flat.sol\":32146:32153  uint256 */\n      0x00\n        /* \"opensea_test_flat.sol\":32090:32180  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"opensea_test_flat.sol\":42287:44431  function _transfer(... */\n    tag_117:\n        /* \"opensea_test_flat.sol\":42397:42419  updateBlockScore(from) */\n      tag_174\n        /* \"opensea_test_flat.sol\":42414:42418  from */\n      dup4\n        /* \"opensea_test_flat.sol\":42397:42413  updateBlockScore */\n      tag_175\n        /* \"opensea_test_flat.sol\":42397:42419  updateBlockScore(from) */\n      jump\t// in\n    tag_174:\n        /* \"opensea_test_flat.sol\":42429:42449  updateBlockScore(to) */\n      tag_176\n        /* \"opensea_test_flat.sol\":42446:42448  to */\n      dup3\n        /* \"opensea_test_flat.sol\":42429:42445  updateBlockScore */\n      tag_175\n        /* \"opensea_test_flat.sol\":42429:42449  updateBlockScore(to) */\n      jump\t// in\n    tag_176:\n        /* \"opensea_test_flat.sol\":42459:42494  TokenOwnership memory prevOwnership */\n      0x00\n        /* \"opensea_test_flat.sol\":42497:42518  _ownershipOf(tokenId) */\n      tag_177\n        /* \"opensea_test_flat.sol\":42510:42517  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":42497:42509  _ownershipOf */\n      tag_130\n        /* \"opensea_test_flat.sol\":42497:42518  _ownershipOf(tokenId) */\n      jump\t// in\n    tag_177:\n        /* \"opensea_test_flat.sol\":42459:42518  TokenOwnership memory prevOwnership = _ownershipOf(tokenId) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":42555:42559  from */\n      dup4\n        /* \"opensea_test_flat.sol\":42533:42559  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":42533:42546  prevOwnership */\n      dup2\n        /* \"opensea_test_flat.sol\":42533:42551  prevOwnership.addr */\n      0x00\n      add\n      mload\n        /* \"opensea_test_flat.sol\":42533:42559  prevOwnership.addr != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"opensea_test_flat.sol\":42529:42596  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n      tag_178\n      jumpi\n        /* \"opensea_test_flat.sol\":42568:42596  TransferFromIncorrectOwner() */\n      mload(0x40)\n      0xa114810000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":42529:42596  if (prevOwnership.addr != from) revert TransferFromIncorrectOwner() */\n    tag_178:\n        /* \"opensea_test_flat.sol\":42607:42629  bool isApprovedOrOwner */\n      0x00\n        /* \"opensea_test_flat.sol\":42649:42653  from */\n      dup5\n        /* \"opensea_test_flat.sol\":42633:42653  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":42633:42645  _msgSender() */\n      tag_179\n        /* \"opensea_test_flat.sol\":42633:42643  _msgSender */\n      tag_105\n        /* \"opensea_test_flat.sol\":42633:42645  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"opensea_test_flat.sol\":42633:42653  _msgSender() == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"opensea_test_flat.sol\":42633:42705  _msgSender() == from ||... */\n      dup1\n      tag_180\n      jumpi\n      pop\n        /* \"opensea_test_flat.sol\":42669:42705  isApprovedForAll(from, _msgSender()) */\n      tag_181\n        /* \"opensea_test_flat.sol\":42686:42690  from */\n      dup6\n        /* \"opensea_test_flat.sol\":42692:42704  _msgSender() */\n      tag_182\n        /* \"opensea_test_flat.sol\":42692:42702  _msgSender */\n      tag_105\n        /* \"opensea_test_flat.sol\":42692:42704  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"opensea_test_flat.sol\":42669:42685  isApprovedForAll */\n      tag_83\n        /* \"opensea_test_flat.sol\":42669:42705  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_181:\n        /* \"opensea_test_flat.sol\":42633:42705  _msgSender() == from ||... */\n    tag_180:\n        /* \"opensea_test_flat.sol\":42633:42757  _msgSender() == from ||... */\n      dup1\n      tag_183\n      jumpi\n      pop\n        /* \"opensea_test_flat.sol\":42745:42757  _msgSender() */\n      tag_184\n        /* \"opensea_test_flat.sol\":42745:42755  _msgSender */\n      tag_105\n        /* \"opensea_test_flat.sol\":42745:42757  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"opensea_test_flat.sol\":42721:42757  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":42721:42741  getApproved(tokenId) */\n      tag_185\n        /* \"opensea_test_flat.sol\":42733:42740  tokenId */\n      dup5\n        /* \"opensea_test_flat.sol\":42721:42732  getApproved */\n      tag_34\n        /* \"opensea_test_flat.sol\":42721:42741  getApproved(tokenId) */\n      jump\t// in\n    tag_185:\n        /* \"opensea_test_flat.sol\":42721:42757  getApproved(tokenId) == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"opensea_test_flat.sol\":42633:42757  _msgSender() == from ||... */\n    tag_183:\n        /* \"opensea_test_flat.sol\":42607:42758  bool isApprovedOrOwner = (_msgSender() == from ||... */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":42774:42791  isApprovedOrOwner */\n      dup1\n        /* \"opensea_test_flat.sol\":42769:42835  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n      tag_186\n      jumpi\n        /* \"opensea_test_flat.sol\":42800:42835  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":42769:42835  if (!isApprovedOrOwner) revert TransferCallerNotOwnerNorApproved() */\n    tag_186:\n        /* \"opensea_test_flat.sol\":42863:42864  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":42849:42865  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":42849:42851  to */\n      dup5\n        /* \"opensea_test_flat.sol\":42849:42865  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"opensea_test_flat.sol\":42845:42897  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_187\n      jumpi\n        /* \"opensea_test_flat.sol\":42874:42897  TransferToZeroAddress() */\n      mload(0x40)\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":42845:42897  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_187:\n        /* \"opensea_test_flat.sol\":42908:42951  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_188\n        /* \"opensea_test_flat.sol\":42930:42934  from */\n      dup6\n        /* \"opensea_test_flat.sol\":42936:42938  to */\n      dup6\n        /* \"opensea_test_flat.sol\":42940:42947  tokenId */\n      dup6\n        /* \"opensea_test_flat.sol\":42949:42950  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":42908:42929  _beforeTokenTransfers */\n      tag_189\n        /* \"opensea_test_flat.sol\":42908:42951  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_188:\n        /* \"opensea_test_flat.sol\":43013:43048  _approve(address(0), tokenId, from) */\n      tag_190\n        /* \"opensea_test_flat.sol\":43030:43031  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":43034:43041  tokenId */\n      dup5\n        /* \"opensea_test_flat.sol\":43043:43047  from */\n      dup8\n        /* \"opensea_test_flat.sol\":43013:43021  _approve */\n      tag_111\n        /* \"opensea_test_flat.sol\":43013:43048  _approve(address(0), tokenId, from) */\n      jump\t// in\n    tag_190:\n        /* \"opensea_test_flat.sol\":43368:43369  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":43338:43350  _addressData */\n      0x05\n        /* \"opensea_test_flat.sol\":43338:43356  _addressData[from] */\n      0x00\n        /* \"opensea_test_flat.sol\":43351:43355  from */\n      dup8\n        /* \"opensea_test_flat.sol\":43338:43356  _addressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":43338:43364  _addressData[from].balance */\n      0x00\n      add\n      0x00\n        /* \"opensea_test_flat.sol\":43338:43369  _addressData[from].balance -= 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      sub\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":43411:43412  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":43383:43395  _addressData */\n      0x05\n        /* \"opensea_test_flat.sol\":43383:43399  _addressData[to] */\n      0x00\n        /* \"opensea_test_flat.sol\":43396:43398  to */\n      dup7\n        /* \"opensea_test_flat.sol\":43383:43399  _addressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":43383:43407  _addressData[to].balance */\n      0x00\n      add\n      0x00\n        /* \"opensea_test_flat.sol\":43383:43412  _addressData[to].balance += 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      add\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":43427:43458  TokenOwnership storage currSlot */\n      0x00\n        /* \"opensea_test_flat.sol\":43461:43472  _ownerships */\n      0x04\n        /* \"opensea_test_flat.sol\":43461:43481  _ownerships[tokenId] */\n      0x00\n        /* \"opensea_test_flat.sol\":43473:43480  tokenId */\n      dup6\n        /* \"opensea_test_flat.sol\":43461:43481  _ownerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":43427:43481  TokenOwnership storage currSlot = _ownerships[tokenId] */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":43511:43513  to */\n      dup5\n        /* \"opensea_test_flat.sol\":43495:43503  currSlot */\n      dup2\n        /* \"opensea_test_flat.sol\":43495:43508  currSlot.addr */\n      0x00\n      add\n      0x00\n        /* \"opensea_test_flat.sol\":43495:43513  currSlot.addr = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":43560:43575  block.timestamp */\n      timestamp\n        /* \"opensea_test_flat.sol\":43527:43535  currSlot */\n      dup2\n        /* \"opensea_test_flat.sol\":43527:43550  currSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"opensea_test_flat.sol\":43527:43576  currSlot.startTimestamp = uint64(block.timestamp) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":43824:43843  uint256 nextTokenId */\n      0x00\n        /* \"opensea_test_flat.sol\":43856:43857  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":43846:43853  tokenId */\n      dup6\n        /* \"opensea_test_flat.sol\":43846:43857  tokenId + 1 */\n      add\n        /* \"opensea_test_flat.sol\":43824:43857  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":43871:43902  TokenOwnership storage nextSlot */\n      0x00\n        /* \"opensea_test_flat.sol\":43905:43916  _ownerships */\n      0x04\n        /* \"opensea_test_flat.sol\":43905:43929  _ownerships[nextTokenId] */\n      0x00\n        /* \"opensea_test_flat.sol\":43917:43928  nextTokenId */\n      dup4\n        /* \"opensea_test_flat.sol\":43905:43929  _ownerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":43871:43929  TokenOwnership storage nextSlot = _ownerships[nextTokenId] */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":43972:43973  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":43947:43974  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":43947:43955  nextSlot */\n      dup2\n        /* \"opensea_test_flat.sol\":43947:43960  nextSlot.addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":43947:43974  nextSlot.addr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"opensea_test_flat.sol\":43943:44320  if (nextSlot.addr == address(0)) {... */\n      tag_191\n      jumpi\n        /* \"opensea_test_flat.sol\":44154:44167  _currentIndex */\n      sload(0x00)\n        /* \"opensea_test_flat.sol\":44139:44150  nextTokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":44139:44167  nextTokenId != _currentIndex */\n      eq\n        /* \"opensea_test_flat.sol\":44135:44306  if (nextTokenId != _currentIndex) {... */\n      tag_192\n      jumpi\n        /* \"opensea_test_flat.sol\":44207:44211  from */\n      dup8\n        /* \"opensea_test_flat.sol\":44191:44199  nextSlot */\n      dup2\n        /* \"opensea_test_flat.sol\":44191:44204  nextSlot.addr */\n      0x00\n      add\n      0x00\n        /* \"opensea_test_flat.sol\":44191:44211  nextSlot.addr = from */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":44259:44272  prevOwnership */\n      dup5\n        /* \"opensea_test_flat.sol\":44259:44287  prevOwnership.startTimestamp */\n      0x20\n      add\n      mload\n        /* \"opensea_test_flat.sol\":44233:44241  nextSlot */\n      dup2\n        /* \"opensea_test_flat.sol\":44233:44256  nextSlot.startTimestamp */\n      0x00\n      add\n      0x14\n        /* \"opensea_test_flat.sol\":44233:44287  nextSlot.startTimestamp = prevOwnership.startTimestamp */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":44135:44306  if (nextTokenId != _currentIndex) {... */\n    tag_192:\n        /* \"opensea_test_flat.sol\":43943:44320  if (nextSlot.addr == address(0)) {... */\n    tag_191:\n        /* \"opensea_test_flat.sol\":43314:44330  unchecked {... */\n      pop\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":44364:44371  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":44360:44362  to */\n      dup5\n        /* \"opensea_test_flat.sol\":44345:44372  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":44354:44358  from */\n      dup7\n        /* \"opensea_test_flat.sol\":44345:44372  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"opensea_test_flat.sol\":44382:44424  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_193\n        /* \"opensea_test_flat.sol\":44403:44407  from */\n      dup6\n        /* \"opensea_test_flat.sol\":44409:44411  to */\n      dup6\n        /* \"opensea_test_flat.sol\":44413:44420  tokenId */\n      dup6\n        /* \"opensea_test_flat.sol\":44422:44423  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":44382:44402  _afterTokenTransfers */\n      tag_194\n        /* \"opensea_test_flat.sol\":44382:44424  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_193:\n        /* \"opensea_test_flat.sol\":42387:44431  {... */\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":42287:44431  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":3150:3246  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_120:\n        /* \"opensea_test_flat.sol\":3208:3215  uint256 */\n      0x00\n        /* \"opensea_test_flat.sol\":3238:3239  b */\n      dup2\n        /* \"opensea_test_flat.sol\":3234:3235  a */\n      dup4\n        /* \"opensea_test_flat.sol\":3234:3239  a - b */\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"opensea_test_flat.sol\":3227:3239  return a - b */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":3150:3246  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":3493:3589  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_123:\n        /* \"opensea_test_flat.sol\":3551:3558  uint256 */\n      0x00\n        /* \"opensea_test_flat.sol\":3581:3582  b */\n      dup2\n        /* \"opensea_test_flat.sol\":3577:3578  a */\n      dup4\n        /* \"opensea_test_flat.sol\":3577:3582  a * b */\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"opensea_test_flat.sol\":3570:3582  return a * b */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":3493:3589  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":2783:2879  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_125:\n        /* \"opensea_test_flat.sol\":2841:2848  uint256 */\n      0x00\n        /* \"opensea_test_flat.sol\":2871:2872  b */\n      dup2\n        /* \"opensea_test_flat.sol\":2867:2868  a */\n      dup4\n        /* \"opensea_test_flat.sol\":2867:2872  a + b */\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"opensea_test_flat.sol\":2860:2872  return a + b */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":2783:2879  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":34750:35836  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_130:\n        /* \"opensea_test_flat.sol\":34812:34833  TokenOwnership memory */\n      tag_204\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"opensea_test_flat.sol\":34845:34857  uint256 curr */\n      0x00\n        /* \"opensea_test_flat.sol\":34860:34867  tokenId */\n      dup3\n        /* \"opensea_test_flat.sol\":34845:34867  uint256 curr = tokenId */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":34925:34929  curr */\n      dup1\n        /* \"opensea_test_flat.sol\":34906:34921  _startTokenId() */\n      tag_207\n        /* \"opensea_test_flat.sol\":34906:34919  _startTokenId */\n      tag_114\n        /* \"opensea_test_flat.sol\":34906:34921  _startTokenId() */\n      jump\t// in\n    tag_207:\n        /* \"opensea_test_flat.sol\":34906:34929  _startTokenId() <= curr */\n      gt\n        /* \"opensea_test_flat.sol\":34902:35772  if (_startTokenId() <= curr) if (curr < _currentIndex) {... */\n      tag_208\n      jumpi\n        /* \"opensea_test_flat.sol\":34942:34955  _currentIndex */\n      sload(0x00)\n        /* \"opensea_test_flat.sol\":34935:34939  curr */\n      dup2\n        /* \"opensea_test_flat.sol\":34935:34955  curr < _currentIndex */\n      lt\n        /* \"opensea_test_flat.sol\":34931:35772  if (curr < _currentIndex) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"opensea_test_flat.sol\":34975:35006  TokenOwnership memory ownership */\n      0x00\n        /* \"opensea_test_flat.sol\":35009:35020  _ownerships */\n      0x04\n        /* \"opensea_test_flat.sol\":35009:35026  _ownerships[curr] */\n      0x00\n        /* \"opensea_test_flat.sol\":35021:35025  curr */\n      dup4\n        /* \"opensea_test_flat.sol\":35009:35026  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":34975:35026  TokenOwnership memory ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":35049:35058  ownership */\n      dup1\n        /* \"opensea_test_flat.sol\":35049:35065  ownership.burned */\n      0x40\n      add\n      mload\n        /* \"opensea_test_flat.sol\":35044:35758  if (!ownership.burned) {... */\n      tag_210\n      jumpi\n        /* \"opensea_test_flat.sol\":35119:35120  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":35093:35121  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":35093:35102  ownership */\n      dup2\n        /* \"opensea_test_flat.sol\":35093:35107  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"opensea_test_flat.sol\":35093:35121  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"opensea_test_flat.sol\":35089:35188  if (ownership.addr != address(0)) {... */\n      tag_211\n      jumpi\n        /* \"opensea_test_flat.sol\":35156:35165  ownership */\n      dup1\n        /* \"opensea_test_flat.sol\":35149:35165  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_206)\n        /* \"opensea_test_flat.sol\":35089:35188  if (ownership.addr != address(0)) {... */\n    tag_211:\n        /* \"opensea_test_flat.sol\":35485:35740  while (true) {... */\n    tag_212:\n        /* \"opensea_test_flat.sol\":35492:35496  true */\n      0x01\n        /* \"opensea_test_flat.sol\":35485:35740  while (true) {... */\n      iszero\n      tag_213\n      jumpi\n        /* \"opensea_test_flat.sol\":35524:35530  curr-- */\n      dup2\n      dup1\n      0x01\n      swap1\n      sub\n      swap3\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":35568:35579  _ownerships */\n      0x04\n        /* \"opensea_test_flat.sol\":35568:35585  _ownerships[curr] */\n      0x00\n        /* \"opensea_test_flat.sol\":35580:35584  curr */\n      dup4\n        /* \"opensea_test_flat.sol\":35568:35585  _ownerships[curr] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":35556:35585  ownership = _ownerships[curr] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":35641:35642  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":35615:35643  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"opensea_test_flat.sol\":35615:35624  ownership */\n      dup2\n        /* \"opensea_test_flat.sol\":35615:35629  ownership.addr */\n      0x00\n      add\n      mload\n        /* \"opensea_test_flat.sol\":35615:35643  ownership.addr != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"opensea_test_flat.sol\":35611:35718  if (ownership.addr != address(0)) {... */\n      tag_214\n      jumpi\n        /* \"opensea_test_flat.sol\":35682:35691  ownership */\n      dup1\n        /* \"opensea_test_flat.sol\":35675:35691  return ownership */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_206)\n        /* \"opensea_test_flat.sol\":35611:35718  if (ownership.addr != address(0)) {... */\n    tag_214:\n        /* \"opensea_test_flat.sol\":35485:35740  while (true) {... */\n      jump(tag_212)\n    tag_213:\n        /* \"opensea_test_flat.sol\":35044:35758  if (!ownership.burned) {... */\n    tag_210:\n        /* \"opensea_test_flat.sol\":34957:35772  {... */\n      pop\n        /* \"opensea_test_flat.sol\":34931:35772  if (curr < _currentIndex) {... */\n    tag_209:\n        /* \"opensea_test_flat.sol\":34902:35772  if (_startTokenId() <= curr) if (curr < _currentIndex) {... */\n    tag_208:\n        /* \"opensea_test_flat.sol\":35798:35829  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":34750:35836  function _ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {... */\n    tag_206:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":10928:11248  function isContract(address account) internal view returns (bool) {... */\n    tag_148:\n        /* \"opensea_test_flat.sol\":10988:10992  bool */\n      0x00\n        /* \"opensea_test_flat.sol\":11240:11241  0 */\n      dup1\n        /* \"opensea_test_flat.sol\":11218:11225  account */\n      dup3\n        /* \"opensea_test_flat.sol\":11218:11237  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"opensea_test_flat.sol\":11218:11241  account.code.length > 0 */\n      gt\n        /* \"opensea_test_flat.sol\":11211:11241  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":10928:11248  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":47982:48632  function _checkContractOnERC721Received(... */\n    tag_151:\n        /* \"opensea_test_flat.sol\":48140:48144  bool */\n      0x00\n        /* \"opensea_test_flat.sol\":48176:48178  to */\n      dup4\n        /* \"opensea_test_flat.sol\":48160:48196  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"opensea_test_flat.sol\":48197:48209  _msgSender() */\n      tag_217\n        /* \"opensea_test_flat.sol\":48197:48207  _msgSender */\n      tag_105\n        /* \"opensea_test_flat.sol\":48197:48209  _msgSender() */\n      jump\t// in\n    tag_217:\n        /* \"opensea_test_flat.sol\":48211:48215  from */\n      dup8\n        /* \"opensea_test_flat.sol\":48217:48224  tokenId */\n      dup7\n        /* \"opensea_test_flat.sol\":48226:48231  _data */\n      dup7\n        /* \"opensea_test_flat.sol\":48160:48232  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_220\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      0x01\n    tag_220:\n        /* \"opensea_test_flat.sol\":48156:48626  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_223\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_228\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_227)\n    tag_228:\n      0x60\n      swap2\n      pop\n    tag_227:\n      pop\n        /* \"opensea_test_flat.sol\":48408:48409  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":48391:48397  reason */\n      dup2\n        /* \"opensea_test_flat.sol\":48391:48404  reason.length */\n      mload\n        /* \"opensea_test_flat.sol\":48391:48409  reason.length == 0 */\n      sub\n        /* \"opensea_test_flat.sol\":48387:48616  if (reason.length == 0) {... */\n      tag_229\n      jumpi\n        /* \"opensea_test_flat.sol\":48436:48476  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"opensea_test_flat.sol\":48387:48616  if (reason.length == 0) {... */\n    tag_229:\n        /* \"opensea_test_flat.sol\":48576:48582  reason */\n      dup1\n        /* \"opensea_test_flat.sol\":48570:48583  mload(reason) */\n      mload\n        /* \"opensea_test_flat.sol\":48561:48567  reason */\n      dup2\n        /* \"opensea_test_flat.sol\":48557:48559  32 */\n      0x20\n        /* \"opensea_test_flat.sol\":48553:48568  add(32, reason) */\n      add\n        /* \"opensea_test_flat.sol\":48546:48584  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"opensea_test_flat.sol\":48156:48626  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_223:\n        /* \"opensea_test_flat.sol\":48288:48333  IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"opensea_test_flat.sol\":48278:48333  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"opensea_test_flat.sol\":48278:48284  retval */\n      dup2\n        /* \"opensea_test_flat.sol\":48278:48333  retval == IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"opensea_test_flat.sol\":48271:48333  return retval == IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":47982:48632  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":36962:37144  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_157:\n        /* \"opensea_test_flat.sol\":37013:37026  string memory */\n      0x60\n        /* \"opensea_test_flat.sol\":37038:37128  return 'https://gateway.pinata.cloud/ipfs/QmWuZ6PWJSWppM5Ah4C7tx6dhEGobkhknsLX34FB9WtnhM/' */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x51\n      dup2\n      mstore\n      0x20\n      add\n      data_873fd5f964b13e1038074dfa7bf985864a803be90f361e484b606b70d53e1173\n      0x51\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":36962:37144  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"opensea_test_flat.sol\":7161:7864  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_161:\n        /* \"opensea_test_flat.sol\":7217:7230  string memory */\n      0x60\n        /* \"opensea_test_flat.sol\":7443:7444  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":7434:7439  value */\n      dup3\n        /* \"opensea_test_flat.sol\":7434:7444  value == 0 */\n      sub\n        /* \"opensea_test_flat.sol\":7430:7481  if (value == 0) {... */\n      tag_234\n      jumpi\n        /* \"opensea_test_flat.sol\":7460:7470  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_233)\n        /* \"opensea_test_flat.sol\":7430:7481  if (value == 0) {... */\n    tag_234:\n        /* \"opensea_test_flat.sol\":7490:7502  uint256 temp */\n      0x00\n        /* \"opensea_test_flat.sol\":7505:7510  value */\n      dup3\n        /* \"opensea_test_flat.sol\":7490:7510  uint256 temp = value */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":7520:7534  uint256 digits */\n      0x00\n        /* \"opensea_test_flat.sol\":7544:7619  while (temp != 0) {... */\n    tag_235:\n        /* \"opensea_test_flat.sol\":7559:7560  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":7551:7555  temp */\n      dup3\n        /* \"opensea_test_flat.sol\":7551:7560  temp != 0 */\n      eq\n        /* \"opensea_test_flat.sol\":7544:7619  while (temp != 0) {... */\n      tag_236\n      jumpi\n        /* \"opensea_test_flat.sol\":7576:7584  digits++ */\n      dup1\n      dup1\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      swap2\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":7606:7608  10 */\n      0x0a\n        /* \"opensea_test_flat.sol\":7598:7608  temp /= 10 */\n      dup3\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      swap2\n      pop\n        /* \"opensea_test_flat.sol\":7544:7619  while (temp != 0) {... */\n      jump(tag_235)\n    tag_236:\n        /* \"opensea_test_flat.sol\":7628:7647  bytes memory buffer */\n      0x00\n        /* \"opensea_test_flat.sol\":7660:7666  digits */\n      dup2\n        /* \"opensea_test_flat.sol\":7650:7667  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_241\n      jumpi\n      tag_242\n      tag_243\n      jump\t// in\n    tag_242:\n    tag_241:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_244\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_244:\n      pop\n        /* \"opensea_test_flat.sol\":7628:7667  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":7677:7827  while (value != 0) {... */\n    tag_245:\n        /* \"opensea_test_flat.sol\":7693:7694  0 */\n      0x00\n        /* \"opensea_test_flat.sol\":7684:7689  value */\n      dup6\n        /* \"opensea_test_flat.sol\":7684:7694  value != 0 */\n      eq\n        /* \"opensea_test_flat.sol\":7677:7827  while (value != 0) {... */\n      tag_246\n      jumpi\n        /* \"opensea_test_flat.sol\":7720:7721  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":7710:7721  digits -= 1 */\n      dup3\n      tag_247\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_247:\n      swap2\n      pop\n        /* \"opensea_test_flat.sol\":7786:7788  10 */\n      0x0a\n        /* \"opensea_test_flat.sol\":7778:7783  value */\n      dup6\n        /* \"opensea_test_flat.sol\":7778:7788  value % 10 */\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"opensea_test_flat.sol\":7765:7767  48 */\n      0x30\n        /* \"opensea_test_flat.sol\":7765:7789  48 + uint256(value % 10) */\n      tag_250\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_250:\n        /* \"opensea_test_flat.sol\":7752:7791  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"opensea_test_flat.sol\":7735:7741  buffer */\n      dup2\n        /* \"opensea_test_flat.sol\":7742:7748  digits */\n      dup4\n        /* \"opensea_test_flat.sol\":7735:7749  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_251\n      jumpi\n      tag_252\n      tag_253\n      jump\t// in\n    tag_252:\n    tag_251:\n      0x20\n      add\n      add\n        /* \"opensea_test_flat.sol\":7735:7791  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"opensea_test_flat.sol\":7814:7816  10 */\n      0x0a\n        /* \"opensea_test_flat.sol\":7805:7816  value /= 10 */\n      dup6\n      tag_254\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_254:\n      swap5\n      pop\n        /* \"opensea_test_flat.sol\":7677:7827  while (value != 0) {... */\n      jump(tag_245)\n    tag_246:\n        /* \"opensea_test_flat.sol\":7850:7856  buffer */\n      dup1\n        /* \"opensea_test_flat.sol\":7836:7857  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"opensea_test_flat.sol\":7161:7864  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_233:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":31769:31993  function updateBlockScore(address user)private{... */\n    tag_175:\n        /* \"opensea_test_flat.sol\":31825:31838  uint256 Score */\n      0x00\n        /* \"opensea_test_flat.sol\":31841:31857  BlockScore(user) */\n      tag_256\n        /* \"opensea_test_flat.sol\":31852:31856  user */\n      dup3\n        /* \"opensea_test_flat.sol\":31841:31851  BlockScore */\n      tag_52\n        /* \"opensea_test_flat.sol\":31841:31857  BlockScore(user) */\n      jump\t// in\n    tag_256:\n        /* \"opensea_test_flat.sol\":31825:31857  uint256 Score = BlockScore(user) */\n      swap1\n      pop\n        /* \"opensea_test_flat.sol\":31895:31926  _BlockScore[user][2].add(Score) */\n      tag_257\n        /* \"opensea_test_flat.sol\":31920:31925  Score */\n      dup2\n        /* \"opensea_test_flat.sol\":31895:31906  _BlockScore */\n      0x08\n        /* \"opensea_test_flat.sol\":31895:31912  _BlockScore[user] */\n      0x00\n        /* \"opensea_test_flat.sol\":31907:31911  user */\n      dup6\n        /* \"opensea_test_flat.sol\":31895:31912  _BlockScore[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":31895:31915  _BlockScore[user][2] */\n      0x00\n        /* \"opensea_test_flat.sol\":31913:31914  2 */\n      0x02\n        /* \"opensea_test_flat.sol\":31895:31915  _BlockScore[user][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"opensea_test_flat.sol\":31895:31919  _BlockScore[user][2].add */\n      tag_125\n      swap1\n        /* \"opensea_test_flat.sol\":31895:31926  _BlockScore[user][2].add(Score) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_257:\n        /* \"opensea_test_flat.sol\":31874:31885  _BlockScore */\n      0x08\n        /* \"opensea_test_flat.sol\":31874:31891  _BlockScore[user] */\n      0x00\n        /* \"opensea_test_flat.sol\":31886:31890  user */\n      dup5\n        /* \"opensea_test_flat.sol\":31874:31891  _BlockScore[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":31874:31894  _BlockScore[user][2] */\n      0x00\n        /* \"opensea_test_flat.sol\":31892:31893  2 */\n      0x02\n        /* \"opensea_test_flat.sol\":31874:31894  _BlockScore[user][2] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":31874:31926  _BlockScore[user][2]=_BlockScore[user][2].add(Score) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":31966:31978  block.number */\n      number\n        /* \"opensea_test_flat.sol\":31943:31954  _BlockScore */\n      0x08\n        /* \"opensea_test_flat.sol\":31943:31960  _BlockScore[user] */\n      0x00\n        /* \"opensea_test_flat.sol\":31955:31959  user */\n      dup5\n        /* \"opensea_test_flat.sol\":31943:31960  _BlockScore[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":31943:31963  _BlockScore[user][1] */\n      0x00\n        /* \"opensea_test_flat.sol\":31961:31962  1 */\n      0x01\n        /* \"opensea_test_flat.sol\":31943:31963  _BlockScore[user][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"opensea_test_flat.sol\":31943:31978  _BlockScore[user][1] = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"opensea_test_flat.sol\":31815:31993  {... */\n      pop\n        /* \"opensea_test_flat.sol\":31769:31993  function updateBlockScore(address user)private{... */\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":49263:49417  function _beforeTokenTransfers(... */\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"opensea_test_flat.sol\":50058:50211  function _afterTokenTransfers(... */\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_205:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_260:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_261:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_262:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_263:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_264:\n        /* \"#utility.yul\":561:584   */\n      tag_307\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_263\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_308:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_265:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_310\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_264\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_23:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_313\n      tag_261\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":833:952   */\n    tag_312:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_314\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_265\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_266:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_267:\n        /* \"#utility.yul\":1268:1289   */\n      tag_317\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_266\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_26:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_319\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_267\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_268:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_269:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2105   */\n    tag_270:\n        /* \"#utility.yul\":1866:1867   */\n      0x00\n        /* \"#utility.yul\":1876:1989   */\n    tag_323:\n        /* \"#utility.yul\":1890:1896   */\n      dup4\n        /* \"#utility.yul\":1887:1888   */\n      dup2\n        /* \"#utility.yul\":1884:1897   */\n      lt\n        /* \"#utility.yul\":1876:1989   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":1975:1976   */\n      dup1\n        /* \"#utility.yul\":1970:1973   */\n      dup3\n        /* \"#utility.yul\":1966:1977   */\n      add\n        /* \"#utility.yul\":1960:1978   */\n      mload\n        /* \"#utility.yul\":1956:1957   */\n      dup2\n        /* \"#utility.yul\":1951:1954   */\n      dup5\n        /* \"#utility.yul\":1947:1958   */\n      add\n        /* \"#utility.yul\":1940:1979   */\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1909:1910   */\n      dup2\n        /* \"#utility.yul\":1905:1915   */\n      add\n        /* \"#utility.yul\":1900:1915   */\n      swap1\n      pop\n        /* \"#utility.yul\":1876:1989   */\n      jump(tag_323)\n    tag_325:\n        /* \"#utility.yul\":2007:2013   */\n      dup4\n        /* \"#utility.yul\":2004:2005   */\n      dup2\n        /* \"#utility.yul\":2001:2014   */\n      gt\n        /* \"#utility.yul\":1998:2099   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2078:2084   */\n      dup5\n        /* \"#utility.yul\":2073:2076   */\n      dup5\n        /* \"#utility.yul\":2069:2085   */\n      add\n        /* \"#utility.yul\":2062:2089   */\n      mstore\n        /* \"#utility.yul\":1998:2099   */\n    tag_326:\n        /* \"#utility.yul\":1847:2105   */\n      pop\n        /* \"#utility.yul\":1798:2105   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2111:2213   */\n    tag_271:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2203:2205   */\n      0x1f\n        /* \"#utility.yul\":2199:2206   */\n      not\n        /* \"#utility.yul\":2194:2196   */\n      0x1f\n        /* \"#utility.yul\":2187:2192   */\n      dup4\n        /* \"#utility.yul\":2183:2197   */\n      add\n        /* \"#utility.yul\":2179:2207   */\n      and\n        /* \"#utility.yul\":2169:2207   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2583   */\n    tag_272:\n        /* \"#utility.yul\":2307:2310   */\n      0x00\n        /* \"#utility.yul\":2335:2374   */\n      tag_329\n        /* \"#utility.yul\":2368:2373   */\n      dup3\n        /* \"#utility.yul\":2335:2374   */\n      tag_268\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2390:2461   */\n      tag_330\n        /* \"#utility.yul\":2454:2460   */\n      dup2\n        /* \"#utility.yul\":2449:2452   */\n      dup6\n        /* \"#utility.yul\":2390:2461   */\n      tag_269\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2383:2461   */\n      swap4\n      pop\n        /* \"#utility.yul\":2470:2522   */\n      tag_331\n        /* \"#utility.yul\":2515:2521   */\n      dup2\n        /* \"#utility.yul\":2510:2513   */\n      dup6\n        /* \"#utility.yul\":2503:2507   */\n      0x20\n        /* \"#utility.yul\":2496:2501   */\n      dup7\n        /* \"#utility.yul\":2492:2508   */\n      add\n        /* \"#utility.yul\":2470:2522   */\n      tag_270\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2547:2576   */\n      tag_332\n        /* \"#utility.yul\":2569:2575   */\n      dup2\n        /* \"#utility.yul\":2547:2576   */\n      tag_271\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2542:2545   */\n      dup5\n        /* \"#utility.yul\":2538:2577   */\n      add\n        /* \"#utility.yul\":2531:2577   */\n      swap2\n      pop\n        /* \"#utility.yul\":2311:2583   */\n      pop\n        /* \"#utility.yul\":2219:2583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:2902   */\n    tag_30:\n        /* \"#utility.yul\":2702:2706   */\n      0x00\n        /* \"#utility.yul\":2740:2742   */\n      0x20\n        /* \"#utility.yul\":2729:2738   */\n      dup3\n        /* \"#utility.yul\":2725:2743   */\n      add\n        /* \"#utility.yul\":2717:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2789:2798   */\n      dup2\n        /* \"#utility.yul\":2783:2787   */\n      dup2\n        /* \"#utility.yul\":2779:2799   */\n      sub\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2753:2800   */\n      mstore\n        /* \"#utility.yul\":2817:2895   */\n      tag_334\n        /* \"#utility.yul\":2890:2894   */\n      dup2\n        /* \"#utility.yul\":2881:2887   */\n      dup5\n        /* \"#utility.yul\":2817:2895   */\n      tag_272\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2809:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2589:2902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2908:2985   */\n    tag_273:\n        /* \"#utility.yul\":2945:2952   */\n      0x00\n        /* \"#utility.yul\":2974:2979   */\n      dup2\n        /* \"#utility.yul\":2963:2979   */\n      swap1\n      pop\n        /* \"#utility.yul\":2908:2985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2991:3113   */\n    tag_274:\n        /* \"#utility.yul\":3064:3088   */\n      tag_337\n        /* \"#utility.yul\":3082:3087   */\n      dup2\n        /* \"#utility.yul\":3064:3088   */\n      tag_273\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3057:3062   */\n      dup2\n        /* \"#utility.yul\":3054:3089   */\n      eq\n        /* \"#utility.yul\":3044:3107   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":3103:3104   */\n      0x00\n        /* \"#utility.yul\":3100:3101   */\n      dup1\n        /* \"#utility.yul\":3093:3105   */\n      revert\n        /* \"#utility.yul\":3044:3107   */\n    tag_338:\n        /* \"#utility.yul\":2991:3113   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3258   */\n    tag_275:\n        /* \"#utility.yul\":3165:3170   */\n      0x00\n        /* \"#utility.yul\":3203:3209   */\n      dup2\n        /* \"#utility.yul\":3190:3210   */\n      calldataload\n        /* \"#utility.yul\":3181:3210   */\n      swap1\n      pop\n        /* \"#utility.yul\":3219:3252   */\n      tag_340\n        /* \"#utility.yul\":3246:3251   */\n      dup2\n        /* \"#utility.yul\":3219:3252   */\n      tag_274\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3119:3258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3593   */\n    tag_33:\n        /* \"#utility.yul\":3323:3329   */\n      0x00\n        /* \"#utility.yul\":3372:3374   */\n      0x20\n        /* \"#utility.yul\":3360:3369   */\n      dup3\n        /* \"#utility.yul\":3351:3358   */\n      dup5\n        /* \"#utility.yul\":3347:3370   */\n      sub\n        /* \"#utility.yul\":3343:3375   */\n      slt\n        /* \"#utility.yul\":3340:3459   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":3378:3457   */\n      tag_343\n      tag_261\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3340:3459   */\n    tag_342:\n        /* \"#utility.yul\":3498:3499   */\n      0x00\n        /* \"#utility.yul\":3523:3576   */\n      tag_344\n        /* \"#utility.yul\":3568:3575   */\n      dup5\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3548:3557   */\n      dup6\n        /* \"#utility.yul\":3544:3566   */\n      add\n        /* \"#utility.yul\":3523:3576   */\n      tag_275\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3513:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3469:3586   */\n      pop\n        /* \"#utility.yul\":3264:3593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3599:3725   */\n    tag_276:\n        /* \"#utility.yul\":3636:3643   */\n      0x00\n        /* \"#utility.yul\":3676:3718   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3669:3674   */\n      dup3\n        /* \"#utility.yul\":3665:3719   */\n      and\n        /* \"#utility.yul\":3654:3719   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3731:3827   */\n    tag_277:\n        /* \"#utility.yul\":3768:3775   */\n      0x00\n        /* \"#utility.yul\":3797:3821   */\n      tag_347\n        /* \"#utility.yul\":3815:3820   */\n      dup3\n        /* \"#utility.yul\":3797:3821   */\n      tag_276\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3786:3821   */\n      swap1\n      pop\n        /* \"#utility.yul\":3731:3827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3833:3951   */\n    tag_278:\n        /* \"#utility.yul\":3920:3944   */\n      tag_349\n        /* \"#utility.yul\":3938:3943   */\n      dup2\n        /* \"#utility.yul\":3920:3944   */\n      tag_277\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3915:3918   */\n      dup3\n        /* \"#utility.yul\":3908:3945   */\n      mstore\n        /* \"#utility.yul\":3833:3951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3957:4179   */\n    tag_36:\n        /* \"#utility.yul\":4050:4054   */\n      0x00\n        /* \"#utility.yul\":4088:4090   */\n      0x20\n        /* \"#utility.yul\":4077:4086   */\n      dup3\n        /* \"#utility.yul\":4073:4091   */\n      add\n        /* \"#utility.yul\":4065:4091   */\n      swap1\n      pop\n        /* \"#utility.yul\":4101:4172   */\n      tag_351\n        /* \"#utility.yul\":4169:4170   */\n      0x00\n        /* \"#utility.yul\":4158:4167   */\n      dup4\n        /* \"#utility.yul\":4154:4171   */\n      add\n        /* \"#utility.yul\":4145:4151   */\n      dup5\n        /* \"#utility.yul\":4101:4172   */\n      tag_278\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":3957:4179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4185:4307   */\n    tag_279:\n        /* \"#utility.yul\":4258:4282   */\n      tag_353\n        /* \"#utility.yul\":4276:4281   */\n      dup2\n        /* \"#utility.yul\":4258:4282   */\n      tag_277\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4251:4256   */\n      dup2\n        /* \"#utility.yul\":4248:4283   */\n      eq\n        /* \"#utility.yul\":4238:4301   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4294:4295   */\n      dup1\n        /* \"#utility.yul\":4287:4299   */\n      revert\n        /* \"#utility.yul\":4238:4301   */\n    tag_354:\n        /* \"#utility.yul\":4185:4307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4313:4452   */\n    tag_280:\n        /* \"#utility.yul\":4359:4364   */\n      0x00\n        /* \"#utility.yul\":4397:4403   */\n      dup2\n        /* \"#utility.yul\":4384:4404   */\n      calldataload\n        /* \"#utility.yul\":4375:4404   */\n      swap1\n      pop\n        /* \"#utility.yul\":4413:4446   */\n      tag_356\n        /* \"#utility.yul\":4440:4445   */\n      dup2\n        /* \"#utility.yul\":4413:4446   */\n      tag_279\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4313:4452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4458:4932   */\n    tag_39:\n        /* \"#utility.yul\":4526:4532   */\n      0x00\n        /* \"#utility.yul\":4534:4540   */\n      dup1\n        /* \"#utility.yul\":4583:4585   */\n      0x40\n        /* \"#utility.yul\":4571:4580   */\n      dup4\n        /* \"#utility.yul\":4562:4569   */\n      dup6\n        /* \"#utility.yul\":4558:4581   */\n      sub\n        /* \"#utility.yul\":4554:4586   */\n      slt\n        /* \"#utility.yul\":4551:4670   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":4589:4668   */\n      tag_359\n      tag_261\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4551:4670   */\n    tag_358:\n        /* \"#utility.yul\":4709:4710   */\n      0x00\n        /* \"#utility.yul\":4734:4787   */\n      tag_360\n        /* \"#utility.yul\":4779:4786   */\n      dup6\n        /* \"#utility.yul\":4770:4776   */\n      dup3\n        /* \"#utility.yul\":4759:4768   */\n      dup7\n        /* \"#utility.yul\":4755:4777   */\n      add\n        /* \"#utility.yul\":4734:4787   */\n      tag_280\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4724:4787   */\n      swap3\n      pop\n        /* \"#utility.yul\":4680:4797   */\n      pop\n        /* \"#utility.yul\":4836:4838   */\n      0x20\n        /* \"#utility.yul\":4862:4915   */\n      tag_361\n        /* \"#utility.yul\":4907:4914   */\n      dup6\n        /* \"#utility.yul\":4898:4904   */\n      dup3\n        /* \"#utility.yul\":4887:4896   */\n      dup7\n        /* \"#utility.yul\":4883:4905   */\n      add\n        /* \"#utility.yul\":4862:4915   */\n      tag_275\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":4852:4915   */\n      swap2\n      pop\n        /* \"#utility.yul\":4807:4925   */\n      pop\n        /* \"#utility.yul\":4458:4932   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5056   */\n    tag_281:\n        /* \"#utility.yul\":5025:5049   */\n      tag_363\n        /* \"#utility.yul\":5043:5048   */\n      dup2\n        /* \"#utility.yul\":5025:5049   */\n      tag_273\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":5020:5023   */\n      dup3\n        /* \"#utility.yul\":5013:5050   */\n      mstore\n        /* \"#utility.yul\":4938:5056   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5062:5284   */\n    tag_44:\n        /* \"#utility.yul\":5155:5159   */\n      0x00\n        /* \"#utility.yul\":5193:5195   */\n      0x20\n        /* \"#utility.yul\":5182:5191   */\n      dup3\n        /* \"#utility.yul\":5178:5196   */\n      add\n        /* \"#utility.yul\":5170:5196   */\n      swap1\n      pop\n        /* \"#utility.yul\":5206:5277   */\n      tag_365\n        /* \"#utility.yul\":5274:5275   */\n      0x00\n        /* \"#utility.yul\":5263:5272   */\n      dup4\n        /* \"#utility.yul\":5259:5276   */\n      add\n        /* \"#utility.yul\":5250:5256   */\n      dup5\n        /* \"#utility.yul\":5206:5277   */\n      tag_281\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5062:5284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5290:5909   */\n    tag_47:\n        /* \"#utility.yul\":5367:5373   */\n      0x00\n        /* \"#utility.yul\":5375:5381   */\n      dup1\n        /* \"#utility.yul\":5383:5389   */\n      0x00\n        /* \"#utility.yul\":5432:5434   */\n      0x60\n        /* \"#utility.yul\":5420:5429   */\n      dup5\n        /* \"#utility.yul\":5411:5418   */\n      dup7\n        /* \"#utility.yul\":5407:5430   */\n      sub\n        /* \"#utility.yul\":5403:5435   */\n      slt\n        /* \"#utility.yul\":5400:5519   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":5438:5517   */\n      tag_368\n      tag_261\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5400:5519   */\n    tag_367:\n        /* \"#utility.yul\":5558:5559   */\n      0x00\n        /* \"#utility.yul\":5583:5636   */\n      tag_369\n        /* \"#utility.yul\":5628:5635   */\n      dup7\n        /* \"#utility.yul\":5619:5625   */\n      dup3\n        /* \"#utility.yul\":5608:5617   */\n      dup8\n        /* \"#utility.yul\":5604:5626   */\n      add\n        /* \"#utility.yul\":5583:5636   */\n      tag_280\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":5573:5636   */\n      swap4\n      pop\n        /* \"#utility.yul\":5529:5646   */\n      pop\n        /* \"#utility.yul\":5685:5687   */\n      0x20\n        /* \"#utility.yul\":5711:5764   */\n      tag_370\n        /* \"#utility.yul\":5756:5763   */\n      dup7\n        /* \"#utility.yul\":5747:5753   */\n      dup3\n        /* \"#utility.yul\":5736:5745   */\n      dup8\n        /* \"#utility.yul\":5732:5754   */\n      add\n        /* \"#utility.yul\":5711:5764   */\n      tag_280\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5701:5764   */\n      swap3\n      pop\n        /* \"#utility.yul\":5656:5774   */\n      pop\n        /* \"#utility.yul\":5813:5815   */\n      0x40\n        /* \"#utility.yul\":5839:5892   */\n      tag_371\n        /* \"#utility.yul\":5884:5891   */\n      dup7\n        /* \"#utility.yul\":5875:5881   */\n      dup3\n        /* \"#utility.yul\":5864:5873   */\n      dup8\n        /* \"#utility.yul\":5860:5882   */\n      add\n        /* \"#utility.yul\":5839:5892   */\n      tag_275\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":5829:5892   */\n      swap2\n      pop\n        /* \"#utility.yul\":5784:5902   */\n      pop\n        /* \"#utility.yul\":5290:5909   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5915:6244   */\n    tag_51:\n        /* \"#utility.yul\":5974:5980   */\n      0x00\n        /* \"#utility.yul\":6023:6025   */\n      0x20\n        /* \"#utility.yul\":6011:6020   */\n      dup3\n        /* \"#utility.yul\":6002:6009   */\n      dup5\n        /* \"#utility.yul\":5998:6021   */\n      sub\n        /* \"#utility.yul\":5994:6026   */\n      slt\n        /* \"#utility.yul\":5991:6110   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":6029:6108   */\n      tag_374\n      tag_261\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":5991:6110   */\n    tag_373:\n        /* \"#utility.yul\":6149:6150   */\n      0x00\n        /* \"#utility.yul\":6174:6227   */\n      tag_375\n        /* \"#utility.yul\":6219:6226   */\n      dup5\n        /* \"#utility.yul\":6210:6216   */\n      dup3\n        /* \"#utility.yul\":6199:6208   */\n      dup6\n        /* \"#utility.yul\":6195:6217   */\n      add\n        /* \"#utility.yul\":6174:6227   */\n      tag_280\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6164:6227   */\n      swap2\n      pop\n        /* \"#utility.yul\":6120:6237   */\n      pop\n        /* \"#utility.yul\":5915:6244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6250:6366   */\n    tag_282:\n        /* \"#utility.yul\":6320:6341   */\n      tag_377\n        /* \"#utility.yul\":6335:6340   */\n      dup2\n        /* \"#utility.yul\":6320:6341   */\n      tag_266\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6313:6318   */\n      dup2\n        /* \"#utility.yul\":6310:6342   */\n      eq\n        /* \"#utility.yul\":6300:6360   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":6356:6357   */\n      0x00\n        /* \"#utility.yul\":6353:6354   */\n      dup1\n        /* \"#utility.yul\":6346:6358   */\n      revert\n        /* \"#utility.yul\":6300:6360   */\n    tag_378:\n        /* \"#utility.yul\":6250:6366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6372:6505   */\n    tag_283:\n        /* \"#utility.yul\":6415:6420   */\n      0x00\n        /* \"#utility.yul\":6453:6459   */\n      dup2\n        /* \"#utility.yul\":6440:6460   */\n      calldataload\n        /* \"#utility.yul\":6431:6460   */\n      swap1\n      pop\n        /* \"#utility.yul\":6469:6499   */\n      tag_380\n        /* \"#utility.yul\":6493:6498   */\n      dup2\n        /* \"#utility.yul\":6469:6499   */\n      tag_282\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":6372:6505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6511:6979   */\n    tag_70:\n        /* \"#utility.yul\":6576:6582   */\n      0x00\n        /* \"#utility.yul\":6584:6590   */\n      dup1\n        /* \"#utility.yul\":6633:6635   */\n      0x40\n        /* \"#utility.yul\":6621:6630   */\n      dup4\n        /* \"#utility.yul\":6612:6619   */\n      dup6\n        /* \"#utility.yul\":6608:6631   */\n      sub\n        /* \"#utility.yul\":6604:6636   */\n      slt\n        /* \"#utility.yul\":6601:6720   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":6639:6718   */\n      tag_383\n      tag_261\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":6601:6720   */\n    tag_382:\n        /* \"#utility.yul\":6759:6760   */\n      0x00\n        /* \"#utility.yul\":6784:6837   */\n      tag_384\n        /* \"#utility.yul\":6829:6836   */\n      dup6\n        /* \"#utility.yul\":6820:6826   */\n      dup3\n        /* \"#utility.yul\":6809:6818   */\n      dup7\n        /* \"#utility.yul\":6805:6827   */\n      add\n        /* \"#utility.yul\":6784:6837   */\n      tag_280\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":6774:6837   */\n      swap3\n      pop\n        /* \"#utility.yul\":6730:6847   */\n      pop\n        /* \"#utility.yul\":6886:6888   */\n      0x20\n        /* \"#utility.yul\":6912:6962   */\n      tag_385\n        /* \"#utility.yul\":6954:6961   */\n      dup6\n        /* \"#utility.yul\":6945:6951   */\n      dup3\n        /* \"#utility.yul\":6934:6943   */\n      dup7\n        /* \"#utility.yul\":6930:6952   */\n      add\n        /* \"#utility.yul\":6912:6962   */\n      tag_283\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":6902:6962   */\n      swap2\n      pop\n        /* \"#utility.yul\":6857:6972   */\n      pop\n        /* \"#utility.yul\":6511:6979   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6985:7102   */\n    tag_284:\n        /* \"#utility.yul\":7094:7095   */\n      0x00\n        /* \"#utility.yul\":7091:7092   */\n      dup1\n        /* \"#utility.yul\":7084:7096   */\n      revert\n        /* \"#utility.yul\":7108:7225   */\n    tag_285:\n        /* \"#utility.yul\":7217:7218   */\n      0x00\n        /* \"#utility.yul\":7214:7215   */\n      dup1\n        /* \"#utility.yul\":7207:7219   */\n      revert\n        /* \"#utility.yul\":7231:7411   */\n    tag_243:\n        /* \"#utility.yul\":7279:7356   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7269:7357   */\n      mstore\n        /* \"#utility.yul\":7376:7380   */\n      0x41\n        /* \"#utility.yul\":7373:7374   */\n      0x04\n        /* \"#utility.yul\":7366:7381   */\n      mstore\n        /* \"#utility.yul\":7400:7404   */\n      0x24\n        /* \"#utility.yul\":7397:7398   */\n      0x00\n        /* \"#utility.yul\":7390:7405   */\n      revert\n        /* \"#utility.yul\":7417:7698   */\n    tag_286:\n        /* \"#utility.yul\":7500:7527   */\n      tag_390\n        /* \"#utility.yul\":7522:7526   */\n      dup3\n        /* \"#utility.yul\":7500:7527   */\n      tag_271\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":7492:7498   */\n      dup2\n        /* \"#utility.yul\":7488:7528   */\n      add\n        /* \"#utility.yul\":7630:7636   */\n      dup2\n        /* \"#utility.yul\":7618:7628   */\n      dup2\n        /* \"#utility.yul\":7615:7637   */\n      lt\n        /* \"#utility.yul\":7594:7612   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7582:7592   */\n      dup3\n        /* \"#utility.yul\":7579:7613   */\n      gt\n        /* \"#utility.yul\":7576:7638   */\n      or\n        /* \"#utility.yul\":7573:7661   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":7641:7659   */\n      tag_392\n      tag_243\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":7573:7661   */\n    tag_391:\n        /* \"#utility.yul\":7681:7691   */\n      dup1\n        /* \"#utility.yul\":7677:7679   */\n      0x40\n        /* \"#utility.yul\":7670:7692   */\n      mstore\n        /* \"#utility.yul\":7460:7698   */\n      pop\n        /* \"#utility.yul\":7417:7698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7704:7833   */\n    tag_287:\n        /* \"#utility.yul\":7738:7744   */\n      0x00\n        /* \"#utility.yul\":7765:7785   */\n      tag_394\n      tag_260\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":7755:7785   */\n      swap1\n      pop\n        /* \"#utility.yul\":7794:7827   */\n      tag_395\n        /* \"#utility.yul\":7822:7826   */\n      dup3\n        /* \"#utility.yul\":7814:7820   */\n      dup3\n        /* \"#utility.yul\":7794:7827   */\n      tag_286\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":7704:7833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7839:8146   */\n    tag_288:\n        /* \"#utility.yul\":7900:7904   */\n      0x00\n        /* \"#utility.yul\":7990:8008   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7982:7988   */\n      dup3\n        /* \"#utility.yul\":7979:8009   */\n      gt\n        /* \"#utility.yul\":7976:8032   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":8012:8030   */\n      tag_398\n      tag_243\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":7976:8032   */\n    tag_397:\n        /* \"#utility.yul\":8050:8079   */\n      tag_399\n        /* \"#utility.yul\":8072:8078   */\n      dup3\n        /* \"#utility.yul\":8050:8079   */\n      tag_271\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":8042:8079   */\n      swap1\n      pop\n        /* \"#utility.yul\":8134:8138   */\n      0x20\n        /* \"#utility.yul\":8128:8132   */\n      dup2\n        /* \"#utility.yul\":8124:8139   */\n      add\n        /* \"#utility.yul\":8116:8139   */\n      swap1\n      pop\n        /* \"#utility.yul\":7839:8146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8152:8306   */\n    tag_289:\n        /* \"#utility.yul\":8236:8242   */\n      dup3\n        /* \"#utility.yul\":8231:8234   */\n      dup2\n        /* \"#utility.yul\":8226:8229   */\n      dup4\n        /* \"#utility.yul\":8213:8243   */\n      calldatacopy\n        /* \"#utility.yul\":8298:8299   */\n      0x00\n        /* \"#utility.yul\":8289:8295   */\n      dup4\n        /* \"#utility.yul\":8284:8287   */\n      dup4\n        /* \"#utility.yul\":8280:8296   */\n      add\n        /* \"#utility.yul\":8273:8300   */\n      mstore\n        /* \"#utility.yul\":8152:8306   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8312:8722   */\n    tag_290:\n        /* \"#utility.yul\":8389:8394   */\n      0x00\n        /* \"#utility.yul\":8414:8479   */\n      tag_402\n        /* \"#utility.yul\":8430:8478   */\n      tag_403\n        /* \"#utility.yul\":8471:8477   */\n      dup5\n        /* \"#utility.yul\":8430:8478   */\n      tag_288\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":8414:8479   */\n      tag_287\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":8405:8479   */\n      swap1\n      pop\n        /* \"#utility.yul\":8502:8508   */\n      dup3\n        /* \"#utility.yul\":8495:8500   */\n      dup2\n        /* \"#utility.yul\":8488:8509   */\n      mstore\n        /* \"#utility.yul\":8540:8544   */\n      0x20\n        /* \"#utility.yul\":8533:8538   */\n      dup2\n        /* \"#utility.yul\":8529:8545   */\n      add\n        /* \"#utility.yul\":8578:8581   */\n      dup5\n        /* \"#utility.yul\":8569:8575   */\n      dup5\n        /* \"#utility.yul\":8564:8567   */\n      dup5\n        /* \"#utility.yul\":8560:8576   */\n      add\n        /* \"#utility.yul\":8557:8582   */\n      gt\n        /* \"#utility.yul\":8554:8666   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":8585:8664   */\n      tag_405\n      tag_285\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":8554:8666   */\n    tag_404:\n        /* \"#utility.yul\":8675:8716   */\n      tag_406\n        /* \"#utility.yul\":8709:8715   */\n      dup5\n        /* \"#utility.yul\":8704:8707   */\n      dup3\n        /* \"#utility.yul\":8699:8702   */\n      dup6\n        /* \"#utility.yul\":8675:8716   */\n      tag_289\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":8395:8722   */\n      pop\n        /* \"#utility.yul\":8312:8722   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8741:9079   */\n    tag_291:\n        /* \"#utility.yul\":8796:8801   */\n      0x00\n        /* \"#utility.yul\":8845:8848   */\n      dup3\n        /* \"#utility.yul\":8838:8842   */\n      0x1f\n        /* \"#utility.yul\":8830:8836   */\n      dup4\n        /* \"#utility.yul\":8826:8843   */\n      add\n        /* \"#utility.yul\":8822:8849   */\n      slt\n        /* \"#utility.yul\":8812:8934   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":8853:8932   */\n      tag_409\n      tag_284\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":8812:8934   */\n    tag_408:\n        /* \"#utility.yul\":8970:8976   */\n      dup2\n        /* \"#utility.yul\":8957:8977   */\n      calldataload\n        /* \"#utility.yul\":8995:9073   */\n      tag_410\n        /* \"#utility.yul\":9069:9072   */\n      dup5\n        /* \"#utility.yul\":9061:9067   */\n      dup3\n        /* \"#utility.yul\":9054:9058   */\n      0x20\n        /* \"#utility.yul\":9046:9052   */\n      dup7\n        /* \"#utility.yul\":9042:9059   */\n      add\n        /* \"#utility.yul\":8995:9073   */\n      tag_290\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":8986:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":8802:9079   */\n      pop\n        /* \"#utility.yul\":8741:9079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9085:10028   */\n    tag_74:\n        /* \"#utility.yul\":9180:9186   */\n      0x00\n        /* \"#utility.yul\":9188:9194   */\n      dup1\n        /* \"#utility.yul\":9196:9202   */\n      0x00\n        /* \"#utility.yul\":9204:9210   */\n      dup1\n        /* \"#utility.yul\":9253:9256   */\n      0x80\n        /* \"#utility.yul\":9241:9250   */\n      dup6\n        /* \"#utility.yul\":9232:9239   */\n      dup8\n        /* \"#utility.yul\":9228:9251   */\n      sub\n        /* \"#utility.yul\":9224:9257   */\n      slt\n        /* \"#utility.yul\":9221:9341   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":9260:9339   */\n      tag_413\n      tag_261\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":9221:9341   */\n    tag_412:\n        /* \"#utility.yul\":9380:9381   */\n      0x00\n        /* \"#utility.yul\":9405:9458   */\n      tag_414\n        /* \"#utility.yul\":9450:9457   */\n      dup8\n        /* \"#utility.yul\":9441:9447   */\n      dup3\n        /* \"#utility.yul\":9430:9439   */\n      dup9\n        /* \"#utility.yul\":9426:9448   */\n      add\n        /* \"#utility.yul\":9405:9458   */\n      tag_280\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":9395:9458   */\n      swap5\n      pop\n        /* \"#utility.yul\":9351:9468   */\n      pop\n        /* \"#utility.yul\":9507:9509   */\n      0x20\n        /* \"#utility.yul\":9533:9586   */\n      tag_415\n        /* \"#utility.yul\":9578:9585   */\n      dup8\n        /* \"#utility.yul\":9569:9575   */\n      dup3\n        /* \"#utility.yul\":9558:9567   */\n      dup9\n        /* \"#utility.yul\":9554:9576   */\n      add\n        /* \"#utility.yul\":9533:9586   */\n      tag_280\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":9523:9586   */\n      swap4\n      pop\n        /* \"#utility.yul\":9478:9596   */\n      pop\n        /* \"#utility.yul\":9635:9637   */\n      0x40\n        /* \"#utility.yul\":9661:9714   */\n      tag_416\n        /* \"#utility.yul\":9706:9713   */\n      dup8\n        /* \"#utility.yul\":9697:9703   */\n      dup3\n        /* \"#utility.yul\":9686:9695   */\n      dup9\n        /* \"#utility.yul\":9682:9704   */\n      add\n        /* \"#utility.yul\":9661:9714   */\n      tag_275\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":9651:9714   */\n      swap3\n      pop\n        /* \"#utility.yul\":9606:9724   */\n      pop\n        /* \"#utility.yul\":9791:9793   */\n      0x60\n        /* \"#utility.yul\":9780:9789   */\n      dup6\n        /* \"#utility.yul\":9776:9794   */\n      add\n        /* \"#utility.yul\":9763:9795   */\n      calldataload\n        /* \"#utility.yul\":9822:9840   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9814:9820   */\n      dup2\n        /* \"#utility.yul\":9811:9841   */\n      gt\n        /* \"#utility.yul\":9808:9925   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":9844:9923   */\n      tag_418\n      tag_262\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":9808:9925   */\n    tag_417:\n        /* \"#utility.yul\":9949:10011   */\n      tag_419\n        /* \"#utility.yul\":10003:10010   */\n      dup8\n        /* \"#utility.yul\":9994:10000   */\n      dup3\n        /* \"#utility.yul\":9983:9992   */\n      dup9\n        /* \"#utility.yul\":9979:10001   */\n      add\n        /* \"#utility.yul\":9949:10011   */\n      tag_291\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":9939:10011   */\n      swap2\n      pop\n        /* \"#utility.yul\":9734:10021   */\n      pop\n        /* \"#utility.yul\":9085:10028   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10034:10508   */\n    tag_82:\n        /* \"#utility.yul\":10102:10108   */\n      0x00\n        /* \"#utility.yul\":10110:10116   */\n      dup1\n        /* \"#utility.yul\":10159:10161   */\n      0x40\n        /* \"#utility.yul\":10147:10156   */\n      dup4\n        /* \"#utility.yul\":10138:10145   */\n      dup6\n        /* \"#utility.yul\":10134:10157   */\n      sub\n        /* \"#utility.yul\":10130:10162   */\n      slt\n        /* \"#utility.yul\":10127:10246   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":10165:10244   */\n      tag_422\n      tag_261\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":10127:10246   */\n    tag_421:\n        /* \"#utility.yul\":10285:10286   */\n      0x00\n        /* \"#utility.yul\":10310:10363   */\n      tag_423\n        /* \"#utility.yul\":10355:10362   */\n      dup6\n        /* \"#utility.yul\":10346:10352   */\n      dup3\n        /* \"#utility.yul\":10335:10344   */\n      dup7\n        /* \"#utility.yul\":10331:10353   */\n      add\n        /* \"#utility.yul\":10310:10363   */\n      tag_280\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":10300:10363   */\n      swap3\n      pop\n        /* \"#utility.yul\":10256:10373   */\n      pop\n        /* \"#utility.yul\":10412:10414   */\n      0x20\n        /* \"#utility.yul\":10438:10491   */\n      tag_424\n        /* \"#utility.yul\":10483:10490   */\n      dup6\n        /* \"#utility.yul\":10474:10480   */\n      dup3\n        /* \"#utility.yul\":10463:10472   */\n      dup7\n        /* \"#utility.yul\":10459:10481   */\n      add\n        /* \"#utility.yul\":10438:10491   */\n      tag_280\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":10428:10491   */\n      swap2\n      pop\n        /* \"#utility.yul\":10383:10501   */\n      pop\n        /* \"#utility.yul\":10034:10508   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10514:10694   */\n    tag_292:\n        /* \"#utility.yul\":10562:10639   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10559:10560   */\n      0x00\n        /* \"#utility.yul\":10552:10640   */\n      mstore\n        /* \"#utility.yul\":10659:10663   */\n      0x22\n        /* \"#utility.yul\":10656:10657   */\n      0x04\n        /* \"#utility.yul\":10649:10664   */\n      mstore\n        /* \"#utility.yul\":10683:10687   */\n      0x24\n        /* \"#utility.yul\":10680:10681   */\n      0x00\n        /* \"#utility.yul\":10673:10688   */\n      revert\n        /* \"#utility.yul\":10700:11020   */\n    tag_92:\n        /* \"#utility.yul\":10744:10750   */\n      0x00\n        /* \"#utility.yul\":10781:10782   */\n      0x02\n        /* \"#utility.yul\":10775:10779   */\n      dup3\n        /* \"#utility.yul\":10771:10783   */\n      div\n        /* \"#utility.yul\":10761:10783   */\n      swap1\n      pop\n        /* \"#utility.yul\":10828:10829   */\n      0x01\n        /* \"#utility.yul\":10822:10826   */\n      dup3\n        /* \"#utility.yul\":10818:10830   */\n      and\n        /* \"#utility.yul\":10849:10867   */\n      dup1\n        /* \"#utility.yul\":10839:10920   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":10905:10909   */\n      0x7f\n        /* \"#utility.yul\":10897:10903   */\n      dup3\n        /* \"#utility.yul\":10893:10910   */\n      and\n        /* \"#utility.yul\":10883:10910   */\n      swap2\n      pop\n        /* \"#utility.yul\":10839:10920   */\n    tag_427:\n        /* \"#utility.yul\":10967:10969   */\n      0x20\n        /* \"#utility.yul\":10959:10965   */\n      dup3\n        /* \"#utility.yul\":10956:10970   */\n      lt\n        /* \"#utility.yul\":10936:10954   */\n      dup2\n        /* \"#utility.yul\":10933:10971   */\n      sub\n        /* \"#utility.yul\":10930:11014   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":10986:11004   */\n      tag_429\n      tag_292\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":10930:11014   */\n    tag_428:\n        /* \"#utility.yul\":10751:11020   */\n      pop\n        /* \"#utility.yul\":10700:11020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11026:11174   */\n    tag_293:\n        /* \"#utility.yul\":11128:11139   */\n      0x00\n        /* \"#utility.yul\":11165:11168   */\n      dup2\n        /* \"#utility.yul\":11150:11168   */\n      swap1\n      pop\n        /* \"#utility.yul\":11026:11174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11180:11557   */\n    tag_294:\n        /* \"#utility.yul\":11286:11289   */\n      0x00\n        /* \"#utility.yul\":11314:11353   */\n      tag_432\n        /* \"#utility.yul\":11347:11352   */\n      dup3\n        /* \"#utility.yul\":11314:11353   */\n      tag_268\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":11369:11458   */\n      tag_433\n        /* \"#utility.yul\":11451:11457   */\n      dup2\n        /* \"#utility.yul\":11446:11449   */\n      dup6\n        /* \"#utility.yul\":11369:11458   */\n      tag_293\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":11362:11458   */\n      swap4\n      pop\n        /* \"#utility.yul\":11467:11519   */\n      tag_434\n        /* \"#utility.yul\":11512:11518   */\n      dup2\n        /* \"#utility.yul\":11507:11510   */\n      dup6\n        /* \"#utility.yul\":11500:11504   */\n      0x20\n        /* \"#utility.yul\":11493:11498   */\n      dup7\n        /* \"#utility.yul\":11489:11505   */\n      add\n        /* \"#utility.yul\":11467:11519   */\n      tag_270\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":11544:11550   */\n      dup1\n        /* \"#utility.yul\":11539:11542   */\n      dup5\n        /* \"#utility.yul\":11535:11551   */\n      add\n        /* \"#utility.yul\":11528:11551   */\n      swap2\n      pop\n        /* \"#utility.yul\":11290:11557   */\n      pop\n        /* \"#utility.yul\":11180:11557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11563:11998   */\n    tag_163:\n        /* \"#utility.yul\":11743:11746   */\n      0x00\n        /* \"#utility.yul\":11765:11860   */\n      tag_436\n        /* \"#utility.yul\":11856:11859   */\n      dup3\n        /* \"#utility.yul\":11847:11853   */\n      dup6\n        /* \"#utility.yul\":11765:11860   */\n      tag_294\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":11758:11860   */\n      swap2\n      pop\n        /* \"#utility.yul\":11877:11972   */\n      tag_437\n        /* \"#utility.yul\":11968:11971   */\n      dup3\n        /* \"#utility.yul\":11959:11965   */\n      dup5\n        /* \"#utility.yul\":11877:11972   */\n      tag_294\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":11870:11972   */\n      swap2\n      pop\n        /* \"#utility.yul\":11989:11992   */\n      dup2\n        /* \"#utility.yul\":11982:11992   */\n      swap1\n      pop\n        /* \"#utility.yul\":11563:11998   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12004:12184   */\n    tag_295:\n        /* \"#utility.yul\":12052:12129   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12049:12050   */\n      0x00\n        /* \"#utility.yul\":12042:12130   */\n      mstore\n        /* \"#utility.yul\":12149:12153   */\n      0x11\n        /* \"#utility.yul\":12146:12147   */\n      0x04\n        /* \"#utility.yul\":12139:12154   */\n      mstore\n        /* \"#utility.yul\":12173:12177   */\n      0x24\n        /* \"#utility.yul\":12170:12171   */\n      0x00\n        /* \"#utility.yul\":12163:12178   */\n      revert\n        /* \"#utility.yul\":12190:12381   */\n    tag_197:\n        /* \"#utility.yul\":12230:12234   */\n      0x00\n        /* \"#utility.yul\":12250:12270   */\n      tag_440\n        /* \"#utility.yul\":12268:12269   */\n      dup3\n        /* \"#utility.yul\":12250:12270   */\n      tag_273\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":12245:12270   */\n      swap2\n      pop\n        /* \"#utility.yul\":12284:12304   */\n      tag_441\n        /* \"#utility.yul\":12302:12303   */\n      dup4\n        /* \"#utility.yul\":12284:12304   */\n      tag_273\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":12279:12304   */\n      swap3\n      pop\n        /* \"#utility.yul\":12323:12324   */\n      dup3\n        /* \"#utility.yul\":12320:12321   */\n      dup3\n        /* \"#utility.yul\":12317:12325   */\n      lt\n        /* \"#utility.yul\":12314:12348   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":12328:12346   */\n      tag_443\n      tag_295\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":12314:12348   */\n    tag_442:\n        /* \"#utility.yul\":12373:12374   */\n      dup3\n        /* \"#utility.yul\":12370:12371   */\n      dup3\n        /* \"#utility.yul\":12366:12375   */\n      sub\n        /* \"#utility.yul\":12358:12375   */\n      swap1\n      pop\n        /* \"#utility.yul\":12190:12381   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12387:12735   */\n    tag_200:\n        /* \"#utility.yul\":12427:12434   */\n      0x00\n        /* \"#utility.yul\":12450:12470   */\n      tag_445\n        /* \"#utility.yul\":12468:12469   */\n      dup3\n        /* \"#utility.yul\":12450:12470   */\n      tag_273\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":12445:12470   */\n      swap2\n      pop\n        /* \"#utility.yul\":12484:12504   */\n      tag_446\n        /* \"#utility.yul\":12502:12503   */\n      dup4\n        /* \"#utility.yul\":12484:12504   */\n      tag_273\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":12479:12504   */\n      swap3\n      pop\n        /* \"#utility.yul\":12672:12673   */\n      dup2\n        /* \"#utility.yul\":12604:12670   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12600:12674   */\n      div\n        /* \"#utility.yul\":12597:12598   */\n      dup4\n        /* \"#utility.yul\":12594:12675   */\n      gt\n        /* \"#utility.yul\":12589:12590   */\n      dup3\n        /* \"#utility.yul\":12582:12591   */\n      iszero\n        /* \"#utility.yul\":12575:12592   */\n      iszero\n        /* \"#utility.yul\":12571:12676   */\n      and\n        /* \"#utility.yul\":12568:12699   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":12679:12697   */\n      tag_448\n      tag_295\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":12568:12699   */\n    tag_447:\n        /* \"#utility.yul\":12727:12728   */\n      dup3\n        /* \"#utility.yul\":12724:12725   */\n      dup3\n        /* \"#utility.yul\":12720:12729   */\n      mul\n        /* \"#utility.yul\":12709:12729   */\n      swap1\n      pop\n        /* \"#utility.yul\":12387:12735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12741:13046   */\n    tag_203:\n        /* \"#utility.yul\":12781:12784   */\n      0x00\n        /* \"#utility.yul\":12800:12820   */\n      tag_450\n        /* \"#utility.yul\":12818:12819   */\n      dup3\n        /* \"#utility.yul\":12800:12820   */\n      tag_273\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12795:12820   */\n      swap2\n      pop\n        /* \"#utility.yul\":12834:12854   */\n      tag_451\n        /* \"#utility.yul\":12852:12853   */\n      dup4\n        /* \"#utility.yul\":12834:12854   */\n      tag_273\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":12829:12854   */\n      swap3\n      pop\n        /* \"#utility.yul\":12988:12989   */\n      dup3\n        /* \"#utility.yul\":12920:12986   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12916:12990   */\n      sub\n        /* \"#utility.yul\":12913:12914   */\n      dup3\n        /* \"#utility.yul\":12910:12991   */\n      gt\n        /* \"#utility.yul\":12907:13014   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":12994:13012   */\n      tag_453\n      tag_295\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12907:13014   */\n    tag_452:\n        /* \"#utility.yul\":13038:13039   */\n      dup3\n        /* \"#utility.yul\":13035:13036   */\n      dup3\n        /* \"#utility.yul\":13031:13040   */\n      add\n        /* \"#utility.yul\":13024:13040   */\n      swap1\n      pop\n        /* \"#utility.yul\":12741:13046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13052:13150   */\n    tag_296:\n        /* \"#utility.yul\":13103:13109   */\n      0x00\n        /* \"#utility.yul\":13137:13142   */\n      dup2\n        /* \"#utility.yul\":13131:13143   */\n      mload\n        /* \"#utility.yul\":13121:13143   */\n      swap1\n      pop\n        /* \"#utility.yul\":13052:13150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13156:13324   */\n    tag_297:\n        /* \"#utility.yul\":13239:13250   */\n      0x00\n        /* \"#utility.yul\":13273:13279   */\n      dup3\n        /* \"#utility.yul\":13268:13271   */\n      dup3\n        /* \"#utility.yul\":13261:13280   */\n      mstore\n        /* \"#utility.yul\":13313:13317   */\n      0x20\n        /* \"#utility.yul\":13308:13311   */\n      dup3\n        /* \"#utility.yul\":13304:13318   */\n      add\n        /* \"#utility.yul\":13289:13318   */\n      swap1\n      pop\n        /* \"#utility.yul\":13156:13324   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13330:13690   */\n    tag_298:\n        /* \"#utility.yul\":13416:13419   */\n      0x00\n        /* \"#utility.yul\":13444:13482   */\n      tag_457\n        /* \"#utility.yul\":13476:13481   */\n      dup3\n        /* \"#utility.yul\":13444:13482   */\n      tag_296\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":13498:13568   */\n      tag_458\n        /* \"#utility.yul\":13561:13567   */\n      dup2\n        /* \"#utility.yul\":13556:13559   */\n      dup6\n        /* \"#utility.yul\":13498:13568   */\n      tag_297\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":13491:13568   */\n      swap4\n      pop\n        /* \"#utility.yul\":13577:13629   */\n      tag_459\n        /* \"#utility.yul\":13622:13628   */\n      dup2\n        /* \"#utility.yul\":13617:13620   */\n      dup6\n        /* \"#utility.yul\":13610:13614   */\n      0x20\n        /* \"#utility.yul\":13603:13608   */\n      dup7\n        /* \"#utility.yul\":13599:13615   */\n      add\n        /* \"#utility.yul\":13577:13629   */\n      tag_270\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13654:13683   */\n      tag_460\n        /* \"#utility.yul\":13676:13682   */\n      dup2\n        /* \"#utility.yul\":13654:13683   */\n      tag_271\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":13649:13652   */\n      dup5\n        /* \"#utility.yul\":13645:13684   */\n      add\n        /* \"#utility.yul\":13638:13684   */\n      swap2\n      pop\n        /* \"#utility.yul\":13420:13690   */\n      pop\n        /* \"#utility.yul\":13330:13690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13696:14336   */\n    tag_219:\n        /* \"#utility.yul\":13891:13895   */\n      0x00\n        /* \"#utility.yul\":13929:13932   */\n      0x80\n        /* \"#utility.yul\":13918:13927   */\n      dup3\n        /* \"#utility.yul\":13914:13933   */\n      add\n        /* \"#utility.yul\":13906:13933   */\n      swap1\n      pop\n        /* \"#utility.yul\":13943:14014   */\n      tag_462\n        /* \"#utility.yul\":14011:14012   */\n      0x00\n        /* \"#utility.yul\":14000:14009   */\n      dup4\n        /* \"#utility.yul\":13996:14013   */\n      add\n        /* \"#utility.yul\":13987:13993   */\n      dup8\n        /* \"#utility.yul\":13943:14014   */\n      tag_278\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":14024:14096   */\n      tag_463\n        /* \"#utility.yul\":14092:14094   */\n      0x20\n        /* \"#utility.yul\":14081:14090   */\n      dup4\n        /* \"#utility.yul\":14077:14095   */\n      add\n        /* \"#utility.yul\":14068:14074   */\n      dup7\n        /* \"#utility.yul\":14024:14096   */\n      tag_278\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":14106:14178   */\n      tag_464\n        /* \"#utility.yul\":14174:14176   */\n      0x40\n        /* \"#utility.yul\":14163:14172   */\n      dup4\n        /* \"#utility.yul\":14159:14177   */\n      add\n        /* \"#utility.yul\":14150:14156   */\n      dup6\n        /* \"#utility.yul\":14106:14178   */\n      tag_281\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":14225:14234   */\n      dup2\n        /* \"#utility.yul\":14219:14223   */\n      dup2\n        /* \"#utility.yul\":14215:14235   */\n      sub\n        /* \"#utility.yul\":14210:14212   */\n      0x60\n        /* \"#utility.yul\":14199:14208   */\n      dup4\n        /* \"#utility.yul\":14195:14213   */\n      add\n        /* \"#utility.yul\":14188:14236   */\n      mstore\n        /* \"#utility.yul\":14253:14329   */\n      tag_465\n        /* \"#utility.yul\":14324:14328   */\n      dup2\n        /* \"#utility.yul\":14315:14321   */\n      dup5\n        /* \"#utility.yul\":14253:14329   */\n      tag_298\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":14245:14329   */\n      swap1\n      pop\n        /* \"#utility.yul\":13696:14336   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14342:14483   */\n    tag_299:\n        /* \"#utility.yul\":14398:14403   */\n      0x00\n        /* \"#utility.yul\":14429:14435   */\n      dup2\n        /* \"#utility.yul\":14423:14436   */\n      mload\n        /* \"#utility.yul\":14414:14436   */\n      swap1\n      pop\n        /* \"#utility.yul\":14445:14477   */\n      tag_467\n        /* \"#utility.yul\":14471:14476   */\n      dup2\n        /* \"#utility.yul\":14445:14477   */\n      tag_264\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":14342:14483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14489:14838   */\n    tag_222:\n        /* \"#utility.yul\":14558:14564   */\n      0x00\n        /* \"#utility.yul\":14607:14609   */\n      0x20\n        /* \"#utility.yul\":14595:14604   */\n      dup3\n        /* \"#utility.yul\":14586:14593   */\n      dup5\n        /* \"#utility.yul\":14582:14605   */\n      sub\n        /* \"#utility.yul\":14578:14610   */\n      slt\n        /* \"#utility.yul\":14575:14694   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":14613:14692   */\n      tag_470\n      tag_261\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":14575:14694   */\n    tag_469:\n        /* \"#utility.yul\":14733:14734   */\n      0x00\n        /* \"#utility.yul\":14758:14821   */\n      tag_471\n        /* \"#utility.yul\":14813:14820   */\n      dup5\n        /* \"#utility.yul\":14804:14810   */\n      dup3\n        /* \"#utility.yul\":14793:14802   */\n      dup6\n        /* \"#utility.yul\":14789:14811   */\n      add\n        /* \"#utility.yul\":14758:14821   */\n      tag_299\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":14748:14821   */\n      swap2\n      pop\n        /* \"#utility.yul\":14704:14831   */\n      pop\n        /* \"#utility.yul\":14489:14838   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14844:15077   */\n    tag_238:\n        /* \"#utility.yul\":14883:14886   */\n      0x00\n        /* \"#utility.yul\":14906:14930   */\n      tag_473\n        /* \"#utility.yul\":14924:14929   */\n      dup3\n        /* \"#utility.yul\":14906:14930   */\n      tag_273\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":14897:14930   */\n      swap2\n      pop\n        /* \"#utility.yul\":14952:15018   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14945:14950   */\n      dup3\n        /* \"#utility.yul\":14942:15019   */\n      sub\n        /* \"#utility.yul\":14939:15042   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":15022:15040   */\n      tag_475\n      tag_295\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":14939:15042   */\n    tag_474:\n        /* \"#utility.yul\":15069:15070   */\n      0x01\n        /* \"#utility.yul\":15062:15067   */\n      dup3\n        /* \"#utility.yul\":15058:15071   */\n      add\n        /* \"#utility.yul\":15051:15071   */\n      swap1\n      pop\n        /* \"#utility.yul\":14844:15077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15083:15263   */\n    tag_300:\n        /* \"#utility.yul\":15131:15208   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15128:15129   */\n      0x00\n        /* \"#utility.yul\":15121:15209   */\n      mstore\n        /* \"#utility.yul\":15228:15232   */\n      0x12\n        /* \"#utility.yul\":15225:15226   */\n      0x04\n        /* \"#utility.yul\":15218:15233   */\n      mstore\n        /* \"#utility.yul\":15252:15256   */\n      0x24\n        /* \"#utility.yul\":15249:15250   */\n      0x00\n        /* \"#utility.yul\":15242:15257   */\n      revert\n        /* \"#utility.yul\":15269:15454   */\n    tag_240:\n        /* \"#utility.yul\":15309:15310   */\n      0x00\n        /* \"#utility.yul\":15326:15346   */\n      tag_478\n        /* \"#utility.yul\":15344:15345   */\n      dup3\n        /* \"#utility.yul\":15326:15346   */\n      tag_273\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":15321:15346   */\n      swap2\n      pop\n        /* \"#utility.yul\":15360:15380   */\n      tag_479\n        /* \"#utility.yul\":15378:15379   */\n      dup4\n        /* \"#utility.yul\":15360:15380   */\n      tag_273\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":15355:15380   */\n      swap3\n      pop\n        /* \"#utility.yul\":15399:15400   */\n      dup3\n        /* \"#utility.yul\":15389:15424   */\n      tag_480\n      jumpi\n        /* \"#utility.yul\":15404:15422   */\n      tag_481\n      tag_300\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":15389:15424   */\n    tag_480:\n        /* \"#utility.yul\":15446:15447   */\n      dup3\n        /* \"#utility.yul\":15443:15444   */\n      dup3\n        /* \"#utility.yul\":15439:15448   */\n      div\n        /* \"#utility.yul\":15434:15448   */\n      swap1\n      pop\n        /* \"#utility.yul\":15269:15454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15460:15636   */\n    tag_249:\n        /* \"#utility.yul\":15492:15493   */\n      0x00\n        /* \"#utility.yul\":15509:15529   */\n      tag_483\n        /* \"#utility.yul\":15527:15528   */\n      dup3\n        /* \"#utility.yul\":15509:15529   */\n      tag_273\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":15504:15529   */\n      swap2\n      pop\n        /* \"#utility.yul\":15543:15563   */\n      tag_484\n        /* \"#utility.yul\":15561:15562   */\n      dup4\n        /* \"#utility.yul\":15543:15563   */\n      tag_273\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":15538:15563   */\n      swap3\n      pop\n        /* \"#utility.yul\":15582:15583   */\n      dup3\n        /* \"#utility.yul\":15572:15607   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":15587:15605   */\n      tag_486\n      tag_300\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":15572:15607   */\n    tag_485:\n        /* \"#utility.yul\":15628:15629   */\n      dup3\n        /* \"#utility.yul\":15625:15626   */\n      dup3\n        /* \"#utility.yul\":15621:15630   */\n      mod\n        /* \"#utility.yul\":15616:15630   */\n      swap1\n      pop\n        /* \"#utility.yul\":15460:15636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15642:15822   */\n    tag_253:\n        /* \"#utility.yul\":15690:15767   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15687:15688   */\n      0x00\n        /* \"#utility.yul\":15680:15768   */\n      mstore\n        /* \"#utility.yul\":15787:15791   */\n      0x32\n        /* \"#utility.yul\":15784:15785   */\n      0x04\n        /* \"#utility.yul\":15777:15792   */\n      mstore\n        /* \"#utility.yul\":15811:15815   */\n      0x24\n        /* \"#utility.yul\":15808:15809   */\n      0x00\n        /* \"#utility.yul\":15801:15816   */\n      revert\n    stop\n    data_873fd5f964b13e1038074dfa7bf985864a803be90f361e484b606b70d53e1173 68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d57755a3650574a535770704d354168344337747836646845476f626b686b6e734c58333446423957746e684d2f\n\n    auxdata: 0xa2646970667358221220492996a12c1ae64f7a23059a7e32f9306781bb6d0bf8dc7f5f9cfd77338c184c64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1170": {
									"entryPoint": null,
									"id": 1170,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_1257": {
									"entryPoint": 135,
									"id": 1257,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:1",
														"type": ""
													}
												],
												"src": "580:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:1"
															},
															"nodeType": "YulIf",
															"src": "1030:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:1",
														"type": ""
													}
												],
												"src": "874:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:1",
														"type": ""
													}
												],
												"src": "1161:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:1"
															},
															"nodeType": "YulIf",
															"src": "1434:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:1",
														"type": ""
													}
												],
												"src": "1296:308:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1659:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1669:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1678:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1673:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1763:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1768:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1759:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1782:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1787:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1778:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1778:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1772:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1710:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1712:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1721:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1712:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1692:3:1",
																"statements": []
															},
															"src": "1688:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1835:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1885:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1890:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1881:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1881:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1819:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:13:1"
															},
															"nodeType": "YulIf",
															"src": "1810:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1646:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1651:6:1",
														"type": ""
													}
												],
												"src": "1610:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:326:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:49:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2037:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:66:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2119:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2157:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2209:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2188:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:25:1"
															},
															"nodeType": "YulIf",
															"src": "2178:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2299:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:39:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1991:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1996:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2004:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2012:5:1",
														"type": ""
													}
												],
												"src": "1923:421:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:282:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2488:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2488:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2473:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:35:1"
															},
															"nodeType": "YulIf",
															"src": "2447:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2578:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2582:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:99:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2623:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:90:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2614:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2415:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2423:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2431:5:1",
														"type": ""
													}
												],
												"src": "2364:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2839:739:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2885:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2887:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2869:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2852:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:32:1"
															},
															"nodeType": "YulIf",
															"src": "2849:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2978:291:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2993:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3017:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3028:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3013:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3007:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3007:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2997:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3078:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3080:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3080:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3080:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3058:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3047:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "3044:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3175:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3231:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3242:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3227:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3251:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3185:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3175:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3279:292:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3294:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3318:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3329:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3314:18:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3308:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:25:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3298:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3380:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3382:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3382:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3382:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3352:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3360:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3349:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "3346:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3477:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3533:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3544:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3529:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3529:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3553:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3487:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3477:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2801:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2812:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2824:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2832:6:1",
														"type": ""
													}
												],
												"src": "2725:853:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3612:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3632:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3622:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3726:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3729:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3719:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3750:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3743:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3584:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3821:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3831:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3845:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3831:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3862:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3892:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3888:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3866:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3939:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3953:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3967:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3975:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3963:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3963:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3953:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3919:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3912:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:26:1"
															},
															"nodeType": "YulIf",
															"src": "3909:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4042:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4056:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4056:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4056:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4006:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4029:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4037:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4026:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4003:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:38:1"
															},
															"nodeType": "YulIf",
															"src": "4000:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3805:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3814:6:1",
														"type": ""
													}
												],
												"src": "3770:320:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002744380380620027448339818101604052810190620000379190620002d9565b81600290805190602001906200004f9291906200008c565b508060039080519060200190620000689291906200008c565b50620000796200008760201b60201c565b6000819055505050620003c2565b600090565b8280546200009a906200038d565b90600052602060002090601f016020900481019282620000be57600085556200010a565b82601f10620000d957805160ff19168380011785556200010a565b828001600101855582156200010a579182015b8281111562000109578251825591602001919060010190620000ec565b5b5090506200011991906200011d565b5090565b5b80821115620001385760008160009055506001016200011e565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001a5826200015a565b810181811067ffffffffffffffff82111715620001c757620001c66200016b565b5b80604052505050565b6000620001dc6200013c565b9050620001ea82826200019a565b919050565b600067ffffffffffffffff8211156200020d576200020c6200016b565b5b62000218826200015a565b9050602081019050919050565b60005b838110156200024557808201518184015260208101905062000228565b8381111562000255576000848401525b50505050565b6000620002726200026c84620001ef565b620001d0565b90508281526020810184848401111562000291576200029062000155565b5b6200029e84828562000225565b509392505050565b600082601f830112620002be57620002bd62000150565b5b8151620002d08482602086016200025b565b91505092915050565b60008060408385031215620002f357620002f262000146565b5b600083015167ffffffffffffffff8111156200031457620003136200014b565b5b6200032285828601620002a6565b925050602083015167ffffffffffffffff8111156200034657620003456200014b565b5b6200035485828601620002a6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003a657607f821691505b602082108103620003bc57620003bb6200035e565b5b50919050565b61237280620003d26000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806342842e0e11610097578063a22cb46511610066578063a22cb46514610298578063b88d4fde146102b4578063c87b56dd146102d0578063e985e9c514610300576100f5565b806342842e0e146101fe5780636352211e1461021a57806370a082311461024a57806395d89b411461027a576100f5565b8063095ea7b3116100d3578063095ea7b31461017857806318160ddd1461019457806323b872dd146101b2578063325b272a146101ce576100f5565b806301ffc9a7146100fa57806306fdde031461012a578063081812fc14610148575b600080fd5b610114600480360381019061010f91906119d6565b610330565b6040516101219190611a1e565b60405180910390f35b610132610412565b60405161013f9190611ad2565b60405180910390f35b610162600480360381019061015d9190611b2a565b6104a4565b60405161016f9190611b98565b60405180910390f35b610192600480360381019061018d9190611bdf565b610520565b005b61019c610624565b6040516101a99190611c2e565b60405180910390f35b6101cc60048036038101906101c79190611c49565b61063b565b005b6101e860048036038101906101e39190611c9c565b61064b565b6040516101f59190611c2e565b60405180910390f35b61021860048036038101906102139190611c49565b610746565b005b610234600480360381019061022f9190611b2a565b610766565b6040516102419190611b98565b60405180910390f35b610264600480360381019061025f9190611c9c565b61077c565b6040516102719190611c2e565b60405180910390f35b61028261084b565b60405161028f9190611ad2565b60405180910390f35b6102b260048036038101906102ad9190611cf5565b6108dd565b005b6102ce60048036038101906102c99190611e6a565b610a54565b005b6102ea60048036038101906102e59190611b2a565b610acc565b6040516102f79190611ad2565b60405180910390f35b61031a60048036038101906103159190611eed565b610b6a565b6040516103279190611a1e565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fb57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061040b575061040a82610bfe565b5b9050919050565b60606002805461042190611f5c565b80601f016020809104026020016040519081016040528092919081815260200182805461044d90611f5c565b801561049a5780601f1061046f5761010080835404028352916020019161049a565b820191906000526020600020905b81548152906001019060200180831161047d57829003601f168201915b5050505050905090565b60006104af82610c68565b6104e5576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061052b82610766565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610592576040517f943f7b8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105b1610cb6565b73ffffffffffffffffffffffffffffffffffffffff1614610614576105dd816105d8610cb6565b610b6a565b610613576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b61061f838383610cbe565b505050565b600061062e610d70565b6001546000540303905090565b610646838383610d75565b505050565b6000806106b2600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020544361123b90919063ffffffff16565b905060006106d1826106c38661077c565b61125190919063ffffffff16565b9050600061073982600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000205461126790919063ffffffff16565b9050809350505050919050565b61076183838360405180602001604052806000815250610a54565b505050565b60006107718261127d565b600001519050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107e3576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b60606003805461085a90611f5c565b80601f016020809104026020016040519081016040528092919081815260200182805461088690611f5c565b80156108d35780601f106108a8576101008083540402835291602001916108d3565b820191906000526020600020905b8154815290600101906020018083116108b657829003601f168201915b5050505050905090565b6108e5610cb6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610949576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000610956610cb6565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610a03610cb6565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a489190611a1e565b60405180910390a35050565b610a5f848484610d75565b610a7e8373ffffffffffffffffffffffffffffffffffffffff16611508565b15610ac657610a8f8484848461152b565b610ac5576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610ad782610c68565b610b0d576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610b1761167b565b90506000815103610b375760405180602001604052806000815250610b62565b80610b418461169b565b604051602001610b52929190611fc9565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600081610c73610d70565b11158015610c82575060005482105b8015610caf575060046000838152602001908152602001600020600001601c9054906101000a900460ff16155b9050919050565b600033905090565b826006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b600090565b610d7e836117fb565b610d87826117fb565b6000610d928261127d565b90508373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614610dfd576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff16610e1e610cb6565b73ffffffffffffffffffffffffffffffffffffffff161480610e4d5750610e4c85610e47610cb6565b610b6a565b5b80610e925750610e5b610cb6565b73ffffffffffffffffffffffffffffffffffffffff16610e7a846104a4565b73ffffffffffffffffffffffffffffffffffffffff16145b905080610ecb576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f31576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610f3e858585600161191b565b610f4a60008487610cbe565b6001600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506001600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506000600460008581526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006001850190506000600460008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036111c95760005482146111c857878160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084602001518160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5b505050828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46112348585856001611921565b5050505050565b60008183611249919061201c565b905092915050565b6000818361125f9190612050565b905092915050565b6000818361127591906120aa565b905092915050565b611285611927565b600082905080611293610d70565b116114d1576000548110156114d0576000600460008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff161515151581525050905080604001516114ce57600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146113b2578092505050611503565b5b6001156114cd57818060019003925050600460008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160008201601c9054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16146114c8578092505050611503565b6113b3565b5b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611551610cb6565b8786866040518563ffffffff1660e01b81526004016115739493929190612155565b6020604051808303816000875af19250505080156115af57506040513d601f19601f820116820180604052508101906115ac91906121b6565b60015b611628573d80600081146115df576040519150601f19603f3d011682016040523d82523d6000602084013e6115e4565b606091505b506000815103611620576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b60606040518060800160405280605181526020016122ec60519139905090565b6060600082036116e2576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506117f6565b600082905060005b600082146117145780806116fd906121e3565b915050600a8261170d919061225a565b91506116ea565b60008167ffffffffffffffff8111156117305761172f611d3f565b5b6040519080825280601f01601f1916602001820160405280156117625781602001600182028036833780820191505090505b5090505b600085146117ef5760018261177b919061201c565b9150600a8561178a919061228b565b603061179691906120aa565b60f81b8183815181106117ac576117ab6122bc565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856117e8919061225a565b9450611766565b8093505050505b919050565b60006118068261064b565b905061186c81600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000205461126790919063ffffffff16565b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600281526020019081526020016000208190555043600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018152602001908152602001600020819055505050565b50505050565b50505050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119b38161197e565b81146119be57600080fd5b50565b6000813590506119d0816119aa565b92915050565b6000602082840312156119ec576119eb611974565b5b60006119fa848285016119c1565b91505092915050565b60008115159050919050565b611a1881611a03565b82525050565b6000602082019050611a336000830184611a0f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a73578082015181840152602081019050611a58565b83811115611a82576000848401525b50505050565b6000601f19601f8301169050919050565b6000611aa482611a39565b611aae8185611a44565b9350611abe818560208601611a55565b611ac781611a88565b840191505092915050565b60006020820190508181036000830152611aec8184611a99565b905092915050565b6000819050919050565b611b0781611af4565b8114611b1257600080fd5b50565b600081359050611b2481611afe565b92915050565b600060208284031215611b4057611b3f611974565b5b6000611b4e84828501611b15565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b8282611b57565b9050919050565b611b9281611b77565b82525050565b6000602082019050611bad6000830184611b89565b92915050565b611bbc81611b77565b8114611bc757600080fd5b50565b600081359050611bd981611bb3565b92915050565b60008060408385031215611bf657611bf5611974565b5b6000611c0485828601611bca565b9250506020611c1585828601611b15565b9150509250929050565b611c2881611af4565b82525050565b6000602082019050611c436000830184611c1f565b92915050565b600080600060608486031215611c6257611c61611974565b5b6000611c7086828701611bca565b9350506020611c8186828701611bca565b9250506040611c9286828701611b15565b9150509250925092565b600060208284031215611cb257611cb1611974565b5b6000611cc084828501611bca565b91505092915050565b611cd281611a03565b8114611cdd57600080fd5b50565b600081359050611cef81611cc9565b92915050565b60008060408385031215611d0c57611d0b611974565b5b6000611d1a85828601611bca565b9250506020611d2b85828601611ce0565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d7782611a88565b810181811067ffffffffffffffff82111715611d9657611d95611d3f565b5b80604052505050565b6000611da961196a565b9050611db58282611d6e565b919050565b600067ffffffffffffffff821115611dd557611dd4611d3f565b5b611dde82611a88565b9050602081019050919050565b82818337600083830152505050565b6000611e0d611e0884611dba565b611d9f565b905082815260208101848484011115611e2957611e28611d3a565b5b611e34848285611deb565b509392505050565b600082601f830112611e5157611e50611d35565b5b8135611e61848260208601611dfa565b91505092915050565b60008060008060808587031215611e8457611e83611974565b5b6000611e9287828801611bca565b9450506020611ea387828801611bca565b9350506040611eb487828801611b15565b925050606085013567ffffffffffffffff811115611ed557611ed4611979565b5b611ee187828801611e3c565b91505092959194509250565b60008060408385031215611f0457611f03611974565b5b6000611f1285828601611bca565b9250506020611f2385828601611bca565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f7457607f821691505b602082108103611f8757611f86611f2d565b5b50919050565b600081905092915050565b6000611fa382611a39565b611fad8185611f8d565b9350611fbd818560208601611a55565b80840191505092915050565b6000611fd58285611f98565b9150611fe18284611f98565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061202782611af4565b915061203283611af4565b92508282101561204557612044611fed565b5b828203905092915050565b600061205b82611af4565b915061206683611af4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561209f5761209e611fed565b5b828202905092915050565b60006120b582611af4565b91506120c083611af4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156120f5576120f4611fed565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b600061212782612100565b612131818561210b565b9350612141818560208601611a55565b61214a81611a88565b840191505092915050565b600060808201905061216a6000830187611b89565b6121776020830186611b89565b6121846040830185611c1f565b8181036060830152612196818461211c565b905095945050505050565b6000815190506121b0816119aa565b92915050565b6000602082840312156121cc576121cb611974565b5b60006121da848285016121a1565b91505092915050565b60006121ee82611af4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122205761221f611fed565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061226582611af4565b915061227083611af4565b9250826122805761227f61222b565b5b828204905092915050565b600061229682611af4565b91506122a183611af4565b9250826122b1576122b061222b565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d57755a3650574a535770704d354168344337747836646845476f626b686b6e734c58333446423957746e684d2fa2646970667358221220492996a12c1ae64f7a23059a7e32f9306781bb6d0bf8dc7f5f9cfd77338c184c64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2744 CODESIZE SUB DUP1 PUSH3 0x2744 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2D9 JUMP JUMPDEST DUP2 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x8C JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x8C JUMP JUMPDEST POP PUSH3 0x79 PUSH3 0x87 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x3C2 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x9A SWAP1 PUSH3 0x38D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xBE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x10A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xD9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x10A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x10A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x109 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x119 SWAP2 SWAP1 PUSH3 0x11D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x138 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x11E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x1A5 DUP3 PUSH3 0x15A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1C7 JUMPI PUSH3 0x1C6 PUSH3 0x16B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DC PUSH3 0x13C JUMP JUMPDEST SWAP1 POP PUSH3 0x1EA DUP3 DUP3 PUSH3 0x19A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x20D JUMPI PUSH3 0x20C PUSH3 0x16B JUMP JUMPDEST JUMPDEST PUSH3 0x218 DUP3 PUSH3 0x15A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x245 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x228 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x255 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x272 PUSH3 0x26C DUP5 PUSH3 0x1EF JUMP JUMPDEST PUSH3 0x1D0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x291 JUMPI PUSH3 0x290 PUSH3 0x155 JUMP JUMPDEST JUMPDEST PUSH3 0x29E DUP5 DUP3 DUP6 PUSH3 0x225 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2BE JUMPI PUSH3 0x2BD PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x25B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2F3 JUMPI PUSH3 0x2F2 PUSH3 0x146 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x314 JUMPI PUSH3 0x313 PUSH3 0x14B JUMP JUMPDEST JUMPDEST PUSH3 0x322 DUP6 DUP3 DUP7 ADD PUSH3 0x2A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x346 JUMPI PUSH3 0x345 PUSH3 0x14B JUMP JUMPDEST JUMPDEST PUSH3 0x354 DUP6 DUP3 DUP7 ADD PUSH3 0x2A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3BC JUMPI PUSH3 0x3BB PUSH3 0x35E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2372 DUP1 PUSH3 0x3D2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42842E0E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x300 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27A JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x325B272A EQ PUSH2 0x1CE JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1B2A JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1BDF JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1C49 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1C49 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1B2A JUMP JUMPDEST PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST PUSH2 0xA54 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x1B2A JUMP JUMPDEST PUSH2 0xACC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x1EED JUMP JUMPDEST PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x40B JUMPI POP PUSH2 0x40A DUP3 PUSH2 0xBFE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x421 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44D SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AF DUP3 PUSH2 0xC68 JUMP JUMPDEST PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52B DUP3 PUSH2 0x766 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5B1 PUSH2 0xCB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x614 JUMPI PUSH2 0x5DD DUP2 PUSH2 0x5D8 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x61F DUP4 DUP4 DUP4 PUSH2 0xCBE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62E PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x646 DUP4 DUP4 DUP4 PUSH2 0xD75 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6B2 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD NUMBER PUSH2 0x123B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6D1 DUP3 PUSH2 0x6C3 DUP7 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x1251 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x739 DUP3 PUSH1 0x8 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1267 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x761 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA54 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 DUP3 PUSH2 0x127D JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x85A SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x886 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8E5 PUSH2 0xCB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x956 PUSH2 0xCB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA03 PUSH2 0xCB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA5F DUP5 DUP5 DUP5 PUSH2 0xD75 JUMP JUMPDEST PUSH2 0xA7E DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1508 JUMP JUMPDEST ISZERO PUSH2 0xAC6 JUMPI PUSH2 0xA8F DUP5 DUP5 DUP5 DUP5 PUSH2 0x152B JUMP JUMPDEST PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAD7 DUP3 PUSH2 0xC68 JUMP JUMPDEST PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB17 PUSH2 0x167B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xB37 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB62 JUMP JUMPDEST DUP1 PUSH2 0xB41 DUP5 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB52 SWAP3 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xC73 PUSH2 0xD70 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xC82 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xCAF JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xD7E DUP4 PUSH2 0x17FB JUMP JUMPDEST PUSH2 0xD87 DUP3 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD92 DUP3 PUSH2 0x127D JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE1E PUSH2 0xCB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xE4D JUMPI POP PUSH2 0xE4C DUP6 PUSH2 0xE47 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0xB6A JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xE92 JUMPI POP PUSH2 0xE5B PUSH2 0xCB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE7A DUP5 PUSH2 0x4A4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0xECB JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF31 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF3E DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x191B JUMP JUMPDEST PUSH2 0xF4A PUSH1 0x0 DUP5 DUP8 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11C9 JUMPI PUSH1 0x0 SLOAD DUP3 EQ PUSH2 0x11C8 JUMPI DUP8 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1234 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1921 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1249 SWAP2 SWAP1 PUSH2 0x201C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x125F SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1285 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x1293 PUSH2 0xD70 JUMP JUMPDEST GT PUSH2 0x14D1 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x14D0 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x14CE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13B2 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1503 JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x14CD JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14C8 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1551 PUSH2 0xCB6 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1573 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2155 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15AF JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15AC SWAP2 SWAP1 PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1628 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15DF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1620 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x51 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22EC PUSH1 0x51 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x16E2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1714 JUMPI DUP1 DUP1 PUSH2 0x16FD SWAP1 PUSH2 0x21E3 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x170D SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP2 POP PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1730 JUMPI PUSH2 0x172F PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1762 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x17EF JUMPI PUSH1 0x1 DUP3 PUSH2 0x177B SWAP2 SWAP1 PUSH2 0x201C JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x178A SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1796 SWAP2 SWAP1 PUSH2 0x20AA JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x17AC JUMPI PUSH2 0x17AB PUSH2 0x22BC JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x17E8 SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP5 POP PUSH2 0x1766 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1806 DUP3 PUSH2 0x64B JUMP JUMPDEST SWAP1 POP PUSH2 0x186C DUP2 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1267 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B3 DUP2 PUSH2 0x197E JUMP JUMPDEST DUP2 EQ PUSH2 0x19BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19D0 DUP2 PUSH2 0x19AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EC JUMPI PUSH2 0x19EB PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19FA DUP5 DUP3 DUP6 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A18 DUP2 PUSH2 0x1A03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A33 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A73 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A58 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA4 DUP3 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x1AAE DUP2 DUP6 PUSH2 0x1A44 JUMP JUMPDEST SWAP4 POP PUSH2 0x1ABE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x1AC7 DUP2 PUSH2 0x1A88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AEC DUP2 DUP5 PUSH2 0x1A99 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B07 DUP2 PUSH2 0x1AF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B24 DUP2 PUSH2 0x1AFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B40 JUMPI PUSH2 0x1B3F PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B4E DUP5 DUP3 DUP6 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B82 DUP3 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B92 DUP2 PUSH2 0x1B77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BAD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BBC DUP2 PUSH2 0x1B77 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BD9 DUP2 PUSH2 0x1BB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BF6 JUMPI PUSH2 0x1BF5 PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C04 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C15 DUP6 DUP3 DUP7 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C28 DUP2 PUSH2 0x1AF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C43 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C62 JUMPI PUSH2 0x1C61 PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C70 DUP7 DUP3 DUP8 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C81 DUP7 DUP3 DUP8 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C92 DUP7 DUP3 DUP8 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB2 JUMPI PUSH2 0x1CB1 PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC0 DUP5 DUP3 DUP6 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CD2 DUP2 PUSH2 0x1A03 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CEF DUP2 PUSH2 0x1CC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D0C JUMPI PUSH2 0x1D0B PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1A DUP6 DUP3 DUP7 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D2B DUP6 DUP3 DUP7 ADD PUSH2 0x1CE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D77 DUP3 PUSH2 0x1A88 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D96 JUMPI PUSH2 0x1D95 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA9 PUSH2 0x196A JUMP JUMPDEST SWAP1 POP PUSH2 0x1DB5 DUP3 DUP3 PUSH2 0x1D6E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DD5 JUMPI PUSH2 0x1DD4 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x1DDE DUP3 PUSH2 0x1A88 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0D PUSH2 0x1E08 DUP5 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E29 JUMPI PUSH2 0x1E28 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH2 0x1E34 DUP5 DUP3 DUP6 PUSH2 0x1DEB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E51 JUMPI PUSH2 0x1E50 PUSH2 0x1D35 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E61 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E84 JUMPI PUSH2 0x1E83 PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E92 DUP8 DUP3 DUP9 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1EA3 DUP8 DUP3 DUP9 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1EB4 DUP8 DUP3 DUP9 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ED5 JUMPI PUSH2 0x1ED4 PUSH2 0x1979 JUMP JUMPDEST JUMPDEST PUSH2 0x1EE1 DUP8 DUP3 DUP9 ADD PUSH2 0x1E3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F04 JUMPI PUSH2 0x1F03 PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F12 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F23 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F74 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F87 JUMPI PUSH2 0x1F86 PUSH2 0x1F2D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA3 DUP3 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x1FAD DUP2 DUP6 PUSH2 0x1F8D JUMP JUMPDEST SWAP4 POP PUSH2 0x1FBD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A55 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD5 DUP3 DUP6 PUSH2 0x1F98 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE1 DUP3 DUP5 PUSH2 0x1F98 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2027 DUP3 PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2032 DUP4 PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2045 JUMPI PUSH2 0x2044 PUSH2 0x1FED JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205B DUP3 PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2066 DUP4 PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x209F JUMPI PUSH2 0x209E PUSH2 0x1FED JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B5 DUP3 PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C0 DUP4 PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x20F5 JUMPI PUSH2 0x20F4 PUSH2 0x1FED JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2127 DUP3 PUSH2 0x2100 JUMP JUMPDEST PUSH2 0x2131 DUP2 DUP6 PUSH2 0x210B JUMP JUMPDEST SWAP4 POP PUSH2 0x2141 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x214A DUP2 PUSH2 0x1A88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x216A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1B89 JUMP JUMPDEST PUSH2 0x2177 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B89 JUMP JUMPDEST PUSH2 0x2184 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C1F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2196 DUP2 DUP5 PUSH2 0x211C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x21B0 DUP2 PUSH2 0x19AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21CC JUMPI PUSH2 0x21CB PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21DA DUP5 DUP3 DUP6 ADD PUSH2 0x21A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21EE DUP3 PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2220 JUMPI PUSH2 0x221F PUSH2 0x1FED JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2265 DUP3 PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2270 DUP4 PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2280 JUMPI PUSH2 0x227F PUSH2 0x222B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2296 DUP3 PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x22A1 DUP4 PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x22B1 JUMPI PUSH2 0x22B0 PUSH2 0x222B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2F516D57755A3650574A535770704D3541683443 CALLDATACOPY PUSH21 0x7836646845476F626B686B6E734C58333446423957 PUSH21 0x6E684D2FA2646970667358221220492996A12C1AE6 0x4F PUSH27 0x23059A7E32F9306781BB6D0BF8DC7F5F9CFD77338C184C64736F6C PUSH4 0x4300080E STOP CALLER ",
							"sourceMap": "30158:20055:0:-:0;;;31297:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31371:5;31363;:13;;;;;;;;;;;;:::i;:::-;;31396:7;31386;:17;;;;;;;;;;;;:::i;:::-;;31429:15;:13;;;:15;;:::i;:::-;31413:13;:31;;;;31297:165;;30158:20055;;32090:90;32146:7;32090:90;:::o;30158:20055::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;30158:20055:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BlockScore_1212": {
									"entryPoint": 1611,
									"id": 1212,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_afterTokenTransfers_2450": {
									"entryPoint": 6433,
									"id": 2450,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2369": {
									"entryPoint": 3262,
									"id": 2369,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_1570": {
									"entryPoint": 5755,
									"id": 1570,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_2437": {
									"entryPoint": 6427,
									"id": 2437,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_2424": {
									"entryPoint": 5419,
									"id": 2424,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1787": {
									"entryPoint": 3176,
									"id": 1787,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_524": {
									"entryPoint": 3254,
									"id": 524,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownershipOf_1483": {
									"entryPoint": 4733,
									"id": 1483,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_1257": {
									"entryPoint": 3440,
									"id": 1257,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_2147": {
									"entryPoint": 3445,
									"id": 2147,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_175": {
									"entryPoint": 4711,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1616": {
									"entryPoint": 1312,
									"id": 1616,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1345": {
									"entryPoint": 1916,
									"id": 1345,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1638": {
									"entryPoint": 1188,
									"id": 1638,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1690": {
									"entryPoint": 2922,
									"id": 1690,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_551": {
									"entryPoint": 5384,
									"id": 551,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_205": {
									"entryPoint": 4689,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1508": {
									"entryPoint": 1042,
									"id": 1508,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1498": {
									"entryPoint": 1894,
									"id": 1498,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1727": {
									"entryPoint": 1862,
									"id": 1727,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1763": {
									"entryPoint": 2644,
									"id": 1763,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1672": {
									"entryPoint": 2269,
									"id": 1672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_190": {
									"entryPoint": 4667,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supportsInterface_1317": {
									"entryPoint": 816,
									"id": 1317,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_887": {
									"entryPoint": 3070,
									"id": 887,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1518": {
									"entryPoint": 2123,
									"id": 1518,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_395": {
									"entryPoint": 5787,
									"id": 395,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1561": {
									"entryPoint": 2764,
									"id": 1561,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1273": {
									"entryPoint": 1572,
									"id": 1273,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1708": {
									"entryPoint": 1595,
									"id": 1708,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@updateBlockScore_1248": {
									"entryPoint": 6139,
									"id": 1248,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7674,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8137,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8533,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 7659,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 6741,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8747,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7981,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8892,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7487,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6516,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 7091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15825:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:1",
														"type": ""
													}
												],
												"src": "1518:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:1",
														"type": ""
													}
												],
												"src": "1623:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1857:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1866:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1861:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1926:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1951:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1956:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1947:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1947:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1970:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1975:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1966:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1966:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1960:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1940:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1887:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1884:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1898:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1900:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1909:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1905:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1905:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1900:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1880:3:1",
																"statements": []
															},
															"src": "1876:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2023:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2073:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2078:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2069:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2069:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2087:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2062:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2062:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2062:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2004:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2007:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2001:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:13:1"
															},
															"nodeType": "YulIf",
															"src": "1998:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1829:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1834:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1839:6:1",
														"type": ""
													}
												],
												"src": "1798:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2159:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2169:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2187:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2194:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2199:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2199:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2142:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2152:6:1",
														"type": ""
													}
												],
												"src": "2111:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2311:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2321:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2368:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2335:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2325:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2383:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2449:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2454:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2390:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2496:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2503:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2492:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2492:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2510:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2515:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2470:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2470:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2531:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2569:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2547:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2547:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2538:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2292:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2299:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2307:3:1",
														"type": ""
													}
												],
												"src": "2219:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2717:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2729:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2740:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2725:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2717:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2783:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2789:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2779:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2753:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2809:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2881:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2890:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2817:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2809:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2679:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2691:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2702:4:1",
														"type": ""
													}
												],
												"src": "2589:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2974:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2963:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2935:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2945:7:1",
														"type": ""
													}
												],
												"src": "2908:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3091:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3100:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3103:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3093:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3093:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3093:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3057:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3082:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3064:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3064:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3054:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:43:1"
															},
															"nodeType": "YulIf",
															"src": "3044:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3027:5:1",
														"type": ""
													}
												],
												"src": "2991:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3171:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3181:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3203:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3190:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3181:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3246:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3219:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3219:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3149:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3157:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3165:5:1",
														"type": ""
													}
												],
												"src": "3119:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3330:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3376:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3378:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3378:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3378:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3351:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3372:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3343:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:32:1"
															},
															"nodeType": "YulIf",
															"src": "3340:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3469:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3484:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3488:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3513:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3523:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3523:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3300:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3311:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3323:6:1",
														"type": ""
													}
												],
												"src": "3264:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3644:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3654:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3669:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3676:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3665:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3665:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3654:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3626:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3636:7:1",
														"type": ""
													}
												],
												"src": "3599:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3776:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3786:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3815:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3797:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3786:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3758:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3768:7:1",
														"type": ""
													}
												],
												"src": "3731:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3915:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3938:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3920:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3920:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3908:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3908:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3908:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3886:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3893:3:1",
														"type": ""
													}
												],
												"src": "3833:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4055:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4065:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4077:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4088:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4073:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4065:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4145:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4158:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4169:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4154:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4154:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4101:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4101:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4101:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4027:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4039:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4050:4:1",
														"type": ""
													}
												],
												"src": "3957:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4228:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4285:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4294:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4297:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4287:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4287:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4251:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4276:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4258:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4258:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4248:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4248:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:43:1"
															},
															"nodeType": "YulIf",
															"src": "4238:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4221:5:1",
														"type": ""
													}
												],
												"src": "4185:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4375:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4397:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4384:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4384:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4375:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4440:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4413:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4413:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4343:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4351:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4359:5:1",
														"type": ""
													}
												],
												"src": "4313:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4541:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4587:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4589:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4589:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4589:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4562:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4571:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4558:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4583:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4554:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4554:32:1"
															},
															"nodeType": "YulIf",
															"src": "4551:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4680:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4695:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4699:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4724:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4759:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4770:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4755:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4755:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4779:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4734:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4734:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4724:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4807:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4822:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4836:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4826:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4852:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4887:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4898:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4883:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4883:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4907:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4862:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4862:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4852:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4503:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4514:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4526:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4534:6:1",
														"type": ""
													}
												],
												"src": "4458:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5003:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5020:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5043:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5025:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5025:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5013:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5013:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5013:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4991:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4998:3:1",
														"type": ""
													}
												],
												"src": "4938:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5160:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5170:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5182:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5193:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5178:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5178:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5170:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5250:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5263:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5274:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5259:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5259:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5206:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5206:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5206:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5132:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5144:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5155:4:1",
														"type": ""
													}
												],
												"src": "5062:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5390:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5436:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5438:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5438:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5438:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5411:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5407:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5407:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5432:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5403:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5403:32:1"
															},
															"nodeType": "YulIf",
															"src": "5400:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5529:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5544:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5558:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5548:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5573:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5608:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5619:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5604:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5604:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5628:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5583:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5583:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5573:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5656:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5671:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5685:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5675:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5701:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5736:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5747:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5732:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5732:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5756:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5711:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5711:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5701:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5784:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5799:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5803:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5829:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5864:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5875:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5860:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5860:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5884:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5839:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5839:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5829:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5344:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5355:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5367:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5375:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5383:6:1",
														"type": ""
													}
												],
												"src": "5290:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5981:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6027:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6029:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6029:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6029:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6002:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6011:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5998:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5998:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6023:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5994:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:32:1"
															},
															"nodeType": "YulIf",
															"src": "5991:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6120:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6135:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6149:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6139:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6164:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6199:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6210:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6195:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6195:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6219:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6174:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6174:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6164:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5951:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5962:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5974:6:1",
														"type": ""
													}
												],
												"src": "5915:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6290:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6344:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6353:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6356:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6346:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6346:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6346:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6313:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6335:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6320:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6320:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6310:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6310:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6303:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:40:1"
															},
															"nodeType": "YulIf",
															"src": "6300:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6283:5:1",
														"type": ""
													}
												],
												"src": "6250:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6421:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6431:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6453:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6440:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6431:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6493:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6469:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6469:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6469:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6399:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6407:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6415:5:1",
														"type": ""
													}
												],
												"src": "6372:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6591:388:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6637:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6639:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6639:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6639:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6612:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6621:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6608:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6633:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6604:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:32:1"
															},
															"nodeType": "YulIf",
															"src": "6601:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6730:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6745:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6759:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6749:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6774:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6809:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6820:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6805:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6805:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6829:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6784:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6784:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6774:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6857:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6872:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6886:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6876:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6902:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6934:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6945:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6930:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6930:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6954:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6912:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6912:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6902:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6553:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6564:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6576:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6584:6:1",
														"type": ""
													}
												],
												"src": "6511:468:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7074:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7091:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7094:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6985:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7197:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7214:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7217:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7207:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7108:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7259:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7279:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7269:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7269:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7269:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7373:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7376:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7366:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7397:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7400:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7390:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7231:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7460:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7470:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7492:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7522:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7500:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7500:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7488:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7474:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7641:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7594:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7579:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7579:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7618:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7630:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7615:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7576:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7576:62:1"
															},
															"nodeType": "YulIf",
															"src": "7573:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7677:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7681:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7446:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7454:4:1",
														"type": ""
													}
												],
												"src": "7417:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7745:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7755:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7765:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7765:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7814:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7822:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7794:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7794:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7729:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7738:6:1",
														"type": ""
													}
												],
												"src": "7704:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7905:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8010:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8012:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8012:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8012:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7982:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7990:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7979:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7979:30:1"
															},
															"nodeType": "YulIf",
															"src": "7976:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8072:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8050:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8050:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8042:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8116:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8128:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8134:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8124:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8116:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7889:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7900:4:1",
														"type": ""
													}
												],
												"src": "7839:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8203:103:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8231:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8236:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8213:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8213:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8213:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8284:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8289:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8280:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8298:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8273:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8273:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8185:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8190:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8195:6:1",
														"type": ""
													}
												],
												"src": "8152:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8395:327:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8405:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8471:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8430:40:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8430:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8414:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8405:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8495:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8502:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8488:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8488:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8518:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8533:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8540:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8529:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8529:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8522:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8583:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8585:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8585:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8585:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8564:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8569:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8560:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8578:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8557:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8557:25:1"
															},
															"nodeType": "YulIf",
															"src": "8554:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8699:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8704:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8709:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8675:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8675:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8675:41:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8368:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8373:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8381:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8389:5:1",
														"type": ""
													}
												],
												"src": "8312:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8802:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8851:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8853:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8853:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8853:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8830:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8838:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8826:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8826:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8845:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8822:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8822:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8815:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8815:35:1"
															},
															"nodeType": "YulIf",
															"src": "8812:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8943:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8970:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8957:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8957:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8947:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8986:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9046:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9054:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9042:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9042:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9061:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9069:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8995:46:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8995:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8986:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8780:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8788:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8796:5:1",
														"type": ""
													}
												],
												"src": "8741:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9211:817:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9258:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9260:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9260:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9260:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9232:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9241:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9228:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9253:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9224:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:33:1"
															},
															"nodeType": "YulIf",
															"src": "9221:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9351:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9366:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9380:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9370:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9395:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9430:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9441:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9426:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9426:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9450:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9405:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9405:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9395:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9478:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9493:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9507:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9497:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9523:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9558:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9569:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9554:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9554:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9578:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9533:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9533:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9523:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9606:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9621:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9635:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9625:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9651:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9686:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9697:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9682:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9682:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9706:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9661:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9661:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9651:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9734:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9749:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9780:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9791:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9776:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9776:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9763:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9763:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9753:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9842:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9844:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9844:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9844:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9814:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9822:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9811:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9811:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "9808:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9939:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9983:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9994:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9979:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9979:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10003:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9949:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9949:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9157:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9168:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9180:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9188:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9196:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9204:6:1",
														"type": ""
													}
												],
												"src": "9085:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10163:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10165:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10165:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10138:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10147:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10134:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10159:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10130:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10130:32:1"
															},
															"nodeType": "YulIf",
															"src": "10127:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "10256:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10271:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10285:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10275:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10300:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10335:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10346:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10331:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10331:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10355:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10310:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10310:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10300:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10383:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10398:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10412:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10402:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10428:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10463:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10474:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10459:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10459:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10483:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10438:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10438:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10428:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10079:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10090:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10102:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10110:6:1",
														"type": ""
													}
												],
												"src": "10034:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10542:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10559:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10562:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10552:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10552:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10552:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10656:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10659:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10649:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10683:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10673:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10673:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10673:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10514:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10751:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10761:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10775:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10781:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10771:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10771:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10761:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10792:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10822:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10828:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10818:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10818:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10796:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10869:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10883:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10897:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10905:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10893:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10893:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10883:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10849:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10842:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10842:26:1"
															},
															"nodeType": "YulIf",
															"src": "10839:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10972:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10986:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10986:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10986:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10936:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10959:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10967:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10956:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10956:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10933:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10933:38:1"
															},
															"nodeType": "YulIf",
															"src": "10930:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10735:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10744:6:1",
														"type": ""
													}
												],
												"src": "10700:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11140:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11150:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11165:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11150:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11112:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11117:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11128:11:1",
														"type": ""
													}
												],
												"src": "11026:148:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11290:267:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11300:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11347:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11314:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11314:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11304:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11362:96:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11446:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11451:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11369:76:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11369:89:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11362:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11493:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11500:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11489:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11489:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11507:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11512:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11467:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11467:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11467:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11528:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11539:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11544:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11535:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11535:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11528:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11271:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11278:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11286:3:1",
														"type": ""
													}
												],
												"src": "11180:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11747:251:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11758:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11847:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11856:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11765:81:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11765:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11758:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11870:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11959:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11968:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11877:81:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11877:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11870:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11982:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11989:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11982:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11718:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11724:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11732:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11743:3:1",
														"type": ""
													}
												],
												"src": "11563:435:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12049:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12052:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12042:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12042:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12042:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12146:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12149:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12139:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12139:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12139:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12170:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12173:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12163:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12163:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12163:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12004:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12235:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12245:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12268:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12250:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12250:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12245:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12279:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12302:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12284:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12284:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12279:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12326:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12328:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12328:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12328:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12320:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12323:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12317:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12317:8:1"
															},
															"nodeType": "YulIf",
															"src": "12314:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12358:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12370:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12373:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12366:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12366:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12358:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12221:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12224:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12230:4:1",
														"type": ""
													}
												],
												"src": "12190:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12435:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12445:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12468:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12450:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12450:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12445:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12479:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12502:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12484:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12484:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12479:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12677:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12679:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12679:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12679:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12589:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12582:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12582:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12575:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12575:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12597:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12604:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12672:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12600:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12600:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12594:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12594:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12571:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12571:105:1"
															},
															"nodeType": "YulIf",
															"src": "12568:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12709:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12724:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12727:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12720:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12720:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12709:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12418:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12421:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12427:7:1",
														"type": ""
													}
												],
												"src": "12387:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12785:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12795:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12818:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12800:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12800:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12795:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12829:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12852:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12834:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12834:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12829:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12992:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12994:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12994:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12994:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12913:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12920:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12988:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12916:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12916:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12910:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12910:81:1"
															},
															"nodeType": "YulIf",
															"src": "12907:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13024:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13035:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13038:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13031:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13031:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13024:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12772:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12775:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12781:3:1",
														"type": ""
													}
												],
												"src": "12741:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13110:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13121:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13137:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13131:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13131:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13121:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13093:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13103:6:1",
														"type": ""
													}
												],
												"src": "13052:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13251:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13268:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13273:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13261:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13261:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13261:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13289:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13308:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13313:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13304:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13304:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13289:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13223:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13228:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13239:11:1",
														"type": ""
													}
												],
												"src": "13156:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13420:270:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13430:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13476:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13444:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13444:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13434:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13491:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13556:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13561:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13498:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13498:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13491:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13603:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13610:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13599:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13599:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13617:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13622:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "13577:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13577:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13577:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13638:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13649:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13676:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "13654:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13654:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13645:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13645:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13638:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13401:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13408:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13416:3:1",
														"type": ""
													}
												],
												"src": "13330:360:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13896:440:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13906:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13918:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13929:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13914:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13914:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13906:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13987:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14000:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14011:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13996:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13996:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13943:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13943:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13943:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14068:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14081:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14092:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14077:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14077:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14024:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14024:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14024:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14150:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14163:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14174:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14159:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14159:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14106:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14106:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14106:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14199:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14210:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14195:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14195:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14219:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14225:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14215:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14215:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14188:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14188:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14188:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14245:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14315:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14324:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14253:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14253:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14245:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13844:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13856:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13864:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13872:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13880:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13891:4:1",
														"type": ""
													}
												],
												"src": "13696:640:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14404:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14414:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14429:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14423:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14423:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14414:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14471:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14445:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14445:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14445:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14382:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14390:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14398:5:1",
														"type": ""
													}
												],
												"src": "14342:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14565:273:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14611:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14613:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14613:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14613:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14586:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14595:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14582:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14582:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14607:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14578:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14578:32:1"
															},
															"nodeType": "YulIf",
															"src": "14575:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "14704:127:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14719:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14723:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14748:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14793:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14804:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14789:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14789:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14813:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "14758:30:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14758:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14748:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14535:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14546:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14558:6:1",
														"type": ""
													}
												],
												"src": "14489:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14887:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14897:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14924:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14906:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14906:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14897:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15020:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15022:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15022:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15022:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14945:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14952:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14942:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14942:77:1"
															},
															"nodeType": "YulIf",
															"src": "14939:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15051:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15062:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15069:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15058:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15058:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15051:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14873:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14883:3:1",
														"type": ""
													}
												],
												"src": "14844:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15111:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15128:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15131:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15121:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15121:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15121:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15225:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15228:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15218:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15218:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15249:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15252:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15242:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15242:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15242:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "15083:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15311:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15321:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15344:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15326:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15326:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15321:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15355:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15378:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15360:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15360:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15355:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15402:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15404:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15404:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15404:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15399:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15392:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15392:9:1"
															},
															"nodeType": "YulIf",
															"src": "15389:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15434:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15443:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15446:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15439:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15439:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15434:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15300:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15303:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15309:1:1",
														"type": ""
													}
												],
												"src": "15269:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15494:142:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15504:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15527:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15509:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15509:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15504:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15538:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15561:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15543:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15543:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15538:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15585:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15587:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15587:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15587:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15582:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15575:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15575:9:1"
															},
															"nodeType": "YulIf",
															"src": "15572:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15616:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15625:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15628:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "15621:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15621:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15616:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15483:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15486:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15492:1:1",
														"type": ""
													}
												],
												"src": "15460:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15670:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15687:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15690:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15680:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15680:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15680:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15784:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15787:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15777:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15777:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15777:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15808:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15811:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15801:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15801:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15801:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15642:180:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42842E0E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x300 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27A JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x325B272A EQ PUSH2 0x1CE JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x412 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1B2A JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1BDF JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1C49 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1C49 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1B2A JUMP JUMPDEST PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1C2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x282 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST PUSH2 0xA54 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x1B2A JUMP JUMPDEST PUSH2 0xACC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x1EED JUMP JUMPDEST PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FB JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x40B JUMPI POP PUSH2 0x40A DUP3 PUSH2 0xBFE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x421 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44D SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AF DUP3 PUSH2 0xC68 JUMP JUMPDEST PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52B DUP3 PUSH2 0x766 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH32 0x943F7B8C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5B1 PUSH2 0xCB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x614 JUMPI PUSH2 0x5DD DUP2 PUSH2 0x5D8 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x61F DUP4 DUP4 DUP4 PUSH2 0xCBE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62E PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x646 DUP4 DUP4 DUP4 PUSH2 0xD75 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6B2 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD NUMBER PUSH2 0x123B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6D1 DUP3 PUSH2 0x6C3 DUP7 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x1251 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x739 DUP3 PUSH1 0x8 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1267 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x761 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA54 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 DUP3 PUSH2 0x127D JUMP JUMPDEST PUSH1 0x0 ADD MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x85A SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x886 SWAP1 PUSH2 0x1F5C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8E5 PUSH2 0xCB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x949 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06307DB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x956 PUSH2 0xCB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA03 PUSH2 0xCB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA5F DUP5 DUP5 DUP5 PUSH2 0xD75 JUMP JUMPDEST PUSH2 0xA7E DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1508 JUMP JUMPDEST ISZERO PUSH2 0xAC6 JUMPI PUSH2 0xA8F DUP5 DUP5 DUP5 DUP5 PUSH2 0x152B JUMP JUMPDEST PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAD7 DUP3 PUSH2 0xC68 JUMP JUMPDEST PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB17 PUSH2 0x167B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xB37 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB62 JUMP JUMPDEST DUP1 PUSH2 0xB41 DUP5 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB52 SWAP3 SWAP2 SWAP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xC73 PUSH2 0xD70 JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xC82 JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xCAF JUMPI POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xD7E DUP4 PUSH2 0x17FB JUMP JUMPDEST PUSH2 0xD87 DUP3 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD92 DUP3 PUSH2 0x127D JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE1E PUSH2 0xCB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xE4D JUMPI POP PUSH2 0xE4C DUP6 PUSH2 0xE47 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0xB6A JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xE92 JUMPI POP PUSH2 0xE5B PUSH2 0xCB6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE7A DUP5 PUSH2 0x4A4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0xECB JUMPI PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF31 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF3E DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x191B JUMP JUMPDEST PUSH2 0xF4A PUSH1 0x0 DUP5 DUP8 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11C9 JUMPI PUSH1 0x0 SLOAD DUP3 EQ PUSH2 0x11C8 JUMPI DUP8 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1234 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x1921 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1249 SWAP2 SWAP1 PUSH2 0x201C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x125F SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x20AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1285 PUSH2 0x1927 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH2 0x1293 PUSH2 0xD70 JUMP JUMPDEST GT PUSH2 0x14D1 JUMPI PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x14D0 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x14CE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13B2 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1503 JUMP JUMPDEST JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x14CD JUMPI DUP2 DUP1 PUSH1 0x1 SWAP1 SUB SWAP3 POP POP PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14C8 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x1503 JUMP JUMPDEST PUSH2 0x13B3 JUMP JUMPDEST JUMPDEST POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1551 PUSH2 0xCB6 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1573 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2155 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15AF JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15AC SWAP2 SWAP1 PUSH2 0x21B6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1628 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15DF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1620 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x51 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22EC PUSH1 0x51 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x16E2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x1714 JUMPI DUP1 DUP1 PUSH2 0x16FD SWAP1 PUSH2 0x21E3 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x170D SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP2 POP PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1730 JUMPI PUSH2 0x172F PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1762 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x17EF JUMPI PUSH1 0x1 DUP3 PUSH2 0x177B SWAP2 SWAP1 PUSH2 0x201C JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x178A SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1796 SWAP2 SWAP1 PUSH2 0x20AA JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x17AC JUMPI PUSH2 0x17AB PUSH2 0x22BC JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x17E8 SWAP2 SWAP1 PUSH2 0x225A JUMP JUMPDEST SWAP5 POP PUSH2 0x1766 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1806 DUP3 PUSH2 0x64B JUMP JUMPDEST SWAP1 POP PUSH2 0x186C DUP2 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1267 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B3 DUP2 PUSH2 0x197E JUMP JUMPDEST DUP2 EQ PUSH2 0x19BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19D0 DUP2 PUSH2 0x19AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EC JUMPI PUSH2 0x19EB PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19FA DUP5 DUP3 DUP6 ADD PUSH2 0x19C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A18 DUP2 PUSH2 0x1A03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A33 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A73 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A58 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA4 DUP3 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x1AAE DUP2 DUP6 PUSH2 0x1A44 JUMP JUMPDEST SWAP4 POP PUSH2 0x1ABE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x1AC7 DUP2 PUSH2 0x1A88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AEC DUP2 DUP5 PUSH2 0x1A99 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B07 DUP2 PUSH2 0x1AF4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B24 DUP2 PUSH2 0x1AFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B40 JUMPI PUSH2 0x1B3F PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B4E DUP5 DUP3 DUP6 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B82 DUP3 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B92 DUP2 PUSH2 0x1B77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BAD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BBC DUP2 PUSH2 0x1B77 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BD9 DUP2 PUSH2 0x1BB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BF6 JUMPI PUSH2 0x1BF5 PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C04 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C15 DUP6 DUP3 DUP7 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C28 DUP2 PUSH2 0x1AF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C43 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C62 JUMPI PUSH2 0x1C61 PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C70 DUP7 DUP3 DUP8 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C81 DUP7 DUP3 DUP8 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C92 DUP7 DUP3 DUP8 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB2 JUMPI PUSH2 0x1CB1 PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC0 DUP5 DUP3 DUP6 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CD2 DUP2 PUSH2 0x1A03 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CEF DUP2 PUSH2 0x1CC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D0C JUMPI PUSH2 0x1D0B PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1A DUP6 DUP3 DUP7 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D2B DUP6 DUP3 DUP7 ADD PUSH2 0x1CE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D77 DUP3 PUSH2 0x1A88 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D96 JUMPI PUSH2 0x1D95 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA9 PUSH2 0x196A JUMP JUMPDEST SWAP1 POP PUSH2 0x1DB5 DUP3 DUP3 PUSH2 0x1D6E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DD5 JUMPI PUSH2 0x1DD4 PUSH2 0x1D3F JUMP JUMPDEST JUMPDEST PUSH2 0x1DDE DUP3 PUSH2 0x1A88 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0D PUSH2 0x1E08 DUP5 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x1D9F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E29 JUMPI PUSH2 0x1E28 PUSH2 0x1D3A JUMP JUMPDEST JUMPDEST PUSH2 0x1E34 DUP5 DUP3 DUP6 PUSH2 0x1DEB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E51 JUMPI PUSH2 0x1E50 PUSH2 0x1D35 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E61 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E84 JUMPI PUSH2 0x1E83 PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E92 DUP8 DUP3 DUP9 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1EA3 DUP8 DUP3 DUP9 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1EB4 DUP8 DUP3 DUP9 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ED5 JUMPI PUSH2 0x1ED4 PUSH2 0x1979 JUMP JUMPDEST JUMPDEST PUSH2 0x1EE1 DUP8 DUP3 DUP9 ADD PUSH2 0x1E3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F04 JUMPI PUSH2 0x1F03 PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F12 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F23 DUP6 DUP3 DUP7 ADD PUSH2 0x1BCA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F74 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F87 JUMPI PUSH2 0x1F86 PUSH2 0x1F2D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA3 DUP3 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x1FAD DUP2 DUP6 PUSH2 0x1F8D JUMP JUMPDEST SWAP4 POP PUSH2 0x1FBD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A55 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD5 DUP3 DUP6 PUSH2 0x1F98 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE1 DUP3 DUP5 PUSH2 0x1F98 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2027 DUP3 PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2032 DUP4 PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2045 JUMPI PUSH2 0x2044 PUSH2 0x1FED JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205B DUP3 PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2066 DUP4 PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x209F JUMPI PUSH2 0x209E PUSH2 0x1FED JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B5 DUP3 PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C0 DUP4 PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x20F5 JUMPI PUSH2 0x20F4 PUSH2 0x1FED JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2127 DUP3 PUSH2 0x2100 JUMP JUMPDEST PUSH2 0x2131 DUP2 DUP6 PUSH2 0x210B JUMP JUMPDEST SWAP4 POP PUSH2 0x2141 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x214A DUP2 PUSH2 0x1A88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x216A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1B89 JUMP JUMPDEST PUSH2 0x2177 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B89 JUMP JUMPDEST PUSH2 0x2184 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C1F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2196 DUP2 DUP5 PUSH2 0x211C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x21B0 DUP2 PUSH2 0x19AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21CC JUMPI PUSH2 0x21CB PUSH2 0x1974 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21DA DUP5 DUP3 DUP6 ADD PUSH2 0x21A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21EE DUP3 PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2220 JUMPI PUSH2 0x221F PUSH2 0x1FED JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2265 DUP3 PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2270 DUP4 PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2280 JUMPI PUSH2 0x227F PUSH2 0x222B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2296 DUP3 PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP PUSH2 0x22A1 DUP4 PUSH2 0x1AF4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x22B1 JUMPI PUSH2 0x22B0 PUSH2 0x222B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2F516D57755A3650574A535770704D3541683443 CALLDATACOPY PUSH21 0x7836646845476F626B686B6E734C58333446423957 PUSH21 0x6E684D2FA2646970667358221220492996A12C1AE6 0x4F PUSH27 0x23059A7E32F9306781BB6D0BF8DC7F5F9CFD77338C184C64736F6C PUSH4 0x4300080E STOP CALLER ",
							"sourceMap": "30158:20055:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33047:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;36078:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37625:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37201:363;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;32309:306;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38464:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31472:291;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38694:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;35893:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33406:203;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;36240:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;37892:282;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;38939:360;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;36408:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38240:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33047:300;33149:4;33199:25;33184:40;;;:11;:40;;;;:104;;;;33255:33;33240:48;;;:11;:48;;;;33184:104;:156;;;;33304:36;33328:11;33304:23;:36::i;:::-;33184:156;33165:175;;33047:300;;;:::o;36078:98::-;36132:13;36164:5;36157:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36078:98;:::o;37625:200::-;37693:7;37717:16;37725:7;37717;:16::i;:::-;37712:64;;37742:34;;;;;;;;;;;;;;37712:64;37794:15;:24;37810:7;37794:24;;;;;;;;;;;;;;;;;;;;;37787:31;;37625:200;;;:::o;37201:363::-;37273:13;37289:24;37305:7;37289:15;:24::i;:::-;37273:40;;37333:5;37327:11;;:2;:11;;;37323:48;;37347:24;;;;;;;;;;;;;;37323:48;37402:5;37386:21;;:12;:10;:12::i;:::-;:21;;;37382:137;;37413:37;37430:5;37437:12;:10;:12::i;:::-;37413:16;:37::i;:::-;37409:110;;37473:35;;;;;;;;;;;;;;37409:110;37382:137;37529:28;37538:2;37542:7;37551:5;37529:8;:28::i;:::-;37263:301;37201:363;;:::o;32309:306::-;32362:7;32583:15;:13;:15::i;:::-;32568:12;;32552:13;;:28;:46;32545:53;;32309:306;:::o;38464:164::-;38593:28;38603:4;38609:2;38613:7;38593:9;:28::i;:::-;38464:164;;;:::o;31472:291::-;31525:7;31543:18;31564:38;31581:11;:17;31593:4;31581:17;;;;;;;;;;;;;;;:20;31599:1;31581:20;;;;;;;;;;;;31564:12;:16;;:38;;;;:::i;:::-;31543:59;;31612:15;31630:31;31650:10;31630:15;31640:4;31630:9;:15::i;:::-;:19;;:31;;;;:::i;:::-;31612:49;;31671:20;31694:33;31719:7;31694:11;:17;31706:4;31694:17;;;;;;;;;;;;;;;:20;31712:1;31694:20;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;31671:56;;31744:12;31737:19;;;;;31472:291;;;:::o;38694:179::-;38827:39;38844:4;38850:2;38854:7;38827:39;;;;;;;;;;;;:16;:39::i;:::-;38694:179;;;:::o;35893:123::-;35957:7;35983:21;35996:7;35983:12;:21::i;:::-;:26;;;35976:33;;35893:123;;;:::o;33406:203::-;33470:7;33510:1;33493:19;;:5;:19;;;33489:60;;33521:28;;;;;;;;;;;;;;33489:60;33574:12;:19;33587:5;33574:19;;;;;;;;;;;;;;;:27;;;;;;;;;;;;33566:36;;33559:43;;33406:203;;;:::o;36240:102::-;36296:13;36328:7;36321:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36240:102;:::o;37892:282::-;38002:12;:10;:12::i;:::-;37990:24;;:8;:24;;;37986:54;;38023:17;;;;;;;;;;;;;;37986:54;38096:8;38051:18;:32;38070:12;:10;:12::i;:::-;38051:32;;;;;;;;;;;;;;;:42;38084:8;38051:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;38148:8;38119:48;;38134:12;:10;:12::i;:::-;38119:48;;;38158:8;38119:48;;;;;;:::i;:::-;;;;;;;;37892:282;;:::o;38939:360::-;39100:28;39110:4;39116:2;39120:7;39100:9;:28::i;:::-;39142:15;:2;:13;;;:15::i;:::-;39138:155;;;39163:56;39194:4;39200:2;39204:7;39213:5;39163:30;:56::i;:::-;39159:134;;39242:40;;;;;;;;;;;;;;39159:134;39138:155;38939:360;;;;:::o;36408:313::-;36481:13;36511:16;36519:7;36511;:16::i;:::-;36506:59;;36536:29;;;;;;;;;;;;;;36506:59;36576:21;36600:10;:8;:10::i;:::-;36576:34;;36652:1;36633:7;36627:21;:26;:87;;;;;;;;;;;;;;;;;36680:7;36689:18;:7;:16;:18::i;:::-;36663:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;36627:87;36620:94;;;36408:313;;;:::o;38240:162::-;38337:4;38360:18;:25;38379:5;38360:25;;;;;;;;;;;;;;;:35;38386:8;38360:35;;;;;;;;;;;;;;;;;;;;;;;;;38353:42;;38240:162;;;;:::o;21026:155::-;21111:4;21149:25;21134:40;;;:11;:40;;;;21127:47;;21026:155;;;:::o;39504:172::-;39561:4;39603:7;39584:15;:13;:15::i;:::-;:26;;:53;;;;;39624:13;;39614:7;:23;39584:53;:85;;;;;39642:11;:20;39654:7;39642:20;;;;;;;;;;;:27;;;;;;;;;;;;39641:28;39584:85;39577:92;;39504:172;;;:::o;9527:96::-;9580:7;9606:10;9599:17;;9527:96;:::o;47312:189::-;47449:2;47422:15;:24;47438:7;47422:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;47486:7;47482:2;47466:28;;47475:5;47466:28;;;;;;;;;;;;47312:189;;;:::o;32090:90::-;32146:7;32090:90;:::o;42287:2144::-;42397:22;42414:4;42397:16;:22::i;:::-;42429:20;42446:2;42429:16;:20::i;:::-;42459:35;42497:21;42510:7;42497:12;:21::i;:::-;42459:59;;42555:4;42533:26;;:13;:18;;;:26;;;42529:67;;42568:28;;;;;;;;;;;;;;42529:67;42607:22;42649:4;42633:20;;:12;:10;:12::i;:::-;:20;;;:72;;;;42669:36;42686:4;42692:12;:10;:12::i;:::-;42669:16;:36::i;:::-;42633:72;:124;;;;42745:12;:10;:12::i;:::-;42721:36;;:20;42733:7;42721:11;:20::i;:::-;:36;;;42633:124;42607:151;;42774:17;42769:66;;42800:35;;;;;;;;;;;;;;42769:66;42863:1;42849:16;;:2;:16;;;42845:52;;42874:23;;;;;;;;;;;;;;42845:52;42908:43;42930:4;42936:2;42940:7;42949:1;42908:21;:43::i;:::-;43013:35;43030:1;43034:7;43043:4;43013:8;:35::i;:::-;43368:1;43338:12;:18;43351:4;43338:18;;;;;;;;;;;;;;;:26;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43411:1;43383:12;:16;43396:2;43383:16;;;;;;;;;;;;;;;:24;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43427:31;43461:11;:20;43473:7;43461:20;;;;;;;;;;;43427:54;;43511:2;43495:8;:13;;;:18;;;;;;;;;;;;;;;;;;43560:15;43527:8;:23;;;:49;;;;;;;;;;;;;;;;;;43824:19;43856:1;43846:7;:11;43824:33;;43871:31;43905:11;:24;43917:11;43905:24;;;;;;;;;;;43871:58;;43972:1;43947:27;;:8;:13;;;;;;;;;;;;:27;;;43943:377;;44154:13;;44139:11;:28;44135:171;;44207:4;44191:8;:13;;;:20;;;;;;;;;;;;;;;;;;44259:13;:28;;;44233:8;:23;;;:54;;;;;;;;;;;;;;;;;;44135:171;43943:377;43314:1016;;;44364:7;44360:2;44345:27;;44354:4;44345:27;;;;;;;;;;;;44382:42;44403:4;44409:2;44413:7;44422:1;44382:20;:42::i;:::-;42387:2044;;42287:2144;;;:::o;3150:96::-;3208:7;3238:1;3234;:5;;;;:::i;:::-;3227:12;;3150:96;;;;:::o;3493:::-;3551:7;3581:1;3577;:5;;;;:::i;:::-;3570:12;;3493:96;;;;:::o;2783:::-;2841:7;2871:1;2867;:5;;;;:::i;:::-;2860:12;;2783:96;;;;:::o;34750:1086::-;34812:21;;:::i;:::-;34845:12;34860:7;34845:22;;34925:4;34906:15;:13;:15::i;:::-;:23;34902:870;;34942:13;;34935:4;:20;34931:841;;;34975:31;35009:11;:17;35021:4;35009:17;;;;;;;;;;;34975:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35049:9;:16;;;35044:714;;35119:1;35093:28;;:9;:14;;;:28;;;35089:99;;35156:9;35149:16;;;;;;35089:99;35485:255;35492:4;35485:255;;;35524:6;;;;;;;;35568:11;:17;35580:4;35568:17;;;;;;;;;;;35556:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35641:1;35615:28;;:9;:14;;;:28;;;35611:107;;35682:9;35675:16;;;;;;35611:107;35485:255;;;35044:714;34957:815;34931:841;34902:870;35798:31;;;;;;;;;;;;;;34750:1086;;;;:::o;10928:320::-;10988:4;11240:1;11218:7;:19;;;:23;11211:30;;10928:320;;;:::o;47982:650::-;48140:4;48176:2;48160:36;;;48197:12;:10;:12::i;:::-;48211:4;48217:7;48226:5;48160:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;48156:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48408:1;48391:6;:13;:18;48387:229;;48436:40;;;;;;;;;;;;;;48387:229;48576:6;48570:13;48561:6;48557:2;48553:15;48546:38;48156:470;48288:45;;;48278:55;;;:6;:55;;;;48271:62;;;47982:650;;;;;;:::o;36962:182::-;37013:13;37038:90;;;;;;;;;;;;;;;;;;;36962:182;:::o;7161:703::-;7217:13;7443:1;7434:5;:10;7430:51;;7460:10;;;;;;;;;;;;;;;;;;;;;7430:51;7490:12;7505:5;7490:20;;7520:14;7544:75;7559:1;7551:4;:9;7544:75;;7576:8;;;;;:::i;:::-;;;;7606:2;7598:10;;;;;:::i;:::-;;;7544:75;;;7628:19;7660:6;7650:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7628:39;;7677:150;7693:1;7684:5;:10;7677:150;;7720:1;7710:11;;;;;:::i;:::-;;;7786:2;7778:5;:10;;;;:::i;:::-;7765:2;:24;;;;:::i;:::-;7752:39;;7735:6;7742;7735:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;7814:2;7805:11;;;;;:::i;:::-;;;7677:150;;;7850:6;7836:21;;;;;7161:703;;;;:::o;31769:224::-;31825:13;31841:16;31852:4;31841:10;:16::i;:::-;31825:32;;31895:31;31920:5;31895:11;:17;31907:4;31895:17;;;;;;;;;;;;;;;:20;31913:1;31895:20;;;;;;;;;;;;:24;;:31;;;;:::i;:::-;31874:11;:17;31886:4;31874:17;;;;;;;;;;;;;;;:20;31892:1;31874:20;;;;;;;;;;;:52;;;;31966:12;31943:11;:17;31955:4;31943:17;;;;;;;;;;;;;;;:20;31961:1;31943:20;;;;;;;;;;;:35;;;;31815:178;31769:224;:::o;49263:154::-;;;;;:::o;50058:153::-;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:118::-;5025:24;5043:5;5025:24;:::i;:::-;5020:3;5013:37;4938:118;;:::o;5062:222::-;5155:4;5193:2;5182:9;5178:18;5170:26;;5206:71;5274:1;5263:9;5259:17;5250:6;5206:71;:::i;:::-;5062:222;;;;:::o;5290:619::-;5367:6;5375;5383;5432:2;5420:9;5411:7;5407:23;5403:32;5400:119;;;5438:79;;:::i;:::-;5400:119;5558:1;5583:53;5628:7;5619:6;5608:9;5604:22;5583:53;:::i;:::-;5573:63;;5529:117;5685:2;5711:53;5756:7;5747:6;5736:9;5732:22;5711:53;:::i;:::-;5701:63;;5656:118;5813:2;5839:53;5884:7;5875:6;5864:9;5860:22;5839:53;:::i;:::-;5829:63;;5784:118;5290:619;;;;;:::o;5915:329::-;5974:6;6023:2;6011:9;6002:7;5998:23;5994:32;5991:119;;;6029:79;;:::i;:::-;5991:119;6149:1;6174:53;6219:7;6210:6;6199:9;6195:22;6174:53;:::i;:::-;6164:63;;6120:117;5915:329;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:148::-;11128:11;11165:3;11150:18;;11026:148;;;;:::o;11180:377::-;11286:3;11314:39;11347:5;11314:39;:::i;:::-;11369:89;11451:6;11446:3;11369:89;:::i;:::-;11362:96;;11467:52;11512:6;11507:3;11500:4;11493:5;11489:16;11467:52;:::i;:::-;11544:6;11539:3;11535:16;11528:23;;11290:267;11180:377;;;;:::o;11563:435::-;11743:3;11765:95;11856:3;11847:6;11765:95;:::i;:::-;11758:102;;11877:95;11968:3;11959:6;11877:95;:::i;:::-;11870:102;;11989:3;11982:10;;11563:435;;;;;:::o;12004:180::-;12052:77;12049:1;12042:88;12149:4;12146:1;12139:15;12173:4;12170:1;12163:15;12190:191;12230:4;12250:20;12268:1;12250:20;:::i;:::-;12245:25;;12284:20;12302:1;12284:20;:::i;:::-;12279:25;;12323:1;12320;12317:8;12314:34;;;12328:18;;:::i;:::-;12314:34;12373:1;12370;12366:9;12358:17;;12190:191;;;;:::o;12387:348::-;12427:7;12450:20;12468:1;12450:20;:::i;:::-;12445:25;;12484:20;12502:1;12484:20;:::i;:::-;12479:25;;12672:1;12604:66;12600:74;12597:1;12594:81;12589:1;12582:9;12575:17;12571:105;12568:131;;;12679:18;;:::i;:::-;12568:131;12727:1;12724;12720:9;12709:20;;12387:348;;;;:::o;12741:305::-;12781:3;12800:20;12818:1;12800:20;:::i;:::-;12795:25;;12834:20;12852:1;12834:20;:::i;:::-;12829:25;;12988:1;12920:66;12916:74;12913:1;12910:81;12907:107;;;12994:18;;:::i;:::-;12907:107;13038:1;13035;13031:9;13024:16;;12741:305;;;;:::o;13052:98::-;13103:6;13137:5;13131:12;13121:22;;13052:98;;;:::o;13156:168::-;13239:11;13273:6;13268:3;13261:19;13313:4;13308:3;13304:14;13289:29;;13156:168;;;;:::o;13330:360::-;13416:3;13444:38;13476:5;13444:38;:::i;:::-;13498:70;13561:6;13556:3;13498:70;:::i;:::-;13491:77;;13577:52;13622:6;13617:3;13610:4;13603:5;13599:16;13577:52;:::i;:::-;13654:29;13676:6;13654:29;:::i;:::-;13649:3;13645:39;13638:46;;13420:270;13330:360;;;;:::o;13696:640::-;13891:4;13929:3;13918:9;13914:19;13906:27;;13943:71;14011:1;14000:9;13996:17;13987:6;13943:71;:::i;:::-;14024:72;14092:2;14081:9;14077:18;14068:6;14024:72;:::i;:::-;14106;14174:2;14163:9;14159:18;14150:6;14106:72;:::i;:::-;14225:9;14219:4;14215:20;14210:2;14199:9;14195:18;14188:48;14253:76;14324:4;14315:6;14253:76;:::i;:::-;14245:84;;13696:640;;;;;;;:::o;14342:141::-;14398:5;14429:6;14423:13;14414:22;;14445:32;14471:5;14445:32;:::i;:::-;14342:141;;;;:::o;14489:349::-;14558:6;14607:2;14595:9;14586:7;14582:23;14578:32;14575:119;;;14613:79;;:::i;:::-;14575:119;14733:1;14758:63;14813:7;14804:6;14793:9;14789:22;14758:63;:::i;:::-;14748:73;;14704:127;14489:349;;;;:::o;14844:233::-;14883:3;14906:24;14924:5;14906:24;:::i;:::-;14897:33;;14952:66;14945:5;14942:77;14939:103;;15022:18;;:::i;:::-;14939:103;15069:1;15062:5;15058:13;15051:20;;14844:233;;;:::o;15083:180::-;15131:77;15128:1;15121:88;15228:4;15225:1;15218:15;15252:4;15249:1;15242:15;15269:185;15309:1;15326:20;15344:1;15326:20;:::i;:::-;15321:25;;15360:20;15378:1;15360:20;:::i;:::-;15355:25;;15399:1;15389:35;;15404:18;;:::i;:::-;15389:35;15446:1;15443;15439:9;15434:14;;15269:185;;;;:::o;15460:176::-;15492:1;15509:20;15527:1;15509:20;:::i;:::-;15504:25;;15543:20;15561:1;15543:20;:::i;:::-;15538:25;;15582:1;15572:35;;15587:18;;:::i;:::-;15572:35;15628:1;15625;15621:9;15616:14;;15460:176;;;;:::o;15642:180::-;15690:77;15687:1;15680:88;15787:4;15784:1;15777:15;15811:4;15808:1;15801:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1814800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BlockScore(address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2991",
								"getApproved(uint256)": "7458",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "797",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_approve(address,uint256,address)": "26292",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4499",
								"_getAux(address)": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_startTokenId()": "15",
								"_totalMinted()": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"updateBlockScore(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 31297,
									"end": 31462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31371,
									"end": 31376,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31368,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 31363,
									"end": 31376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31363,
									"end": 31376,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31396,
									"end": 31403,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31393,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 31386,
									"end": 31403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31386,
									"end": 31403,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31429,
									"end": 31444,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 31429,
									"end": 31442,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 31429,
									"end": 31442,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31429,
									"end": 31442,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 31429,
									"end": 31444,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31429,
									"end": 31444,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 31429,
									"end": 31444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31429,
									"end": 31444,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 31429,
									"end": 31444,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31413,
									"end": 31426,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31413,
									"end": 31444,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31413,
									"end": 31444,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31413,
									"end": 31444,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31413,
									"end": 31444,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31297,
									"end": 31462,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 32090,
									"end": 32180,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 32090,
									"end": 32180,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32146,
									"end": 32153,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32090,
									"end": 32180,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 32090,
									"end": 32180,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 30158,
									"end": 50213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 30158,
									"end": 50213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1709,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1782,
									"end": 1785,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1789,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1768,
									"end": 1769,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1752,
									"end": 1791,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1724,
									"end": 1726,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1722,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1813,
									"end": 1826,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1881,
									"end": 1897,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1874,
									"end": 1901,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1659,
									"end": 1917,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2095,
									"end": 2101,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2053,
									"end": 2102,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2037,
									"end": 2103,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2119,
									"end": 2124,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2112,
									"end": 2133,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2202,
									"end": 2205,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2199,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2181,
									"end": 2206,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 2209,
									"end": 2288,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2321,
									"end": 2324,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 2299,
									"end": 2338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2018,
									"end": 2344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1923,
									"end": 2344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2465,
									"end": 2471,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2457,
									"end": 2484,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2488,
									"end": 2567,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2598,
									"end": 2604,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2682,
									"end": 2699,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2623,
									"end": 2713,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2437,
									"end": 2719,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2719,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2824,
									"end": 2830,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2832,
									"end": 2838,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2881,
									"end": 2883,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2869,
									"end": 2878,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2860,
									"end": 2867,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2856,
									"end": 2879,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2852,
									"end": 2884,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2887,
									"end": 2966,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3028,
									"end": 3029,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3017,
									"end": 3026,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3007,
									"end": 3031,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3058,
									"end": 3076,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3047,
									"end": 3077,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 3080,
									"end": 3159,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 3251,
									"end": 3258,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3242,
									"end": 3248,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3231,
									"end": 3240,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3227,
									"end": 3249,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3185,
									"end": 3259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2978,
									"end": 3269,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3329,
									"end": 3331,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3318,
									"end": 3327,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3314,
									"end": 3332,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3308,
									"end": 3333,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3360,
									"end": 3378,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3352,
									"end": 3358,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3349,
									"end": 3379,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 3382,
									"end": 3461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3553,
									"end": 3560,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3544,
									"end": 3550,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3542,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3529,
									"end": 3551,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3487,
									"end": 3561,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3279,
									"end": 3571,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2725,
									"end": 3578,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3632,
									"end": 3709,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3629,
									"end": 3630,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3710,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3729,
									"end": 3733,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 3726,
									"end": 3727,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3719,
									"end": 3734,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3753,
									"end": 3757,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3750,
									"end": 3751,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3743,
									"end": 3758,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3845,
									"end": 3849,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3898,
									"end": 3899,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3892,
									"end": 3896,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3888,
									"end": 3900,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3919,
									"end": 3937,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3975,
									"end": 3979,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 3967,
									"end": 3973,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3963,
									"end": 3980,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4037,
									"end": 4039,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4026,
									"end": 4040,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4003,
									"end": 4041,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 4056,
									"end": 4074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 4090,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3770,
									"end": 4090,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30158,
									"end": 50213,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220492996a12c1ae64f7a23059a7e32f9306781bb6d0bf8dc7f5f9cfd77338c184c64736f6c634300080e0033",
									".code": [
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "325B272A"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30158,
											"end": 50213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 33047,
											"end": 33347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 33047,
											"end": 33347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 33047,
											"end": 33347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 36078,
											"end": 36176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 36078,
											"end": 36176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 37625,
											"end": 37825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 37625,
											"end": 37825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 37625,
											"end": 37825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 37201,
											"end": 37564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37201,
											"end": 37564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 32309,
											"end": 32615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 32309,
											"end": 32615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 38464,
											"end": 38628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 38464,
											"end": 38628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 31472,
											"end": 31763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 31472,
											"end": 31763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 31472,
											"end": 31763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 38694,
											"end": 38873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 38694,
											"end": 38873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 35893,
											"end": 36016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35893,
											"end": 36016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 35893,
											"end": 36016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 33406,
											"end": 33609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 33406,
											"end": 33609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 33406,
											"end": 33609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 36240,
											"end": 36342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 36240,
											"end": 36342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 37892,
											"end": 38174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 37892,
											"end": 38174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 38939,
											"end": 39299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 38939,
											"end": 39299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 36408,
											"end": 36721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 36408,
											"end": 36721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 36408,
											"end": 36721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 38240,
											"end": 38402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 38240,
											"end": 38402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 38240,
											"end": 38402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33149,
											"end": 33153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33199,
											"end": 33224,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33184,
											"end": 33224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33184,
											"end": 33224,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33184,
											"end": 33224,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33224,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 33184,
											"end": 33288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33255,
											"end": 33288,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33240,
											"end": 33288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33240,
											"end": 33288,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33240,
											"end": 33288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33240,
											"end": 33251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33240,
											"end": 33288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33240,
											"end": 33288,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33240,
											"end": 33288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33240,
											"end": 33288,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33288,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 33184,
											"end": 33288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33340,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 33184,
											"end": 33340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 33328,
											"end": 33339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 33304,
											"end": 33340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33304,
											"end": 33340,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 33304,
											"end": 33340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33184,
											"end": 33340,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 33184,
											"end": 33340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33165,
											"end": 33340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33165,
											"end": 33340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33047,
											"end": 33347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36132,
											"end": 36145,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36164,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 36157,
											"end": 36169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 36157,
											"end": 36169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36157,
											"end": 36169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37693,
											"end": 37700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37717,
											"end": 37733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 37725,
											"end": 37732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37717,
											"end": 37724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 37717,
											"end": 37733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37717,
											"end": 37733,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 37717,
											"end": 37733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37712,
											"end": 37776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "PUSH",
											"source": 0,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37742,
											"end": 37776,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37712,
											"end": 37776,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37712,
											"end": 37776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37809,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37810,
											"end": 37817,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37794,
											"end": 37818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37787,
											"end": 37818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37787,
											"end": 37818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37625,
											"end": 37825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37273,
											"end": 37286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37289,
											"end": 37313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 37305,
											"end": 37312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37289,
											"end": 37304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 37289,
											"end": 37313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37289,
											"end": 37313,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 37289,
											"end": 37313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37273,
											"end": 37313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37273,
											"end": 37313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37333,
											"end": 37338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37327,
											"end": 37338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37327,
											"end": 37338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37327,
											"end": 37329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37327,
											"end": 37338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37327,
											"end": 37338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37327,
											"end": 37338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 37323,
											"end": 37371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "PUSH",
											"source": 0,
											"value": "943F7B8C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 37371,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37323,
											"end": 37371,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 37323,
											"end": 37371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37402,
											"end": 37407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37386,
											"end": 37407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 37386,
											"end": 37396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 37386,
											"end": 37398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37398,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 37386,
											"end": 37398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37386,
											"end": 37407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37407,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37382,
											"end": 37519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 37382,
											"end": 37519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37413,
											"end": 37450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 37430,
											"end": 37435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37437,
											"end": 37449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 37437,
											"end": 37447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 37437,
											"end": 37449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37437,
											"end": 37449,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 37437,
											"end": 37449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37413,
											"end": 37429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 37413,
											"end": 37450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37413,
											"end": 37450,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 37413,
											"end": 37450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37409,
											"end": 37519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 37409,
											"end": 37519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "PUSH",
											"source": 0,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37473,
											"end": 37508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37409,
											"end": 37519,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 37409,
											"end": 37519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37382,
											"end": 37519,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 37382,
											"end": 37519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37529,
											"end": 37557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 37538,
											"end": 37540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37542,
											"end": 37549,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37551,
											"end": 37556,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37529,
											"end": 37537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 37529,
											"end": 37557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37529,
											"end": 37557,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 37529,
											"end": 37557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37263,
											"end": 37564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37201,
											"end": 37564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32362,
											"end": 32369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32583,
											"end": 32598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 32583,
											"end": 32596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 32583,
											"end": 32598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32583,
											"end": 32598,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 32583,
											"end": 32598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32568,
											"end": 32580,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32568,
											"end": 32580,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32552,
											"end": 32565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32552,
											"end": 32565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32552,
											"end": 32580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32552,
											"end": 32598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32309,
											"end": 32615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38593,
											"end": 38621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 38603,
											"end": 38607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38609,
											"end": 38611,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38613,
											"end": 38620,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38593,
											"end": 38602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 38593,
											"end": 38621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38593,
											"end": 38621,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 38593,
											"end": 38621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38464,
											"end": 38628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31525,
											"end": 31532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31543,
											"end": 31561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 31581,
											"end": 31592,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31593,
											"end": 31597,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31581,
											"end": 31598,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31599,
											"end": 31600,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31581,
											"end": 31601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31576,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 31564,
											"end": 31580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31564,
											"end": 31602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31564,
											"end": 31602,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 31564,
											"end": 31602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31543,
											"end": 31602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31543,
											"end": 31602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31612,
											"end": 31627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31630,
											"end": 31661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 31650,
											"end": 31660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 31640,
											"end": 31644,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 31630,
											"end": 31645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31645,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 31630,
											"end": 31645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 31630,
											"end": 31649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31630,
											"end": 31661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31630,
											"end": 31661,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 31630,
											"end": 31661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31612,
											"end": 31661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31612,
											"end": 31661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31694,
											"end": 31727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 31719,
											"end": 31726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31705,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31706,
											"end": 31710,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31694,
											"end": 31711,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31712,
											"end": 31713,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31714,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 31694,
											"end": 31718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31727,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31694,
											"end": 31727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31727,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 31694,
											"end": 31727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31671,
											"end": 31727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31744,
											"end": 31756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31737,
											"end": 31756,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31737,
											"end": 31756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31737,
											"end": 31756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31737,
											"end": 31756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31737,
											"end": 31756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31472,
											"end": 31763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 38844,
											"end": 38848,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38850,
											"end": 38852,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38854,
											"end": 38861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 38827,
											"end": 38866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 38827,
											"end": 38866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38694,
											"end": 38873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35957,
											"end": 35964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35983,
											"end": 36004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 35996,
											"end": 36003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35983,
											"end": 35995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 35983,
											"end": 36004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35983,
											"end": 36004,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 35983,
											"end": 36004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35983,
											"end": 36009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35983,
											"end": 36009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35983,
											"end": 36009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35976,
											"end": 36009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35976,
											"end": 36009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35893,
											"end": 36016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33470,
											"end": 33477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33510,
											"end": 33511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33493,
											"end": 33512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33493,
											"end": 33512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33493,
											"end": 33498,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33493,
											"end": 33512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33493,
											"end": 33512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33493,
											"end": 33512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 33489,
											"end": 33549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "PUSH",
											"source": 0,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33521,
											"end": 33549,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33489,
											"end": 33549,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 33489,
											"end": 33549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33586,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33587,
											"end": 33592,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33574,
											"end": 33593,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33574,
											"end": 33601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33566,
											"end": 33602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33566,
											"end": 33602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33559,
											"end": 33602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33559,
											"end": 33602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36296,
											"end": 36309,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36328,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 36321,
											"end": 36335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 36321,
											"end": 36335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36321,
											"end": 36335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38002,
											"end": 38014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 38002,
											"end": 38012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 38002,
											"end": 38014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38002,
											"end": 38014,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 38002,
											"end": 38014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37990,
											"end": 38014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37990,
											"end": 38014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37990,
											"end": 37998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37990,
											"end": 38014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37990,
											"end": 38014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37990,
											"end": 38014,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37986,
											"end": 38040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 37986,
											"end": 38040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "PUSH",
											"source": 0,
											"value": "B06307DB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38023,
											"end": 38040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37986,
											"end": 38040,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 37986,
											"end": 38040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38096,
											"end": 38104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38069,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38070,
											"end": 38082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 38070,
											"end": 38080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 38070,
											"end": 38082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38070,
											"end": 38082,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 38070,
											"end": 38082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38051,
											"end": 38083,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38084,
											"end": 38092,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 38051,
											"end": 38104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38148,
											"end": 38156,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38134,
											"end": 38146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 38134,
											"end": 38144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 38134,
											"end": 38146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38134,
											"end": 38146,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 38134,
											"end": 38146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 38158,
											"end": 38166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 38119,
											"end": 38167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38119,
											"end": 38167,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37892,
											"end": 38174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39100,
											"end": 39128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 39110,
											"end": 39114,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39118,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39120,
											"end": 39127,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39100,
											"end": 39109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 39100,
											"end": 39128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39100,
											"end": 39128,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 39100,
											"end": 39128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39142,
											"end": 39157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 39142,
											"end": 39144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39142,
											"end": 39155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39142,
											"end": 39155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39142,
											"end": 39155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 39142,
											"end": 39157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39142,
											"end": 39157,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 39142,
											"end": 39157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39138,
											"end": 39293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39138,
											"end": 39293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 39138,
											"end": 39293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39163,
											"end": 39219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 39194,
											"end": 39198,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39200,
											"end": 39202,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39204,
											"end": 39211,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39213,
											"end": 39218,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39163,
											"end": 39193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 39163,
											"end": 39219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39163,
											"end": 39219,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 39163,
											"end": 39219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39159,
											"end": 39293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 39159,
											"end": 39293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39242,
											"end": 39282,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39159,
											"end": 39293,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 39159,
											"end": 39293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39138,
											"end": 39293,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 39138,
											"end": 39293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38939,
											"end": 39299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36481,
											"end": 36494,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36511,
											"end": 36527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 36519,
											"end": 36526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36511,
											"end": 36518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 36511,
											"end": 36527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36511,
											"end": 36527,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 36511,
											"end": 36527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36506,
											"end": 36565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 36506,
											"end": 36565,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "PUSH",
											"source": 0,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36536,
											"end": 36565,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36506,
											"end": 36565,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 36506,
											"end": 36565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36576,
											"end": 36597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36600,
											"end": 36610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 36600,
											"end": 36608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 36600,
											"end": 36610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36600,
											"end": 36610,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 36600,
											"end": 36610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36576,
											"end": 36610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36576,
											"end": 36610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36652,
											"end": 36653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36633,
											"end": 36640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36680,
											"end": 36687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36689,
											"end": 36707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 36689,
											"end": 36696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36689,
											"end": 36705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 36689,
											"end": 36707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36689,
											"end": 36707,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 36689,
											"end": 36707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 36663,
											"end": 36708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36663,
											"end": 36708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 36627,
											"end": 36714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36620,
											"end": 36714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36408,
											"end": 36721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38337,
											"end": 38341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38360,
											"end": 38378,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38379,
											"end": 38384,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38360,
											"end": 38385,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38386,
											"end": 38394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 38360,
											"end": 38395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38353,
											"end": 38395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38240,
											"end": 38402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21181,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 21026,
											"end": 21181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21111,
											"end": 21115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21149,
											"end": 21174,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21134,
											"end": 21174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21134,
											"end": 21174,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21134,
											"end": 21174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21134,
											"end": 21145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21134,
											"end": 21174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21134,
											"end": 21174,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21134,
											"end": 21174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21134,
											"end": 21174,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39504,
											"end": 39676,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 39504,
											"end": 39676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39561,
											"end": 39565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39603,
											"end": 39610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 39584,
											"end": 39597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 39584,
											"end": 39599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39599,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 39584,
											"end": 39599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39610,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39637,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 39584,
											"end": 39637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39624,
											"end": 39637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39624,
											"end": 39637,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39614,
											"end": 39621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39614,
											"end": 39637,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39637,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 39584,
											"end": 39637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 39584,
											"end": 39669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39654,
											"end": 39661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39642,
											"end": 39662,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 39642,
											"end": 39669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39641,
											"end": 39669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39584,
											"end": 39669,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 39584,
											"end": 39669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39577,
											"end": 39669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39577,
											"end": 39669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39504,
											"end": 39676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39504,
											"end": 39676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39504,
											"end": 39676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39504,
											"end": 39676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9623,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9527,
											"end": 9623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9606,
											"end": 9616,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9527,
											"end": 9623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47312,
											"end": 47501,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 47312,
											"end": 47501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47449,
											"end": 47451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47437,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47438,
											"end": 47445,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47422,
											"end": 47451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47486,
											"end": 47493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47482,
											"end": 47484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47475,
											"end": 47480,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47466,
											"end": 47494,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 47312,
											"end": 47501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47312,
											"end": 47501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47312,
											"end": 47501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47312,
											"end": 47501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32090,
											"end": 32180,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 32090,
											"end": 32180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32090,
											"end": 32180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32090,
											"end": 32180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42287,
											"end": 44431,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 42287,
											"end": 44431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42397,
											"end": 42419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 42414,
											"end": 42418,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42397,
											"end": 42413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 42397,
											"end": 42419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42397,
											"end": 42419,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 42397,
											"end": 42419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42429,
											"end": 42449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 42446,
											"end": 42448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42429,
											"end": 42445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 42429,
											"end": 42449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42429,
											"end": 42449,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 42429,
											"end": 42449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42459,
											"end": 42494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42497,
											"end": 42518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 42510,
											"end": 42517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42497,
											"end": 42509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 42497,
											"end": 42518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42497,
											"end": 42518,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 42497,
											"end": 42518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42459,
											"end": 42518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42459,
											"end": 42518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42555,
											"end": 42559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42533,
											"end": 42559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42533,
											"end": 42551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42533,
											"end": 42559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42533,
											"end": 42559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 42596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 42529,
											"end": 42596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "PUSH",
											"source": 0,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42568,
											"end": 42596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 42596,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 42529,
											"end": 42596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42607,
											"end": 42629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42649,
											"end": 42653,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42633,
											"end": 42653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 42633,
											"end": 42643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 42633,
											"end": 42645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42645,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 42633,
											"end": 42645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42633,
											"end": 42653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42653,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 42633,
											"end": 42705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42669,
											"end": 42705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 42686,
											"end": 42690,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42692,
											"end": 42704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 42692,
											"end": 42702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 42692,
											"end": 42704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42692,
											"end": 42704,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 42692,
											"end": 42704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42669,
											"end": 42685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 42669,
											"end": 42705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42669,
											"end": 42705,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 42669,
											"end": 42705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42705,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 42633,
											"end": 42705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 42633,
											"end": 42757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42745,
											"end": 42757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 42745,
											"end": 42755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 42745,
											"end": 42757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42745,
											"end": 42757,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 42745,
											"end": 42757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42721,
											"end": 42757,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42721,
											"end": 42757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42721,
											"end": 42741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 42733,
											"end": 42740,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42721,
											"end": 42732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 42721,
											"end": 42741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42721,
											"end": 42741,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 42721,
											"end": 42741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42721,
											"end": 42757,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42721,
											"end": 42757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42721,
											"end": 42757,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42633,
											"end": 42757,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 42633,
											"end": 42757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42607,
											"end": 42758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42607,
											"end": 42758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42774,
											"end": 42791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42769,
											"end": 42835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 42769,
											"end": 42835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "PUSH",
											"source": 0,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42800,
											"end": 42835,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42769,
											"end": 42835,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 42769,
											"end": 42835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42863,
											"end": 42864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42849,
											"end": 42865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42849,
											"end": 42865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42849,
											"end": 42851,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42849,
											"end": 42865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42849,
											"end": 42865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42849,
											"end": 42865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42845,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 42845,
											"end": 42897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42874,
											"end": 42897,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42845,
											"end": 42897,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 42845,
											"end": 42897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42908,
											"end": 42951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 42930,
											"end": 42934,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42936,
											"end": 42938,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42940,
											"end": 42947,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42950,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42908,
											"end": 42929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 42908,
											"end": 42951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42908,
											"end": 42951,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 42908,
											"end": 42951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43013,
											"end": 43048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 43030,
											"end": 43031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43034,
											"end": 43041,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43043,
											"end": 43047,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43013,
											"end": 43021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 43013,
											"end": 43048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43013,
											"end": 43048,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 43013,
											"end": 43048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43368,
											"end": 43369,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43338,
											"end": 43350,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43351,
											"end": 43355,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43338,
											"end": 43356,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43338,
											"end": 43364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43411,
											"end": 43412,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43383,
											"end": 43395,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43396,
											"end": 43398,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43383,
											"end": 43399,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43383,
											"end": 43407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43383,
											"end": 43412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43427,
											"end": 43458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43461,
											"end": 43472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43473,
											"end": 43480,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43461,
											"end": 43481,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43427,
											"end": 43481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43427,
											"end": 43481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43511,
											"end": 43513,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43495,
											"end": 43508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43495,
											"end": 43513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 43575,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43527,
											"end": 43550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43550,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 43527,
											"end": 43576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43824,
											"end": 43843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43856,
											"end": 43857,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43846,
											"end": 43853,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43846,
											"end": 43857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43824,
											"end": 43857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43824,
											"end": 43857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43871,
											"end": 43902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43905,
											"end": 43916,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43917,
											"end": 43928,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43905,
											"end": 43929,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43871,
											"end": 43929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43871,
											"end": 43929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43972,
											"end": 43973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43947,
											"end": 43974,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43947,
											"end": 43974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43947,
											"end": 43960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43974,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43947,
											"end": 43974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43947,
											"end": 43974,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43943,
											"end": 44320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 43943,
											"end": 44320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44154,
											"end": 44167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44154,
											"end": 44167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44139,
											"end": 44150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44139,
											"end": 44167,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44135,
											"end": 44306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 44135,
											"end": 44306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44207,
											"end": 44211,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44191,
											"end": 44204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44191,
											"end": 44211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44259,
											"end": 44272,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44259,
											"end": 44287,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44259,
											"end": 44287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44259,
											"end": 44287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44233,
											"end": 44256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44256,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44233,
											"end": 44287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44135,
											"end": 44306,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 44135,
											"end": 44306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43943,
											"end": 44320,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 43943,
											"end": 44320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43314,
											"end": 44330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43314,
											"end": 44330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43314,
											"end": 44330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44364,
											"end": 44371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44360,
											"end": 44362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44354,
											"end": 44358,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44345,
											"end": 44372,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 44382,
											"end": 44424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 44403,
											"end": 44407,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44409,
											"end": 44411,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44413,
											"end": 44420,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44422,
											"end": 44423,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44382,
											"end": 44402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 44382,
											"end": 44424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44382,
											"end": 44424,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 44382,
											"end": 44424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42387,
											"end": 44431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42387,
											"end": 44431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42287,
											"end": 44431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42287,
											"end": 44431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42287,
											"end": 44431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42287,
											"end": 44431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3246,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3150,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3238,
											"end": 3239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3234,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3246,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3589,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3493,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 3577,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3589,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2879,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2783,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2871,
											"end": 2872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2867,
											"end": 2872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2860,
											"end": 2872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2860,
											"end": 2872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 35836,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 34750,
											"end": 35836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34812,
											"end": 34833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 34812,
											"end": 34833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 34812,
											"end": 34833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34812,
											"end": 34833,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 34812,
											"end": 34833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34845,
											"end": 34857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34860,
											"end": 34867,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34845,
											"end": 34867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34845,
											"end": 34867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34925,
											"end": 34929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34906,
											"end": 34921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 34906,
											"end": 34919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 34906,
											"end": 34921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34906,
											"end": 34921,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 34906,
											"end": 34921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34906,
											"end": 34929,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34902,
											"end": 35772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 34902,
											"end": 35772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34942,
											"end": 34955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34935,
											"end": 34939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34935,
											"end": 34955,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34931,
											"end": 35772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34931,
											"end": 35772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 34931,
											"end": 35772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35009,
											"end": 35020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35021,
											"end": 35025,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35009,
											"end": 35026,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34975,
											"end": 35026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35049,
											"end": 35065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35049,
											"end": 35065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35044,
											"end": 35758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 35044,
											"end": 35758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35119,
											"end": 35120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35093,
											"end": 35121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35093,
											"end": 35121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35093,
											"end": 35102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35093,
											"end": 35107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35093,
											"end": 35107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35093,
											"end": 35107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35093,
											"end": 35121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35093,
											"end": 35121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35093,
											"end": 35121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35089,
											"end": 35188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35156,
											"end": 35165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35149,
											"end": 35165,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35149,
											"end": 35165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35149,
											"end": 35165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35149,
											"end": 35165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35149,
											"end": 35165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35149,
											"end": 35165,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35188,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35089,
											"end": 35188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35492,
											"end": 35496,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35580,
											"end": 35584,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35568,
											"end": 35585,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35556,
											"end": 35585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35641,
											"end": 35642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35615,
											"end": 35643,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35615,
											"end": 35643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35615,
											"end": 35629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35643,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35615,
											"end": 35643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35643,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 35611,
											"end": 35718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35682,
											"end": 35691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35675,
											"end": 35691,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35675,
											"end": 35691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35675,
											"end": 35691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35675,
											"end": 35691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35675,
											"end": 35691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 35675,
											"end": 35691,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35718,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 35611,
											"end": 35718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 35485,
											"end": 35740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35044,
											"end": 35758,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 35044,
											"end": 35758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34957,
											"end": 35772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34931,
											"end": 35772,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 34931,
											"end": 35772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34902,
											"end": 35772,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 34902,
											"end": 35772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "PUSH",
											"source": 0,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35798,
											"end": 35829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 35836,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 34750,
											"end": 35836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 35836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 35836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 35836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34750,
											"end": 35836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10928,
											"end": 11248,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10928,
											"end": 11248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10988,
											"end": 10992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11218,
											"end": 11225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11218,
											"end": 11237,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11218,
											"end": 11237,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11218,
											"end": 11237,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11218,
											"end": 11241,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11211,
											"end": 11241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11211,
											"end": 11241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10928,
											"end": 11248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10928,
											"end": 11248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10928,
											"end": 11248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10928,
											"end": 11248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48140,
											"end": 48144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48176,
											"end": 48178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48160,
											"end": 48196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48196,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 48197,
											"end": 48209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 48197,
											"end": 48207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 48197,
											"end": 48209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48197,
											"end": 48209,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 48197,
											"end": 48209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48211,
											"end": 48215,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48217,
											"end": 48224,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48226,
											"end": 48231,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 48160,
											"end": 48232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 48160,
											"end": 48232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 48160,
											"end": 48232,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48408,
											"end": 48409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48391,
											"end": 48397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48391,
											"end": 48404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48391,
											"end": 48409,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48387,
											"end": 48616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 48387,
											"end": 48616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48436,
											"end": 48476,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48387,
											"end": 48616,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 48387,
											"end": 48616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48576,
											"end": 48582,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48570,
											"end": 48583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48561,
											"end": 48567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48557,
											"end": 48559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48553,
											"end": 48568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48546,
											"end": 48584,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 48156,
											"end": 48626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48288,
											"end": 48333,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 48288,
											"end": 48333,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 48288,
											"end": 48333,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 48278,
											"end": 48333,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48278,
											"end": 48333,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 48278,
											"end": 48333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48278,
											"end": 48284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48278,
											"end": 48333,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48278,
											"end": 48333,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 48278,
											"end": 48333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48278,
											"end": 48333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48271,
											"end": 48333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48271,
											"end": 48333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48271,
											"end": 48333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47982,
											"end": 48632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36962,
											"end": 37144,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 36962,
											"end": 37144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37013,
											"end": 37026,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "PUSH",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "PUSH data",
											"source": 0,
											"value": "873FD5F964B13E1038074DFA7BF985864A803BE90F361E484B606B70D53E1173"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "PUSH",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37038,
											"end": 37128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36962,
											"end": 37144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36962,
											"end": 37144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7864,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7161,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7217,
											"end": 7230,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7443,
											"end": 7444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7434,
											"end": 7439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7434,
											"end": 7444,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 7430,
											"end": 7481,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "PUSH",
											"source": 0,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 7460,
											"end": 7470,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7481,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 7430,
											"end": 7481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7505,
											"end": 7510,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7520,
											"end": 7534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7551,
											"end": 7555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7551,
											"end": 7560,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 7576,
											"end": 7584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7576,
											"end": 7584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7608,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 7598,
											"end": 7608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 7544,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7660,
											"end": 7666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 7650,
											"end": 7667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7689,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7694,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7720,
											"end": 7721,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 7710,
											"end": 7721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7788,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7778,
											"end": 7783,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 7778,
											"end": 7788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 7778,
											"end": 7788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7778,
											"end": 7788,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 7778,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7767,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7765,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 7765,
											"end": 7789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 7765,
											"end": 7789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7789,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 7765,
											"end": 7789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7752,
											"end": 7791,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 7752,
											"end": 7791,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 7735,
											"end": 7749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7814,
											"end": 7816,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 7805,
											"end": 7816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 7677,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7857,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7864,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 7161,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31993,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 31769,
											"end": 31993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31841,
											"end": 31857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 31852,
											"end": 31856,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31841,
											"end": 31851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 31841,
											"end": 31857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31841,
											"end": 31857,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 31841,
											"end": 31857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31825,
											"end": 31857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 31920,
											"end": 31925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31906,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31907,
											"end": 31911,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31895,
											"end": 31912,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31913,
											"end": 31914,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31915,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 31895,
											"end": 31919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31926,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31895,
											"end": 31926,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31895,
											"end": 31926,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 31895,
											"end": 31926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31885,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31886,
											"end": 31890,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31874,
											"end": 31891,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31892,
											"end": 31893,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31874,
											"end": 31894,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31926,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31874,
											"end": 31926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31966,
											"end": 31978,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31954,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31955,
											"end": 31959,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31943,
											"end": 31960,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31961,
											"end": 31962,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31943,
											"end": 31963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31978,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31943,
											"end": 31978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31815,
											"end": 31993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31769,
											"end": 31993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49263,
											"end": 49417,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 49263,
											"end": 49417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49263,
											"end": 49417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49263,
											"end": 49417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49263,
											"end": 49417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49263,
											"end": 49417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49263,
											"end": 49417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50058,
											"end": 50211,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 50058,
											"end": 50211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50058,
											"end": 50211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50058,
											"end": 50211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50058,
											"end": 50211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50058,
											"end": 50211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50058,
											"end": 50211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "205"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1966,
											"end": 1977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2014,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2076,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2089,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 2105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2187,
											"end": 2192,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2207,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 2368,
											"end": 2373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 2335,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2449,
											"end": 2452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2390,
											"end": 2461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2501,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 2470,
											"end": 2522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 2547,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2219,
											"end": 2583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2738,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2799,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2817,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3064,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3089,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3210,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 3246,
											"end": 3251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3219,
											"end": 3252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 3369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3358,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3378,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 3523,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3469,
											"end": 3586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3264,
											"end": 3593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 3815,
											"end": 3820,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3797,
											"end": 3821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3920,
											"end": 3944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4077,
											"end": 4086,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4151,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4101,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 4179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4276,
											"end": 4281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4258,
											"end": 4282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4283,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4287,
											"end": 4299,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4359,
											"end": 4364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4404,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4440,
											"end": 4445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4413,
											"end": 4446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4526,
											"end": 4532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4581,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4554,
											"end": 4586,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4589,
											"end": 4668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 4779,
											"end": 4786,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4755,
											"end": 4777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4734,
											"end": 4787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 4907,
											"end": 4914,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4896,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4883,
											"end": 4905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4862,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 4925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 5043,
											"end": 5048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 5025,
											"end": 5049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 5025,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5050,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 5056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4938,
											"end": 5056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5155,
											"end": 5159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5182,
											"end": 5191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5178,
											"end": 5196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5274,
											"end": 5275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5259,
											"end": 5276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5256,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 5206,
											"end": 5277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5375,
											"end": 5381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5434,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5420,
											"end": 5429,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5411,
											"end": 5418,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5430,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5403,
											"end": 5435,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 5438,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 5438,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 5400,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 5628,
											"end": 5635,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5608,
											"end": 5617,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 5583,
											"end": 5636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 5583,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5636,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5687,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 5756,
											"end": 5763,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5745,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5732,
											"end": 5754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 5711,
											"end": 5764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 5711,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 5884,
											"end": 5891,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 5881,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5860,
											"end": 5882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 5839,
											"end": 5892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 5839,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5829,
											"end": 5892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5829,
											"end": 5892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5909,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 5980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6025,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6011,
											"end": 6020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5998,
											"end": 6021,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6026,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 6029,
											"end": 6108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6208,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6195,
											"end": 6217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6174,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 6244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5915,
											"end": 6244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 6320,
											"end": 6341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6313,
											"end": 6318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6310,
											"end": 6342,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6358,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6415,
											"end": 6420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6460,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 6493,
											"end": 6498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6469,
											"end": 6499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6576,
											"end": 6582,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6621,
											"end": 6630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6619,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6604,
											"end": 6636,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 6639,
											"end": 6718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6759,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 6829,
											"end": 6836,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6818,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6784,
											"end": 6837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 6847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 6954,
											"end": 6961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 6951,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6943,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6952,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 6912,
											"end": 6962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6857,
											"end": 6972,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7096,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7217,
											"end": 7218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7207,
											"end": 7219,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7279,
											"end": 7356,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7376,
											"end": 7380,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7366,
											"end": 7381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7397,
											"end": 7398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7390,
											"end": 7405,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 7500,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7492,
											"end": 7498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7488,
											"end": 7528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7637,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7594,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7613,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7576,
											"end": 7638,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7641,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7738,
											"end": 7744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7765,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 7822,
											"end": 7826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 7794,
											"end": 7827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7704,
											"end": 7833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7979,
											"end": 8009,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 8012,
											"end": 8030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 8050,
											"end": 8079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8128,
											"end": 8132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8124,
											"end": 8139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 8146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8231,
											"end": 8234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8229,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8213,
											"end": 8243,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 8298,
											"end": 8299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8284,
											"end": 8287,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8280,
											"end": 8296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8300,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8152,
											"end": 8306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 8471,
											"end": 8477,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 8430,
											"end": 8478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 8414,
											"end": 8479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8502,
											"end": 8508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8488,
											"end": 8509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8533,
											"end": 8538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8581,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8564,
											"end": 8567,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8557,
											"end": 8582,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8585,
											"end": 8664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 8709,
											"end": 8715,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8704,
											"end": 8707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8699,
											"end": 8702,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 8675,
											"end": 8716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8395,
											"end": 8722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8796,
											"end": 8801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 8842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8830,
											"end": 8836,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 8843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8822,
											"end": 8849,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 8853,
											"end": 8932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8970,
											"end": 8976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8957,
											"end": 8977,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 9069,
											"end": 9072,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9061,
											"end": 9067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9054,
											"end": 9058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 8995,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 9079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 9079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9180,
											"end": 9186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9256,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9241,
											"end": 9250,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9239,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9251,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9224,
											"end": 9257,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 9260,
											"end": 9339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9380,
											"end": 9381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 9450,
											"end": 9457,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9430,
											"end": 9439,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 9405,
											"end": 9458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9351,
											"end": 9468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 9578,
											"end": 9585,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9569,
											"end": 9575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9567,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9554,
											"end": 9576,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 9533,
											"end": 9586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9637,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 9706,
											"end": 9713,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9686,
											"end": 9695,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 9704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 9661,
											"end": 9714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9606,
											"end": 9724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9791,
											"end": 9793,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9780,
											"end": 9789,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9763,
											"end": 9795,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9814,
											"end": 9820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9811,
											"end": 9841,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 9844,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 10003,
											"end": 10010,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 10001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 9949,
											"end": 10011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9734,
											"end": 10021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 10028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10102,
											"end": 10108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10147,
											"end": 10156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10134,
											"end": 10157,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10130,
											"end": 10162,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 10165,
											"end": 10244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10285,
											"end": 10286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 10355,
											"end": 10362,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10346,
											"end": 10352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10335,
											"end": 10344,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10331,
											"end": 10353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 10310,
											"end": 10363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10256,
											"end": 10373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10412,
											"end": 10414,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 10483,
											"end": 10490,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10474,
											"end": 10480,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10463,
											"end": 10472,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 10438,
											"end": 10491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10383,
											"end": 10501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10034,
											"end": 10508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10562,
											"end": 10639,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10559,
											"end": 10560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10552,
											"end": 10640,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10659,
											"end": 10663,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10656,
											"end": 10657,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10649,
											"end": 10664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10673,
											"end": 10688,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10744,
											"end": 10750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10782,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10775,
											"end": 10779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10771,
											"end": 10783,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10829,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10822,
											"end": 10826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10818,
											"end": 10830,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10905,
											"end": 10909,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 10897,
											"end": 10903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10893,
											"end": 10910,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10967,
											"end": 10969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10959,
											"end": 10965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 10970,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10933,
											"end": 10971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 10986,
											"end": 11004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 11020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 11020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11128,
											"end": 11139,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11165,
											"end": 11168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11150,
											"end": 11168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11286,
											"end": 11289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 11347,
											"end": 11352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 11314,
											"end": 11353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 11314,
											"end": 11353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11446,
											"end": 11449,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 11369,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 11369,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11362,
											"end": 11458,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11362,
											"end": 11458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 11512,
											"end": 11518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11507,
											"end": 11510,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11500,
											"end": 11504,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11493,
											"end": 11498,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11489,
											"end": 11505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 11467,
											"end": 11519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 11467,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11544,
											"end": 11550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11539,
											"end": 11542,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11535,
											"end": 11551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11290,
											"end": 11557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11180,
											"end": 11557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11180,
											"end": 11557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11743,
											"end": 11746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 11856,
											"end": 11859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11847,
											"end": 11853,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 11765,
											"end": 11860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 11765,
											"end": 11860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11758,
											"end": 11860,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11758,
											"end": 11860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 11968,
											"end": 11971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11959,
											"end": 11965,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 11877,
											"end": 11972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 11877,
											"end": 11972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 11972,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 11972,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11989,
											"end": 11992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 11992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 11992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12004,
											"end": 12184,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 12004,
											"end": 12184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12052,
											"end": 12129,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12049,
											"end": 12050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12042,
											"end": 12130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12149,
											"end": 12153,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 12146,
											"end": 12147,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12139,
											"end": 12154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12177,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12170,
											"end": 12171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12163,
											"end": 12178,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12381,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 12190,
											"end": 12381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12230,
											"end": 12234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12250,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 12268,
											"end": 12269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12250,
											"end": 12270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 12250,
											"end": 12270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12250,
											"end": 12270,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 12250,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12245,
											"end": 12270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12245,
											"end": 12270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12284,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 12302,
											"end": 12303,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12284,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 12284,
											"end": 12304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12284,
											"end": 12304,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 12284,
											"end": 12304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12279,
											"end": 12304,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12279,
											"end": 12304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12323,
											"end": 12324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12320,
											"end": 12321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12317,
											"end": 12325,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12348,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 12314,
											"end": 12348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12328,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 12328,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 12328,
											"end": 12346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12328,
											"end": 12346,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 12328,
											"end": 12346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12348,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 12314,
											"end": 12348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12373,
											"end": 12374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12370,
											"end": 12371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12366,
											"end": 12375,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12358,
											"end": 12375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12358,
											"end": 12375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12381,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12735,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 12387,
											"end": 12735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12427,
											"end": 12434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12450,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 12468,
											"end": 12469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12450,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 12450,
											"end": 12470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12450,
											"end": 12470,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 12450,
											"end": 12470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12445,
											"end": 12470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12445,
											"end": 12470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12484,
											"end": 12504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 12502,
											"end": 12503,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12484,
											"end": 12504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 12484,
											"end": 12504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12484,
											"end": 12504,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 12484,
											"end": 12504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12479,
											"end": 12504,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12479,
											"end": 12504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12672,
											"end": 12673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12604,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12600,
											"end": 12674,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12597,
											"end": 12598,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12594,
											"end": 12675,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12589,
											"end": 12590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12582,
											"end": 12591,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12575,
											"end": 12592,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12571,
											"end": 12676,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12568,
											"end": 12699,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12568,
											"end": 12699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 12568,
											"end": 12699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12679,
											"end": 12697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 12679,
											"end": 12697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 12679,
											"end": 12697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12679,
											"end": 12697,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 12679,
											"end": 12697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12568,
											"end": 12699,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 12568,
											"end": 12699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12727,
											"end": 12728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12724,
											"end": 12725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12720,
											"end": 12729,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12709,
											"end": 12729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12709,
											"end": 12729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12735,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12387,
											"end": 12735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12741,
											"end": 13046,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 12741,
											"end": 13046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12781,
											"end": 12784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12800,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 12818,
											"end": 12819,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 12800,
											"end": 12820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12800,
											"end": 12820,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 12800,
											"end": 12820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12795,
											"end": 12820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12795,
											"end": 12820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12834,
											"end": 12854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 12852,
											"end": 12853,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12834,
											"end": 12854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 12834,
											"end": 12854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12834,
											"end": 12854,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 12834,
											"end": 12854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12829,
											"end": 12854,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12829,
											"end": 12854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12988,
											"end": 12989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12920,
											"end": 12986,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12916,
											"end": 12990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12913,
											"end": 12914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12910,
											"end": 12991,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12907,
											"end": 13014,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12907,
											"end": 13014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 12907,
											"end": 13014,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12994,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 12994,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 12994,
											"end": 13012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12994,
											"end": 13012,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 12994,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12907,
											"end": 13014,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 12907,
											"end": 13014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13038,
											"end": 13039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13035,
											"end": 13036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13031,
											"end": 13040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13024,
											"end": 13040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13024,
											"end": 13040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12741,
											"end": 13046,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12741,
											"end": 13046,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12741,
											"end": 13046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12741,
											"end": 13046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12741,
											"end": 13046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13052,
											"end": 13150,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 13052,
											"end": 13150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13103,
											"end": 13109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13137,
											"end": 13142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13131,
											"end": 13143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13121,
											"end": 13143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13121,
											"end": 13143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13052,
											"end": 13150,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13052,
											"end": 13150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13052,
											"end": 13150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13052,
											"end": 13150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13324,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 13156,
											"end": 13324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13239,
											"end": 13250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13273,
											"end": 13279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13261,
											"end": 13280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13308,
											"end": 13311,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13304,
											"end": 13318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13289,
											"end": 13318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13289,
											"end": 13318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13324,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13330,
											"end": 13690,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 13330,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13416,
											"end": 13419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13444,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 13476,
											"end": 13481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 13444,
											"end": 13482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13482,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 13444,
											"end": 13482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13498,
											"end": 13568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 13561,
											"end": 13567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13559,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13498,
											"end": 13568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 13498,
											"end": 13568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13498,
											"end": 13568,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 13498,
											"end": 13568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13491,
											"end": 13568,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13491,
											"end": 13568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13577,
											"end": 13629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 13622,
											"end": 13628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13617,
											"end": 13620,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13610,
											"end": 13614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13603,
											"end": 13608,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13599,
											"end": 13615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13577,
											"end": 13629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 13577,
											"end": 13629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13577,
											"end": 13629,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 13577,
											"end": 13629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13654,
											"end": 13683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 13676,
											"end": 13682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13654,
											"end": 13683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 13654,
											"end": 13683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13654,
											"end": 13683,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 13654,
											"end": 13683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13649,
											"end": 13652,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13645,
											"end": 13684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13638,
											"end": 13684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13638,
											"end": 13684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13330,
											"end": 13690,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13330,
											"end": 13690,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13330,
											"end": 13690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13330,
											"end": 13690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13330,
											"end": 13690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13891,
											"end": 13895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13929,
											"end": 13932,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13918,
											"end": 13927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13914,
											"end": 13933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13906,
											"end": 13933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13906,
											"end": 13933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 14011,
											"end": 14012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14000,
											"end": 14009,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13996,
											"end": 14013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13987,
											"end": 13993,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 13943,
											"end": 14014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 14014,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 13943,
											"end": 14014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14024,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 14092,
											"end": 14094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14081,
											"end": 14090,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14077,
											"end": 14095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14068,
											"end": 14074,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14024,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 14024,
											"end": 14096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14024,
											"end": 14096,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 14024,
											"end": 14096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14106,
											"end": 14178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 14174,
											"end": 14176,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14163,
											"end": 14172,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14159,
											"end": 14177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14150,
											"end": 14156,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14106,
											"end": 14178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 14106,
											"end": 14178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14106,
											"end": 14178,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 14106,
											"end": 14178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14225,
											"end": 14234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14219,
											"end": 14223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14215,
											"end": 14235,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14210,
											"end": 14212,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14199,
											"end": 14208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14195,
											"end": 14213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14188,
											"end": 14236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14253,
											"end": 14329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 14324,
											"end": 14328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14321,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14253,
											"end": 14329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 14253,
											"end": 14329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14253,
											"end": 14329,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 14253,
											"end": 14329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14245,
											"end": 14329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14245,
											"end": 14329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13696,
											"end": 14336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14342,
											"end": 14483,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 14342,
											"end": 14483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14398,
											"end": 14403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14429,
											"end": 14435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14423,
											"end": 14436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14414,
											"end": 14436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14414,
											"end": 14436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14445,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 14471,
											"end": 14476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14445,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 14445,
											"end": 14477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14445,
											"end": 14477,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 14445,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14342,
											"end": 14483,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14342,
											"end": 14483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14342,
											"end": 14483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14342,
											"end": 14483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14342,
											"end": 14483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14489,
											"end": 14838,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 14489,
											"end": 14838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14558,
											"end": 14564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14607,
											"end": 14609,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14595,
											"end": 14604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14586,
											"end": 14593,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14582,
											"end": 14605,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14578,
											"end": 14610,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 14575,
											"end": 14694,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14575,
											"end": 14694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 14575,
											"end": 14694,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14613,
											"end": 14692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 14613,
											"end": 14692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 14613,
											"end": 14692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14613,
											"end": 14692,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 14613,
											"end": 14692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14575,
											"end": 14694,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 14575,
											"end": 14694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14733,
											"end": 14734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14758,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 14813,
											"end": 14820,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14804,
											"end": 14810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14793,
											"end": 14802,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14789,
											"end": 14811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14758,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 14758,
											"end": 14821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14758,
											"end": 14821,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 14758,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14748,
											"end": 14821,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14748,
											"end": 14821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14704,
											"end": 14831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14489,
											"end": 14838,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14489,
											"end": 14838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14489,
											"end": 14838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14489,
											"end": 14838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14489,
											"end": 14838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14844,
											"end": 15077,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 14844,
											"end": 15077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14883,
											"end": 14886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14906,
											"end": 14930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 14924,
											"end": 14929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14906,
											"end": 14930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 14906,
											"end": 14930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14906,
											"end": 14930,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 14906,
											"end": 14930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14897,
											"end": 14930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14897,
											"end": 14930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14952,
											"end": 15018,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14945,
											"end": 14950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14942,
											"end": 15019,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14939,
											"end": 15042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 14939,
											"end": 15042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15022,
											"end": 15040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 15022,
											"end": 15040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 15022,
											"end": 15040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15022,
											"end": 15040,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 15022,
											"end": 15040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14939,
											"end": 15042,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 14939,
											"end": 15042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15069,
											"end": 15070,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15062,
											"end": 15067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15058,
											"end": 15071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15051,
											"end": 15071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15051,
											"end": 15071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14844,
											"end": 15077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14844,
											"end": 15077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14844,
											"end": 15077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14844,
											"end": 15077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15083,
											"end": 15263,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 15083,
											"end": 15263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15131,
											"end": 15208,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15128,
											"end": 15129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15121,
											"end": 15209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15228,
											"end": 15232,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 15225,
											"end": 15226,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15218,
											"end": 15233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15252,
											"end": 15256,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15249,
											"end": 15250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15242,
											"end": 15257,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15269,
											"end": 15454,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 15269,
											"end": 15454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15309,
											"end": 15310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15326,
											"end": 15346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 15344,
											"end": 15345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15326,
											"end": 15346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 15326,
											"end": 15346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15326,
											"end": 15346,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 15326,
											"end": 15346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15321,
											"end": 15346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15321,
											"end": 15346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15360,
											"end": 15380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 15378,
											"end": 15379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15360,
											"end": 15380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 15360,
											"end": 15380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15360,
											"end": 15380,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 15360,
											"end": 15380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15355,
											"end": 15380,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15355,
											"end": 15380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15399,
											"end": 15400,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15389,
											"end": 15424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 15389,
											"end": 15424,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 15404,
											"end": 15422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15389,
											"end": 15424,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 15389,
											"end": 15424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15446,
											"end": 15447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15443,
											"end": 15444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15439,
											"end": 15448,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15434,
											"end": 15448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15434,
											"end": 15448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15269,
											"end": 15454,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15269,
											"end": 15454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15269,
											"end": 15454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15269,
											"end": 15454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15269,
											"end": 15454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15636,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 15460,
											"end": 15636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15492,
											"end": 15493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15509,
											"end": 15529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 15527,
											"end": 15528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15509,
											"end": 15529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 15509,
											"end": 15529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15509,
											"end": 15529,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 15509,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15504,
											"end": 15529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15504,
											"end": 15529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15543,
											"end": 15563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 15561,
											"end": 15562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15543,
											"end": 15563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 15543,
											"end": 15563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15543,
											"end": 15563,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 15543,
											"end": 15563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15538,
											"end": 15563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15538,
											"end": 15563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15582,
											"end": 15583,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15572,
											"end": 15607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 15572,
											"end": 15607,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15587,
											"end": 15605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 15587,
											"end": 15605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 15587,
											"end": 15605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15587,
											"end": 15605,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 15587,
											"end": 15605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15572,
											"end": 15607,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 15572,
											"end": 15607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15628,
											"end": 15629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15625,
											"end": 15626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15621,
											"end": 15630,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 15630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 15630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15636,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15460,
											"end": 15636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15642,
											"end": 15822,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 15642,
											"end": 15822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15690,
											"end": 15767,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15687,
											"end": 15688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15680,
											"end": 15768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15787,
											"end": 15791,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 15784,
											"end": 15785,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15777,
											"end": 15792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15811,
											"end": 15815,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15808,
											"end": 15809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15801,
											"end": 15816,
											"name": "REVERT",
											"source": 1
										}
									],
									".data": {
										"873FD5F964B13E1038074DFA7BF985864A803BE90F361E484B606B70D53E1173": "68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d57755a3650574a535770704d354168344337747836646845476f626b686b6e734c58333446423957746e684d2f"
									}
								}
							},
							"sourceList": [
								"opensea_test_flat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BlockScore(address)": "325b272a",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"BlockScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..). Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply. Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"opensea_test_flat.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"opensea_test_flat.sol\":{\"keccak256\":\"0x31b67d705f29eb4529b89cc0dfe31be3bba37bb6de64ac04ee1a58ead639e427\",\"urls\":[\"bzz-raw://8eadb2193ffb89029106c470c7efbdf5514a4ab03184f5dfd6b649c2810b80fa\",\"dweb:/ipfs/QmTEZbJmBETHbLMieXXjLQeZkJo1SELxCAvxxP1Vai6NGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1116,
								"contract": "opensea_test_flat.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1118,
								"contract": "opensea_test_flat.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1120,
								"contract": "opensea_test_flat.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1122,
								"contract": "opensea_test_flat.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1127,
								"contract": "opensea_test_flat.sol:ERC721A",
								"label": "_ownerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(TokenOwnership)1079_storage)"
							},
							{
								"astId": 1132,
								"contract": "opensea_test_flat.sol:ERC721A",
								"label": "_addressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(AddressData)1088_storage)"
							},
							{
								"astId": 1136,
								"contract": "opensea_test_flat.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1142,
								"contract": "opensea_test_flat.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1149,
								"contract": "opensea_test_flat.sol:ERC721A",
								"label": "_BlockScore",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_struct(AddressData)1088_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IERC721A.AddressData)",
								"numberOfBytes": "32",
								"value": "t_struct(AddressData)1088_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(TokenOwnership)1079_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IERC721A.TokenOwnership)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenOwnership)1079_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressData)1088_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.AddressData",
								"members": [
									{
										"astId": 1081,
										"contract": "opensea_test_flat.sol:ERC721A",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1083,
										"contract": "opensea_test_flat.sol:ERC721A",
										"label": "numberMinted",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1085,
										"contract": "opensea_test_flat.sol:ERC721A",
										"label": "numberBurned",
										"offset": 16,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1087,
										"contract": "opensea_test_flat.sol:ERC721A",
										"label": "aux",
										"offset": 24,
										"slot": "0",
										"type": "t_uint64"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(TokenOwnership)1079_storage": {
								"encoding": "inplace",
								"label": "struct IERC721A.TokenOwnership",
								"members": [
									{
										"astId": 1074,
										"contract": "opensea_test_flat.sol:ERC721A",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1076,
										"contract": "opensea_test_flat.sol:ERC721A",
										"label": "startTimestamp",
										"offset": 20,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1078,
										"contract": "opensea_test_flat.sol:ERC721A",
										"label": "burned",
										"offset": 28,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApprovalToCurrentOwner()": [
								{
									"notice": "The caller cannot approve to the current owner."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IDCF": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "BlockScore",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"BlockScore(address)": "325b272a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"BlockScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"opensea_test_flat.sol\":\"IDCF\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"opensea_test_flat.sol\":{\"keccak256\":\"0x31b67d705f29eb4529b89cc0dfe31be3bba37bb6de64ac04ee1a58ead639e427\",\"urls\":[\"bzz-raw://8eadb2193ffb89029106c470c7efbdf5514a4ab03184f5dfd6b649c2810b80fa\",\"dweb:/ipfs/QmTEZbJmBETHbLMieXXjLQeZkJo1SELxCAvxxP1Vai6NGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"opensea_test_flat.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"opensea_test_flat.sol\":{\"keccak256\":\"0x31b67d705f29eb4529b89cc0dfe31be3bba37bb6de64ac04ee1a58ead639e427\",\"urls\":[\"bzz-raw://8eadb2193ffb89029106c470c7efbdf5514a4ab03184f5dfd6b649c2810b80fa\",\"dweb:/ipfs/QmTEZbJmBETHbLMieXXjLQeZkJo1SELxCAvxxP1Vai6NGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"opensea_test_flat.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"opensea_test_flat.sol\":{\"keccak256\":\"0x31b67d705f29eb4529b89cc0dfe31be3bba37bb6de64ac04ee1a58ead639e427\",\"urls\":[\"bzz-raw://8eadb2193ffb89029106c470c7efbdf5514a4ab03184f5dfd6b649c2810b80fa\",\"dweb:/ipfs/QmTEZbJmBETHbLMieXXjLQeZkJo1SELxCAvxxP1Vai6NGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalToCurrentOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApproveToCaller",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract.  Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.  Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"ApprovalToCurrentOwner()\":[{\"notice\":\"The caller cannot approve to the current owner.\"}],\"ApproveToCaller()\":[{\"notice\":\"The caller cannot approve to their own address.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"opensea_test_flat.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"opensea_test_flat.sol\":{\"keccak256\":\"0x31b67d705f29eb4529b89cc0dfe31be3bba37bb6de64ac04ee1a58ead639e427\",\"urls\":[\"bzz-raw://8eadb2193ffb89029106c470c7efbdf5514a4ab03184f5dfd6b649c2810b80fa\",\"dweb:/ipfs/QmTEZbJmBETHbLMieXXjLQeZkJo1SELxCAvxxP1Vai6NGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"ApprovalToCurrentOwner()": [
								{
									"notice": "The caller cannot approve to the current owner."
								}
							],
							"ApproveToCaller()": [
								{
									"notice": "The caller cannot approve to their own address."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"opensea_test_flat.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"opensea_test_flat.sol\":{\"keccak256\":\"0x31b67d705f29eb4529b89cc0dfe31be3bba37bb6de64ac04ee1a58ead639e427\",\"urls\":[\"bzz-raw://8eadb2193ffb89029106c470c7efbdf5514a4ab03184f5dfd6b649c2810b80fa\",\"dweb:/ipfs/QmTEZbJmBETHbLMieXXjLQeZkJo1SELxCAvxxP1Vai6NGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"opensea_test_flat.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"opensea_test_flat.sol\":{\"keccak256\":\"0x31b67d705f29eb4529b89cc0dfe31be3bba37bb6de64ac04ee1a58ead639e427\",\"urls\":[\"bzz-raw://8eadb2193ffb89029106c470c7efbdf5514a4ab03184f5dfd6b649c2810b80fa\",\"dweb:/ipfs/QmTEZbJmBETHbLMieXXjLQeZkJo1SELxCAvxxP1Vai6NGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"opensea_test_flat.sol\":510:6810  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"opensea_test_flat.sol\":510:6810  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e139142af0d149b2aa124ded2bcaa7300329444866f9daaa95c9512daf571d0e64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e139142af0d149b2aa124ded2bcaa7300329444866f9daaa95c9512daf571d0e64736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 CODECOPY EQ 0x2A CREATE 0xD1 0x49 0xB2 0xAA SLT 0x4D 0xED 0x2B 0xCA 0xA7 ADDRESS SUB 0x29 DIFFICULTY BASEFEE PUSH7 0xF9DAAA95C9512D 0xAF JUMPI SAR 0xE PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "510:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e139142af0d149b2aa124ded2bcaa7300329444866f9daaa95c9512daf571d0e64736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 CODECOPY EQ 0x2A CREATE 0xD1 0x49 0xB2 0xAA SLT 0x4D 0xED 0x2B 0xCA 0xA7 ADDRESS SUB 0x29 DIFFICULTY BASEFEE PUSH7 0xF9DAAA95C9512D 0xAF JUMPI SAR 0xE PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "510:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6810,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e139142af0d149b2aa124ded2bcaa7300329444866f9daaa95c9512daf571d0e64736f6c634300080e0033",
									".code": [
										{
											"begin": 510,
											"end": 6810,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6810,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"opensea_test_flat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"opensea_test_flat.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"opensea_test_flat.sol\":{\"keccak256\":\"0x31b67d705f29eb4529b89cc0dfe31be3bba37bb6de64ac04ee1a58ead639e427\",\"urls\":[\"bzz-raw://8eadb2193ffb89029106c470c7efbdf5514a4ab03184f5dfd6b649c2810b80fa\",\"dweb:/ipfs/QmTEZbJmBETHbLMieXXjLQeZkJo1SELxCAvxxP1Vai6NGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"opensea_test_flat.sol\":6979:8864  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"opensea_test_flat.sol\":6979:8864  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ee92fcbb6ab87dea6fff5096617ce999631797294b7176f8c7e81b8a1fbba26864736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee92fcbb6ab87dea6fff5096617ce999631797294b7176f8c7e81b8a1fbba26864736f6c634300080e0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SWAP3 0xFC 0xBB PUSH11 0xB87DEA6FFF5096617CE999 PUSH4 0x1797294B PUSH18 0x76F8C7E81B8A1FBBA26864736F6C63430008 0xE STOP CALLER ",
							"sourceMap": "6979:1885:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee92fcbb6ab87dea6fff5096617ce999631797294b7176f8c7e81b8a1fbba26864736f6c634300080e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SWAP3 0xFC 0xBB PUSH11 0xB87DEA6FFF5096617CE999 PUSH4 0x1797294B PUSH18 0x76F8C7E81B8A1FBBA26864736F6C63430008 0xE STOP CALLER ",
							"sourceMap": "6979:1885:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6979,
									"end": 8864,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6979,
									"end": 8864,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ee92fcbb6ab87dea6fff5096617ce999631797294b7176f8c7e81b8a1fbba26864736f6c634300080e0033",
									".code": [
										{
											"begin": 6979,
											"end": 8864,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6979,
											"end": 8864,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6979,
											"end": 8864,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6979,
											"end": 8864,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6979,
											"end": 8864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6979,
											"end": 8864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6979,
											"end": 8864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6979,
											"end": 8864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6979,
											"end": 8864,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"opensea_test_flat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"opensea_test_flat.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"opensea_test_flat.sol\":{\"keccak256\":\"0x31b67d705f29eb4529b89cc0dfe31be3bba37bb6de64ac04ee1a58ead639e427\",\"urls\":[\"bzz-raw://8eadb2193ffb89029106c470c7efbdf5514a4ab03184f5dfd6b649c2810b80fa\",\"dweb:/ipfs/QmTEZbJmBETHbLMieXXjLQeZkJo1SELxCAvxxP1Vai6NGy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> opensea_test_flat.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "opensea_test_flat.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"opensea_test_flat.sol": {
				"ast": {
					"absolutePath": "opensea_test_flat.sol",
					"exportedSymbols": {
						"Address": [
							828
						],
						"Context": [
							534
						],
						"Dcoffer": [
							2478
						],
						"ERC165": [
							888
						],
						"ERC721A": [
							2451
						],
						"IDCF": [
							855
						],
						"IERC165": [
							866
						],
						"IERC721": [
							1002
						],
						"IERC721A": [
							1095
						],
						"IERC721Metadata": [
							1027
						],
						"IERC721Receiver": [
							845
						],
						"SafeMath": [
							311
						],
						"Strings": [
							513
						]
					},
					"id": 2479,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "135:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "313:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "518:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "745:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "755:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "787:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "779:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "779:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "791:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "795:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "791:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "779:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "814:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "818:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "814:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "810:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "829:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "836:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "828:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "821:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "860:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "866:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "859:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "852:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "533:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "678:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "693:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "685:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "684:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "730:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "730:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "736:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "729:15:0"
									},
									"scope": 311,
									"src": "669:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1106:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1116:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1144:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1148:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1144:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1140:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1159:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1166:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1158:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1151:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1190:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1196:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1200:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1196:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1189:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1182:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "891:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1039:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1054:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1046:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1065:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1057:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1091:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1091:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1097:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:15:0"
									},
									"scope": 311,
									"src": "1030:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1443:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1453:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1711:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1716:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1711:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1707:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1727:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1733:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1726:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1719:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1757:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1749:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1749:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1761:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1761:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1749:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1784:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1788:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1793:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1784:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1780:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1804:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1811:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1803:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1796:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1835:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1841:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1834:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1827:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1225:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1376:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1391:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1383:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1402:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1394:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1428:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1428:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1434:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1427:15:0"
									},
									"scope": 311,
									"src": "1367:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2085:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2095:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2123:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2128:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2123:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2119:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2139:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2146:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2138:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2131:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2170:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2176:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2180:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2176:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2169:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2162:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1866:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2018:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2033:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2025:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2044:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2036:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2070:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2070:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2076:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:15:0"
									},
									"scope": 311,
									"src": "2009:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2434:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2444:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2472:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2477:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2472:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2468:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2488:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2495:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2487:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2480:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2519:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2525:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2529:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2525:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2518:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2511:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2205:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2367:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2382:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2374:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2393:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2385:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2373:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2419:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2419:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2425:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2418:15:0"
									},
									"scope": 311,
									"src": "2358:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2850:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2867:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2871:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2867:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2860:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2554:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2792:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2804:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2796:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2815:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2807:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2841:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2840:9:0"
									},
									"scope": 311,
									"src": "2783:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3217:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3234:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3238:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3234:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3227:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2885:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3159:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3171:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3163:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3163:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3182:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3174:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3162:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3208:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:9:0"
									},
									"scope": 311,
									"src": "3150:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3560:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3577:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3581:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3577:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3570:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3252:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3502:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3514:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3506:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3525:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3517:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3505:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3551:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:9:0"
									},
									"scope": 311,
									"src": "3493:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3945:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3962:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3962:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3955:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3595:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3887:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3899:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3891:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3910:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3902:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3890:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3936:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3935:9:0"
									},
									"scope": 311,
									"src": "3878:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4494:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4511:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4515:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4511:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4504:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3980:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4436:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4448:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4440:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4459:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4451:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4439:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4485:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4484:9:0"
									},
									"scope": 311,
									"src": "4427:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5112:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5122:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5159:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5154:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5162:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5146:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5146:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5146:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5196:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5200:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5196:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5189:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4529:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4996:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5017:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5009:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5036:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5028:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5061:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5047:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5047:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4999:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5103:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5102:9:0"
									},
									"scope": 311,
									"src": "4987:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5827:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5837:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5869:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5873:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5869:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5876:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5861:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5861:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5861:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5910:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5914:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5910:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5903:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5224:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5711:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5732:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5724:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5751:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5743:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5776:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5762:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5762:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5714:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5818:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5817:9:0"
									},
									"scope": 311,
									"src": "5702:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6703:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6713:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6745:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6749:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6745:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6752:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6737:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6737:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6737:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6779:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5938:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6587:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6608:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6600:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6627:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6619:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6652:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6638:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6638:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6590:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6694:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6693:9:0"
									},
									"scope": 311,
									"src": "6578:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2479,
							"src": "510:6300:0",
							"usedErrors": []
						},
						{
							"id": 312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6919:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 313,
								"nodeType": "StructuredDocumentation",
								"src": "6944:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 513,
							"linearizedBaseContracts": [
								513
							],
							"name": "Strings",
							"nameLocation": "6987:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 316,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "7026:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 513,
									"src": "7001:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 314,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "7001:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 315,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7041:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "7232:632:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 324,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "7434:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7443:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7434:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 330,
												"nodeType": "IfStatement",
												"src": "7430:51:0",
												"trueBody": {
													"id": 329,
													"nodeType": "Block",
													"src": "7446:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7467:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 323,
															"id": 328,
															"nodeType": "Return",
															"src": "7460:10:0"
														}
													]
												}
											},
											{
												"assignments": [
													332
												],
												"declarations": [
													{
														"constant": false,
														"id": 332,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "7498:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "7490:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7490:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"id": 333,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "7505:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7490:20:0"
											},
											{
												"assignments": [
													336
												],
												"declarations": [
													{
														"constant": false,
														"id": 336,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "7528:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "7520:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 335,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 337,
												"nodeType": "VariableDeclarationStatement",
												"src": "7520:14:0"
											},
											{
												"body": {
													"id": 348,
													"nodeType": "Block",
													"src": "7562:57:0",
													"statements": [
														{
															"expression": {
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "7576:8:0",
																"subExpression": {
																	"id": 341,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "7576:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 343,
															"nodeType": "ExpressionStatement",
															"src": "7576:8:0"
														},
														{
															"expression": {
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 344,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "7598:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7606:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "7598:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 347,
															"nodeType": "ExpressionStatement",
															"src": "7598:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 338,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "7551:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7559:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7551:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 349,
												"nodeType": "WhileStatement",
												"src": "7544:75:0"
											},
											{
												"assignments": [
													351
												],
												"declarations": [
													{
														"constant": false,
														"id": 351,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "7641:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "7628:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 350,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7628:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 356,
												"initialValue": {
													"arguments": [
														{
															"id": 354,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "7660:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7650:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 352,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7654:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7650:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7628:39:0"
											},
											{
												"body": {
													"id": 387,
													"nodeType": "Block",
													"src": "7696:131:0",
													"statements": [
														{
															"expression": {
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 360,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "7710:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7720:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7710:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 363,
															"nodeType": "ExpressionStatement",
															"src": "7710:11:0"
														},
														{
															"expression": {
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 364,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 351,
																		"src": "7735:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 366,
																	"indexExpression": {
																		"id": 365,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 336,
																		"src": "7742:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7735:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 378,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 371,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7765:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 376,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 374,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 319,
																									"src": "7778:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 375,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "7786:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "7778:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 373,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "7770:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 372,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "7770:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 377,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7770:19:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7765:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7759:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 369,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "7759:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7759:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7752:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 367,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "7752:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7752:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "7735:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 382,
															"nodeType": "ExpressionStatement",
															"src": "7735:56:0"
														},
														{
															"expression": {
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 383,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "7805:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7814:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "7805:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 386,
															"nodeType": "ExpressionStatement",
															"src": "7805:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 357,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "7684:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7693:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7684:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 388,
												"nodeType": "WhileStatement",
												"src": "7677:150:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 391,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "7850:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7843:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 389,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "7843:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7843:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 323,
												"id": 393,
												"nodeType": "Return",
												"src": "7836:21:0"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "7066:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "7170:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7187:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "7179:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7179:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7178:15:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "7217:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7217:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:15:0"
									},
									"scope": 513,
									"src": "7161:703:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "8043:255:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 403,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "8057:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8066:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8057:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 409,
												"nodeType": "IfStatement",
												"src": "8053:54:0",
												"trueBody": {
													"id": 408,
													"nodeType": "Block",
													"src": "8069:38:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8090:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 402,
															"id": 407,
															"nodeType": "Return",
															"src": "8083:13:0"
														}
													]
												}
											},
											{
												"assignments": [
													411
												],
												"declarations": [
													{
														"constant": false,
														"id": 411,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "8124:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "8116:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 410,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8116:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"id": 412,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 398,
													"src": "8131:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8116:20:0"
											},
											{
												"assignments": [
													415
												],
												"declarations": [
													{
														"constant": false,
														"id": 415,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "8154:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 435,
														"src": "8146:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 414,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8146:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 417,
												"initialValue": {
													"hexValue": "30",
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8163:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8146:18:0"
											},
											{
												"body": {
													"id": 428,
													"nodeType": "Block",
													"src": "8192:57:0",
													"statements": [
														{
															"expression": {
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "8206:8:0",
																"subExpression": {
																	"id": 421,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "8206:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 423,
															"nodeType": "ExpressionStatement",
															"src": "8206:8:0"
														},
														{
															"expression": {
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 424,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "8228:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8237:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8228:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 427,
															"nodeType": "ExpressionStatement",
															"src": "8228:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 418,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "8181:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8189:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8181:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 429,
												"nodeType": "WhileStatement",
												"src": "8174:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 431,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "8277:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 432,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "8284:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 430,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															436,
															512
														],
														"referencedDeclaration": 512,
														"src": "8265:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8265:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 402,
												"id": 434,
												"nodeType": "Return",
												"src": "8258:33:0"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "7870:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "7978:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7998:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "7990:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7989:15:0"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "8028:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8028:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8027:15:0"
									},
									"scope": 513,
									"src": "7969:329:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "8511:351:0",
										"statements": [
											{
												"assignments": [
													447
												],
												"declarations": [
													{
														"constant": false,
														"id": 447,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "8534:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "8521:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 446,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8521:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8553:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 451,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "8557:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8553:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8566:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "8553:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8543:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 448,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8547:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8543:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8521:47:0"
											},
											{
												"expression": {
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 457,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8578:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 459,
														"indexExpression": {
															"hexValue": "30",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8585:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8578:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8590:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "8578:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "8578:15:0"
											},
											{
												"expression": {
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 463,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8603:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 465,
														"indexExpression": {
															"hexValue": "31",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8610:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8603:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8615:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "8603:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "8603:15:0"
											},
											{
												"body": {
													"id": 497,
													"nodeType": "Block",
													"src": "8673:87:0",
													"statements": [
														{
															"expression": {
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 483,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "8687:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 485,
																	"indexExpression": {
																		"id": 484,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "8694:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8687:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 486,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "8699:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 490,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 487,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "8712:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8720:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "8712:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8699:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "8687:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 492,
															"nodeType": "ExpressionStatement",
															"src": "8687:37:0"
														},
														{
															"expression": {
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 493,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "8738:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8748:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "8738:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "8738:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 477,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "8661:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8665:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8661:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 498,
												"initializationExpression": {
													"assignments": [
														470
													],
													"declarations": [
														{
															"constant": false,
															"id": 470,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8641:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 498,
															"src": "8633:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 469,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8633:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 476,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8645:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 472,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "8649:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8645:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8658:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8645:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8633:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "8668:3:0",
														"subExpression": {
															"id": 480,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "8670:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 482,
													"nodeType": "ExpressionStatement",
													"src": "8668:3:0"
												},
												"nodeType": "ForStatement",
												"src": "8628:132:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 500,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "8777:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8777:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8789:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8769:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8769:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "8769:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 508,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8848:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8841:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 506,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "8841:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8841:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 445,
												"id": 510,
												"nodeType": "Return",
												"src": "8834:21:0"
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "8304:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "8430:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8450:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "8442:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "8465:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "8457:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8441:31:0"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "8496:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 443,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8495:15:0"
									},
									"scope": 513,
									"src": "8421:441:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2479,
							"src": "6979:1885:0",
							"usedErrors": []
						},
						{
							"id": 514,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "8973:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 515,
								"nodeType": "StructuredDocumentation",
								"src": "8998:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 534,
							"linearizedBaseContracts": [
								534
							],
							"name": "Context",
							"nameLocation": "9513:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "9589:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 520,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9606:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "9606:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 519,
												"id": 522,
												"nodeType": "Return",
												"src": "9599:17:0"
											}
										]
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "9536:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9546:2:0"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "9580:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9579:9:0"
									},
									"scope": 534,
									"src": "9527:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "9696:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 529,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9713:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "9713:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 528,
												"id": 531,
												"nodeType": "Return",
												"src": "9706:15:0"
											}
										]
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "9638:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9646:2:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "9680:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9680:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9679:16:0"
									},
									"scope": 534,
									"src": "9629:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2479,
							"src": "9495:235:0",
							"usedErrors": []
						},
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "9854:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 536,
								"nodeType": "StructuredDocumentation",
								"src": "9879:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 828,
							"linearizedBaseContracts": [
								828
							],
							"name": "Address",
							"nameLocation": "9955:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "10994:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 544,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "11218:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "11218:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11218:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11240:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11218:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 543,
												"id": 549,
												"nodeType": "Return",
												"src": "11211:30:0"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "9969:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "10937:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10956:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "10948:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:17:0"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "10988:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10988:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10987:6:0"
									},
									"scope": 828,
									"src": "10928:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "12236:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 562,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12262:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$828",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$828",
																				"typeString": "library Address"
																			}
																		],
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12254:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 560,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12254:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12254:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "12254:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 565,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "12279:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12254:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12287:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 559,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12246:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12246:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "12246:73:0"
											},
											{
												"assignments": [
													571,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12336:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 584,
														"src": "12331:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 570,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12331:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 578,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12379:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 572,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "12349:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "12349:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 574,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "12371:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "12349:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12349:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12330:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 580,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "12400:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12409:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 579,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12392:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12392:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "12392:78:0"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "11254:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "12174:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "12200:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12184:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12184:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12219:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12211:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12183:43:0"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12236:0:0"
									},
									"scope": 828,
									"src": "12165:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "13308:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 596,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "13338:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 597,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "13346:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13352:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 595,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															602,
															622
														],
														"referencedDeclaration": 622,
														"src": "13325:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13325:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 594,
												"id": 600,
												"nodeType": "Return",
												"src": "13318:67:0"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "12483:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "13228:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13249:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "13241:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13270:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "13257:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13257:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13240:35:0"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "13294:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 592,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13294:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13293:14:0"
									},
									"scope": 828,
									"src": "13219:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "13761:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 615,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "13800:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "13808:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13814:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 618,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "13817:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 614,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															642,
															692
														],
														"referencedDeclaration": 692,
														"src": "13778:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13778:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 613,
												"id": 620,
												"nodeType": "Return",
												"src": "13771:59:0"
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "13398:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "13623:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13653:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "13645:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13682:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "13669:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13669:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13710:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "13696:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 608,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13696:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13635:93:0"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "13747:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13747:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13746:14:0"
									},
									"scope": 828,
									"src": "13614:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "14342:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "14381:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "14389:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 637,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "14395:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14402:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 634,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															642,
															692
														],
														"referencedDeclaration": 692,
														"src": "14359:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14359:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 633,
												"id": 640,
												"nodeType": "Return",
												"src": "14352:94:0"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "13843:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "14208:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14247:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "14239:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14276:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "14263:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 626,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14263:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14298:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "14290:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14229:80:0"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "14328:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14328:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14327:14:0"
									},
									"scope": 828,
									"src": "14199:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "14880:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 659,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "14906:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$828",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$828",
																				"typeString": "library Address"
																			}
																		],
																		"id": 658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14898:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 657,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14898:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14898:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "14898:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 662,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "14923:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14898:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14930:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14890:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14890:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "14890:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 669,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "15000:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 668,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "14989:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14989:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15009:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14981:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14981:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "14981:60:0"
											},
											{
												"assignments": [
													675,
													677
												],
												"declarations": [
													{
														"constant": false,
														"id": 675,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15058:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 691,
														"src": "15053:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 674,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15053:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 677,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "15080:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 691,
														"src": "15067:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 676,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15067:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 684,
												"initialValue": {
													"arguments": [
														{
															"id": 682,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "15120:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 678,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "15094:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "15094:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 680,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "15113:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "15094:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15094:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15052:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 686,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "15159:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 687,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "15168:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 688,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "15180:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 685,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "15142:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15142:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 655,
												"id": 690,
												"nodeType": "Return",
												"src": "15135:58:0"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "14459:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "14710:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14749:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "14741:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14778:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "14765:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14765:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14800:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "14792:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14829:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "14815:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 650,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14815:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14731:116:0"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "14866:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 653,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14866:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14865:14:0"
									},
									"scope": 828,
									"src": "14701:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "15477:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "15513:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 704,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "15521:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15527:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 702,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															709,
															744
														],
														"referencedDeclaration": 744,
														"src": "15494:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15494:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 701,
												"id": 707,
												"nodeType": "Return",
												"src": "15487:80:0"
											}
										]
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "15206:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "15386:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "15413:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "15405:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15434:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "15421:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 696,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15421:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15404:35:0"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "15463:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 699,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15463:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15462:14:0"
									},
									"scope": 828,
									"src": "15377:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "15916:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 723,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "15945:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 722,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "15934:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15934:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15954:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15926:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "15926:67:0"
											},
											{
												"assignments": [
													729,
													731
												],
												"declarations": [
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16010:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "16005:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 728,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16005:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 731,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "16032:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "16019:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 730,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16019:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"arguments": [
														{
															"id": 734,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "16064:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 732,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "16046:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "16046:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16046:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16004:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 738,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "16103:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 739,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "16112:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 740,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "16124:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 737,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "16086:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16086:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 720,
												"id": 742,
												"nodeType": "Return",
												"src": "16079:58:0"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "15580:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "15767:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "15803:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "15795:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15832:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "15819:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15819:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "15860:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "15846:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 715,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15846:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15785:93:0"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "15902:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15902:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15901:14:0"
									},
									"scope": 828,
									"src": "15758:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "16420:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "16458:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "16466:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16472:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 754,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															761,
															796
														],
														"referencedDeclaration": 796,
														"src": "16437:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16437:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 753,
												"id": 759,
												"nodeType": "Return",
												"src": "16430:84:0"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "16150:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "16332:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16361:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "16353:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16382:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "16369:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 748,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16369:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16352:35:0"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "16406:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 751,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16405:14:0"
									},
									"scope": 828,
									"src": "16323:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "16862:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 775,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "16891:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 774,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "16880:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16880:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16900:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 773,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16872:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16872:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "16872:69:0"
											},
											{
												"assignments": [
													781,
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 781,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16958:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "16953:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 780,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16953:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "16980:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "16967:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 782,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 788,
												"initialValue": {
													"arguments": [
														{
															"id": 786,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "17014:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 784,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "16994:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "16994:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16994:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16952:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 790,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "17053:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 791,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "17062:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 792,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "17074:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 789,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "17036:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17036:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 772,
												"id": 794,
												"nodeType": "Return",
												"src": "17029:58:0"
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "16527:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "16716:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16754:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "16746:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16783:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "16770:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 765,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16770:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "16811:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "16797:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 767,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16797:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16736:93:0"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "16848:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 770,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16848:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16847:14:0"
									},
									"scope": 828,
									"src": "16707:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "17474:532:0",
										"statements": [
											{
												"condition": {
													"id": 808,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 799,
													"src": "17488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 824,
													"nodeType": "Block",
													"src": "17545:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 812,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "17629:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "17629:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17649:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17629:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 822,
																"nodeType": "Block",
																"src": "17937:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 819,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 803,
																					"src": "17962:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 818,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "17955:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17955:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 821,
																		"nodeType": "ExpressionStatement",
																		"src": "17955:20:0"
																	}
																]
															},
															"id": 823,
															"nodeType": "IfStatement",
															"src": "17625:365:0",
															"trueBody": {
																"id": 817,
																"nodeType": "Block",
																"src": "17652:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "17772:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "17794:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "17823:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "17817:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17817:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "17798:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "17866:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "17870:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "17862:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "17862:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "17883:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "17855:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17855:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "17855:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 801,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "17823:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 801,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "17870:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 816,
																		"nodeType": "InlineAssembly",
																		"src": "17763:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 825,
												"nodeType": "IfStatement",
												"src": "17484:516:0",
												"trueBody": {
													"id": 811,
													"nodeType": "Block",
													"src": "17497:42:0",
													"statements": [
														{
															"expression": {
																"id": 809,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "17518:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 807,
															"id": 810,
															"nodeType": "Return",
															"src": "17511:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "17100:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "17323:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "17354:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "17349:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 798,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17349:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "17384:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "17371:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 800,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17371:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "17418:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "17404:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 802,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17404:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17339:97:0"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "17460:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 805,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17460:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17459:14:0"
									},
									"scope": 828,
									"src": "17314:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2479,
							"src": "9947:8061:0",
							"usedErrors": []
						},
						{
							"id": 829,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "18162:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 830,
								"nodeType": "StructuredDocumentation",
								"src": "18187:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 845,
							"linearizedBaseContracts": [
								845
							],
							"name": "IERC721Receiver",
							"nameLocation": "18350:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "18372:493:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "18879:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18913:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "18905:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18905:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18939:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "18931:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18961:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "18953:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18993:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "18978:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 838,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18978:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18895:108:0"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "19022:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 841,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "19022:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19021:8:0"
									},
									"scope": 845,
									"src": "18870:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2479,
							"src": "18340:692:0",
							"usedErrors": []
						},
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "19119:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDCF",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "19146:59:0",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 855,
							"linearizedBaseContracts": [
								855
							],
							"name": "IDCF",
							"nameLocation": "19216:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "325b272a",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "BlockScore",
									"nameLocation": "19242:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "19261:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "19253:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19252:14:0"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "19288:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19288:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19287:6:0"
									},
									"scope": 855,
									"src": "19233:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2479,
							"src": "19206:91:0",
							"usedErrors": []
						},
						{
							"id": 856,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "19433:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 857,
								"nodeType": "StructuredDocumentation",
								"src": "19458:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 866,
							"linearizedBaseContracts": [
								866
							],
							"name": "IERC165",
							"nameLocation": "19748:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "19762:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 865,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "20116:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "20141:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "20134:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 859,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "20134:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20133:20:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "20177:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 862,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20177:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20176:6:0"
									},
									"scope": 866,
									"src": "20107:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2479,
							"src": "19738:447:0",
							"usedErrors": []
						},
						{
							"id": 867,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "20320:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 869,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 866,
										"src": "20951:7:0"
									},
									"id": 870,
									"nodeType": "InheritanceSpecifier",
									"src": "20951:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 868,
								"nodeType": "StructuredDocumentation",
								"src": "20346:576:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 888,
							"linearizedBaseContracts": [
								888,
								866
							],
							"name": "ERC165",
							"nameLocation": "20941:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										865
									],
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "21117:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 879,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "21134:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 881,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "21154:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$866_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$866_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 880,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21149:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21149:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$866",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "21149:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "21134:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 878,
												"id": 885,
												"nodeType": "Return",
												"src": "21127:47:0"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "20965:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "21035:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 875,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21093:8:0"
									},
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "21060:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "21053:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 872,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "21053:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21052:20:0"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "21111:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 876,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21111:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21110:6:0"
									},
									"scope": 888,
									"src": "21026:155:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2479,
							"src": "20923:260:0",
							"usedErrors": []
						},
						{
							"id": 889,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21321:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 891,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 866,
										"src": "21436:7:0"
									},
									"id": 892,
									"nodeType": "InheritanceSpecifier",
									"src": "21436:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 890,
								"nodeType": "StructuredDocumentation",
								"src": "21347:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1002,
							"linearizedBaseContracts": [
								1002,
								866
							],
							"name": "IERC721",
							"nameLocation": "21425:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "21450:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 901,
									"name": "Transfer",
									"nameLocation": "21549:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21574:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "21558:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21558:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21596:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "21580:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21616:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "21600:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21557:67:0"
									},
									"src": "21543:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "21631:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 910,
									"name": "Approval",
									"nameLocation": "21736:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21761:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "21745:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "21784:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "21768:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21810:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "21794:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21744:74:0"
									},
									"src": "21730:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "21825:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 919,
									"name": "ApprovalForAll",
									"nameLocation": "21953:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21984:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "21968:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21968:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "22007:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "21991:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "22022:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "22017:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 916,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22017:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21967:64:0"
									},
									"src": "21947:85:0"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "22038:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "22128:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22146:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "22138:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22137:15:0"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "22184:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "22176:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22175:17:0"
									},
									"scope": 1002,
									"src": "22119:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "22199:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "22344:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22360:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "22352:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22351:17:0"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22400:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "22392:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22391:15:0"
									},
									"scope": 1002,
									"src": "22335:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "22413:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "22983:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23017:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "23009:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23039:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "23031:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23059:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "23051:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "23091:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "23076:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 943,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23076:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22999:102:0"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23110:0:0"
									},
									"scope": 1002,
									"src": "22974:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "23117:690:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 957,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23821:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "23847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23877:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "23869:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23869:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23897:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "23889:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23837:73:0"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23919:0:0"
									},
									"scope": 1002,
									"src": "23812:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "23926:504:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "24444:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24474:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "24466:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24496:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "24488:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24516:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "24508:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24456:73:0"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24538:0:0"
									},
									"scope": 1002,
									"src": "24435:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "24545:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "25011:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25027:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "25019:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25039:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "25031:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25018:29:0"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25056:0:0"
									},
									"scope": 1002,
									"src": "25002:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "25063:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 983,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "25386:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "25412:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "25404:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "25427:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "25422:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 979,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25422:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25403:34:0"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25446:0:0"
									},
									"scope": 1002,
									"src": "25377:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "25453:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "25606:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25626:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "25618:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25617:17:0"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "25666:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "25658:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25657:18:0"
									},
									"scope": 1002,
									"src": "25597:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "25682:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "25834:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "25859:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "25851:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "25874:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "25866:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25850:33:0"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "25907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25906:6:0"
									},
									"scope": 1002,
									"src": "25825:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2479,
							"src": "21415:4500:0",
							"usedErrors": []
						},
						{
							"id": 1003,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "26076:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1005,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1002,
										"src": "26265:7:0"
									},
									"id": 1006,
									"nodeType": "InheritanceSpecifier",
									"src": "26265:7:0"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1004,
								"nodeType": "StructuredDocumentation",
								"src": "26102:133:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1027,
							"linearizedBaseContracts": [
								1027,
								1002,
								866
							],
							"name": "IERC721Metadata",
							"nameLocation": "26246:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "26279:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1012,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "26351:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26355:2:0"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "26381:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1009,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26381:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26380:15:0"
									},
									"scope": 1027,
									"src": "26342:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "26402:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1018,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "26476:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26482:2:0"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "26508:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1015,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26508:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26507:15:0"
									},
									"scope": 1027,
									"src": "26467:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "26529:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1026,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "26633:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26650:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "26642:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26641:17:0"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "26682:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1023,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26682:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26681:15:0"
									},
									"scope": 1027,
									"src": "26624:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2479,
							"src": "26236:463:0",
							"usedErrors": []
						},
						{
							"id": 1028,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "26793:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1030,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1002,
										"src": "26902:7:0"
									},
									"id": 1031,
									"nodeType": "InheritanceSpecifier",
									"src": "26902:7:0"
								},
								{
									"baseName": {
										"id": 1032,
										"name": "IERC721Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1027,
										"src": "26911:15:0"
									},
									"id": 1033,
									"nodeType": "InheritanceSpecifier",
									"src": "26911:15:0"
								}
							],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1029,
								"nodeType": "StructuredDocumentation",
								"src": "26820:59:0",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 1095,
							"linearizedBaseContracts": [
								1095,
								1027,
								1002,
								866
							],
							"name": "IERC721A",
							"nameLocation": "26890:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "26933:76:0",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 1036,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "27020:33:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27053:2:0"
									},
									"src": "27014:42:0"
								},
								{
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "27062:44:0",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 1039,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "27117:32:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27149:2:0"
									},
									"src": "27111:41:0"
								},
								{
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "27158:66:0",
										"text": " The caller cannot approve to their own address."
									},
									"errorSelector": "b06307db",
									"id": 1042,
									"name": "ApproveToCaller",
									"nameLocation": "27235:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27250:2:0"
									},
									"src": "27229:24:0"
								},
								{
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "27259:66:0",
										"text": " The caller cannot approve to the current owner."
									},
									"errorSelector": "943f7b8c",
									"id": 1045,
									"name": "ApprovalToCurrentOwner",
									"nameLocation": "27336:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27358:2:0"
									},
									"src": "27330:31:0"
								},
								{
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "27367:65:0",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 1048,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "27443:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27469:2:0"
									},
									"src": "27437:35:0"
								},
								{
									"documentation": {
										"id": 1049,
										"nodeType": "StructuredDocumentation",
										"src": "27478:51:0",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 1051,
									"name": "MintToZeroAddress",
									"nameLocation": "27540:17:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27557:2:0"
									},
									"src": "27534:26:0"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "27566:72:0",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 1054,
									"name": "MintZeroQuantity",
									"nameLocation": "27649:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27665:2:0"
									},
									"src": "27643:25:0"
								},
								{
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "27674:44:0",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 1057,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "27729:29:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27758:2:0"
									},
									"src": "27723:38:0"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "27767:76:0",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 1060,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "27854:33:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27887:2:0"
									},
									"src": "27848:42:0"
								},
								{
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "27896:53:0",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 1063,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "27960:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27986:2:0"
									},
									"src": "27954:35:0"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "27995:109:0",
										"text": " Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 1066,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "28115:38:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28153:2:0"
									},
									"src": "28109:47:0"
								},
								{
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "28162:55:0",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 1069,
									"name": "TransferToZeroAddress",
									"nameLocation": "28228:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28249:2:0"
									},
									"src": "28222:30:0"
								},
								{
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "28258:44:0",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 1072,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "28313:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28340:2:0"
									},
									"src": "28307:36:0"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1079,
									"members": [
										{
											"constant": false,
											"id": 1074,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "28484:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 1079,
											"src": "28476:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1073,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "28476:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1076,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "28597:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 1079,
											"src": "28590:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1075,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "28590:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1078,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "28672:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1079,
											"src": "28667:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1077,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "28667:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "28414:14:0",
									"nodeType": "StructDefinition",
									"scope": 1095,
									"src": "28407:278:0",
									"visibility": "public"
								},
								{
									"canonicalName": "IERC721A.AddressData",
									"id": 1088,
									"members": [
										{
											"constant": false,
											"id": 1081,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "28840:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 1088,
											"src": "28833:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1080,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "28833:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1083,
											"mutability": "mutable",
											"name": "numberMinted",
											"nameLocation": "28939:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 1088,
											"src": "28932:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1082,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "28932:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1085,
											"mutability": "mutable",
											"name": "numberBurned",
											"nameLocation": "29043:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 1088,
											"src": "29036:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1084,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "29036:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1087,
											"mutability": "mutable",
											"name": "aux",
											"nameLocation": "29270:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 1088,
											"src": "29263:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1086,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "29263:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressData",
									"nameLocation": "28756:11:0",
									"nodeType": "StructDefinition",
									"scope": 1095,
									"src": "28749:531:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "29286:194:0",
										"text": " @dev Returns the total amount of tokens stored by the contract.\n \n Burned tokens are calculated here, use `_totalMinted()` if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 1094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "29494:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29505:2:0"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "29531:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29530:9:0"
									},
									"scope": 1095,
									"src": "29485:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2479,
							"src": "26880:2662:0",
							"usedErrors": [
								1036,
								1039,
								1042,
								1045,
								1048,
								1051,
								1054,
								1057,
								1060,
								1063,
								1066,
								1069,
								1072
							]
						},
						{
							"id": 1096,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "29634:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1098,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 534,
										"src": "30178:7:0"
									},
									"id": 1099,
									"nodeType": "InheritanceSpecifier",
									"src": "30178:7:0"
								},
								{
									"baseName": {
										"id": 1100,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 888,
										"src": "30187:6:0"
									},
									"id": 1101,
									"nodeType": "InheritanceSpecifier",
									"src": "30187:6:0"
								},
								{
									"baseName": {
										"id": 1102,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1095,
										"src": "30195:8:0"
									},
									"id": 1103,
									"nodeType": "InheritanceSpecifier",
									"src": "30195:8:0"
								},
								{
									"baseName": {
										"id": 1104,
										"name": "IDCF",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 855,
										"src": "30205:4:0"
									},
									"id": 1105,
									"nodeType": "InheritanceSpecifier",
									"src": "30205:4:0"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1097,
								"nodeType": "StructuredDocumentation",
								"src": "29667:490:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at _startTokenId() (defaults to 0, e.g. 0, 1, 2, 3..).\n Assumes that an owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n Assumes that the maximum token id cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 2451,
							"linearizedBaseContracts": [
								2451,
								855,
								1095,
								1027,
								1002,
								888,
								866,
								534
							],
							"name": "ERC721A",
							"nameLocation": "30167:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1108,
									"libraryName": {
										"id": 1106,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "30222:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "30216:24:0",
									"typeName": {
										"id": 1107,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "30235:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1111,
									"libraryName": {
										"id": 1109,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 828,
										"src": "30251:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "30245:26:0",
									"typeName": {
										"id": 1110,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "30263:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 1114,
									"libraryName": {
										"id": 1112,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 513,
										"src": "30282:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "30276:26:0",
									"typeName": {
										"id": 1113,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30294:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1116,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "30376:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "30359:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1115,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30359:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1118,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "30449:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "30432:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1117,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30432:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1120,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "30507:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "30492:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1119,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "30492:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1122,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "30554:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "30539:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1121,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "30539:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1127,
									"mutability": "mutable",
									"name": "_ownerships",
									"nameLocation": "30784:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "30740:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1079_storage_$",
										"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership)"
									},
									"typeName": {
										"id": 1126,
										"keyType": {
											"id": 1123,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "30748:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "30740:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1079_storage_$",
											"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership)"
										},
										"valueType": {
											"id": 1125,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1124,
												"name": "TokenOwnership",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1079,
												"src": "30759:14:0"
											},
											"referencedDeclaration": 1079,
											"src": "30759:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
												"typeString": "struct IERC721A.TokenOwnership"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1132,
									"mutability": "mutable",
									"name": "_addressData",
									"nameLocation": "30887:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "30847:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1088_storage_$",
										"typeString": "mapping(address => struct IERC721A.AddressData)"
									},
									"typeName": {
										"id": 1131,
										"keyType": {
											"id": 1128,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "30855:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "30847:31:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1088_storage_$",
											"typeString": "mapping(address => struct IERC721A.AddressData)"
										},
										"valueType": {
											"id": 1130,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1129,
												"name": "AddressData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1088,
												"src": "30866:11:0"
											},
											"referencedDeclaration": 1088,
											"src": "30866:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressData_$1088_storage_ptr",
												"typeString": "struct IERC721A.AddressData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1136,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "30991:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "30955:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1135,
										"keyType": {
											"id": 1133,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "30963:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "30955:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 1134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "30974:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1142,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "31114:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "31061:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1141,
										"keyType": {
											"id": 1137,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "31069:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "31061:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 1140,
											"keyType": {
												"id": 1138,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "31088:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "31080:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 1139,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "31099:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "31139:77:0",
										"text": "[user][1] = last_block\n[user][2] = accumulation_block "
									},
									"id": 1149,
									"mutability": "mutable",
									"name": "_BlockScore",
									"nameLocation": "31279:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "31224:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1148,
										"keyType": {
											"id": 1144,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "31232:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "31224:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 1147,
											"keyType": {
												"id": 1145,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "31251:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "31243:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 1146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "31262:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "31353:109:0",
										"statements": [
											{
												"expression": {
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1156,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "31363:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1157,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "31371:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "31363:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "31363:13:0"
											},
											{
												"expression": {
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1160,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "31386:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1161,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "31396:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "31386:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "31386:17:0"
											},
											{
												"expression": {
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1164,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "31413:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1165,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "31429:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31429:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31413:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "31413:31:0"
											}
										]
									},
									"id": 1170,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "31323:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "31309:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1150,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "31309:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "31344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "31330:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "31330:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31308:44:0"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31353:0:0"
									},
									"scope": 2451,
									"src": "31297:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "31533:230:0",
										"statements": [
											{
												"assignments": [
													1178
												],
												"declarations": [
													{
														"constant": false,
														"id": 1178,
														"mutability": "mutable",
														"name": "difference",
														"nameLocation": "31551:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1211,
														"src": "31543:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1177,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31543:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1188,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1182,
																	"name": "_BlockScore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "31581:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 1184,
																"indexExpression": {
																	"id": 1183,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "31593:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31581:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1186,
															"indexExpression": {
																"hexValue": "31",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31599:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31581:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1179,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "31564:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "31564:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "31564:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31564:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31543:59:0"
											},
											{
												"assignments": [
													1190
												],
												"declarations": [
													{
														"constant": false,
														"id": 1190,
														"mutability": "mutable",
														"name": "Product",
														"nameLocation": "31620:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1211,
														"src": "31612:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1189,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31612:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1197,
												"initialValue": {
													"arguments": [
														{
															"id": 1195,
															"name": "difference",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "31650:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1192,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "31640:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1191,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "31630:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31630:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 205,
														"src": "31630:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31630:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31612:49:0"
											},
											{
												"assignments": [
													1199
												],
												"declarations": [
													{
														"constant": false,
														"id": 1199,
														"mutability": "mutable",
														"name": "accumulation",
														"nameLocation": "31679:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1211,
														"src": "31671:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1198,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31671:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1208,
												"initialValue": {
													"arguments": [
														{
															"id": 1206,
															"name": "Product",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "31719:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1200,
																	"name": "_BlockScore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "31694:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 1202,
																"indexExpression": {
																	"id": 1201,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "31706:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31694:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1204,
															"indexExpression": {
																"hexValue": "32",
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31712:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31694:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 175,
														"src": "31694:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31694:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31671:56:0"
											},
											{
												"expression": {
													"id": 1209,
													"name": "accumulation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1199,
													"src": "31744:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1176,
												"id": 1210,
												"nodeType": "Return",
												"src": "31737:19:0"
											}
										]
									},
									"functionSelector": "325b272a",
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "BlockScore",
									"nameLocation": "31481:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "31500:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "31492:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31491:14:0"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "31525:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31524:9:0"
									},
									"scope": 2451,
									"src": "31472:291:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "31815:178:0",
										"statements": [
											{
												"assignments": [
													1218
												],
												"declarations": [
													{
														"constant": false,
														"id": 1218,
														"mutability": "mutable",
														"name": "Score",
														"nameLocation": "31833:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "31825:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31825:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"arguments": [
														{
															"id": 1220,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "31852:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1219,
														"name": "BlockScore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "31841:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31841:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31825:32:0"
											},
											{
												"expression": {
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1223,
																"name": "_BlockScore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "31874:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1226,
															"indexExpression": {
																"id": 1224,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "31886:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31874:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1227,
														"indexExpression": {
															"hexValue": "32",
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31892:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31874:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1234,
																"name": "Score",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "31920:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1228,
																		"name": "_BlockScore",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "31895:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1230,
																	"indexExpression": {
																		"id": 1229,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "31907:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "31895:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1232,
																"indexExpression": {
																	"hexValue": "32",
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31913:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31895:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "31895:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31895:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31874:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "31874:52:0"
											},
											{
												"expression": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1238,
																"name": "_BlockScore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "31943:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1241,
															"indexExpression": {
																"id": 1239,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "31955:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31943:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1242,
														"indexExpression": {
															"hexValue": "31",
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31961:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31943:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1243,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31966:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "31966:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31943:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "31943:35:0"
											}
										]
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateBlockScore",
									"nameLocation": "31778:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "31803:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "31795:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31794:14:0"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31815:0:0"
									},
									"scope": 2451,
									"src": "31769:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "32155:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32172:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1253,
												"id": 1255,
												"nodeType": "Return",
												"src": "32165:8:0"
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "32004:81:0",
										"text": " To change the starting tokenId, please override this function."
									},
									"id": 1257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "32099:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32112:2:0"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "32146:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32145:9:0"
									},
									"scope": 2451,
									"src": "32090:90:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1094
									],
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "32371:244:0",
										"statements": [
											{
												"id": 1271,
												"nodeType": "UncheckedBlock",
												"src": "32521:88:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1264,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "32552:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1265,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "32568:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32552:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1267,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "32583:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32583:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32552:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1263,
														"id": 1270,
														"nodeType": "Return",
														"src": "32545:53:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "32186:118:0",
										"text": " @dev Burned tokens are calculated here, use _totalMinted() if you want to count just minted tokens."
									},
									"functionSelector": "18160ddd",
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "32318:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1260,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "32344:8:0"
									},
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32329:2:0"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "32362:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32361:9:0"
									},
									"scope": 2451,
									"src": "32309:306:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "32759:221:0",
										"statements": [
											{
												"id": 1284,
												"nodeType": "UncheckedBlock",
												"src": "32901:73:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1279,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "32932:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1280,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "32948:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32948:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32932:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1278,
														"id": 1283,
														"nodeType": "Return",
														"src": "32925:38:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "32621:77:0",
										"text": " Returns the total amount of tokens minted in the contract."
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "32712:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32724:2:0"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "32750:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32749:9:0"
									},
									"scope": 2451,
									"src": "32703:277:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										865,
										887
									],
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "33155:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1297,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "33184:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1299,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "33204:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1002_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1002_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1298,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "33199:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33199:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1002",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "33199:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "33184:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1303,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "33240:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1305,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1027,
																			"src": "33260:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1027_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1027_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1304,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "33255:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33255:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1027",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "33255:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "33240:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "33184:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1312,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "33328:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1310,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "33304:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721A_$2451_$",
																	"typeString": "type(contract super ERC721A)"
																}
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 887,
															"src": "33304:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33304:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "33184:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1296,
												"id": 1315,
												"nodeType": "Return",
												"src": "33165:175:0"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "32986:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "33056:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1293,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1291,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 888,
												"src": "33123:6:0"
											},
											{
												"id": 1292,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 866,
												"src": "33131:7:0"
											}
										],
										"src": "33114:25:0"
									},
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "33081:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "33074:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1288,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "33074:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33073:20:0"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "33149:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33149:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33148:6:0"
									},
									"scope": 2451,
									"src": "33047:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										927
									],
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "33479:130:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1326,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "33493:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33510:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33502:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1327,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33502:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33502:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33493:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1335,
												"nodeType": "IfStatement",
												"src": "33489:60:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1332,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "33521:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33521:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1334,
													"nodeType": "RevertStatement",
													"src": "33514:35:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1338,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "33574:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1088_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 1340,
																"indexExpression": {
																	"id": 1339,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "33587:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33574:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$1088_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1081,
															"src": "33574:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "33566:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1336,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33566:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33566:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1325,
												"id": 1343,
												"nodeType": "Return",
												"src": "33559:43:0"
											}
										]
									},
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "33353:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "33415:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1322,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "33452:8:0"
									},
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33433:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "33425:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33424:15:0"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "33470:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33469:9:0"
									},
									"scope": 2451,
									"src": "33406:203:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "33756:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1355,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "33781:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1088_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 1357,
																"indexExpression": {
																	"id": 1356,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "33794:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33781:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$1088_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "numberMinted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1083,
															"src": "33781:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "33773:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1353,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33773:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33773:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1352,
												"id": 1360,
												"nodeType": "Return",
												"src": "33766:48:0"
											}
										]
									},
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "33615:66:0",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "33695:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33717:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "33709:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33708:15:0"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "33747:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33746:9:0"
									},
									"scope": 2451,
									"src": "33686:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "33984:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1372,
																	"name": "_addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "34009:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1088_storage_$",
																		"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																	}
																},
																"id": 1374,
																"indexExpression": {
																	"id": 1373,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "34022:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "34009:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$1088_storage",
																	"typeString": "struct IERC721A.AddressData storage ref"
																}
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "numberBurned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1085,
															"src": "34009:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34001:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34001:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34001:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1369,
												"id": 1377,
												"nodeType": "Return",
												"src": "33994:48:0"
											}
										]
									},
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "33827:82:0",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "33923:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33945:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "33937:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33936:15:0"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "33975:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33974:9:0"
									},
									"scope": 2451,
									"src": "33914:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "34225:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1387,
															"name": "_addressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "34242:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1088_storage_$",
																"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
															}
														},
														"id": 1389,
														"indexExpression": {
															"id": 1388,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "34255:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "34242:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressData_$1088_storage",
															"typeString": "struct IERC721A.AddressData storage ref"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "aux",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1087,
													"src": "34242:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1386,
												"id": 1391,
												"nodeType": "Return",
												"src": "34235:30:0"
											}
										]
									},
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "34055:102:0",
										"text": " Returns the auxillary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "34171:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "34187:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "34179:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34178:15:0"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "34217:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1384,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "34217:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34216:8:0"
									},
									"scope": 2451,
									"src": "34162:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1408,
										"nodeType": "Block",
										"src": "34508:46:0",
										"statements": [
											{
												"expression": {
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1401,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "34518:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1088_storage_$",
																	"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																}
															},
															"id": 1403,
															"indexExpression": {
																"id": 1402,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "34531:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34518:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$1088_storage",
																"typeString": "struct IERC721A.AddressData storage ref"
															}
														},
														"id": 1404,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "aux",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1087,
														"src": "34518:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1405,
														"name": "aux",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "34544:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "34518:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "34518:29:0"
											}
										]
									},
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "34279:171:0",
										"text": " Sets the auxillary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 1409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "34464:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "34480:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "34472:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34472:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "34494:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "34487:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1397,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "34487:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34471:27:0"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34508:0:0"
									},
									"scope": 2451,
									"src": "34455:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1482,
										"nodeType": "Block",
										"src": "34835:1001:0",
										"statements": [
											{
												"assignments": [
													1419
												],
												"declarations": [
													{
														"constant": false,
														"id": 1419,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "34853:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1482,
														"src": "34845:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34845:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1421,
												"initialValue": {
													"id": 1420,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1412,
													"src": "34860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34845:22:0"
											},
											{
												"id": 1478,
												"nodeType": "UncheckedBlock",
												"src": "34878:904:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1422,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "34906:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34906:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1424,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "34925:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34906:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1477,
														"nodeType": "IfStatement",
														"src": "34902:870:0",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1426,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "34935:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1427,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "34942:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34935:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1476,
															"nodeType": "IfStatement",
															"src": "34931:841:0",
															"trueBody": {
																"id": 1475,
																"nodeType": "Block",
																"src": "34957:815:0",
																"statements": [
																	{
																		"assignments": [
																			1431
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1431,
																				"mutability": "mutable",
																				"name": "ownership",
																				"nameLocation": "34997:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1475,
																				"src": "34975:31:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
																					"typeString": "struct IERC721A.TokenOwnership"
																				},
																				"typeName": {
																					"id": 1430,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1429,
																						"name": "TokenOwnership",
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 1079,
																						"src": "34975:14:0"
																					},
																					"referencedDeclaration": 1079,
																					"src": "34975:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																						"typeString": "struct IERC721A.TokenOwnership"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1435,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1432,
																				"name": "_ownerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1127,
																				"src": "35009:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1079_storage_$",
																					"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																				}
																			},
																			"id": 1434,
																			"indexExpression": {
																				"id": 1433,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1419,
																				"src": "35021:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "35009:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage",
																				"typeString": "struct IERC721A.TokenOwnership storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "34975:51:0"
																	},
																	{
																		"condition": {
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "35048:17:0",
																			"subExpression": {
																				"expression": {
																					"id": 1436,
																					"name": "ownership",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1431,
																					"src": "35049:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
																						"typeString": "struct IERC721A.TokenOwnership memory"
																					}
																				},
																				"id": 1437,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "burned",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1078,
																				"src": "35049:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1474,
																		"nodeType": "IfStatement",
																		"src": "35044:714:0",
																		"trueBody": {
																			"id": 1473,
																			"nodeType": "Block",
																			"src": "35067:691:0",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"id": 1445,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1439,
																								"name": "ownership",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1431,
																								"src": "35093:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
																									"typeString": "struct IERC721A.TokenOwnership memory"
																								}
																							},
																							"id": 1440,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "addr",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1074,
																							"src": "35093:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "!=",
																						"rightExpression": {
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 1443,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "35119:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 1442,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "35111:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1441,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "35111:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1444,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "35111:10:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "35093:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1449,
																					"nodeType": "IfStatement",
																					"src": "35089:99:0",
																					"trueBody": {
																						"id": 1448,
																						"nodeType": "Block",
																						"src": "35123:65:0",
																						"statements": [
																							{
																								"expression": {
																									"id": 1446,
																									"name": "ownership",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1431,
																									"src": "35156:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
																										"typeString": "struct IERC721A.TokenOwnership memory"
																									}
																								},
																								"functionReturnParameters": 1417,
																								"id": 1447,
																								"nodeType": "Return",
																								"src": "35149:16:0"
																							}
																						]
																					}
																				},
																				{
																					"body": {
																						"id": 1471,
																						"nodeType": "Block",
																						"src": "35498:242:0",
																						"statements": [
																							{
																								"expression": {
																									"id": 1452,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "--",
																									"prefix": false,
																									"src": "35524:6:0",
																									"subExpression": {
																										"id": 1451,
																										"name": "curr",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1419,
																										"src": "35524:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1453,
																								"nodeType": "ExpressionStatement",
																								"src": "35524:6:0"
																							},
																							{
																								"expression": {
																									"id": 1458,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1454,
																										"name": "ownership",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1431,
																										"src": "35556:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
																											"typeString": "struct IERC721A.TokenOwnership memory"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 1455,
																											"name": "_ownerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1127,
																											"src": "35568:11:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1079_storage_$",
																												"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																											}
																										},
																										"id": 1457,
																										"indexExpression": {
																											"id": 1456,
																											"name": "curr",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1419,
																											"src": "35580:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "35568:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage",
																											"typeString": "struct IERC721A.TokenOwnership storage ref"
																										}
																									},
																									"src": "35556:29:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
																										"typeString": "struct IERC721A.TokenOwnership memory"
																									}
																								},
																								"id": 1459,
																								"nodeType": "ExpressionStatement",
																								"src": "35556:29:0"
																							},
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									"id": 1466,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 1460,
																											"name": "ownership",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1431,
																											"src": "35615:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
																												"typeString": "struct IERC721A.TokenOwnership memory"
																											}
																										},
																										"id": 1461,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "addr",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1074,
																										"src": "35615:14:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "!=",
																									"rightExpression": {
																										"arguments": [
																											{
																												"hexValue": "30",
																												"id": 1464,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "35641:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												},
																												"value": "0"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												}
																											],
																											"id": 1463,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "35633:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_address_$",
																												"typeString": "type(address)"
																											},
																											"typeName": {
																												"id": 1462,
																												"name": "address",
																												"nodeType": "ElementaryTypeName",
																												"src": "35633:7:0",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 1465,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "35633:10:0",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "35615:28:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1470,
																								"nodeType": "IfStatement",
																								"src": "35611:107:0",
																								"trueBody": {
																									"id": 1469,
																									"nodeType": "Block",
																									"src": "35645:73:0",
																									"statements": [
																										{
																											"expression": {
																												"id": 1467,
																												"name": "ownership",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1431,
																												"src": "35682:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
																													"typeString": "struct IERC721A.TokenOwnership memory"
																												}
																											},
																											"functionReturnParameters": 1417,
																											"id": 1468,
																											"nodeType": "Return",
																											"src": "35675:16:0"
																										}
																									]
																								}
																							}
																						]
																					},
																					"condition": {
																						"hexValue": "74727565",
																						"id": 1450,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "35492:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "true"
																					},
																					"id": 1472,
																					"nodeType": "WhileStatement",
																					"src": "35485:255:0"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1479,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "35798:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35798:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "RevertStatement",
												"src": "35791:38:0"
											}
										]
									},
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "34560:185:0",
										"text": " Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around in the collection over time."
									},
									"id": 1483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "34759:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34780:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "34772:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34771:17:0"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "34812:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1415,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1414,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1079,
														"src": "34812:14:0"
													},
													"referencedDeclaration": 1079,
													"src": "34812:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34811:23:0"
									},
									"scope": 2451,
									"src": "34750:1086:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										935
									],
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "35966:50:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1493,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1486,
																"src": "35996:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1492,
															"name": "_ownershipOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "35983:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1079_memory_ptr_$",
																"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35983:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1074,
													"src": "35983:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1491,
												"id": 1496,
												"nodeType": "Return",
												"src": "35976:33:0"
											}
										]
									},
									"documentation": {
										"id": 1484,
										"nodeType": "StructuredDocumentation",
										"src": "35842:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "35902:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1488,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35939:8:0"
									},
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35918:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "35910:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35909:17:0"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "35957:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35956:9:0"
									},
									"scope": 2451,
									"src": "35893:123:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1012
									],
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "36147:29:0",
										"statements": [
											{
												"expression": {
													"id": 1505,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1120,
													"src": "36164:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1504,
												"id": 1506,
												"nodeType": "Return",
												"src": "36157:12:0"
											}
										]
									},
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "36022:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "36087:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1501,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "36114:8:0"
									},
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36091:2:0"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "36132:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1502,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36132:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36131:15:0"
									},
									"scope": 2451,
									"src": "36078:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1018
									],
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "36311:31:0",
										"statements": [
											{
												"expression": {
													"id": 1515,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1122,
													"src": "36328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1516,
												"nodeType": "Return",
												"src": "36321:14:0"
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "36182:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "36249:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1511,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "36278:8:0"
									},
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36255:2:0"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "36296:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36296:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36295:15:0"
									},
									"scope": 2451,
									"src": "36240:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1026
									],
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "36496:225:0",
										"statements": [
											{
												"condition": {
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "36510:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 1528,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "36519:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1527,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "36511:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36511:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1534,
												"nodeType": "IfStatement",
												"src": "36506:59:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1531,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "36536:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36536:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1533,
													"nodeType": "RevertStatement",
													"src": "36529:36:0"
												}
											},
											{
												"assignments": [
													1536
												],
												"declarations": [
													{
														"constant": false,
														"id": 1536,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "36590:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1560,
														"src": "36576:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1535,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "36576:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1539,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1537,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "36600:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36600:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36576:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1542,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1536,
																		"src": "36633:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "36627:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1540,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "36627:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36627:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "36627:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36652:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "36627:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36712:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "36627:87:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1551,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1536,
																		"src": "36680:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1552,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1521,
																				"src": "36689:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 395,
																			"src": "36689:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36689:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1549,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "36663:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "36663:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36663:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "36656:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1547,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "36656:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "36656:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1526,
												"id": 1559,
												"nodeType": "Return",
												"src": "36620:94:0"
											}
										]
									},
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "36348:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "36417:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1523,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "36463:8:0"
									},
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36434:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "36426:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36425:17:0"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "36481:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1524,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36481:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36480:15:0"
									},
									"scope": 2451,
									"src": "36408:313:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "37028:116:0",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d57755a3650574a535770704d354168344337747836646845476f626b686b6e734c58333446423957746e684d2f",
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "37045:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_873fd5f964b13e1038074dfa7bf985864a803be90f361e484b606b70d53e1173",
														"typeString": "literal_string \"https://gateway.pinata.cloud/ipfs/QmWuZ6PWJSWppM5Ah4C7tx6dhEGobkhknsLX34FB9WtnhM/\""
													},
													"value": "https://gateway.pinata.cloud/ipfs/QmWuZ6PWJSWppM5Ah4C7tx6dhEGobkhknsLX34FB9WtnhM/"
												},
												"functionReturnParameters": 1566,
												"id": 1568,
												"nodeType": "Return",
												"src": "37038:90:0"
											}
										]
									},
									"documentation": {
										"id": 1562,
										"nodeType": "StructuredDocumentation",
										"src": "36727:230:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "36971:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36979:2:0"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "37013:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1564,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37013:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37012:15:0"
									},
									"scope": 2451,
									"src": "36962:182:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										975
									],
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "37263:301:0",
										"statements": [
											{
												"assignments": [
													1580
												],
												"declarations": [
													{
														"constant": false,
														"id": 1580,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "37281:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1615,
														"src": "37273:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1579,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37273:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1585,
												"initialValue": {
													"arguments": [
														{
															"id": 1583,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "37305:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1581,
															"name": "ERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2451,
															"src": "37289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721A_$2451_$",
																"typeString": "type(contract ERC721A)"
															}
														},
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1498,
														"src": "37289:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37289:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37273:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1586,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1573,
														"src": "37327:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1587,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "37333:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "37327:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1592,
												"nodeType": "IfStatement",
												"src": "37323:48:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1589,
															"name": "ApprovalToCurrentOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "37347:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37347:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1591,
													"nodeType": "RevertStatement",
													"src": "37340:31:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1593,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "37386:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37386:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1595,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "37402:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "37386:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1608,
												"nodeType": "IfStatement",
												"src": "37382:137:0",
												"trueBody": {
													"condition": {
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "37412:38:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1598,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "37430:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1599,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "37437:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37437:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1597,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "37413:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37413:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1607,
													"nodeType": "IfStatement",
													"src": "37409:110:0",
													"trueBody": {
														"id": 1606,
														"nodeType": "Block",
														"src": "37452:67:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1603,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "37473:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37473:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1605,
																"nodeType": "RevertStatement",
																"src": "37466:42:0"
															}
														]
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1610,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "37538:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1611,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "37542:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1612,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "37551:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1609,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2369,
														"src": "37529:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37529:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "37529:28:0"
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "37150:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "37210:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1577,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "37254:8:0"
									},
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37226:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "37218:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37238:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "37230:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37217:29:0"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37263:0:0"
									},
									"scope": 2451,
									"src": "37201:363:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										991
									],
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "37702:123:0",
										"statements": [
											{
												"condition": {
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "37716:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 1626,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "37725:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1625,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "37717:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37717:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1632,
												"nodeType": "IfStatement",
												"src": "37712:64:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1629,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "37742:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37742:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1631,
													"nodeType": "RevertStatement",
													"src": "37735:41:0"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1633,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "37794:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1635,
													"indexExpression": {
														"id": 1634,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "37810:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37794:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1624,
												"id": 1636,
												"nodeType": "Return",
												"src": "37787:31:0"
											}
										]
									},
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "37570:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "37634:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1621,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "37675:8:0"
									},
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37654:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "37646:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37645:17:0"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "37693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37692:9:0"
									},
									"scope": 2451,
									"src": "37625:200:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										983
									],
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "37976:198:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1647,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "37990:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1648,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "38002:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38002:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "37990:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1654,
												"nodeType": "IfStatement",
												"src": "37986:54:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1651,
															"name": "ApproveToCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "38023:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38023:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1653,
													"nodeType": "RevertStatement",
													"src": "38016:24:0"
												}
											},
											{
												"expression": {
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1655,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "38051:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1659,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1656,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "38070:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38070:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "38051:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1660,
														"indexExpression": {
															"id": 1658,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "38084:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38051:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1661,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "38096:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "38051:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1663,
												"nodeType": "ExpressionStatement",
												"src": "38051:53:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1665,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "38134:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38134:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1667,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "38148:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1668,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "38158:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1664,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "38119:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38119:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1670,
												"nodeType": "EmitStatement",
												"src": "38114:53:0"
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "37831:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "37901:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1645,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "37967:8:0"
									},
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37927:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "37919:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "37942:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "37937:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37937:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37918:33:0"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37976:0:0"
									},
									"scope": 2451,
									"src": "37892:282:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1001
									],
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "38343:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1683,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "38360:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1685,
														"indexExpression": {
															"id": 1684,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "38379:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "38360:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1687,
													"indexExpression": {
														"id": 1686,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "38386:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "38360:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1682,
												"id": 1688,
												"nodeType": "Return",
												"src": "38353:42:0"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "38180:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "38249:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1679,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "38319:8:0"
									},
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "38274:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "38266:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38266:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "38289:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "38281:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38265:33:0"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "38337:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38337:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38336:6:0"
									},
									"scope": 2451,
									"src": "38240:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										967
									],
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "38583:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1702,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "38603:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1703,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "38609:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1704,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "38613:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1701,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "38593:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38593:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "38593:28:0"
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "38408:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "38473:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1699,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "38574:8:0"
									},
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38503:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "38495:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38525:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "38517:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38545:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "38537:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38485:73:0"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38583:0:0"
									},
									"scope": 2451,
									"src": "38464:164:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										957
									],
									"body": {
										"id": 1726,
										"nodeType": "Block",
										"src": "38817:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1720,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "38844:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1721,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "38850:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1722,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "38854:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38863:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1719,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1727,
															1763
														],
														"referencedDeclaration": 1763,
														"src": "38827:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38827:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1725,
												"nodeType": "ExpressionStatement",
												"src": "38827:39:0"
											}
										]
									},
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "38634:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "38703:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1717,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "38808:8:0"
									},
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "38729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38759:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "38751:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38779:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "38771:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38719:73:0"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38817:0:0"
									},
									"scope": 2451,
									"src": "38694:179:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										947
									],
									"body": {
										"id": 1762,
										"nodeType": "Block",
										"src": "39090:209:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1741,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "39110:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1742,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "39116:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1743,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "39120:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1740,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "39100:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39100:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1745,
												"nodeType": "ExpressionStatement",
												"src": "39100:28:0"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1746,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "39142:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 551,
														"src": "39142:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39142:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1761,
												"nodeType": "IfStatement",
												"src": "39138:155:0",
												"trueBody": {
													"condition": {
														"id": 1755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "39162:57:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1750,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "39194:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1751,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1732,
																	"src": "39200:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1752,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "39204:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1753,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "39213:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1749,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2424,
																"src": "39163:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39163:56:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1760,
													"nodeType": "IfStatement",
													"src": "39159:134:0",
													"trueBody": {
														"id": 1759,
														"nodeType": "Block",
														"src": "39221:72:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1756,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "39242:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "39242:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1758,
																"nodeType": "RevertStatement",
																"src": "39235:47:0"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1728,
										"nodeType": "StructuredDocumentation",
										"src": "38879:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "38948:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1738,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "39081:8:0"
									},
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38982:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "38974:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39004:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "38996:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "39016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "39054:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "39041:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39041:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38964:101:0"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39090:0:0"
									},
									"scope": 2451,
									"src": "38939:360:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1786,
										"nodeType": "Block",
										"src": "39567:109:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1771,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "39584:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39584:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1773,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "39603:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39584:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1775,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "39614:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1776,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "39624:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39614:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "39584:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "39641:28:0",
														"subExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1779,
																	"name": "_ownerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "39642:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1079_storage_$",
																		"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																	}
																},
																"id": 1781,
																"indexExpression": {
																	"id": 1780,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "39654:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "39642:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage",
																	"typeString": "struct IERC721A.TokenOwnership storage ref"
																}
															},
															"id": 1782,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "burned",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1078,
															"src": "39642:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "39584:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1785,
												"nodeType": "Return",
												"src": "39577:92:0"
											}
										]
									},
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "39305:194:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n   (`_mint`),"
									},
									"id": 1787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "39513:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39529:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "39521:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39521:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39520:17:0"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "39561:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1768,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39561:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39560:6:0"
									},
									"scope": 2451,
									"src": "39504:172:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1801,
										"nodeType": "Block",
										"src": "39813:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1796,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "39833:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1797,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "39837:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39847:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1795,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1802,
															1969
														],
														"referencedDeclaration": 1969,
														"src": "39823:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39823:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "39823:27:0"
											}
										]
									},
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "39682:68:0",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "39764:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39782:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "39774:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "39794:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "39786:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39773:30:0"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39813:0:0"
									},
									"scope": 2451,
									"src": "39755:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "40325:1715:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1813,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "40437:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1812,
														"name": "updateBlockScore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "40420:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40420:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1815,
												"nodeType": "ExpressionStatement",
												"src": "40420:20:0"
											},
											{
												"assignments": [
													1817
												],
												"declarations": [
													{
														"constant": false,
														"id": 1817,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "40458:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "40450:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "40450:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1819,
												"initialValue": {
													"id": 1818,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1116,
													"src": "40473:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40450:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1820,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "40500:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "40514:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40506:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "40506:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40506:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "40500:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1829,
												"nodeType": "IfStatement",
												"src": "40496:48:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1826,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "40525:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40525:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1828,
													"nodeType": "RevertStatement",
													"src": "40518:26:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1830,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1807,
														"src": "40558:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "40558:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1836,
												"nodeType": "IfStatement",
												"src": "40554:44:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1833,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "40580:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40580:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1835,
													"nodeType": "RevertStatement",
													"src": "40573:25:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40639:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40631:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1838,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "40631:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40631:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1842,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "40643:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1843,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "40647:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1844,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "40661:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1837,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2437,
														"src": "40609:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40609:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1846,
												"nodeType": "ExpressionStatement",
												"src": "40609:61:0"
											},
											{
												"id": 1957,
												"nodeType": "UncheckedBlock",
												"src": "40917:1047:0",
												"statements": [
													{
														"expression": {
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1847,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "40941:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1088_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1849,
																	"indexExpression": {
																		"id": 1848,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1805,
																		"src": "40954:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "40941:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$1088_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 1850,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1081,
																"src": "40941:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1853,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1807,
																		"src": "40976:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "40969:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1851,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "40969:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40969:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "40941:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1856,
														"nodeType": "ExpressionStatement",
														"src": "40941:44:0"
													},
													{
														"expression": {
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1857,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "40999:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1088_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 1859,
																	"indexExpression": {
																		"id": 1858,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1805,
																		"src": "41012:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "40999:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$1088_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 1860,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "numberMinted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1083,
																"src": "40999:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1863,
																		"name": "quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1807,
																		"src": "41039:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "41032:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1861,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "41032:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41032:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "40999:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1866,
														"nodeType": "ExpressionStatement",
														"src": "40999:49:0"
													},
													{
														"expression": {
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1867,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1127,
																		"src": "41063:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1079_storage_$",
																			"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1869,
																	"indexExpression": {
																		"id": 1868,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1817,
																		"src": "41075:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "41063:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage",
																		"typeString": "struct IERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1870,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1074,
																"src": "41063:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1871,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1805,
																"src": "41096:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "41063:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1873,
														"nodeType": "ExpressionStatement",
														"src": "41063:35:0"
													},
													{
														"expression": {
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 1874,
																		"name": "_ownerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1127,
																		"src": "41112:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1079_storage_$",
																			"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																		}
																	},
																	"id": 1876,
																	"indexExpression": {
																		"id": 1875,
																		"name": "startTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1817,
																		"src": "41124:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "41112:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage",
																		"typeString": "struct IERC721A.TokenOwnership storage ref"
																	}
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1076,
																"src": "41112:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1880,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "41162:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "41162:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "41155:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1878,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "41155:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41155:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "41112:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 1884,
														"nodeType": "ExpressionStatement",
														"src": "41112:66:0"
													},
													{
														"assignments": [
															1886
														],
														"declarations": [
															{
																"constant": false,
																"id": 1886,
																"mutability": "mutable",
																"name": "updatedIndex",
																"nameLocation": "41201:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 1957,
																"src": "41193:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1885,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "41193:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1888,
														"initialValue": {
															"id": 1887,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "41216:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "41193:35:0"
													},
													{
														"assignments": [
															1890
														],
														"declarations": [
															{
																"constant": false,
																"id": 1890,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "41250:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1957,
																"src": "41242:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1889,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "41242:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1894,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1891,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1886,
																"src": "41256:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1892,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1807,
																"src": "41271:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "41256:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "41242:37:0"
													},
													{
														"condition": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1895,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1805,
																	"src": "41298:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 551,
																"src": "41298:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41298:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1951,
															"nodeType": "Block",
															"src": "41763:149:0",
															"statements": [
																{
																	"body": {
																		"id": 1946,
																		"nodeType": "Block",
																		"src": "41784:86:0",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 1939,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "41828:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 1938,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "41820:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1937,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "41820:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1940,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "41820:10:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1941,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1805,
																							"src": "41832:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1943,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "41836:14:0",
																							"subExpression": {
																								"id": 1942,
																								"name": "updatedIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1886,
																								"src": "41836:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1936,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 901,
																						"src": "41811:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 1944,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "41811:40:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1945,
																				"nodeType": "EmitStatement",
																				"src": "41806:45:0"
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1947,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1886,
																			"src": "41878:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1948,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1890,
																			"src": "41893:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "41878:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1950,
																	"nodeType": "DoWhileStatement",
																	"src": "41781:117:0"
																}
															]
														},
														"id": 1952,
														"nodeType": "IfStatement",
														"src": "41294:618:0",
														"trueBody": {
															"id": 1935,
															"nodeType": "Block",
															"src": "41315:442:0",
															"statements": [
																{
																	"body": {
																		"id": 1923,
																		"nodeType": "Block",
																		"src": "41336:277:0",
																		"statements": [
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 1901,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "41380:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 1900,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "41372:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1899,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "41372:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1902,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "41372:10:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1903,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1805,
																							"src": "41384:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1904,
																							"name": "updatedIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1886,
																							"src": "41388:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1898,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 901,
																						"src": "41363:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 1905,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "41363:38:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1906,
																				"nodeType": "EmitStatement",
																				"src": "41358:43:0"
																			},
																			{
																				"condition": {
																					"id": 1917,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "41427:70:0",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1910,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "41467:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1909,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "41459:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1908,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "41459:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1911,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "41459:10:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1912,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1805,
																								"src": "41471:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1914,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "41475:14:0",
																								"subExpression": {
																									"id": 1913,
																									"name": "updatedIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1886,
																									"src": "41475:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1915,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1809,
																								"src": "41491:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1907,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2424,
																							"src": "41428:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1916,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "41428:69:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1922,
																				"nodeType": "IfStatement",
																				"src": "41423:172:0",
																				"trueBody": {
																					"id": 1921,
																					"nodeType": "Block",
																					"src": "41499:96:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1918,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1066,
																									"src": "41532:38:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 1919,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "41532:40:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1920,
																							"nodeType": "RevertStatement",
																							"src": "41525:47:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1924,
																			"name": "updatedIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1886,
																			"src": "41621:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1925,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1890,
																			"src": "41636:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "41621:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1927,
																	"nodeType": "DoWhileStatement",
																	"src": "41333:308:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1928,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "41703:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1929,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1817,
																			"src": "41720:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "41703:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1934,
																	"nodeType": "IfStatement",
																	"src": "41699:43:0",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1931,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "41734:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "41734:8:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1933,
																		"nodeType": "ExpressionStatement",
																		"src": "41734:8:0"
																	}
																}
															]
														}
													},
													{
														"expression": {
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1953,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "41925:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1954,
																"name": "updatedIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1886,
																"src": "41941:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "41925:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1956,
														"nodeType": "ExpressionStatement",
														"src": "41925:28:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "42002:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "41994:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1959,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "41994:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41994:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1963,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "42006:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1964,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "42010:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1965,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "42024:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1958,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2450,
														"src": "41973:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41973:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "41973:60:0"
											}
										]
									},
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "39863:349:0",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n   {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event."
									},
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "40226:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40253:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "40245:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "40273:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "40265:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "40304:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "40291:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40291:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40235:80:0"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40325:0:0"
									},
									"scope": 2451,
									"src": "40217:1823:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "42387:2044:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1980,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "42414:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1979,
														"name": "updateBlockScore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "42397:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42397:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "42397:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1984,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "42446:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1983,
														"name": "updateBlockScore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "42429:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42429:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1986,
												"nodeType": "ExpressionStatement",
												"src": "42429:20:0"
											},
											{
												"assignments": [
													1989
												],
												"declarations": [
													{
														"constant": false,
														"id": 1989,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "42481:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2146,
														"src": "42459:35:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 1988,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1987,
																"name": "TokenOwnership",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1079,
																"src": "42459:14:0"
															},
															"referencedDeclaration": 1079,
															"src": "42459:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																"typeString": "struct IERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1993,
												"initialValue": {
													"arguments": [
														{
															"id": 1991,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "42510:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1990,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "42497:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1079_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42497:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42459:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1994,
															"name": "prevOwnership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1989,
															"src": "42533:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1995,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1074,
														"src": "42533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1996,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1972,
														"src": "42555:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "42533:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2001,
												"nodeType": "IfStatement",
												"src": "42529:67:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1998,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "42568:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42568:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2000,
													"nodeType": "RevertStatement",
													"src": "42561:35:0"
												}
											},
											{
												"assignments": [
													2003
												],
												"declarations": [
													{
														"constant": false,
														"id": 2003,
														"mutability": "mutable",
														"name": "isApprovedOrOwner",
														"nameLocation": "42612:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 2146,
														"src": "42607:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2002,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "42607:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2022,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2004,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 524,
																			"src": "42633:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42633:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2006,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1972,
																		"src": "42649:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "42633:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2009,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1972,
																			"src": "42686:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2010,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "42692:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 2011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "42692:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2008,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "42669:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 2012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42669:36:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "42633:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2015,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1976,
																			"src": "42733:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2014,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "42721:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42721:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2017,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "42745:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42745:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "42721:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "42633:124:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2021,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "42632:126:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42607:151:0"
											},
											{
												"condition": {
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "42773:18:0",
													"subExpression": {
														"id": 2023,
														"name": "isApprovedOrOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "42774:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2028,
												"nodeType": "IfStatement",
												"src": "42769:66:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2025,
															"name": "TransferCallerNotOwnerNorApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "42800:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42800:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2027,
													"nodeType": "RevertStatement",
													"src": "42793:42:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2029,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1974,
														"src": "42849:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42863:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "42855:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2030,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "42855:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42855:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "42849:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2038,
												"nodeType": "IfStatement",
												"src": "42845:52:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2035,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "42874:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42874:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2037,
													"nodeType": "RevertStatement",
													"src": "42867:30:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2040,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "42930:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2041,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "42936:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2042,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "42940:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42949:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2039,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2437,
														"src": "42908:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42908:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2045,
												"nodeType": "ExpressionStatement",
												"src": "42908:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43030:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43022:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2047,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "43022:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43022:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2051,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "43034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2052,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "43043:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2046,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2369,
														"src": "43013:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43013:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2054,
												"nodeType": "ExpressionStatement",
												"src": "43013:35:0"
											},
											{
												"id": 2132,
												"nodeType": "UncheckedBlock",
												"src": "43314:1016:0",
												"statements": [
													{
														"expression": {
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2055,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "43338:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1088_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 2057,
																	"indexExpression": {
																		"id": 2056,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1972,
																		"src": "43351:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "43338:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$1088_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1081,
																"src": "43338:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43368:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "43338:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2061,
														"nodeType": "ExpressionStatement",
														"src": "43338:31:0"
													},
													{
														"expression": {
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"baseExpression": {
																		"id": 2062,
																		"name": "_addressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "43383:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1088_storage_$",
																			"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																		}
																	},
																	"id": 2064,
																	"indexExpression": {
																		"id": 2063,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1974,
																		"src": "43396:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "43383:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$1088_storage",
																		"typeString": "struct IERC721A.AddressData storage ref"
																	}
																},
																"id": 2065,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1081,
																"src": "43383:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43411:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "43383:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2068,
														"nodeType": "ExpressionStatement",
														"src": "43383:29:0"
													},
													{
														"assignments": [
															2071
														],
														"declarations": [
															{
																"constant": false,
																"id": 2071,
																"mutability": "mutable",
																"name": "currSlot",
																"nameLocation": "43450:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 2132,
																"src": "43427:31:0",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2070,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2069,
																		"name": "TokenOwnership",
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1079,
																		"src": "43427:14:0"
																	},
																	"referencedDeclaration": 1079,
																	"src": "43427:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2075,
														"initialValue": {
															"baseExpression": {
																"id": 2072,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "43461:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1079_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2074,
															"indexExpression": {
																"id": 2073,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1976,
																"src": "43473:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "43461:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "43427:54:0"
													},
													{
														"expression": {
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2076,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "43495:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2078,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1074,
																"src": "43495:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2079,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "43511:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "43495:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2081,
														"nodeType": "ExpressionStatement",
														"src": "43495:18:0"
													},
													{
														"expression": {
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2082,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "43527:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2084,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1076,
																"src": "43527:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2087,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "43560:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "43560:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "43553:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2085,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "43553:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43553:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "43527:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2091,
														"nodeType": "ExpressionStatement",
														"src": "43527:49:0"
													},
													{
														"assignments": [
															2093
														],
														"declarations": [
															{
																"constant": false,
																"id": 2093,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "43832:11:0",
																"nodeType": "VariableDeclaration",
																"scope": 2132,
																"src": "43824:19:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2092,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "43824:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2097,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2094,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1976,
																"src": "43846:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43856:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "43846:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "43824:33:0"
													},
													{
														"assignments": [
															2100
														],
														"declarations": [
															{
																"constant": false,
																"id": 2100,
																"mutability": "mutable",
																"name": "nextSlot",
																"nameLocation": "43894:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 2132,
																"src": "43871:31:0",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2099,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2098,
																		"name": "TokenOwnership",
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1079,
																		"src": "43871:14:0"
																	},
																	"referencedDeclaration": 1079,
																	"src": "43871:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2104,
														"initialValue": {
															"baseExpression": {
																"id": 2101,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "43905:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1079_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2103,
															"indexExpression": {
																"id": 2102,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2093,
																"src": "43917:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "43905:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "43871:58:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2105,
																	"name": "nextSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2100,
																	"src": "43947:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2106,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1074,
																"src": "43947:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "43972:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "43964:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2107,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "43964:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43964:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "43947:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2131,
														"nodeType": "IfStatement",
														"src": "43943:377:0",
														"trueBody": {
															"id": 2130,
															"nodeType": "Block",
															"src": "43976:344:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2112,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "44139:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2113,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "44154:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "44139:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2129,
																	"nodeType": "IfStatement",
																	"src": "44135:171:0",
																	"trueBody": {
																		"id": 2128,
																		"nodeType": "Block",
																		"src": "44169:137:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2119,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2115,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2100,
																							"src": "44191:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2117,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1074,
																						"src": "44191:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2118,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1972,
																						"src": "44207:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "44191:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2120,
																				"nodeType": "ExpressionStatement",
																				"src": "44191:20:0"
																			},
																			{
																				"expression": {
																					"id": 2126,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2121,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2100,
																							"src": "44233:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2123,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1076,
																						"src": "44233:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 2124,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1989,
																							"src": "44259:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 2125,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1076,
																						"src": "44259:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "44233:54:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 2127,
																				"nodeType": "ExpressionStatement",
																				"src": "44233:54:0"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2134,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "44354:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2135,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "44360:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2136,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "44364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2133,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "44345:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44345:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2138,
												"nodeType": "EmitStatement",
												"src": "44340:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2140,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "44403:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2141,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "44409:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2142,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "44413:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44422:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2139,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2450,
														"src": "44382:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44382:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2145,
												"nodeType": "ExpressionStatement",
												"src": "44382:42:0"
											}
										]
									},
									"documentation": {
										"id": 1970,
										"nodeType": "StructuredDocumentation",
										"src": "42051:231:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "42296:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "42323:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "42315:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42315:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42345:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "42337:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42365:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "42357:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42305:73:0"
									},
									"returnParameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42387:0:0"
									},
									"scope": 2451,
									"src": "42287:2144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "44553:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2154,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2150,
															"src": "44569:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44578:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2153,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2159,
															2346
														],
														"referencedDeclaration": 2346,
														"src": "44563:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44563:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2157,
												"nodeType": "ExpressionStatement",
												"src": "44563:21:0"
											}
										]
									},
									"documentation": {
										"id": 2148,
										"nodeType": "StructuredDocumentation",
										"src": "44437:62:0",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "44513:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44527:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "44519:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44519:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44518:17:0"
									},
									"returnParameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44553:0:0"
									},
									"scope": 2451,
									"src": "44504:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2345,
										"nodeType": "Block",
										"src": "44877:2324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2168,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "44904:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "44904:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2167,
														"name": "updateBlockScore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "44887:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44887:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2171,
												"nodeType": "ExpressionStatement",
												"src": "44887:28:0"
											},
											{
												"assignments": [
													2174
												],
												"declarations": [
													{
														"constant": false,
														"id": 2174,
														"mutability": "mutable",
														"name": "prevOwnership",
														"nameLocation": "44947:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2345,
														"src": "44925:35:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership"
														},
														"typeName": {
															"id": 2173,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2172,
																"name": "TokenOwnership",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1079,
																"src": "44925:14:0"
															},
															"referencedDeclaration": 1079,
															"src": "44925:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																"typeString": "struct IERC721A.TokenOwnership"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2178,
												"initialValue": {
													"arguments": [
														{
															"id": 2176,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "44976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2175,
														"name": "_ownershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "44963:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$1079_memory_ptr_$",
															"typeString": "function (uint256) view returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44963:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44925:59:0"
											},
											{
												"assignments": [
													2180
												],
												"declarations": [
													{
														"constant": false,
														"id": 2180,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "45003:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2345,
														"src": "44995:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "44995:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2183,
												"initialValue": {
													"expression": {
														"id": 2181,
														"name": "prevOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "45010:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
															"typeString": "struct IERC721A.TokenOwnership memory"
														}
													},
													"id": 2182,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "addr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1074,
													"src": "45010:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44995:33:0"
											},
											{
												"condition": {
													"id": 2184,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2164,
													"src": "45043:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2213,
												"nodeType": "IfStatement",
												"src": "45039:284:0",
												"trueBody": {
													"id": 2212,
													"nodeType": "Block",
													"src": "45058:265:0",
													"statements": [
														{
															"assignments": [
																2186
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2186,
																	"mutability": "mutable",
																	"name": "isApprovedOrOwner",
																	"nameLocation": "45077:17:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2212,
																	"src": "45072:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2185,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "45072:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2205,
															"initialValue": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"id": 2190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2187,
																						"name": "_msgSender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 524,
																						"src": "45098:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 2188,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "45098:12:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"id": 2189,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2180,
																					"src": "45114:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "45098:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "||",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 2192,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2180,
																						"src": "45155:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 2193,
																							"name": "_msgSender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 524,
																							"src": "45161:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 2194,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "45161:12:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2191,
																					"name": "isApprovedForAll",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1690,
																					"src": "45138:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address,address) view returns (bool)"
																					}
																				},
																				"id": 2195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "45138:36:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "45098:76:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 2202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2198,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2162,
																						"src": "45206:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2197,
																					"name": "getApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1638,
																					"src": "45194:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																						"typeString": "function (uint256) view returns (address)"
																					}
																				},
																				"id": 2199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "45194:20:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2200,
																					"name": "_msgSender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "45218:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "45218:12:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "45194:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "45098:132:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2204,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "45097:134:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "45072:159:0"
														},
														{
															"condition": {
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "45250:18:0",
																"subExpression": {
																	"id": 2206,
																	"name": "isApprovedOrOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2186,
																	"src": "45251:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2211,
															"nodeType": "IfStatement",
															"src": "45246:66:0",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2208,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1060,
																		"src": "45277:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "45277:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2210,
																"nodeType": "RevertStatement",
																"src": "45270:42:0"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2215,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "45355:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45369:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45361:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2216,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45361:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45361:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2220,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "45373:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45382:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2214,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2437,
														"src": "45333:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45333:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2223,
												"nodeType": "ExpressionStatement",
												"src": "45333:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45463:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45455:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2225,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45455:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45455:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2229,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "45467:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2230,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "45476:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2224,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2369,
														"src": "45446:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45446:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2232,
												"nodeType": "ExpressionStatement",
												"src": "45446:35:0"
											},
											{
												"id": 2321,
												"nodeType": "UncheckedBlock",
												"src": "45747:1190:0",
												"statements": [
													{
														"assignments": [
															2235
														],
														"declarations": [
															{
																"constant": false,
																"id": 2235,
																"mutability": "mutable",
																"name": "addressData",
																"nameLocation": "45791:11:0",
																"nodeType": "VariableDeclaration",
																"scope": 2321,
																"src": "45771:31:0",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressData_$1088_storage_ptr",
																	"typeString": "struct IERC721A.AddressData"
																},
																"typeName": {
																	"id": 2234,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2233,
																		"name": "AddressData",
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1088,
																		"src": "45771:11:0"
																	},
																	"referencedDeclaration": 1088,
																	"src": "45771:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$1088_storage_ptr",
																		"typeString": "struct IERC721A.AddressData"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2239,
														"initialValue": {
															"baseExpression": {
																"id": 2236,
																"name": "_addressData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "45805:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$1088_storage_$",
																	"typeString": "mapping(address => struct IERC721A.AddressData storage ref)"
																}
															},
															"id": 2238,
															"indexExpression": {
																"id": 2237,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2180,
																"src": "45818:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "45805:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressData_$1088_storage",
																"typeString": "struct IERC721A.AddressData storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "45771:52:0"
													},
													{
														"expression": {
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2240,
																	"name": "addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2235,
																	"src": "45837:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$1088_storage_ptr",
																		"typeString": "struct IERC721A.AddressData storage pointer"
																	}
																},
																"id": 2242,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1081,
																"src": "45837:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45860:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "45837:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2245,
														"nodeType": "ExpressionStatement",
														"src": "45837:24:0"
													},
													{
														"expression": {
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2246,
																	"name": "addressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2235,
																	"src": "45875:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressData_$1088_storage_ptr",
																		"typeString": "struct IERC721A.AddressData storage pointer"
																	}
																},
																"id": 2248,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "numberBurned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1085,
																"src": "45875:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45903:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "45875:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2251,
														"nodeType": "ExpressionStatement",
														"src": "45875:29:0"
													},
													{
														"assignments": [
															2254
														],
														"declarations": [
															{
																"constant": false,
																"id": 2254,
																"mutability": "mutable",
																"name": "currSlot",
																"nameLocation": "46023:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 2321,
																"src": "46000:31:0",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2253,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2252,
																		"name": "TokenOwnership",
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1079,
																		"src": "46000:14:0"
																	},
																	"referencedDeclaration": 1079,
																	"src": "46000:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2258,
														"initialValue": {
															"baseExpression": {
																"id": 2255,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "46034:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1079_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2257,
															"indexExpression": {
																"id": 2256,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2162,
																"src": "46046:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "46034:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "46000:54:0"
													},
													{
														"expression": {
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2259,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2254,
																	"src": "46068:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2261,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1074,
																"src": "46068:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2262,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2180,
																"src": "46084:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "46068:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2264,
														"nodeType": "ExpressionStatement",
														"src": "46068:20:0"
													},
													{
														"expression": {
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2265,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2254,
																	"src": "46102:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2267,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1076,
																"src": "46102:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2270,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "46135:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "46135:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "46128:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2268,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "46128:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46128:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "46102:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"id": 2274,
														"nodeType": "ExpressionStatement",
														"src": "46102:49:0"
													},
													{
														"expression": {
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2275,
																	"name": "currSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2254,
																	"src": "46165:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2277,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "burned",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1078,
																"src": "46165:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"hexValue": "74727565",
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46183:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "46165:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2280,
														"nodeType": "ExpressionStatement",
														"src": "46165:22:0"
													},
													{
														"assignments": [
															2282
														],
														"declarations": [
															{
																"constant": false,
																"id": 2282,
																"mutability": "mutable",
																"name": "nextTokenId",
																"nameLocation": "46439:11:0",
																"nodeType": "VariableDeclaration",
																"scope": 2321,
																"src": "46431:19:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "46431:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2286,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2283,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2162,
																"src": "46453:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46463:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "46453:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "46431:33:0"
													},
													{
														"assignments": [
															2289
														],
														"declarations": [
															{
																"constant": false,
																"id": 2289,
																"mutability": "mutable",
																"name": "nextSlot",
																"nameLocation": "46501:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 2321,
																"src": "46478:31:0",
																"stateVariable": false,
																"storageLocation": "storage",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																	"typeString": "struct IERC721A.TokenOwnership"
																},
																"typeName": {
																	"id": 2288,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 2287,
																		"name": "TokenOwnership",
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 1079,
																		"src": "46478:14:0"
																	},
																	"referencedDeclaration": 1079,
																	"src": "46478:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2293,
														"initialValue": {
															"baseExpression": {
																"id": 2290,
																"name": "_ownerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "46512:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$1079_storage_$",
																	"typeString": "mapping(uint256 => struct IERC721A.TokenOwnership storage ref)"
																}
															},
															"id": 2292,
															"indexExpression": {
																"id": 2291,
																"name": "nextTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2282,
																"src": "46524:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "46512:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage",
																"typeString": "struct IERC721A.TokenOwnership storage ref"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "46478:58:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2294,
																	"name": "nextSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2289,
																	"src": "46554:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																		"typeString": "struct IERC721A.TokenOwnership storage pointer"
																	}
																},
																"id": 2295,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "addr",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1074,
																"src": "46554:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "46579:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "46571:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2296,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "46571:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46571:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "46554:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2320,
														"nodeType": "IfStatement",
														"src": "46550:377:0",
														"trueBody": {
															"id": 2319,
															"nodeType": "Block",
															"src": "46583:344:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2301,
																			"name": "nextTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2282,
																			"src": "46746:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2302,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "46761:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "46746:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2318,
																	"nodeType": "IfStatement",
																	"src": "46742:171:0",
																	"trueBody": {
																		"id": 2317,
																		"nodeType": "Block",
																		"src": "46776:137:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2308,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2304,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2289,
																							"src": "46798:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2306,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "addr",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1074,
																						"src": "46798:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2307,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2180,
																						"src": "46814:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "46798:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 2309,
																				"nodeType": "ExpressionStatement",
																				"src": "46798:20:0"
																			},
																			{
																				"expression": {
																					"id": 2315,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"id": 2310,
																							"name": "nextSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2289,
																							"src": "46840:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$1079_storage_ptr",
																								"typeString": "struct IERC721A.TokenOwnership storage pointer"
																							}
																						},
																						"id": 2312,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1076,
																						"src": "46840:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"expression": {
																							"id": 2313,
																							"name": "prevOwnership",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2174,
																							"src": "46866:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenOwnership_$1079_memory_ptr",
																								"typeString": "struct IERC721A.TokenOwnership memory"
																							}
																						},
																						"id": 2314,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "startTimestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1076,
																						"src": "46866:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint64",
																							"typeString": "uint64"
																						}
																					},
																					"src": "46840:54:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint64",
																						"typeString": "uint64"
																					}
																				},
																				"id": 2316,
																				"nodeType": "ExpressionStatement",
																				"src": "46840:54:0"
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2323,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "46961:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46975:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46967:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2324,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "46967:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46967:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2328,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "46979:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2322,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "46952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46952:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2330,
												"nodeType": "EmitStatement",
												"src": "46947:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2332,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "47018:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47032:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "47024:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2333,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "47024:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47024:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2337,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "47036:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "47045:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2331,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2450,
														"src": "46997:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46997:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2340,
												"nodeType": "ExpressionStatement",
												"src": "46997:50:0"
											},
											{
												"id": 2344,
												"nodeType": "UncheckedBlock",
												"src": "47146:49:0",
												"statements": [
													{
														"expression": {
															"id": 2342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "47170:14:0",
															"subExpression": {
																"id": 2341,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "47170:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2343,
														"nodeType": "ExpressionStatement",
														"src": "47170:14:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2160,
										"nodeType": "StructuredDocumentation",
										"src": "44597:206:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "44817:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44831:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "44823:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "44845:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "44840:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44840:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44822:37:0"
									},
									"returnParameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44877:0:0"
									},
									"scope": 2451,
									"src": "44808:2393:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "47412:89:0",
										"statements": [
											{
												"expression": {
													"id": 2360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2356,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "47422:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2358,
														"indexExpression": {
															"id": 2357,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2351,
															"src": "47438:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "47422:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2349,
														"src": "47449:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47422:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2361,
												"nodeType": "ExpressionStatement",
												"src": "47422:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2363,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "47475:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2364,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "47482:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2365,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2351,
															"src": "47486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2362,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "47466:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47466:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2367,
												"nodeType": "EmitStatement",
												"src": "47461:33:0"
											}
										]
									},
									"documentation": {
										"id": 2347,
										"nodeType": "StructuredDocumentation",
										"src": "47207:100:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "47321:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47347:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "47339:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "47367:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "47359:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "47392:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "47384:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47329:74:0"
									},
									"returnParameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47412:0:0"
									},
									"scope": 2451,
									"src": "47312:189:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2423,
										"nodeType": "Block",
										"src": "48146:486:0",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 2404,
															"nodeType": "Block",
															"src": "48257:87:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 2402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2396,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "48278:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 2398,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2374,
																							"src": "48304:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2397,
																						"name": "IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 845,
																						"src": "48288:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$845_$",
																							"typeString": "type(contract IERC721Receiver)"
																						}
																					},
																					"id": 2399,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "48288:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721Receiver_$845",
																						"typeString": "contract IERC721Receiver"
																					}
																				},
																				"id": 2400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 844,
																				"src": "48288:36:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 2401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "48288:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "48278:55:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 2382,
																	"id": 2403,
																	"nodeType": "Return",
																	"src": "48271:62:0"
																}
															]
														},
														"errorName": "",
														"id": 2405,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2395,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2394,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "48249:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2405,
																	"src": "48242:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 2393,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "48242:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "48241:15:0"
														},
														"src": "48233:111:0"
													},
													{
														"block": {
															"id": 2420,
															"nodeType": "Block",
															"src": "48373:253:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2409,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2407,
																				"src": "48391:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "48391:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48408:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "48391:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 2418,
																		"nodeType": "Block",
																		"src": "48497:119:0",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "48524:78:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "48557:2:0",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "48561:6:0"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "48553:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "48553:15:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "48576:6:0"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "48570:5:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "48570:13:0"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "48546:6:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "48546:38:0"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "48546:38:0"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 2407,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "48561:6:0",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2407,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "48576:6:0",
																						"valueSize": 1
																					}
																				],
																				"id": 2417,
																				"nodeType": "InlineAssembly",
																				"src": "48515:87:0"
																			}
																		]
																	},
																	"id": 2419,
																	"nodeType": "IfStatement",
																	"src": "48387:229:0",
																	"trueBody": {
																		"id": 2416,
																		"nodeType": "Block",
																		"src": "48411:80:0",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2413,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1066,
																						"src": "48436:38:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 2414,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "48436:40:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2415,
																				"nodeType": "RevertStatement",
																				"src": "48429:47:0"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 2421,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2408,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2407,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "48365:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2421,
																	"src": "48352:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 2406,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "48352:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "48351:21:0"
														},
														"src": "48345:281:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2387,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "48197:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48197:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2389,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2372,
															"src": "48211:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2390,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2376,
															"src": "48217:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2391,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "48226:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2384,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2374,
																	"src": "48176:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2383,
																"name": "IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "48160:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$845_$",
																	"typeString": "type(contract IERC721Receiver)"
																}
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48160:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Receiver_$845",
																"typeString": "contract IERC721Receiver"
															}
														},
														"id": 2386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 844,
														"src": "48160:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48160:72:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 2422,
												"nodeType": "TryStatement",
												"src": "48156:470:0"
											}
										]
									},
									"documentation": {
										"id": 2370,
										"nodeType": "StructuredDocumentation",
										"src": "47507:470:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 2424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "47991:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "48039:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "48031:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48061:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "48053:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48053:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48081:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "48073:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "48111:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "48098:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2377,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "48098:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48021:101:0"
									},
									"returnParameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "48140:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "48140:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48139:6:0"
									},
									"scope": 2451,
									"src": "47982:650:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2436,
										"nodeType": "Block",
										"src": "49415:2:0",
										"statements": []
									},
									"documentation": {
										"id": 2425,
										"nodeType": "StructuredDocumentation",
										"src": "48638:620:0",
										"text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n And also called before burning one token.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "49272:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "49311:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "49303:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49333:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "49325:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "49353:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "49345:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "49383:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2437,
												"src": "49375:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49293:104:0"
									},
									"returnParameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49415:0:0"
									},
									"scope": 2451,
									"src": "49263:154:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2449,
										"nodeType": "Block",
										"src": "50209:2:0",
										"statements": []
									},
									"documentation": {
										"id": 2438,
										"nodeType": "StructuredDocumentation",
										"src": "49423:630:0",
										"text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n And also called after one token has been burned.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "50067:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "50105:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "50097:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "50127:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "50119:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "50147:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "50139:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "50177:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "50169:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50087:104:0"
									},
									"returnParameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50209:0:0"
									},
									"scope": 2451,
									"src": "50058:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2479,
							"src": "30158:20055:0",
							"usedErrors": [
								1036,
								1039,
								1042,
								1045,
								1048,
								1051,
								1054,
								1057,
								1060,
								1063,
								1066,
								1069,
								1072
							]
						},
						{
							"id": 2452,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "50250:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2453,
										"name": "ERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2451,
										"src": "50298:7:0"
									},
									"id": 2454,
									"nodeType": "InheritanceSpecifier",
									"src": "50298:7:0"
								}
							],
							"canonicalName": "Dcoffer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2478,
							"linearizedBaseContracts": [
								2478,
								2451,
								855,
								1095,
								1027,
								1002,
								888,
								866,
								534
							],
							"name": "Dcoffer",
							"nameLocation": "50287:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2457,
									"libraryName": {
										"id": 2455,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "50316:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "50310:24:0",
									"typeName": {
										"id": 2456,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "50329:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 2464,
										"nodeType": "Block",
										"src": "50383:10:0",
										"statements": []
									},
									"id": 2465,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "44636f66666572",
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "50361:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b68ad17baf457882b5f85c860f58d63a37ec7ebfcb4bd2c2399ff1eb79c65cf5",
														"typeString": "literal_string \"Dcoffer\""
													},
													"value": "Dcoffer"
												},
												{
													"hexValue": "44636f66666572",
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "50372:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b68ad17baf457882b5f85c860f58d63a37ec7ebfcb4bd2c2399ff1eb79c65cf5",
														"typeString": "literal_string \"Dcoffer\""
													},
													"value": "Dcoffer"
												}
											],
											"id": 2462,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2459,
												"name": "ERC721A",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2451,
												"src": "50353:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50353:29:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50351:2:0"
									},
									"returnParameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50383:0:0"
									},
									"scope": 2478,
									"src": "50340:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2476,
										"nodeType": "Block",
										"src": "50440:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2471,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "50457:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "50457:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2473,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2467,
															"src": "50469:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2470,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1802,
															1969
														],
														"referencedDeclaration": 1802,
														"src": "50447:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50447:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2475,
												"nodeType": "ExpressionStatement",
												"src": "50447:31:0"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 2477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "50408:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "50421:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "50413:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50412:18:0"
									},
									"returnParameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50440:0:0"
									},
									"scope": 2478,
									"src": "50399:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2479,
							"src": "50278:215:0",
							"usedErrors": [
								1036,
								1039,
								1042,
								1045,
								1048,
								1051,
								1054,
								1057,
								1060,
								1063,
								1066,
								1069,
								1072
							]
						}
					],
					"src": "135:50358:0"
				},
				"id": 0
			}
		}
	}
}