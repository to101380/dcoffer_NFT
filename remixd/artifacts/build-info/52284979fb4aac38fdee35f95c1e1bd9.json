{
	"id": "52284979fb4aac38fdee35f95c1e1bd9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"treasury_flat_flat.sol": {
				"content": "\n// File: treasury_flat.sol\n// SPDX-License-Identifier: MIT\n\n// File: Dcoffer/IDCF/IDCF.sol\n\n// ERC721A Contracts v3.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n\n\n/**\n * @dev Interface of an ERC721A compliant contract.\n */\ninterface IDCF  {\n   \n\n    function BlockScore(address user)external view returns(uint);\n\n}\n// File: @openzeppelin/contracts/utils/math/SafeMath.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\n// File: Dcoffer/treasury.sol\n\n\npragma solidity ^0.8.4;\n\n\n\n\ncontract treasury  {\n  using SafeMath for uint;  \n  IDCF mine = IDCF(0x6a544367FCa7064B6ADA5dc87F7E5058A9bB7Af9);\n  IERC20 dcoff =  IERC20(0xbE0C856e2981b9f03d7613566DFC6679eEe4708A);\n\n  uint256 DcoffperBlock;  \n  mapping(address => uint256 )private ScoreWithdrawn;\n\n  constructor(){\n    DcoffperBlock = 2e14;\n  }\n\n\n  function MineDcoff()external{\n      uint256 Score = mine.BlockScore(msg.sender);\n      uint256 afterScore = Score.sub(ScoreWithdrawn[msg.sender]);\n      uint256 GetDCF = afterScore.mul(DcoffperBlock);\n      dcoff.transfer(msg.sender,GetDCF);\n      ScoreWithdrawn[msg.sender] = ScoreWithdrawn[msg.sender].add(afterScore);\n  }  \n\n\n  \n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"treasury_flat_flat.sol": {
				"IDCF": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "BlockScore",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of an ERC721A compliant contract.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"BlockScore(address)": "325b272a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"BlockScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of an ERC721A compliant contract.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"treasury_flat_flat.sol\":\"IDCF\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"treasury_flat_flat.sol\":{\"keccak256\":\"0xed71312245d20cdb1d735101e13c4a9f306eca23c69a26b581904aa9bf8a675b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12047a47e2bc145cb6a936238343d6802223c0eadcbc715872bb401c8a73a914\",\"dweb:/ipfs/QmdHHhWbFwW7h5dcdZ9pRfmFWkkEzPgo4miCRW5wnW6piS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"treasury_flat_flat.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"treasury_flat_flat.sol\":{\"keccak256\":\"0xed71312245d20cdb1d735101e13c4a9f306eca23c69a26b581904aa9bf8a675b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12047a47e2bc145cb6a936238343d6802223c0eadcbc715872bb401c8a73a914\",\"dweb:/ipfs/QmdHHhWbFwW7h5dcdZ9pRfmFWkkEzPgo4miCRW5wnW6piS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"treasury_flat_flat.sol\":833:7133  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"treasury_flat_flat.sol\":833:7133  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f10586dc6b25240e683d04a72aa3dcaf1173640831389ed39a39af0bb3da613264736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f10586dc6b25240e683d04a72aa3dcaf1173640831389ed39a39af0bb3da613264736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL SDIV DUP7 0xDC PUSH12 0x25240E683D04A72AA3DCAF11 PUSH20 0x640831389ED39A39AF0BB3DA613264736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "833:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f10586dc6b25240e683d04a72aa3dcaf1173640831389ed39a39af0bb3da613264736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL SDIV DUP7 0xDC PUSH12 0x25240E683D04A72AA3DCAF11 PUSH20 0x640831389ED39A39AF0BB3DA613264736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "833:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 833,
									"end": 7133,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 833,
									"end": 7133,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f10586dc6b25240e683d04a72aa3dcaf1173640831389ed39a39af0bb3da613264736f6c634300080d0033",
									".code": [
										{
											"begin": 833,
											"end": 7133,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 833,
											"end": 7133,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 833,
											"end": 7133,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 833,
											"end": 7133,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 833,
											"end": 7133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 7133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 833,
											"end": 7133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 7133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 833,
											"end": 7133,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"treasury_flat_flat.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"treasury_flat_flat.sol\":{\"keccak256\":\"0xed71312245d20cdb1d735101e13c4a9f306eca23c69a26b581904aa9bf8a675b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12047a47e2bc145cb6a936238343d6802223c0eadcbc715872bb401c8a73a914\",\"dweb:/ipfs/QmdHHhWbFwW7h5dcdZ9pRfmFWkkEzPgo4miCRW5wnW6piS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"treasury": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "MineDcoff",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"treasury_flat_flat.sol\":9989:10641  contract treasury  {... */\n  mstore(0x40, 0x80)\n    /* \"treasury_flat_flat.sol\":10058:10100  0x6a544367FCa7064B6ADA5dc87F7E5058A9bB7Af9 */\n  0x6a544367fca7064b6ada5dc87f7e5058a9bb7af9\n    /* \"treasury_flat_flat.sol\":10041:10101  IDCF mine = IDCF(0x6a544367FCa7064B6ADA5dc87F7E5058A9bB7Af9) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"treasury_flat_flat.sol\":10128:10170  0xbE0C856e2981b9f03d7613566DFC6679eEe4708A */\n  0xbe0c856e2981b9f03d7613566dfc6679eee4708a\n    /* \"treasury_flat_flat.sol\":10105:10171  IERC20 dcoff =  IERC20(0xbE0C856e2981b9f03d7613566DFC6679eEe4708A) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"treasury_flat_flat.sol\":10258:10302  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"treasury_flat_flat.sol\":10293:10297  2e14 */\n  0xb5e620f48000\n    /* \"treasury_flat_flat.sol\":10277:10290  DcoffperBlock */\n  0x02\n    /* \"treasury_flat_flat.sol\":10277:10297  DcoffperBlock = 2e14 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"treasury_flat_flat.sol\":9989:10641  contract treasury  {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"treasury_flat_flat.sol\":9989:10641  contract treasury  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8bed4778\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"treasury_flat_flat.sol\":10307:10631  function MineDcoff()external{... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"treasury_flat_flat.sol\":10343:10356  uint256 Score */\n      0x00\n        /* \"treasury_flat_flat.sol\":10359:10363  mine */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat_flat.sol\":10359:10374  mine.BlockScore */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x325b272a\n        /* \"treasury_flat_flat.sol\":10375:10385  msg.sender */\n      caller\n        /* \"treasury_flat_flat.sol\":10359:10386  mine.BlockScore(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_10\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_10:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"treasury_flat_flat.sol\":10343:10386  uint256 Score = mine.BlockScore(msg.sender) */\n      swap1\n      pop\n        /* \"treasury_flat_flat.sol\":10394:10412  uint256 afterScore */\n      0x00\n        /* \"treasury_flat_flat.sol\":10415:10452  Score.sub(ScoreWithdrawn[msg.sender]) */\n      tag_13\n        /* \"treasury_flat_flat.sol\":10425:10439  ScoreWithdrawn */\n      0x03\n        /* \"treasury_flat_flat.sol\":10425:10451  ScoreWithdrawn[msg.sender] */\n      0x00\n        /* \"treasury_flat_flat.sol\":10440:10450  msg.sender */\n      caller\n        /* \"treasury_flat_flat.sol\":10425:10451  ScoreWithdrawn[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"treasury_flat_flat.sol\":10415:10420  Score */\n      dup4\n        /* \"treasury_flat_flat.sol\":10415:10424  Score.sub */\n      tag_14\n      swap1\n        /* \"treasury_flat_flat.sol\":10415:10452  Score.sub(ScoreWithdrawn[msg.sender]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_13:\n        /* \"treasury_flat_flat.sol\":10394:10452  uint256 afterScore = Score.sub(ScoreWithdrawn[msg.sender]) */\n      swap1\n      pop\n        /* \"treasury_flat_flat.sol\":10460:10474  uint256 GetDCF */\n      0x00\n        /* \"treasury_flat_flat.sol\":10477:10506  afterScore.mul(DcoffperBlock) */\n      tag_15\n        /* \"treasury_flat_flat.sol\":10492:10505  DcoffperBlock */\n      sload(0x02)\n        /* \"treasury_flat_flat.sol\":10477:10487  afterScore */\n      dup4\n        /* \"treasury_flat_flat.sol\":10477:10491  afterScore.mul */\n      tag_16\n      swap1\n        /* \"treasury_flat_flat.sol\":10477:10506  afterScore.mul(DcoffperBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_15:\n        /* \"treasury_flat_flat.sol\":10460:10506  uint256 GetDCF = afterScore.mul(DcoffperBlock) */\n      swap1\n      pop\n        /* \"treasury_flat_flat.sol\":10514:10519  dcoff */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"treasury_flat_flat.sol\":10514:10528  dcoff.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"treasury_flat_flat.sol\":10529:10539  msg.sender */\n      caller\n        /* \"treasury_flat_flat.sol\":10540:10546  GetDCF */\n      dup4\n        /* \"treasury_flat_flat.sol\":10514:10547  dcoff.transfer(msg.sender,GetDCF) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_17\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_20:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      pop\n        /* \"treasury_flat_flat.sol\":10584:10626  ScoreWithdrawn[msg.sender].add(afterScore) */\n      tag_23\n        /* \"treasury_flat_flat.sol\":10615:10625  afterScore */\n      dup3\n        /* \"treasury_flat_flat.sol\":10584:10598  ScoreWithdrawn */\n      0x03\n        /* \"treasury_flat_flat.sol\":10584:10610  ScoreWithdrawn[msg.sender] */\n      0x00\n        /* \"treasury_flat_flat.sol\":10599:10609  msg.sender */\n      caller\n        /* \"treasury_flat_flat.sol\":10584:10610  ScoreWithdrawn[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"treasury_flat_flat.sol\":10584:10614  ScoreWithdrawn[msg.sender].add */\n      tag_24\n      swap1\n        /* \"treasury_flat_flat.sol\":10584:10626  ScoreWithdrawn[msg.sender].add(afterScore) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_23:\n        /* \"treasury_flat_flat.sol\":10555:10569  ScoreWithdrawn */\n      0x03\n        /* \"treasury_flat_flat.sol\":10555:10581  ScoreWithdrawn[msg.sender] */\n      0x00\n        /* \"treasury_flat_flat.sol\":10570:10580  msg.sender */\n      caller\n        /* \"treasury_flat_flat.sol\":10555:10581  ScoreWithdrawn[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"treasury_flat_flat.sol\":10555:10626  ScoreWithdrawn[msg.sender] = ScoreWithdrawn[msg.sender].add(afterScore) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"treasury_flat_flat.sol\":10335:10631  {... */\n      pop\n      pop\n      pop\n        /* \"treasury_flat_flat.sol\":10307:10631  function MineDcoff()external{... */\n      jump\t// out\n        /* \"treasury_flat_flat.sol\":3473:3569  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_14:\n        /* \"treasury_flat_flat.sol\":3531:3538  uint256 */\n      0x00\n        /* \"treasury_flat_flat.sol\":3561:3562  b */\n      dup2\n        /* \"treasury_flat_flat.sol\":3557:3558  a */\n      dup4\n        /* \"treasury_flat_flat.sol\":3557:3562  a - b */\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"treasury_flat_flat.sol\":3550:3562  return a - b */\n      swap1\n      pop\n        /* \"treasury_flat_flat.sol\":3473:3569  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat_flat.sol\":3816:3912  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_16:\n        /* \"treasury_flat_flat.sol\":3874:3881  uint256 */\n      0x00\n        /* \"treasury_flat_flat.sol\":3904:3905  b */\n      dup2\n        /* \"treasury_flat_flat.sol\":3900:3901  a */\n      dup4\n        /* \"treasury_flat_flat.sol\":3900:3905  a * b */\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"treasury_flat_flat.sol\":3893:3905  return a * b */\n      swap1\n      pop\n        /* \"treasury_flat_flat.sol\":3816:3912  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"treasury_flat_flat.sol\":3106:3202  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_24:\n        /* \"treasury_flat_flat.sol\":3164:3171  uint256 */\n      0x00\n        /* \"treasury_flat_flat.sol\":3194:3195  b */\n      dup2\n        /* \"treasury_flat_flat.sol\":3190:3191  a */\n      dup4\n        /* \"treasury_flat_flat.sol\":3190:3195  a + b */\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"treasury_flat_flat.sol\":3183:3195  return a + b */\n      swap1\n      pop\n        /* \"treasury_flat_flat.sol\":3106:3202  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_34:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_35:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_51\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_34\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_36:\n        /* \"#utility.yul\":328:352   */\n      tag_53\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_35\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_8:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_55\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_36\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_38:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:997   */\n    tag_40:\n        /* \"#utility.yul\":957:964   */\n      0x00\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":975:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_41:\n        /* \"#utility.yul\":1076:1100   */\n      tag_61\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_40\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_62:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1274   */\n    tag_42:\n        /* \"#utility.yul\":1188:1193   */\n      0x00\n        /* \"#utility.yul\":1219:1225   */\n      dup2\n        /* \"#utility.yul\":1213:1226   */\n      mload\n        /* \"#utility.yul\":1204:1226   */\n      swap1\n      pop\n        /* \"#utility.yul\":1235:1268   */\n      tag_64\n        /* \"#utility.yul\":1262:1267   */\n      dup2\n        /* \"#utility.yul\":1235:1268   */\n      tag_41\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1131:1274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1280:1631   */\n    tag_12:\n        /* \"#utility.yul\":1350:1356   */\n      0x00\n        /* \"#utility.yul\":1399:1401   */\n      0x20\n        /* \"#utility.yul\":1387:1396   */\n      dup3\n        /* \"#utility.yul\":1378:1385   */\n      dup5\n        /* \"#utility.yul\":1374:1397   */\n      sub\n        /* \"#utility.yul\":1370:1402   */\n      slt\n        /* \"#utility.yul\":1367:1486   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1405:1484   */\n      tag_67\n      tag_38\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1367:1486   */\n    tag_66:\n        /* \"#utility.yul\":1525:1526   */\n      0x00\n        /* \"#utility.yul\":1550:1614   */\n      tag_68\n        /* \"#utility.yul\":1606:1613   */\n      dup5\n        /* \"#utility.yul\":1597:1603   */\n      dup3\n        /* \"#utility.yul\":1586:1595   */\n      dup6\n        /* \"#utility.yul\":1582:1604   */\n      add\n        /* \"#utility.yul\":1550:1614   */\n      tag_42\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1540:1614   */\n      swap2\n      pop\n        /* \"#utility.yul\":1496:1624   */\n      pop\n        /* \"#utility.yul\":1280:1631   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1637:1755   */\n    tag_43:\n        /* \"#utility.yul\":1724:1748   */\n      tag_70\n        /* \"#utility.yul\":1742:1747   */\n      dup2\n        /* \"#utility.yul\":1724:1748   */\n      tag_40\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1719:1722   */\n      dup3\n        /* \"#utility.yul\":1712:1749   */\n      mstore\n        /* \"#utility.yul\":1637:1755   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1761:2093   */\n    tag_18:\n        /* \"#utility.yul\":1882:1886   */\n      0x00\n        /* \"#utility.yul\":1920:1922   */\n      0x40\n        /* \"#utility.yul\":1909:1918   */\n      dup3\n        /* \"#utility.yul\":1905:1923   */\n      add\n        /* \"#utility.yul\":1897:1923   */\n      swap1\n      pop\n        /* \"#utility.yul\":1933:2004   */\n      tag_72\n        /* \"#utility.yul\":2001:2002   */\n      0x00\n        /* \"#utility.yul\":1990:1999   */\n      dup4\n        /* \"#utility.yul\":1986:2003   */\n      add\n        /* \"#utility.yul\":1977:1983   */\n      dup6\n        /* \"#utility.yul\":1933:2004   */\n      tag_36\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2014:2086   */\n      tag_73\n        /* \"#utility.yul\":2082:2084   */\n      0x20\n        /* \"#utility.yul\":2071:2080   */\n      dup4\n        /* \"#utility.yul\":2067:2085   */\n      add\n        /* \"#utility.yul\":2058:2064   */\n      dup5\n        /* \"#utility.yul\":2014:2086   */\n      tag_43\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1761:2093   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2099:2189   */\n    tag_44:\n        /* \"#utility.yul\":2133:2140   */\n      0x00\n        /* \"#utility.yul\":2176:2181   */\n      dup2\n        /* \"#utility.yul\":2169:2182   */\n      iszero\n        /* \"#utility.yul\":2162:2183   */\n      iszero\n        /* \"#utility.yul\":2151:2183   */\n      swap1\n      pop\n        /* \"#utility.yul\":2099:2189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2195:2311   */\n    tag_45:\n        /* \"#utility.yul\":2265:2286   */\n      tag_76\n        /* \"#utility.yul\":2280:2285   */\n      dup2\n        /* \"#utility.yul\":2265:2286   */\n      tag_44\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2258:2263   */\n      dup2\n        /* \"#utility.yul\":2255:2287   */\n      eq\n        /* \"#utility.yul\":2245:2305   */\n      tag_77\n      jumpi\n        /* \"#utility.yul\":2301:2302   */\n      0x00\n        /* \"#utility.yul\":2298:2299   */\n      dup1\n        /* \"#utility.yul\":2291:2303   */\n      revert\n        /* \"#utility.yul\":2245:2305   */\n    tag_77:\n        /* \"#utility.yul\":2195:2311   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2317:2454   */\n    tag_46:\n        /* \"#utility.yul\":2371:2376   */\n      0x00\n        /* \"#utility.yul\":2402:2408   */\n      dup2\n        /* \"#utility.yul\":2396:2409   */\n      mload\n        /* \"#utility.yul\":2387:2409   */\n      swap1\n      pop\n        /* \"#utility.yul\":2418:2448   */\n      tag_79\n        /* \"#utility.yul\":2442:2447   */\n      dup2\n        /* \"#utility.yul\":2418:2448   */\n      tag_45\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2317:2454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2460:2805   */\n    tag_22:\n        /* \"#utility.yul\":2527:2533   */\n      0x00\n        /* \"#utility.yul\":2576:2578   */\n      0x20\n        /* \"#utility.yul\":2564:2573   */\n      dup3\n        /* \"#utility.yul\":2555:2562   */\n      dup5\n        /* \"#utility.yul\":2551:2574   */\n      sub\n        /* \"#utility.yul\":2547:2579   */\n      slt\n        /* \"#utility.yul\":2544:2663   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":2582:2661   */\n      tag_82\n      tag_38\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2544:2663   */\n    tag_81:\n        /* \"#utility.yul\":2702:2703   */\n      0x00\n        /* \"#utility.yul\":2727:2788   */\n      tag_83\n        /* \"#utility.yul\":2780:2787   */\n      dup5\n        /* \"#utility.yul\":2771:2777   */\n      dup3\n        /* \"#utility.yul\":2760:2769   */\n      dup6\n        /* \"#utility.yul\":2756:2778   */\n      add\n        /* \"#utility.yul\":2727:2788   */\n      tag_46\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2717:2788   */\n      swap2\n      pop\n        /* \"#utility.yul\":2673:2798   */\n      pop\n        /* \"#utility.yul\":2460:2805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2811:2991   */\n    tag_47:\n        /* \"#utility.yul\":2859:2936   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2856:2857   */\n      0x00\n        /* \"#utility.yul\":2849:2937   */\n      mstore\n        /* \"#utility.yul\":2956:2960   */\n      0x11\n        /* \"#utility.yul\":2953:2954   */\n      0x04\n        /* \"#utility.yul\":2946:2961   */\n      mstore\n        /* \"#utility.yul\":2980:2984   */\n      0x24\n        /* \"#utility.yul\":2977:2978   */\n      0x00\n        /* \"#utility.yul\":2970:2985   */\n      revert\n        /* \"#utility.yul\":2997:3188   */\n    tag_27:\n        /* \"#utility.yul\":3037:3041   */\n      0x00\n        /* \"#utility.yul\":3057:3077   */\n      tag_86\n        /* \"#utility.yul\":3075:3076   */\n      dup3\n        /* \"#utility.yul\":3057:3077   */\n      tag_40\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3052:3077   */\n      swap2\n      pop\n        /* \"#utility.yul\":3091:3111   */\n      tag_87\n        /* \"#utility.yul\":3109:3110   */\n      dup4\n        /* \"#utility.yul\":3091:3111   */\n      tag_40\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3086:3111   */\n      swap3\n      pop\n        /* \"#utility.yul\":3130:3131   */\n      dup3\n        /* \"#utility.yul\":3127:3128   */\n      dup3\n        /* \"#utility.yul\":3124:3132   */\n      lt\n        /* \"#utility.yul\":3121:3155   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":3135:3153   */\n      tag_89\n      tag_47\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3121:3155   */\n    tag_88:\n        /* \"#utility.yul\":3180:3181   */\n      dup3\n        /* \"#utility.yul\":3177:3178   */\n      dup3\n        /* \"#utility.yul\":3173:3182   */\n      sub\n        /* \"#utility.yul\":3165:3182   */\n      swap1\n      pop\n        /* \"#utility.yul\":2997:3188   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3194:3542   */\n    tag_30:\n        /* \"#utility.yul\":3234:3241   */\n      0x00\n        /* \"#utility.yul\":3257:3277   */\n      tag_91\n        /* \"#utility.yul\":3275:3276   */\n      dup3\n        /* \"#utility.yul\":3257:3277   */\n      tag_40\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3252:3277   */\n      swap2\n      pop\n        /* \"#utility.yul\":3291:3311   */\n      tag_92\n        /* \"#utility.yul\":3309:3310   */\n      dup4\n        /* \"#utility.yul\":3291:3311   */\n      tag_40\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3286:3311   */\n      swap3\n      pop\n        /* \"#utility.yul\":3479:3480   */\n      dup2\n        /* \"#utility.yul\":3411:3477   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3407:3481   */\n      div\n        /* \"#utility.yul\":3404:3405   */\n      dup4\n        /* \"#utility.yul\":3401:3482   */\n      gt\n        /* \"#utility.yul\":3396:3397   */\n      dup3\n        /* \"#utility.yul\":3389:3398   */\n      iszero\n        /* \"#utility.yul\":3382:3399   */\n      iszero\n        /* \"#utility.yul\":3378:3483   */\n      and\n        /* \"#utility.yul\":3375:3506   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":3486:3504   */\n      tag_94\n      tag_47\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3375:3506   */\n    tag_93:\n        /* \"#utility.yul\":3534:3535   */\n      dup3\n        /* \"#utility.yul\":3531:3532   */\n      dup3\n        /* \"#utility.yul\":3527:3536   */\n      mul\n        /* \"#utility.yul\":3516:3536   */\n      swap1\n      pop\n        /* \"#utility.yul\":3194:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3853   */\n    tag_33:\n        /* \"#utility.yul\":3588:3591   */\n      0x00\n        /* \"#utility.yul\":3607:3627   */\n      tag_96\n        /* \"#utility.yul\":3625:3626   */\n      dup3\n        /* \"#utility.yul\":3607:3627   */\n      tag_40\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3602:3627   */\n      swap2\n      pop\n        /* \"#utility.yul\":3641:3661   */\n      tag_97\n        /* \"#utility.yul\":3659:3660   */\n      dup4\n        /* \"#utility.yul\":3641:3661   */\n      tag_40\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3636:3661   */\n      swap3\n      pop\n        /* \"#utility.yul\":3795:3796   */\n      dup3\n        /* \"#utility.yul\":3727:3793   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3723:3797   */\n      sub\n        /* \"#utility.yul\":3720:3721   */\n      dup3\n        /* \"#utility.yul\":3717:3798   */\n      gt\n        /* \"#utility.yul\":3714:3821   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":3801:3819   */\n      tag_99\n      tag_47\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3714:3821   */\n    tag_98:\n        /* \"#utility.yul\":3845:3846   */\n      dup3\n        /* \"#utility.yul\":3842:3843   */\n      dup3\n        /* \"#utility.yul\":3838:3847   */\n      add\n        /* \"#utility.yul\":3831:3847   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fdd1a284d03cd907774d442dbf5fee31fefc8aef77954212e86bb25f198737b964736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_428": {
									"entryPoint": null,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052736a544367fca7064b6ada5dc87f7e5058a9bb7af96000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073be0c856e2981b9f03d7613566dfc6679eee4708a600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100b957600080fd5b5065b5e620f4800060028190555061056f806100d66000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638bed477814610030575b600080fd5b61003861003a565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663325b272a336040518263ffffffff1660e01b81526004016100969190610306565b602060405180830381865afa1580156100b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d7919061035c565b9050600061012d600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361028390919063ffffffff16565b905060006101466002548361029990919063ffffffff16565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016101a5929190610398565b6020604051808303816000875af11580156101c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e891906103f9565b5061023b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102af90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600081836102919190610455565b905092915050565b600081836102a79190610489565b905092915050565b600081836102bd91906104e3565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f0826102c5565b9050919050565b610300816102e5565b82525050565b600060208201905061031b60008301846102f7565b92915050565b600080fd5b6000819050919050565b61033981610326565b811461034457600080fd5b50565b60008151905061035681610330565b92915050565b60006020828403121561037257610371610321565b5b600061038084828501610347565b91505092915050565b61039281610326565b82525050565b60006040820190506103ad60008301856102f7565b6103ba6020830184610389565b9392505050565b60008115159050919050565b6103d6816103c1565b81146103e157600080fd5b50565b6000815190506103f3816103cd565b92915050565b60006020828403121561040f5761040e610321565b5b600061041d848285016103e4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061046082610326565b915061046b83610326565b92508282101561047e5761047d610426565b5b828203905092915050565b600061049482610326565b915061049f83610326565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104d8576104d7610426565b5b828202905092915050565b60006104ee82610326565b91506104f983610326565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561052e5761052d610426565b5b82820190509291505056fea2646970667358221220fdd1a284d03cd907774d442dbf5fee31fefc8aef77954212e86bb25f198737b964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x6A544367FCA7064B6ADA5DC87F7E5058A9BB7AF9 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xBE0C856E2981B9F03D7613566DFC6679EEE4708A PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH6 0xB5E620F48000 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x56F DUP1 PUSH2 0xD6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BED4778 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x325B272A CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x306 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x35C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12D PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x283 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x146 PUSH1 0x2 SLOAD DUP4 PUSH2 0x299 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5 SWAP3 SWAP2 SWAP1 PUSH2 0x398 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST POP PUSH2 0x23B DUP3 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x455 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x489 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x4E3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F0 DUP3 PUSH2 0x2C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x300 DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x339 DUP2 PUSH2 0x326 JUMP JUMPDEST DUP2 EQ PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x356 DUP2 PUSH2 0x330 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x372 JUMPI PUSH2 0x371 PUSH2 0x321 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x380 DUP5 DUP3 DUP6 ADD PUSH2 0x347 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x392 DUP2 PUSH2 0x326 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3AD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0x3BA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x389 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D6 DUP2 PUSH2 0x3C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F3 DUP2 PUSH2 0x3CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40F JUMPI PUSH2 0x40E PUSH2 0x321 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41D DUP5 DUP3 DUP6 ADD PUSH2 0x3E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x460 DUP3 PUSH2 0x326 JUMP JUMPDEST SWAP2 POP PUSH2 0x46B DUP4 PUSH2 0x326 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x426 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494 DUP3 PUSH2 0x326 JUMP JUMPDEST SWAP2 POP PUSH2 0x49F DUP4 PUSH2 0x326 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4D8 JUMPI PUSH2 0x4D7 PUSH2 0x426 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EE DUP3 PUSH2 0x326 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F9 DUP4 PUSH2 0x326 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x52E JUMPI PUSH2 0x52D PUSH2 0x426 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD1 LOG2 DUP5 0xD0 EXTCODECOPY 0xD9 SMOD PUSH24 0x4D442DBF5FEE31FEFC8AEF77954212E86BB25F198737B964 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "9989:652:0:-:0;;;10058:42;10041:60;;;;;;;;;;;;;;;;;;;;10128:42;10105:66;;;;;;;;;;;;;;;;;;;;10258:44;;;;;;;;;;10293:4;10277:13;:20;;;;9989:652;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MineDcoff_478": {
									"entryPoint": 58,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_185": {
									"entryPoint": 687,
									"id": 185,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_215": {
									"entryPoint": 665,
									"id": 215,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_200": {
									"entryPoint": 643,
									"id": 200,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3856:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "626:6:1",
														"type": ""
													}
												],
												"src": "593:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "965:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "975:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "986:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "975:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "947:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "957:7:1",
														"type": ""
													}
												],
												"src": "920:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1103:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:43:1"
															},
															"nodeType": "YulIf",
															"src": "1056:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1039:5:1",
														"type": ""
													}
												],
												"src": "1003:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1194:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1204:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1219:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1213:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1213:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1204:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1262:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1235:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1235:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1172:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1180:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1188:5:1",
														"type": ""
													}
												],
												"src": "1131:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1357:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1403:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1405:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1405:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1405:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1378:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1374:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1374:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1399:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1370:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:32:1"
															},
															"nodeType": "YulIf",
															"src": "1367:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1496:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1511:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1525:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1515:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1540:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1586:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1597:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1582:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1582:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1606:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1550:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1550:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1540:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1327:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1338:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1350:6:1",
														"type": ""
													}
												],
												"src": "1280:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1702:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1719:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1742:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1724:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1724:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1712:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1690:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1697:3:1",
														"type": ""
													}
												],
												"src": "1637:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1887:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1897:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1920:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1905:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1905:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1897:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1977:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1990:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2001:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1986:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1986:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1933:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1933:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1933:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2058:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2071:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2082:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2067:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2067:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2014:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2014:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1851:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1863:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1871:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1882:4:1",
														"type": ""
													}
												],
												"src": "1761:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2141:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2151:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2176:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2169:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2169:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2162:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2151:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2123:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2133:7:1",
														"type": ""
													}
												],
												"src": "2099:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2235:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2289:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2298:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2301:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2291:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2291:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2291:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2258:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2280:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2265:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2265:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2255:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:40:1"
															},
															"nodeType": "YulIf",
															"src": "2245:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2228:5:1",
														"type": ""
													}
												],
												"src": "2195:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2377:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2387:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2402:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2396:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2396:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2387:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2442:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2418:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2355:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2363:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2371:5:1",
														"type": ""
													}
												],
												"src": "2317:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2534:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2580:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2582:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2582:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2582:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2555:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2564:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2551:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2551:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2576:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2547:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2547:32:1"
															},
															"nodeType": "YulIf",
															"src": "2544:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2673:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2688:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2702:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2692:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2717:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2760:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2771:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2756:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2756:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2780:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2727:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2727:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2717:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2504:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2515:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2527:6:1",
														"type": ""
													}
												],
												"src": "2460:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2839:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2856:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2859:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2849:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2953:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2956:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2946:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2946:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2977:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2980:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2970:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2811:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3042:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3052:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3075:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3057:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3057:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3052:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3086:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3109:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3091:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3091:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3086:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3133:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3135:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3135:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3135:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3127:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3130:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3124:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3124:8:1"
															},
															"nodeType": "YulIf",
															"src": "3121:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3165:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3177:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3180:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3173:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3173:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3165:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3028:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3031:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3037:4:1",
														"type": ""
													}
												],
												"src": "2997:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3242:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3252:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3275:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3257:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3257:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3252:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3286:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3309:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3291:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3291:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3286:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3484:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3486:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3486:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3486:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3396:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3389:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3389:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3382:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3382:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3404:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3411:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3479:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3407:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3407:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3401:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3401:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3378:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3378:105:1"
															},
															"nodeType": "YulIf",
															"src": "3375:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3516:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3531:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3534:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3527:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3516:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3225:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3228:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3234:7:1",
														"type": ""
													}
												],
												"src": "3194:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3592:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3602:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3625:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3607:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3607:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3602:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3636:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3659:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3641:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3636:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3799:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3801:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3801:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3801:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3720:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3727:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3795:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3723:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3723:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3717:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3717:81:1"
															},
															"nodeType": "YulIf",
															"src": "3714:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3831:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3842:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3845:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3831:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3579:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3582:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3588:3:1",
														"type": ""
													}
												],
												"src": "3548:305:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80638bed477814610030575b600080fd5b61003861003a565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663325b272a336040518263ffffffff1660e01b81526004016100969190610306565b602060405180830381865afa1580156100b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d7919061035c565b9050600061012d600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361028390919063ffffffff16565b905060006101466002548361029990919063ffffffff16565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016101a5929190610398565b6020604051808303816000875af11580156101c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e891906103f9565b5061023b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102af90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600081836102919190610455565b905092915050565b600081836102a79190610489565b905092915050565b600081836102bd91906104e3565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f0826102c5565b9050919050565b610300816102e5565b82525050565b600060208201905061031b60008301846102f7565b92915050565b600080fd5b6000819050919050565b61033981610326565b811461034457600080fd5b50565b60008151905061035681610330565b92915050565b60006020828403121561037257610371610321565b5b600061038084828501610347565b91505092915050565b61039281610326565b82525050565b60006040820190506103ad60008301856102f7565b6103ba6020830184610389565b9392505050565b60008115159050919050565b6103d6816103c1565b81146103e157600080fd5b50565b6000815190506103f3816103cd565b92915050565b60006020828403121561040f5761040e610321565b5b600061041d848285016103e4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061046082610326565b915061046b83610326565b92508282101561047e5761047d610426565b5b828203905092915050565b600061049482610326565b915061049f83610326565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156104d8576104d7610426565b5b828202905092915050565b60006104ee82610326565b91506104f983610326565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561052e5761052d610426565b5b82820190509291505056fea2646970667358221220fdd1a284d03cd907774d442dbf5fee31fefc8aef77954212e86bb25f198737b964736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BED4778 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x325B272A CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x306 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x35C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12D PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x283 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x146 PUSH1 0x2 SLOAD DUP4 PUSH2 0x299 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5 SWAP3 SWAP2 SWAP1 PUSH2 0x398 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x3F9 JUMP JUMPDEST POP PUSH2 0x23B DUP3 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x455 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x489 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x4E3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F0 DUP3 PUSH2 0x2C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x300 DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x339 DUP2 PUSH2 0x326 JUMP JUMPDEST DUP2 EQ PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x356 DUP2 PUSH2 0x330 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x372 JUMPI PUSH2 0x371 PUSH2 0x321 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x380 DUP5 DUP3 DUP6 ADD PUSH2 0x347 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x392 DUP2 PUSH2 0x326 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3AD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F7 JUMP JUMPDEST PUSH2 0x3BA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x389 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D6 DUP2 PUSH2 0x3C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x3E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F3 DUP2 PUSH2 0x3CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40F JUMPI PUSH2 0x40E PUSH2 0x321 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41D DUP5 DUP3 DUP6 ADD PUSH2 0x3E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x460 DUP3 PUSH2 0x326 JUMP JUMPDEST SWAP2 POP PUSH2 0x46B DUP4 PUSH2 0x326 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x47E JUMPI PUSH2 0x47D PUSH2 0x426 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494 DUP3 PUSH2 0x326 JUMP JUMPDEST SWAP2 POP PUSH2 0x49F DUP4 PUSH2 0x326 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4D8 JUMPI PUSH2 0x4D7 PUSH2 0x426 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EE DUP3 PUSH2 0x326 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F9 DUP4 PUSH2 0x326 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x52E JUMPI PUSH2 0x52D PUSH2 0x426 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD1 LOG2 DUP5 0xD0 EXTCODECOPY 0xD9 SMOD PUSH24 0x4D442DBF5FEE31FEFC8AEF77954212E86BB25F198737B964 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "9989:652:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10307:324;;;:::i;:::-;;;10343:13;10359:4;;;;;;;;;;;:15;;;10375:10;10359:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10343:43;;10394:18;10415:37;10425:14;:26;10440:10;10425:26;;;;;;;;;;;;;;;;10415:5;:9;;:37;;;;:::i;:::-;10394:58;;10460:14;10477:29;10492:13;;10477:10;:14;;:29;;;;:::i;:::-;10460:46;;10514:5;;;;;;;;;;;:14;;;10529:10;10540:6;10514:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10584:42;10615:10;10584:14;:26;10599:10;10584:26;;;;;;;;;;;;;;;;:30;;:42;;;;:::i;:::-;10555:14;:26;10570:10;10555:26;;;;;;;;;;;;;;;:71;;;;10335:296;;;10307:324::o;3473:96::-;3531:7;3561:1;3557;:5;;;;:::i;:::-;3550:12;;3473:96;;;;:::o;3816:::-;3874:7;3904:1;3900;:5;;;;:::i;:::-;3893:12;;3816:96;;;;:::o;3106:::-;3164:7;3194:1;3190;:5;;;;:::i;:::-;3183:12;;3106:96;;;;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:77;957:7;986:5;975:16;;920:77;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:143::-;1188:5;1219:6;1213:13;1204:22;;1235:33;1262:5;1235:33;:::i;:::-;1131:143;;;;:::o;1280:351::-;1350:6;1399:2;1387:9;1378:7;1374:23;1370:32;1367:119;;;1405:79;;:::i;:::-;1367:119;1525:1;1550:64;1606:7;1597:6;1586:9;1582:22;1550:64;:::i;:::-;1540:74;;1496:128;1280:351;;;;:::o;1637:118::-;1724:24;1742:5;1724:24;:::i;:::-;1719:3;1712:37;1637:118;;:::o;1761:332::-;1882:4;1920:2;1909:9;1905:18;1897:26;;1933:71;2001:1;1990:9;1986:17;1977:6;1933:71;:::i;:::-;2014:72;2082:2;2071:9;2067:18;2058:6;2014:72;:::i;:::-;1761:332;;;;;:::o;2099:90::-;2133:7;2176:5;2169:13;2162:21;2151:32;;2099:90;;;:::o;2195:116::-;2265:21;2280:5;2265:21;:::i;:::-;2258:5;2255:32;2245:60;;2301:1;2298;2291:12;2245:60;2195:116;:::o;2317:137::-;2371:5;2402:6;2396:13;2387:22;;2418:30;2442:5;2418:30;:::i;:::-;2317:137;;;;:::o;2460:345::-;2527:6;2576:2;2564:9;2555:7;2551:23;2547:32;2544:119;;;2582:79;;:::i;:::-;2544:119;2702:1;2727:61;2780:7;2771:6;2760:9;2756:22;2727:61;:::i;:::-;2717:71;;2673:125;2460:345;;;;:::o;2811:180::-;2859:77;2856:1;2849:88;2956:4;2953:1;2946:15;2980:4;2977:1;2970:15;2997:191;3037:4;3057:20;3075:1;3057:20;:::i;:::-;3052:25;;3091:20;3109:1;3091:20;:::i;:::-;3086:25;;3130:1;3127;3124:8;3121:34;;;3135:18;;:::i;:::-;3121:34;3180:1;3177;3173:9;3165:17;;2997:191;;;;:::o;3194:348::-;3234:7;3257:20;3275:1;3257:20;:::i;:::-;3252:25;;3291:20;3309:1;3291:20;:::i;:::-;3286:25;;3479:1;3411:66;3407:74;3404:1;3401:81;3396:1;3389:9;3382:17;3378:105;3375:131;;;3486:18;;:::i;:::-;3375:131;3534:1;3531;3527:9;3516:20;;3194:348;;;;:::o;3548:305::-;3588:3;3607:20;3625:1;3607:20;:::i;:::-;3602:25;;3641:20;3659:1;3641:20;:::i;:::-;3636:25;;3795:1;3727:66;3723:74;3720:1;3717:81;3714:107;;;3801:18;;:::i;:::-;3714:107;3845:1;3842;3838:9;3831:16;;3548:305;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "278200",
								"executionCost": "70966",
								"totalCost": "349166"
							},
							"external": {
								"MineDcoff()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9989,
									"end": 10641,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 9989,
									"end": 10641,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9989,
									"end": 10641,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10058,
									"end": 10100,
									"name": "PUSH",
									"source": 0,
									"value": "6A544367FCA7064B6ADA5DC87F7E5058A9BB7AF9"
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10041,
									"end": 10101,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10128,
									"end": 10170,
									"name": "PUSH",
									"source": 0,
									"value": "BE0C856E2981B9F03D7613566DFC6679EEE4708A"
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10105,
									"end": 10171,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10258,
									"end": 10302,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 10258,
									"end": 10302,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10258,
									"end": 10302,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10258,
									"end": 10302,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10258,
									"end": 10302,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10258,
									"end": 10302,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10258,
									"end": 10302,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10258,
									"end": 10302,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10258,
									"end": 10302,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10258,
									"end": 10302,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10258,
									"end": 10302,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10293,
									"end": 10297,
									"name": "PUSH",
									"source": 0,
									"value": "B5E620F48000"
								},
								{
									"begin": 10277,
									"end": 10290,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 10277,
									"end": 10297,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10277,
									"end": 10297,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10277,
									"end": 10297,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10277,
									"end": 10297,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9989,
									"end": 10641,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9989,
									"end": 10641,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9989,
									"end": 10641,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9989,
									"end": 10641,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9989,
									"end": 10641,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9989,
									"end": 10641,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9989,
									"end": 10641,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fdd1a284d03cd907774d442dbf5fee31fefc8aef77954212e86bb25f198737b964736f6c634300080d0033",
									".code": [
										{
											"begin": 9989,
											"end": 10641,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "PUSH",
											"source": 0,
											"value": "8BED4778"
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9989,
											"end": 10641,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10307,
											"end": 10631,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10307,
											"end": 10631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10307,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10307,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10307,
											"end": 10631,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10307,
											"end": 10631,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10307,
											"end": 10631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10307,
											"end": 10631,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10307,
											"end": 10631,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10307,
											"end": 10631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10359,
											"end": 10363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10359,
											"end": 10363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10363,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10359,
											"end": 10363,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10363,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10363,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10359,
											"end": 10363,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10359,
											"end": 10374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10374,
											"name": "PUSH",
											"source": 0,
											"value": "325B272A"
										},
										{
											"begin": 10375,
											"end": 10385,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10359,
											"end": 10386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10343,
											"end": 10386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10394,
											"end": 10412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10415,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10425,
											"end": 10439,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10440,
											"end": 10450,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10420,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 10415,
											"end": 10424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10415,
											"end": 10452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10415,
											"end": 10452,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10415,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10394,
											"end": 10452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10394,
											"end": 10452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 10492,
											"end": 10505,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10492,
											"end": 10505,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10477,
											"end": 10487,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10477,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 10477,
											"end": 10491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10519,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10514,
											"end": 10519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10514,
											"end": 10519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10519,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10514,
											"end": 10519,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10519,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10514,
											"end": 10519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10514,
											"end": 10528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10528,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 10529,
											"end": 10539,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10540,
											"end": 10546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10514,
											"end": 10547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 10615,
											"end": 10625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10598,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10599,
											"end": 10609,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10584,
											"end": 10614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10584,
											"end": 10626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10626,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10584,
											"end": 10626,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 10584,
											"end": 10626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10569,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10570,
											"end": 10580,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10555,
											"end": 10581,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10626,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10307,
											"end": 10631,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3473,
											"end": 3569,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3473,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3557,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3550,
											"end": 3562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3550,
											"end": 3562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3569,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3569,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3816,
											"end": 3912,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3816,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 3901,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3900,
											"end": 3905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 3905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3900,
											"end": 3905,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3900,
											"end": 3905,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3900,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3893,
											"end": 3905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3893,
											"end": 3905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3816,
											"end": 3912,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3816,
											"end": 3912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3816,
											"end": 3912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3816,
											"end": 3912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3816,
											"end": 3912,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3106,
											"end": 3202,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3106,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3164,
											"end": 3171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3190,
											"end": 3191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3190,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3190,
											"end": 3195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3190,
											"end": 3195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3190,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3190,
											"end": 3195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3190,
											"end": 3195,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3190,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3202,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3202,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 920,
											"end": 997,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 957,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 975,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 975,
											"end": 991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 997,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 920,
											"end": 997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 920,
											"end": 997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 920,
											"end": 997,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1131,
											"end": 1274,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1131,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1262,
											"end": 1267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1235,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1274,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1274,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1280,
											"end": 1631,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1280,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1350,
											"end": 1356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1401,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1387,
											"end": 1396,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1397,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1402,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1486,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1367,
											"end": 1486,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1405,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1405,
											"end": 1484,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1484,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1405,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1486,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1367,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1595,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1550,
											"end": 1614,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1550,
											"end": 1614,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1550,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1614,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1631,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1631,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1637,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1637,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1742,
											"end": 1747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1724,
											"end": 1748,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1724,
											"end": 1748,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1724,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1761,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1761,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1922,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 1918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1905,
											"end": 1923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2001,
											"end": 2002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1999,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1933,
											"end": 2004,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1933,
											"end": 2004,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1933,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2082,
											"end": 2084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2071,
											"end": 2080,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2014,
											"end": 2086,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2086,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2014,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 2093,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 2093,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 2093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 2093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 2093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1761,
											"end": 2093,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2099,
											"end": 2189,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2099,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2181,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2189,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2195,
											"end": 2311,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2195,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2280,
											"end": 2285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2265,
											"end": 2286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2265,
											"end": 2286,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2265,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2245,
											"end": 2305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2303,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2305,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2245,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2311,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2317,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2317,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2409,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2418,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2454,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2454,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2460,
											"end": 2805,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2460,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2564,
											"end": 2573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2562,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2551,
											"end": 2574,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2579,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2663,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2544,
											"end": 2663,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2582,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2582,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2582,
											"end": 2661,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2582,
											"end": 2661,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2582,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2663,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2544,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2702,
											"end": 2703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2769,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2727,
											"end": 2788,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2727,
											"end": 2788,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2727,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2805,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2805,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2811,
											"end": 2991,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2811,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2936,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2856,
											"end": 2857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2953,
											"end": 2954,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2946,
											"end": 2961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 2984,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2977,
											"end": 2978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 2985,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3188,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2997,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3075,
											"end": 3076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3077,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3057,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3109,
											"end": 3110,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3091,
											"end": 3111,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3091,
											"end": 3111,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3091,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3111,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3130,
											"end": 3131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3132,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3155,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3121,
											"end": 3155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3135,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3155,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3121,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3188,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3188,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3194,
											"end": 3542,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3194,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3275,
											"end": 3276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3257,
											"end": 3277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3257,
											"end": 3277,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3257,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3309,
											"end": 3310,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3311,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3291,
											"end": 3311,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3291,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3311,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3477,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3407,
											"end": 3481,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3405,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3482,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3397,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3399,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3483,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3506,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3375,
											"end": 3506,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3506,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3375,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3531,
											"end": 3532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3536,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3542,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3542,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3548,
											"end": 3853,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3548,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3625,
											"end": 3626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3607,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3627,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3659,
											"end": 3660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3661,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3793,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3723,
											"end": 3797,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3798,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3821,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3714,
											"end": 3821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3801,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3801,
											"end": 3819,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3801,
											"end": 3819,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3801,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3821,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3714,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 3847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 3847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3853,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3853,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3853,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"MineDcoff()": "8bed4778"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MineDcoff\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"treasury_flat_flat.sol\":\"treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"treasury_flat_flat.sol\":{\"keccak256\":\"0xed71312245d20cdb1d735101e13c4a9f306eca23c69a26b581904aa9bf8a675b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12047a47e2bc145cb6a936238343d6802223c0eadcbc715872bb401c8a73a914\",\"dweb:/ipfs/QmdHHhWbFwW7h5dcdZ9pRfmFWkkEzPgo4miCRW5wnW6piS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 408,
								"contract": "treasury_flat_flat.sol:treasury",
								"label": "mine",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IDCF)10"
							},
							{
								"astId": 414,
								"contract": "treasury_flat_flat.sol:treasury",
								"label": "dcoff",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)398"
							},
							{
								"astId": 416,
								"contract": "treasury_flat_flat.sol:treasury",
								"label": "DcoffperBlock",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 420,
								"contract": "treasury_flat_flat.sol:treasury",
								"label": "ScoreWithdrawn",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IDCF)10": {
								"encoding": "inplace",
								"label": "contract IDCF",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)398": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"treasury_flat_flat.sol": {
				"ast": {
					"absolutePath": "treasury_flat_flat.sol",
					"exportedSymbols": {
						"IDCF": [
							10
						],
						"IERC20": [
							398
						],
						"SafeMath": [
							321
						],
						"treasury": [
							479
						]
					},
					"id": 480,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "145:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDCF",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "172:59:0",
								"text": " @dev Interface of an ERC721A compliant contract."
							},
							"fullyImplemented": false,
							"id": 10,
							"linearizedBaseContracts": [
								10
							],
							"name": "IDCF",
							"nameLocation": "242:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "325b272a",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "BlockScore",
									"nameLocation": "268:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "287:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "279:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "278:14:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "314:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "314:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "313:6:0"
									},
									"scope": 10,
									"src": "259:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 480,
							"src": "232:91:0",
							"usedErrors": []
						},
						{
							"id": 11,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "458:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 12,
								"nodeType": "StructuredDocumentation",
								"src": "636:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 321,
							"linearizedBaseContracts": [
								321
							],
							"name": "SafeMath",
							"nameLocation": "841:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1068:140:0",
										"statements": [
											{
												"id": 42,
												"nodeType": "UncheckedBlock",
												"src": "1078:124:0",
												"statements": [
													{
														"assignments": [
															25
														],
														"declarations": [
															{
																"constant": false,
																"id": 25,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1110:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 42,
																"src": "1102:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 24,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1102:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 29,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 26,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "1114:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 27,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1118:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1114:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1102:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 30,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "1137:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 31,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "1141:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1137:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 37,
														"nodeType": "IfStatement",
														"src": "1133:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 33,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1152:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 34,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1159:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 35,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1151:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 23,
															"id": 36,
															"nodeType": "Return",
															"src": "1144:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1183:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 39,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "1189:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 40,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1182:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 23,
														"id": 41,
														"nodeType": "Return",
														"src": "1175:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "856:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "1001:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1027:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1019:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1007:22:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1053:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1053:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1059:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1052:15:0"
									},
									"scope": 321,
									"src": "992:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1429:113:0",
										"statements": [
											{
												"id": 70,
												"nodeType": "UncheckedBlock",
												"src": "1439:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 56,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "1467:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 57,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1471:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1467:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 63,
														"nodeType": "IfStatement",
														"src": "1463:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 59,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1482:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 60,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1489:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 61,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1481:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 55,
															"id": 62,
															"nodeType": "Return",
															"src": "1474:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1513:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 67,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 65,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "1519:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 66,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 49,
																		"src": "1523:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1519:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 68,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1512:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 55,
														"id": 69,
														"nodeType": "Return",
														"src": "1505:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1214:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1362:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1377:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1369:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1388:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1380:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1368:22:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1414:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 51,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1414:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1413:15:0"
									},
									"scope": 321,
									"src": "1353:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "1766:417:0",
										"statements": [
											{
												"id": 112,
												"nodeType": "UncheckedBlock",
												"src": "1776:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "2034:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2039:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2034:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 91,
														"nodeType": "IfStatement",
														"src": "2030:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 87,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2050:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 88,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2056:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 89,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2049:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 83,
															"id": 90,
															"nodeType": "Return",
															"src": "2042:16:0"
														}
													},
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "2080:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 112,
																"src": "2072:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2072:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "2084:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2088:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2084:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2072:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 98,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "2107:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 99,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "2111:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2107:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 101,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2107:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 107,
														"nodeType": "IfStatement",
														"src": "2103:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2127:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2134:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 105,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2126:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 83,
															"id": 106,
															"nodeType": "Return",
															"src": "2119:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2158:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 109,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "2164:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 110,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2157:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 83,
														"id": 111,
														"nodeType": "Return",
														"src": "2150:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "1548:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1699:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1714:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1706:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1725:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1717:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1705:22:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1751:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 79,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1751:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1757:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1750:15:0"
									},
									"scope": 321,
									"src": "1690:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2408:114:0",
										"statements": [
											{
												"id": 140,
												"nodeType": "UncheckedBlock",
												"src": "2418:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 126,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "2446:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2451:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2446:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 133,
														"nodeType": "IfStatement",
														"src": "2442:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2462:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2469:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 131,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2461:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 125,
															"id": 132,
															"nodeType": "Return",
															"src": "2454:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2493:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 135,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "2499:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 136,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "2503:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2499:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 138,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2492:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 125,
														"id": 139,
														"nodeType": "Return",
														"src": "2485:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "2189:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2341:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2356:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2348:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2367:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2359:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:22:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2393:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2393:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2399:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:15:0"
									},
									"scope": 321,
									"src": "2332:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "2757:114:0",
										"statements": [
											{
												"id": 168,
												"nodeType": "UncheckedBlock",
												"src": "2767:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 154,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "2795:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2800:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2795:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 161,
														"nodeType": "IfStatement",
														"src": "2791:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2811:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2818:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 159,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2810:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 153,
															"id": 160,
															"nodeType": "Return",
															"src": "2803:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2842:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 163,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "2848:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 164,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 147,
																		"src": "2852:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2848:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 166,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2841:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 153,
														"id": 167,
														"nodeType": "Return",
														"src": "2834:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2528:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2690:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2705:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2697:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2716:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2708:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2696:22:0"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2742:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2742:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2748:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2741:15:0"
									},
									"scope": 321,
									"src": "2681:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "3173:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 180,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "3190:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 181,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "3194:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3190:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 179,
												"id": 183,
												"nodeType": "Return",
												"src": "3183:12:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "2877:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "3115:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3127:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "3119:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3138:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "3130:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3118:22:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "3164:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3163:9:0"
									},
									"scope": 321,
									"src": "3106:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "3540:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 195,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "3557:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 196,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "3561:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3557:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 194,
												"id": 198,
												"nodeType": "Return",
												"src": "3550:12:0"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "3208:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3482:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3494:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3486:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3505:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3497:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3485:22:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3531:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3530:9:0"
									},
									"scope": 321,
									"src": "3473:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3883:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 210,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "3900:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 211,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "3904:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3900:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 209,
												"id": 213,
												"nodeType": "Return",
												"src": "3893:12:0"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "3575:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3825:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3837:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3829:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3848:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3840:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3828:22:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3874:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3873:9:0"
									},
									"scope": 321,
									"src": "3816:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "4268:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 225,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "4285:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 226,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "4289:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4285:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 224,
												"id": 228,
												"nodeType": "Return",
												"src": "4278:12:0"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3918:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "4210:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4222:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "4214:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4233:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "4225:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4213:22:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "4259:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4258:9:0"
									},
									"scope": 321,
									"src": "4201:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "4817:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 240,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "4834:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 241,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "4838:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4834:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 239,
												"id": 243,
												"nodeType": "Return",
												"src": "4827:12:0"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "4303:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4759:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4771:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4763:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4763:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4782:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4774:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4762:22:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4808:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4807:9:0"
									},
									"scope": 321,
									"src": "4750:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "5435:106:0",
										"statements": [
											{
												"id": 268,
												"nodeType": "UncheckedBlock",
												"src": "5445:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 258,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 250,
																		"src": "5477:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 259,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 248,
																		"src": "5482:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5477:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 261,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 252,
																	"src": "5485:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 257,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5469:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5469:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 263,
														"nodeType": "ExpressionStatement",
														"src": "5469:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 264,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "5519:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 265,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "5523:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5519:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 256,
														"id": 267,
														"nodeType": "Return",
														"src": "5512:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "4852:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5319:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5340:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "5332:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5359:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "5351:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5384:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "5370:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 251,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5370:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5322:80:0"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "5426:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5425:9:0"
									},
									"scope": 321,
									"src": "5310:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6150:105:0",
										"statements": [
											{
												"id": 293,
												"nodeType": "UncheckedBlock",
												"src": "6160:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 283,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 275,
																		"src": "6192:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6196:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6192:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 286,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "6199:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 282,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6184:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6184:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 288,
														"nodeType": "ExpressionStatement",
														"src": "6184:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 289,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "6233:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 290,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "6237:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6233:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 281,
														"id": 292,
														"nodeType": "Return",
														"src": "6226:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "5547:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "6034:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6055:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6047:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6074:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6066:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6099:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6085:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 276,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6085:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6037:80:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6141:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6140:9:0"
									},
									"scope": 321,
									"src": "6025:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "7026:105:0",
										"statements": [
											{
												"id": 318,
												"nodeType": "UncheckedBlock",
												"src": "7036:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 308,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 300,
																		"src": "7068:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7072:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7068:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 311,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "7075:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 307,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "7060:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7060:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 313,
														"nodeType": "ExpressionStatement",
														"src": "7060:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 314,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "7109:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 315,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "7113:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7109:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 306,
														"id": 317,
														"nodeType": "Return",
														"src": "7102:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "6261:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6910:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6931:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "6923:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6950:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "6942:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6975:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "6961:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6961:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6913:80:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "7017:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7016:9:0"
									},
									"scope": 321,
									"src": "6901:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 480,
							"src": "833:6300:0",
							"usedErrors": []
						},
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "7267:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 323,
								"nodeType": "StructuredDocumentation",
								"src": "7292:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 398,
							"linearizedBaseContracts": [
								398
							],
							"name": "IERC20",
							"nameLocation": "7373:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "7386:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 332,
									"name": "Transfer",
									"nameLocation": "7555:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7580:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "7564:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7602:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "7586:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7586:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7614:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "7606:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7563:57:0"
									},
									"src": "7549:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "7627:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 341,
									"name": "Approval",
									"nameLocation": "7786:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7811:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "7795:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7834:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "7818:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7851:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "7843:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7794:63:0"
									},
									"src": "7780:78:0"
								},
								{
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "7864:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7944:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7955:2:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "7981:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7980:9:0"
									},
									"scope": 398,
									"src": "7935:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "7996:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8082:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8100:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "8092:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8091:17:0"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "8132:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8131:9:0"
									},
									"scope": 398,
									"src": "8073:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "8147:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8363:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8380:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "8372:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8372:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8392:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "8384:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8371:28:0"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "8418:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8418:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8417:6:0"
									},
									"scope": 398,
									"src": "8354:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "8430:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "8708:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8726:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "8718:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8741:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "8733:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8717:32:0"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "8773:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8773:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8772:9:0"
									},
									"scope": 398,
									"src": "8699:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "8788:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "9444:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9460:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "9452:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9477:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "9469:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9451:33:0"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "9503:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 382,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9503:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9502:6:0"
									},
									"scope": 398,
									"src": "9435:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "9515:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "9816:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9846:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "9838:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9868:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "9860:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9888:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "9880:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9828:72:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "9919:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9919:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9918:6:0"
									},
									"scope": 398,
									"src": "9807:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 480,
							"src": "7363:2564:0",
							"usedErrors": []
						},
						{
							"id": 399,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "9961:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "treasury",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 479,
							"linearizedBaseContracts": [
								479
							],
							"name": "treasury",
							"nameLocation": "9998:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 402,
									"libraryName": {
										"id": 400,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 321,
										"src": "10018:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "10012:24:0",
									"typeName": {
										"id": 401,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "10031:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 408,
									"mutability": "mutable",
									"name": "mine",
									"nameLocation": "10046:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 479,
									"src": "10041:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDCF_$10",
										"typeString": "contract IDCF"
									},
									"typeName": {
										"id": 404,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 403,
											"name": "IDCF",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 10,
											"src": "10041:4:0"
										},
										"referencedDeclaration": 10,
										"src": "10041:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDCF_$10",
											"typeString": "contract IDCF"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307836613534343336374643613730363442364144413564633837463745353035384139624237416639",
												"id": 406,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "10058:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x6a544367FCa7064B6ADA5dc87F7E5058A9bB7Af9"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 405,
											"name": "IDCF",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 10,
											"src": "10053:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IDCF_$10_$",
												"typeString": "type(contract IDCF)"
											}
										},
										"id": 407,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10053:48:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDCF_$10",
											"typeString": "contract IDCF"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 414,
									"mutability": "mutable",
									"name": "dcoff",
									"nameLocation": "10112:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 479,
									"src": "10105:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$398",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 410,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 409,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 398,
											"src": "10105:6:0"
										},
										"referencedDeclaration": 398,
										"src": "10105:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$398",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307862453043383536653239383162396630336437363133353636444643363637396545653437303841",
												"id": 412,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "10128:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xbE0C856e2981b9f03d7613566DFC6679eEe4708A"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 411,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 398,
											"src": "10121:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$398_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 413,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10121:50:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$398",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 416,
									"mutability": "mutable",
									"name": "DcoffperBlock",
									"nameLocation": "10184:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 479,
									"src": "10176:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 415,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10176:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 420,
									"mutability": "mutable",
									"name": "ScoreWithdrawn",
									"nameLocation": "10239:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 479,
									"src": "10203:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 419,
										"keyType": {
											"id": 417,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "10211:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "10203:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 418,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "10222:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "10271:31:0",
										"statements": [
											{
												"expression": {
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 423,
														"name": "DcoffperBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "10277:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32653134",
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10293:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200000000000000_by_1",
															"typeString": "int_const 200000000000000"
														},
														"value": "2e14"
													},
													"src": "10277:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "10277:20:0"
											}
										]
									},
									"id": 428,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10269:2:0"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10271:0:0"
									},
									"scope": 479,
									"src": "10258:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "10335:296:0",
										"statements": [
											{
												"assignments": [
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "Score",
														"nameLocation": "10351:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 477,
														"src": "10343:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 431,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10343:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 435,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10375:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10375:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 433,
															"name": "mine",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "10359:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDCF_$10",
																"typeString": "contract IDCF"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "BlockScore",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "10359:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10359:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10343:43:0"
											},
											{
												"assignments": [
													440
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "afterScore",
														"nameLocation": "10402:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 477,
														"src": "10394:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 439,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 448,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 443,
																"name": "ScoreWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "10425:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 446,
															"indexExpression": {
																"expression": {
																	"id": 444,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10440:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10440:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10425:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 441,
															"name": "Score",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "10415:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 200,
														"src": "10415:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10415:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10394:58:0"
											},
											{
												"assignments": [
													450
												],
												"declarations": [
													{
														"constant": false,
														"id": 450,
														"mutability": "mutable",
														"name": "GetDCF",
														"nameLocation": "10468:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 477,
														"src": "10460:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 449,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10460:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 455,
												"initialValue": {
													"arguments": [
														{
															"id": 453,
															"name": "DcoffperBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "10492:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 451,
															"name": "afterScore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "10477:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 215,
														"src": "10477:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10477:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10460:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 459,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10529:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10529:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "GetDCF",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "10540:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 456,
															"name": "dcoff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "10514:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$398",
																"typeString": "contract IERC20"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 365,
														"src": "10514:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10514:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "10514:33:0"
											},
											{
												"expression": {
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 464,
															"name": "ScoreWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "10555:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 467,
														"indexExpression": {
															"expression": {
																"id": 465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10570:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10570:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10555:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 473,
																"name": "afterScore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "10615:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 468,
																	"name": "ScoreWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "10584:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 471,
																"indexExpression": {
																	"expression": {
																		"id": 469,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10599:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10599:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10584:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 185,
															"src": "10584:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10584:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10555:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "10555:71:0"
											}
										]
									},
									"functionSelector": "8bed4778",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "MineDcoff",
									"nameLocation": "10316:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10325:2:0"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10335:0:0"
									},
									"scope": 479,
									"src": "10307:324:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 480,
							"src": "9989:652:0",
							"usedErrors": []
						}
					],
					"src": "145:10496:0"
				},
				"id": 0
			}
		}
	}
}